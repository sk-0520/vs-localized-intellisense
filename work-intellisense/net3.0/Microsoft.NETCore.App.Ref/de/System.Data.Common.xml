<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Bestimmt die Aktion, die ausgeführt wird, wenn die <see cref="M:System.Data.DataSet.AcceptChanges" />-Methode oder die <see cref="M:System.Data.DataTable.RejectChanges" />-Methode für eine <see cref="T:System.Data.DataTable" /> mit einer <see cref="T:System.Data.ForeignKeyConstraint" /> aufgerufen wird.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">Änderungen werden über die Beziehung weitergegeben.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">Es wird keine Aktion ausgeführt (Standard).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">Stellt eine Beschreibung der Ergebnisse der Abfrage sowie ihrer Auswirkungen auf die Datenbank bereit.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">Beim Ausführen des Befehls wird das zugeordnete <see langword="Connection" />-Objekt geschlossen, wenn das zugeordnete <see langword="DataReader" />-Objekt geschlossen wird.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">Die Abfrage kann mehrere Resultsets zurückgeben. Die Ausführung der Abfrage kann sich auf den Zustand der Datenbank auswirken. <see langword="Default" /> legt keine <see cref="T:System.Data.CommandBehavior" />-Flags fest, daher entspricht die Funktion eines Aufrufs von <see langword="ExecuteReader(CommandBehavior.Default)" /> dem von <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">Die Abfrage gibt Informationen über Spalten und Primärschlüssel zurück. Der Anbieter fügt dem Resultset zusätzliche Spalten für vorhandene Primärschlüssel und Zeitstempelspalten an.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">Die Abfrage gibt nur Spalteninformationen zurück. Bei Verwendung von <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> stellt der .NET Framework-Datenanbieter für SQL Server der auszuführenden Anweisung SET FMTONLY ON voran.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">Ermöglicht dem <see langword="DataReader" /> das Behandeln von Zeilen, die Spalten mit großen Binärwerten enthalten. Statt des Ladens der gesamten Zeile ermöglicht <see langword="SequentialAccess" /> dem <see langword="DataReader" /> das Laden der Daten als Stream. Anschließend können Sie mit der <see langword="GetBytes" />-Methode oder der <see langword="GetChars" />-Methode eine Byteposition für den Beginn des Lesevorgangs sowie eine eingeschränkte Puffergröße für die zurückgegebenen Daten angeben.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">Die Abfrage gibt ein einziges Resultset zurück.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">Von der Abfrage wird erwartet, dass eine einzige Zeile des ersten Resultsets zurückgegeben wird. Die Ausführung der Abfrage kann sich auf den Zustand der Datenbank auswirken. Einige .NET Framework-Datenprovider können mit diesen Informationen die Leistung des Befehls optimieren (dies ist jedoch nicht unbedingt erforderlich). Wenn Sie <see cref="F:System.Data.CommandBehavior.SingleRow" /> mit der <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" />-Methode des <see cref="T:System.Data.OleDb.OleDbCommand" />-Objekts angeben, führt der .NET Framework-Datenanbieter für OLE DB eine Bindung mithilfe der OLE DB <see langword="IRow" />-Schnittstelle durch, sofern diese verfügbar ist. Andernfalls wird die <see langword="IRowset" />-Schnittstelle verwendet. Wenn die SQL-Anweisung nur eine einzige Zeile zurückgeben soll, kann durch Angeben von <see cref="F:System.Data.CommandBehavior.SingleRow" /> auch die Leistung der Anwendung verbessert werden. <see langword="SingleRow" /> kann auch beim Ausführen von Abfragen angegeben werden, die mehrere Resultsets zurückgeben können.  In einem solchen Fall, in dem sowohl eine SQL-Abfrage für mehrere Resultsets als auch eine einzige Zeile angegeben werden, enthält das zurückgegebene Ergebnis nur die erste Zeile des ersten Resultsets. Die übrigen Resultsets der Abfrage werden nicht zurückgegeben.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">Gibt an, wie eine Befehlszeichenfolge interpretiert wird.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">Der Name einer gespeicherten Prozedur.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">Name der Tabelle</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">Ein SQL-Textbefehl. (Standardeinstellung)</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">Gibt die Position des Katalognamens in einem qualifizierten Tabellennamen in einem Textbefehl an.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">Gibt an, dass der Katalogname nach den Angaben zum Schema in einem vollqualifizierten Tabellennamen in einem Textbefehl steht. <c>Ende</c> und <c>Start</c> schließen einander aus.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">Gibt an, dass der Katalogname vor den Angaben zum Schema in einem vollqualifizierten Tabellennamen in einem Textbefehl steht. <c>Start</c> und <c>Ende</c> schließen einander aus.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">Stellt einen Satz von SQL-Befehlen und eine Datenbankverbindung dar, die zum Füllen des <see cref="T:System.Data.DataSet" /> und zum Aktualisieren der Datenquelle verwendet werden.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DataAdapter" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DataAdapter" />-Klasse aus einem vorhandenen Objekt desselben Typs.</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Ein für die Erstellung des neuen <see cref="T:System.Data.Common.DataAdapter" /> verwendetes <see cref="T:System.Data.Common.DataAdapter" />-Objekt.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">Ruft einen Wert ab, der angibt, ob <see cref="M:System.Data.DataRow.AcceptChanges" /> für eine <see cref="T:System.Data.DataRow" /> aufgerufen wird, nachdem diese bei einem der Fill-Vorgänge der <see cref="T:System.Data.DataTable" /> hinzugefügt wurde, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.Data.DataRow.AcceptChanges" /> für die <see cref="T:System.Data.DataRow" /> aufgerufen wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Ruft ab oder legt fest, ob <see cref="M:System.Data.DataRow.AcceptChanges" /> während eines <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> aufgerufen wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.Data.DataRow.AcceptChanges" /> während eines <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> aufgerufen wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Erstellt eine Kopie dieser Instanz von <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Die geklonte Instanz von <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">Ruft einen Wert ab, der angibt, ob beim Auftreten eines Fehlers während der Aktualisierung von Zeilen eine Ausnahme ausgelöst werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Aktualisierung ohne Auslösen einer Ausnahme fortgesetzt werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">Erstellt einen neuen <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="A new table mapping collection.">Eine neue Tabellenzuordnungssammlung.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Data.Common.DataAdapter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">Fügt dem <see cref="T:System.Data.DataSet" /> Zeilen hinzu oder aktualisiert diese, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">Eine <see cref="T:System.Data.DataSet" />, die mit Datensätzen aufgefüllt werden soll.</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">Eine Zeichenfolge, die den Namen der Quelltabelle angibt.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Der nullbasierte Startindex für die Startdatensatz.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Eine ganze Zahl, die die maximale Anzahl von Datensätzen angibt.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Fügt der <see cref="T:System.Data.DataTable" /> unter Verwendung des <see cref="T:System.Data.DataTable" />-Namens und des angegebenen <see cref="T:System.Data.IDataReader" /> Zeilen hinzu bzw. aktualisiert diese, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">Eine <see cref="T:System.Data.DataTable" />, die mit Datensätzen aufgefüllt werden soll.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.IDataReader" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">Aktualisiert Zeilen in einem angegebenen Bereich in der Auflistung der <see cref="T:System.Data.DataTable" />-Objekte oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen.</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">Eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die Datensätzen aufgefüllt werden soll</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Der nullbasierte Startindex für die Startdatensatz.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Eine ganze Zahl, die die maximale Anzahl von Datensätzen angibt.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">Wird zurückgegeben, wenn während eines Füllvorgangs ein Fehler auftritt.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Ruft die <see cref="T:System.Data.LoadOption" /> ab, die bestimmt, wie der Adapter die <see cref="T:System.Data.DataTable" /> vom <see cref="T:System.Data.Common.DbDataReader" /> füllt, oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">Ein <see cref="T:System.Data.LoadOption" />-Wert.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> mit dem Namen "Table" hinzu und konfiguriert das Schema anhand des angegebenen <see cref="T:System.Data.SchemaType" /> so, dass es dem Schema in der Datenquelle entspricht.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Die mit dem Schema aus der Datenquelle zu füllende <see cref="T:System.Data.DataSet" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Ein <see cref="T:System.Data.DataTable" />-Objekt, das aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Die <see cref="T:System.Data.DataTable" />, die aus dem <see cref="T:System.Data.IDataReader" /> gefüllt werden soll.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der <see cref="T:System.Data.IDataReader" />, der beim Auffüllen der <see cref="T:System.Data.DataTable" /> als Datenquelle verwendet werden soll.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein Verweis auf eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die dem <see cref="T:System.Data.DataSet" /> hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Die <see cref="T:System.Data.DataTable" />, die aus dem <see cref="T:System.Data.IDataReader" /> gefüllt werden soll.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der <see cref="T:System.Data.IDataReader" />, der beim Auffüllen der <see cref="T:System.Data.DataTable" /> als Datenquelle verwendet werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Ein <see cref="T:System.Data.DataTable" />-Objekt, das aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Ruft die Parameter ab, die vom Benutzer beim Ausführen einer SQL-SELECT-Anweisung festgelegt wurden.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Ein Array von <see cref="T:System.Data.IDataParameter" />-Objekten, das die vom Benutzer festgelegten Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">Gibt an, ob eine <see cref="T:System.Data.Common.DataTableMappingCollection" /> erstellt wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine <see cref="T:System.Data.Common.DataTableMappingCollection" /> erstellt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">Bestimmt die Aktion, die ausgeführt werden soll, wenn für eingehende Daten keine entsprechende Tabelle oder Spalte vorhanden ist.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte. Die Standardeinstellung ist <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingMappingAction" />-Werte.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Bestimmt die Aktion, die ausgeführt werden soll, wenn das vorhandene <see cref="T:System.Data.DataSet" />-Schema eingehenden Daten nicht entspricht.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte. Die Standardeinstellung ist <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">Wird aufgerufen, wenn während eines <see langword="Fill" /> ein Fehler auftritt.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">Ein <see cref="T:System.Data.FillErrorEventArgs" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">Setzt die <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> auf ihren Standardzustand zurück und erzwingt, dass <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /><see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> berücksichtigt.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">Ruft ab oder legt fest, ob die <see langword="Fill" />-Methode anbieterspezifische Werte oder allgemeine CLS-kompatible Werte zurückgeben soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">
        <see langword="true" />, wenn die <see langword="Fill" />-Methode anbieterspezifische Werte zurückgeben soll, andernfalls <see langword="false" />, um allgemeine CLS-kompatible Werte zurückzugeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">Bestimmt, ob die <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />-Eigenschaft beibehalten werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />-Eigenschaft beibehalten wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">Bestimmt, ob die <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />-Eigenschaft beibehalten werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />-Eigenschaft beibehalten wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">Bestimmt, ob ein oder mehrere <see cref="T:System.Data.Common.DataTableMapping" />-Objekte vorhanden sind und ob diese beibehalten werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein oder mehrere <see cref="T:System.Data.Common.DataTableMapping" />-Objekte vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Gibt an, wie eine Quelltabelle einer Datasettabelle zugeordnet wird.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Eine Auflistung, die die Masterzuordnung zwischen den zurückgegebenen Datensätzen und dem <see cref="T:System.Data.DataSet" /> bereitstellt. Der Standardwert ist eine leere Auflistung.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft eine Auflistung ab, die die Masterzuordnung zwischen einer Quelltabelle und einer <see cref="T:System.Data.DataTable" /> bereitstellt.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Eine Auflistung, die die Masterzuordnung zwischen den zurückgegebenen Datensätzen und dem <see cref="T:System.Data.DataSet" /> bereitstellt. Der Standardwert ist eine leere Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">Ruft für jede Zeile im angegebenen <see cref="T:System.Data.DataSet" /> einer <see cref="T:System.Data.DataTable" /> mit dem Namen "Table", die eingefügt, aktualisiert oder gelöscht wird, die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung auf.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Die <see cref="T:System.Data.DataSet" />, mit der die Datenquelle aktualisiert wird.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">Enthält eine generische Spaltenzuordnung für ein Objekt, das von <see cref="T:System.Data.Common.DataAdapter" /> erbt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataColumnMapping" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataColumnMapping" />-Klasse mit dem angegebenen Quellspaltennamen und dem <see cref="T:System.Data.DataSet" />-Spaltennamen, für den die Zuordnung erfolgen soll.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Der Spaltenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Der Spaltenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Ruft den Namen der Spalte in dem <see cref="T:System.Data.DataSet" /> ab, für das die Zuordnung erfolgen soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Der Name der Spalte in dem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll. Bei dem Namen wird die Groß- und Kleinschreibung nicht berücksichtigt.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">Ruft eine <see cref="T:System.Data.DataColumn" /> aus der angegebenen <see cref="T:System.Data.DataTable" /> unter Verwendung der <see cref="T:System.Data.MissingSchemaAction" />-Eigenschaft und der <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />-Eigenschaft ab.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">Die <see cref="T:System.Data.DataTable" />, aus der die Spalte abgerufen werden soll.</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">Der <see cref="T:System.Type" /> der Datenspalte.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <returns vsli:raw="A data column.">Eine Datenspalte.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Eine statische Version von <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" />, die ohne Instanziierung eines <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts aufgerufen werden kann.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Der Spaltenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Der Spaltenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">Der Datentyp für die Spalte, die zugeordnet wird.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Bestimmt die Aktion, die ausgeführt werden soll, wenn das vorhandene <see cref="T:System.Data.DataSet" />-Schema eingehenden Daten nicht entspricht.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Ein <see cref="T:System.Data.DataColumn" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Ruft den Namen der Spalte in der Datenquelle ab, aus der die Zuordnung erfolgen soll, oder legt diesen fest. Bei dem Namen wird die Groß- und Kleinschreibung berücksichtigt.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Der Name der Spalte in der Datenquelle unter Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns vsli:raw="A copy of the current object.">Eine Kopie des aktuellen Objekts.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">Konvertiert den aktuellen <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" />-Namen in eine Zeichenfolge.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">Der aktuelle <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" />-Name als Zeichenfolge.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Enthält eine Auflistung von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Erstellt ein leeres <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">Fügt der Auflistung ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt hinzu.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">Ein der Auflistung hinzuzufügendes <see langword="DataColumnMapping" />-Objekt.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Der Index des <see langword="DataColumnMapping" />-Objekts, das der Auflistung hinzugefügt wurde.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Das übergebene Objekt war kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Fügt der Auflistung ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt hinzu, sofern ein Quellspaltenname und ein <see cref="T:System.Data.DataSet" />-Spaltenname angegeben sind.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">Der Name der Quellspalte, für die die Zuordnung erfolgen soll, mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">Der Name der <see cref="T:System.Data.DataSet" />-Spalte, für die die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Das <see langword="DataColumnMapping" />-Objekt, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Kopiert die Elemente der angegebenen <see cref="T:System.Array" /> an das Ende der Auflistung.</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">Der der Auflistung hinzuzufügende <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">Kopiert die Elemente des angegebenen <see cref="T:System.Data.Common.DataColumnMapping" />-Arrays an das Ende der Auflistung.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">Das Array von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">Entfernt alle <see cref="T:System.Data.Common.DataColumnMapping" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Object" /> in der Auflistung vorhanden ist.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">Ein <see cref="T:System.Object" />, das die <see cref="T:System.Data.Common.DataColumnMapping" /> ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung das angegebene <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Das übergebene Objekt war kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen in der Auflistung vorhanden ist.</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Der Quellspaltenname des <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">Kopiert die Elemente der <see cref="T:System.Data.Common.DataColumnMappingCollection" /> in das angegebene Array.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Ein <see cref="T:System.Array" />, in das <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index" vsli:raw="The starting index of the array.">Der Anfangsindex des Arrays.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">Kopiert die Elemente der <see cref="T:System.Data.Common.DataColumnMappingCollection" /> in das angegebene <see cref="T:System.Data.Common.DataColumnMapping" />-Array.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Ein <see cref="T:System.Data.Common.DataColumnMapping" />-Array, in das die <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">Ruft die Anzahl der <see cref="T:System.Data.Common.DataColumnMapping" />-Objekte in der Auflistung ab.</summary>
      <returns vsli:raw="The number of items in the collection.">Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Der Name der zu suchenden <see cref="T:System.Data.DataSet" />-Spalte ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Ruft eine <see cref="T:System.Data.Common.DataColumnMapping" /> für die angegebene <see cref="T:System.Data.Common.DataColumnMappingCollection" />, den angegebenen Quellspaltennamen und die angegebene <see cref="T:System.Data.MissingMappingAction" /> ab.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Die <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">Der zu suchende Quellspaltenname unter Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Der <paramref name="mappingAction" />-Parameter wurde auf <see langword="Error" /> festgelegt, und es wurde keine Zuordnung angegeben.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">Eine statische Methode, die ein <see cref="T:System.Data.DataColumn" />-Objekt zurückgibt, ohne ein <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Objekt zu instanziieren.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Die <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Der Spaltenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">Der Datentyp für die Spalte, die zugeordnet wird.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Bestimmt die Aktion, die ausgeführt werden soll, wenn das vorhandene <see cref="T:System.Data.DataSet" />-Schema eingehenden Daten nicht entspricht.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Ein <see cref="T:System.Data.DataColumn" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Ruft einen Enumerator ab, der die Auflistung durchlaufen kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Ruft die Position des angegebenen <see cref="T:System.Object" /> ab, das eine <see cref="T:System.Data.Common.DataColumnMapping" /> in der Auflistung ist.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">Ein <see cref="T:System.Object" />, das die zu suchende <see cref="T:System.Data.Common.DataColumnMapping" /> ist.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Die nullbasierte Position des angegebenen <see cref="T:System.Object" />, das ein <see cref="T:System.Data.Common.DataColumnMapping" /> in der Auflistung ist.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">Ruft die Position der <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen Quellspaltennamen ab.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">Die nullbasierte Position der <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen Quellspaltennamen unter Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Ruft die Position der angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">Der Name der zu suchenden Datasetspalte ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">Die nullbasierte Position der angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen <see langword="DataSet" />-Spaltennamen oder -1, wenn das <see langword="DataColumnMapping" />-Objekt in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Fügt ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Fügt ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">Der nullbasierte Index des zu suchenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen ab oder legt dieses fest.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Entfernt den angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> aus der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Data.Common.DataColumnMapping" />-Element.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Entfernt das <see cref="T:System.Object" />, das eine <see cref="T:System.Data.Common.DataColumnMapping" /> ist, aus der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">Das <see cref="T:System.Object" />, das die zu entfernende <see cref="T:System.Data.Common.DataColumnMapping" /> ist.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Das angegebene Objekt war kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">Das angegebene Objekt ist in der Auflistung nicht vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">Entfernt das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">Der nullbasierte Index des zu entfernenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">Es ist kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Index vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">Entfernt das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen aus der Auflistung.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">Der Quellspaltenname mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Es ist kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen vorhanden.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> eine feste Größe hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Fügt der <see cref="T:System.Data.Common.DataColumnMapping" />-Auflistung mithilfe des Namens der Quellspalte und des Namens der <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Spalte ein <see cref="T:System.Data.DataSet" />-Objekt hinzu.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Der Name der <see cref="T:System.Data.DataSet" />-Spalte.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Das ColumnMapping-Objekt, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Der Name der zu suchenden <see cref="T:System.Data.DataSet" />-Spalte ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Ruft das <see cref="T:System.Data.IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="Index of the element.">Der Index des Elements.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Das <see langword="IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Enthält eine Beschreibung einer zugeordneten Beziehung zwischen einer Quelltabelle und einer <see cref="T:System.Data.DataTable" /> Diese Klasse wird von einem <see cref="T:System.Data.Common.DataAdapter" /> beim Auffüllen eines <see cref="T:System.Data.DataSet" /> verwendet.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse mit einer Quelle, sofern ein Quelltabellenname und ein <see cref="T:System.Data.DataTable" />-Name angegeben sind.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Der Quelltabellenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse, sofern ein Quelltabellenname, ein <see cref="T:System.Data.DataTable" />-Name und ein Array von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten angegeben sind.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Der Quelltabellenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll.</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> für den <see cref="T:System.Data.DataTable" /> ab.</summary>
      <returns vsli:raw="A data column mapping collection.">Eine Datenspalten-Zuordnungssammlung.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft den Tabellennamen aus einem <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ruft eine <see cref="T:System.Data.DataColumn" /> aus der angegebenen <see cref="T:System.Data.DataTable" /> ab, wobei der angegebene <see cref="T:System.Data.MissingMappingAction" />-Wert und der Name der <see cref="T:System.Data.DataColumn" /> verwendet werden.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <returns vsli:raw="A data column.">Eine Datenspalte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Der <paramref name="mappingAction" />-Parameter wurde auf <see langword="Error" /> festgelegt, und es wurde keine Zuordnung angegeben.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">Gibt ein <see cref="T:System.Data.DataColumn" />-Objekt für einen angegebenen Spaltennamen zurück.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">Der Datentyp für <paramref name="sourceColumn" />.</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Ein <see cref="T:System.Data.DataColumn" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">Ruft die aktuelle <see cref="T:System.Data.DataTable" /> für das angegebene <see cref="T:System.Data.DataSet" /> unter Verwendung des angegebenen <see cref="T:System.Data.MissingSchemaAction" />-Werts ab.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Das <see cref="T:System.Data.DataSet" />, aus dem die <see cref="T:System.Data.DataTable" /> abgerufen werden soll.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <returns vsli:raw="A data table.">Eine Datentabelle.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">Ruft den Quelltabellennamen aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung ab oder legt diesen fest.</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">Der Quelltabellenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft die abgeleitete <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Klasse für die <see cref="T:System.Data.DataTable" />-Klasse ab.</summary>
      <returns vsli:raw="A data column mapping collection.">Eine Datenspalten-Zuordnungssammlung.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">Ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">Konvertiert den aktuellen <see cref="P:System.Data.Common.DataTableMapping.SourceTable" />-Namen in eine Zeichenfolge.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">Der aktuelle <see cref="P:System.Data.Common.DataTableMapping.SourceTable" />-Name als Zeichenfolge.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">Eine Auflistung von <see cref="T:System.Data.Common.DataTableMapping" /> -Objekten. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMappingCollection" />-Klasse. Diese neue Instanz ist leer, d. h., sie enthält noch keine <see cref="T:System.Data.Common.DataTableMapping" />-Objekte.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">Fügt der Auflistung ein <see cref="T:System.Object" /> hinzu, das eine Tabellenzuordnung ist.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">Ein der Auflistung hinzuzufügendes <see langword="DataTableMapping" />-Objekt.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">Der Index des <see langword="DataTableMapping" />-Objekts, das der Auflistung hinzugefügt wurde.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Das übergebene Objekt war kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Fügt der Auflistung ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt hinzu, sofern ein Quelltabellename und ein <see cref="T:System.Data.DataSet" />-Tabellenname angegeben sind.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">Der Name der Quelltabelle, aus der die Zuordnung erfolgen soll, mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">Der Name der <see cref="T:System.Data.DataSet" />-Tabelle, für die die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Kopiert die Elemente der angegebenen <see cref="T:System.Array" /> an das Ende der Auflistung.</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">Ein der Auflistung hinzuzufügendes <see cref="T:System.Array" /> von Werten.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">Kopiert die Elemente des angegebenen <see cref="T:System.Data.Common.DataTableMapping" />-Arrays an das Ende der Auflistung.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">Das Array von <see cref="T:System.Data.Common.DataTableMapping" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">Entfernt alle <see cref="T:System.Data.Common.DataTableMapping" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">Ruft einen Wert ab, der angibt, ob das angegebene <see cref="T:System.Data.Common.DataTableMapping" />-Objekt in der Auflistung vorhanden ist.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">Ein <see cref="T:System.Object" />, das die <see cref="T:System.Data.Common.DataTableMapping" /> ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Auflistung das angegebene <see cref="T:System.Data.Common.DataTableMapping" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen in der Auflistung vorhanden ist.</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Der Name der Quelltabelle, die das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt enthält, mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit diesem Quelltabellennamen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">Kopiert die Elemente der <see cref="T:System.Data.Common.DataTableMappingCollection" /> in das angegebene Array.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">Ein <see cref="T:System.Array" />, in das die <see cref="T:System.Data.Common.DataTableMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index" vsli:raw="The starting index of the array.">Der Anfangsindex des Arrays.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">Kopiert die Elemente der <see cref="T:System.Data.Common.DataTableMapping" /> in das angegebene Array.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">Eine <see cref="T:System.Data.Common.DataTableMapping" />, in die die <see cref="T:System.Data.Common.DataTableMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index" vsli:raw="The starting index of the array.">Der Anfangsindex des Arrays.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">Ruft die Anzahl der <see cref="T:System.Data.Common.DataTableMapping" />-Objekte in der Auflistung ab.</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">Die Anzahl von <see langword="DataTableMapping" />-Objekten in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Ruft das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">Der Name der zu suchenden <see cref="T:System.Data.DataSet" />-Tabelle ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Ruft einen Enumerator ab, der die Auflistung durchlaufen kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> ein <see cref="T:System.Data.DataSet" />-Objekt mit dem angegebenen Quelltabellennamen und <see cref="T:System.Data.MissingMappingAction" />-Tabellennamen ab.</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">Die zu durchsuchende <see cref="T:System.Data.Common.DataTableMappingCollection" />-Auflistung.</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">Der Name der zugeordneten Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Der Name der zugeordneten <see cref="T:System.Data.DataSet" />-Tabelle ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Der <paramref name="mappingAction" />-Parameter wurde auf <see langword="Error" /> festgelegt, und es wurde keine Zuordnung angegeben.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Ruft die Position des angegebenen <see cref="T:System.Data.Common.DataTableMapping" />-Objekts in der Auflistung ab.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">Ein <see cref="T:System.Object" />, das das zu suchende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt ist.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Die nullbasierte Position des angegebenen <see cref="T:System.Data.Common.DataTableMapping" />-Objekts in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Ruft die Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen Quelltabellennamen ab.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Die nullbasierte Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen Quelltabellennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Ruft die Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">Der Name der zu suchenden <see langword="DataSet" />-Tabelle ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">Die nullbasierte Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen oder -1, wenn das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Fügt ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataTableMappingCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Das einzufügende <see cref="T:System.Data.Common.DataTableMapping" /> -Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Fügt ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataTableMappingCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Das einzufügende <see cref="T:System.Data.Common.DataTableMapping" /> -Objekt.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Ruft das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">Der nullbasierte Index des zurückzugebenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Ruft das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen ab oder legt dieses fest.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Entfernt das angegebene <see cref="T:System.Data.Common.DataTableMapping" />-Objekt aus der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Das zu entfernende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Entfernt das angegebene <see cref="T:System.Data.Common.DataTableMapping" />-Objekt aus der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Das zu entfernende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Das angegebene Objekt war kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">Das angegebene Objekt ist in der Auflistung nicht vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">Entfernt das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Der nullbasierte Index des zu entfernenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">Es ist kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Index vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">Entfernt das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen aus der Auflistung.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">Der zu suchende Quelltabellenname unter Berücksichtigung von Groß- und Kleinschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">Es ist kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen vorhanden.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">Ruft ein Element am angegebenen Index aus der Auflistung ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Fügt der Auflistung eine Tabellenzuordnung hinzu.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Der Name der <see cref="T:System.Data.DataSet" />-Tabelle.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Ein Verweis auf das neu zugeordnete <see cref="T:System.Data.ITableMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Ruft das TableMapping-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Der Name der <see langword="DataSet" />-Tabelle in der Auflistung.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Das TableMapping-Objekt mit dem angegebenen <see langword="DataSet" />-Tabellennamen.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Ruft die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see cref="P:System.Data.ITableMapping.SourceTable" />-Namen ab oder legt diese fest.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Der <see langword="SourceTable" />-Name der <see cref="T:System.Data.ITableMapping" />-Schnittstelle.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see langword="SourceTable" />-Namen.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">Stellt eine Spalte mit einer Datenquelle dar.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbColumn" />-Klasse.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob <see langword="DBNull" />-Werte in dieser Spalte zulässig sind, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob <see langword="DBNull" />-Werte in dieser Spalte zulässig sind, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn <see langword="DBNull" />-Werte in dieser Spalte nicht zulässig sind; andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den Katalognamen auf, der der Datenquelle zugeordnet ist; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Katalognamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der Katalogname, der der Datenquelle zugeordnet ist; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den Namen der Basisspalte ab; ist andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Spaltennamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der Name der Basisspalte; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den Schemanamen auf, der der Datenquelle zugeordnet ist; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Schemanamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der Schemaname, der mit der Datenquelle verknüpft ist; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den Servernamen ab, der der Spalte zugeordnet ist; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Servernamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der Servername, der der Spalte zugeordnet ist; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den Tabellennamen im Schema ab. Andernfalls <see langword="null" />, wenn kein Wert festgelegt wurde. Kann entweder auf den Tabellennamen oder <see langword="null" /> festgelegt werden, wenn es in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der Tabellenname ist das Schema. Andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt wurde.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">Ruft den Namen der Spalte ab. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Spaltennamen festgelegt werden.</summary>
      <returns vsli:raw="The name of the column.">Der Name der Spalte.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft die Position der Spalte (ordinal) in der Zeile der Datenquelle ab; andernfalls <see langword="null" />, falls kein Wert festgelegt ist. Sie kann entweder auf einen <see langword="int32" />-Wert festgelegt werden, um die Spaltenposition anzugeben, oder auf <see langword="null" />, wenn sie in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Ein <see langword="int32" />-Wert für die Ordnungszahl der Spalte; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft die Größe der Spalte ab. Ist andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Sie kann entweder auf einen <see langword="int32" />-Wert festgelegt werden, um die Spaltengröße anzugeben, oder auf <see langword="null" />, wenn sie in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Ein <see langword="int32" /> -Wert für die Spaltengröße; andernfalls ein NULL-<see langword="Nothing" /> Verweis (in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">Gibt den Typ der in der Spalte gespeicherten Daten zurück. Kann auf ein <see cref="T:System.Type" />-Objekt festgelegt werden, dass den Datentyp in der Spalte darstellt, wenn es in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">Ein <see cref="T:System.Type" />-Objekt, das den in der Spalte enthaltenen Datentyp darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den Namen des Datentyps ab; andernfalls <see langword="null" />, wenn kein Wert festgelegt wurde. Kann entweder auf den Datentypnamen oder <see langword="null" /> festgelegt werden, wenn es in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der Name des Datentyps; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ein Alias ist, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ein Alias ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn diese Spalte ein Alias ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob Werte in dieser Spalte automatisch inkrementiert werden, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob Werte in dieser Spalte automatisch inkrementiert werden, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn Werte in dieser Spalte automatisch inkrementiert werden; andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ein Ausdruck ist, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ein Ausdruck ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn diese Spalte ein Ausdruck ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ausgeblendet ist oder <see langword="null" /> zurückgibt, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ausgeblendet ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn die Spalte ausgeblendet ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte eine Identität ist, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte eine Identität ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn diese Spalte eine Identität ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ein Schlüssel ist oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ein Schlüssel ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn diese Spalte ein Schlüssel ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte lange Daten enthält, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte lange Daten enthält, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn diese Spalte lange Daten enthält; andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte schreibgeschützt ist oder <see langword="null" /> zurückgibt, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte schreibgeschützt ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn die Spalte schreibgeschützt ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Ruft einen booleschen NULL-Wert auf, der angibt, ob eine eindeutige Einschränkung für diese Spalte gilt oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob eine eindeutige Einschränkung für diese Spalte gilt, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Gibt <see langword="true" /> zurück, wenn eine eindeutige Einschränkung für diese Spalte gilt; andernfalls <see langword="false" />. Wenn kein Wert festgelegt wurde, gibt es einen NULL-Verweis zurück (<see langword="Nothing" /> in Visual Studio).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">Ruft das Objekt auf Grundlage des Spalteneigenschaftennamens ab.</summary>
      <param name="property" vsli:raw="The column property name.">Der Spalteneigenschaftenname.</param>
      <returns vsli:raw="The object based on the column property name.">Das Objekt auf Grundlage des Spalteneigenschaftennamens.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft die numerische Präzision der Spaltendaten ab; andernfalls <see langword="null" />, wenn kein Fest angegeben wurde. Kann entweder auf einen <see langword="int32" />-Wert festgelegt werden, um die numerische Präzision der Spaltendaten anzugeben, oder auf <see langword="null" />, wenn sie in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Ein <see langword="int32" /> -Wert, der die Genauigkeit der Spaltendaten angibt, wenn die Daten numerisch sind; andernfalls ein NULL-<see langword="Nothing" /> Verweis (in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">Ruft einen auf NULL-festlegbaren <see langword="int32" />-Wert ab, der entweder <see langword="null" /> oder den numerischen Bereich der Spaltendaten zurückgibt. Kann für den numerischen Bereich der Spaltendaten entweder auf <see langword="null" /> oder auf einen <see langword="int32" />-Wert festgelegt werden, wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt wurde. Andernfalls ein <see langword="int32" />-Wert, der den Bereich der Spaltendaten angibt, wenn die Daten numerisch sind.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Ruft den durch die Assembly qualifizierten Namen des <see cref="T:System.Type" />-Objekts ab, das den Datentyp in der Spalte darstellt; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den durch die Assembly qualifizierten Namen oder <see langword="null" /> festgelegt werden.</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Der durch die Assembly qualifizierte Name des <see cref="T:System.Type" />-Objekts, das den Datentyp in der Spalte darstellt; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">Stellt eine SQL-Anweisung oder eine gespeicherte Prozedur dar, die für eine Datenquelle ausgeführt werden soll. Stellt eine Basisklasse für datenbankspezifische Klassen bereit, die Befehle darstellen. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Erstellt eine Instanz des <see cref="T:System.Data.Common.DbCommand" />-Objekts.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Versucht bei Überschreibung in einer abgeleiteten Klasse, das Ausführen eines <see cref="T:System.Data.Common.DbCommand" /> abzubrechen.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Ruft bei Überschreibung in einer abgeleiteten Klasse den für die Datenquelle auszuführenden Textbefehl ab bzw. legt ihn fest.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">Der auszuführende Textbefehl. Der Standardwert ist eine leere Zeichenfolge („“).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">Ruft bei Überschreibung in einer abgeleiteten Klasse die Zeit ab, die gewartet werden soll, bis der Versuch einer Befehlsausführung beendet und ein Fehler generiert wird, oder legt diese fest.</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">Die Dauer in Sekunden, für die auf die Ausführung des Befehls gewartet werden soll.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">Ruft bei Überschreibung in einer abgeleiteten Klasse ab, wie die <see cref="P:System.Data.Common.DbCommand.CommandText" />-Eigenschaft interpretiert wird, oder legt fest, wie sie interpretiert wird.</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Einer der Enumerationswerte, der angibt, wie eine Befehls Zeichenfolge interpretiert wird. Die Standardeinstellung ist <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Ruft die von diesem <see cref="T:System.Data.Common.DbConnection" /> verwendete <see cref="T:System.Data.Common.DbCommand" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="The connection to the data source.">Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Erstellt bei Überschreibung in einer abgeleiteten Klasse eine neue Instanz eines <see cref="T:System.Data.Common.DbParameter" />-Objekts.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Erstellt eine neue Instanz eines <see cref="T:System.Data.Common.DbParameter" />-Objekts.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbParameter" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Ruft bei Überschreibung in einer abgeleiteten Klasse die <see cref="T:System.Data.Common.DbConnection" />-Eigenschaft ab, die für diesen <see cref="T:System.Data.Common.DbCommand" /> verwendet wird.</summary>
      <returns vsli:raw="The connection to the data source.">Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">Ruft bei Überschreibung in einer abgeleiteten Klasse die Sammlung von <see cref="T:System.Data.Common.DbParameter" />-Objekten ab.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Ruft bei Überschreibung in einer abgeleiteten Klasse die <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> ab, in der dieses <see cref="T:System.Data.Common.DbCommand" />-Objekt ausgeführt wird, oder legt diese Transaktion fest.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Die Transaktion, in der ein Befehls Objekt eines .NET-Datenanbieters ausgeführt wird. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob das Befehlsobjekt in einem benutzerdefinierten Schnittstellensteuerelement sichtbar sein soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn das Befehlsobjekt in einem Steuerelement sichtbar sein soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">Stellt das Befehlsobjekt asynchron bereit.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Führt bei Überschreibung in einer abgeleiteten Klasse den Befehlstext für die Verbindung aus.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Eine Instanz von <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Eine Aufgabe, die den Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">Anbieter sollten diese Methode implementieren, um eine nicht standardmäßige Implementierung für <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />-Überladungen bereitzustellen.  
Die Standardimplementierung ruft die synchrone <see cref="M:System.Data.Common.DbCommand.ExecuteReader" />-Methode auf und gibt eine abgeschlossene Aufgabe zurück. Der aufrufende Thread wird blockiert. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen Abbruchtoken erhalten hat. Die Ausnahmen, die von ExecuteReader ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
Diese Methode nimmt ein Abbruchtoken an, das verwendet werden kann, um ein frühes Abbrechen des Vorgangs anzufordern. Implementierungen können diese Anforderung ignorieren.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Optionen zur Ausführung der Anweisung und zum Datenabruf.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Das Token zum überwachen von Abbruchanforderungen.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">Führt bei Überschreibung in einer abgeleiteten Klasse eine SQL-Anweisung für ein Verbindungsobjekt aus.</summary>
      <returns vsli:raw="The number of rows affected.">Die Anzahl der betroffenen Zeilen.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Eine asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, die eine SQL-Anweisung für ein Verbindungsobjekt ausführt.  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Anbieter sollten mit einer entsprechenden Implementierung überschreiben. Das Abbruchtoken kann optional ignoriert werden.  
Die Standardimplementierung ruft die synchrone <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />-Methode auf und gibt eine abgeschlossene Aufgabe zurück. Der aufrufende Thread wird blockiert. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen Abbruchtoken erhalten hat.  Die Ausnahmen, die von <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
Rufen Sie keine anderen Methoden und Eigenschaften des <see langword="DbCommand" />-Objekts auf, bis die zurückgegebene Aufgabe abgeschlossen ist.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Führt <see cref="P:System.Data.Common.DbCommand.CommandText" /> für die <see cref="P:System.Data.Common.DbCommand.Connection" /> aus und gibt einen <see cref="T:System.Data.Common.DbDataReader" /> zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Führt <see cref="P:System.Data.Common.DbCommand.CommandText" /> für die <see cref="P:System.Data.Common.DbCommand.Connection" /> aus und gibt einen <see cref="T:System.Data.Common.DbDataReader" /> mit einem der <see cref="T:System.Data.CommandBehavior" />-Werte zurück.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Einer der Enumerationswerte, die das Befehlsverhalten angeben.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Eine asynchrone Version von <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, die <see cref="P:System.Data.Common.DbCommand.CommandText" /> gegen <see cref="P:System.Data.Common.DbCommand.Connection" /> ausführt und <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt.  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Eine asynchrone Version von <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, die <see cref="P:System.Data.Common.DbCommand.CommandText" /> gegen <see cref="P:System.Data.Common.DbCommand.Connection" /> ausführt und <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt.  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> auf.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">Einer der Enumerationswerte, die das Befehlsverhalten angegeben haben.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> auf.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Einer der Enumerationswerte, die das Befehlsverhalten angeben.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Eine asynchrone Version von <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, die <see cref="P:System.Data.Common.DbCommand.CommandText" /> gegen <see cref="P:System.Data.Common.DbCommand.Connection" /> ausführt und <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt. Diese Methode gibt eine Benachrichtigung darüber weiter, dass Vorgänge abgebrochen werden sollen.  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> auf.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">Führt bei Überschreibung in einer abgeleiteten Klasse die Abfrage aus und gibt die erste Spalte der ersten Zeile des Resultsets zurück, das für die Abfrage zurückgegeben wurde. Alle anderen Spalten und Zeilen werden ignoriert.</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">Die erste Spalte der ersten Zeile im Resultset.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Eine asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, die die Abfrage ausführt und die erste Spalte der ersten Zeile im Resultset zurückgibt. Alle anderen Spalten und Zeilen werden ignoriert.  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Anbieter sollten mit einer entsprechenden Implementierung überschreiben. Das Abbruchtoken kann optional ignoriert werden.  
Die Standardimplementierung ruft die synchrone <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />-Methode auf und gibt eine abgeschlossene Aufgabe zurück. Der aufrufende Thread wird blockiert. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen Abbruchtoken erhalten hat. Die Ausnahmen, die von ExecuteReader ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
Rufen Sie keine anderen Methoden und Eigenschaften des <see langword="DbCommand" />-Objekts auf, bis die zurückgegebene Aufgabe abgeschlossen ist.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Ruft die Auflistung von <see cref="T:System.Data.Common.DbParameter" />-Objekten ab. Weitere Informationen zu Parametern finden Sie unter Konfigurieren von Parametern und Parameterdatentypen.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Erstellt bei Überschreibung in einer abgeleiteten Klasse eine vorbereitete (oder kompilierte) Version des Befehls für die Datenquelle.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">Erstellt asynchron eine vorbereitete (oder kompilierte) Version des Befehls für die Datenquelle.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;." />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Ruft die <see cref="T:System.Data.IDbConnection" /> ab, die von dieser Instanz des <see cref="T:System.Data.IDbCommand" /> verwendet wird, oder legt diese fest.</summary>
      <returns vsli:raw="The connection to the data source.">Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Erstellt eine neue Instanz eines <see cref="T:System.Data.IDbDataParameter" />-Objekts.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Ein <see langword="IDbDataParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Führt den <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt einen <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Führt den <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt einen <see cref="T:System.Data.IDataReader" /> mithilfe eines der <see cref="T:System.Data.CommandBehavior" />-Werte.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Einer der Enumerationswerte, die das Befehlsverhalten angeben.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Ruft die <see cref="T:System.Data.IDataParameterCollection" /> ab.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Ruft die <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> ab, in der dieses <see cref="T:System.Data.Common.DbCommand" />-Objekt ausgeführt wird, oder legt sie fest.</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Die Transaktion, innerhalb der das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Ruft die <see cref="T:System.Data.Common.DbTransaction" /> ab, in der dieses <see cref="T:System.Data.Common.DbCommand" />-Objekt ausgeführt wird, oder legt sie fest.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Die Transaktion, innerhalb der das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Ruft bei Überschreibung in einer abgeleiteten Klasse ab, wie Befehlsergebnisse auf <see cref="T:System.Data.DataRow" /> angewendet werden, wenn diese von der Update-Methode eines <see cref="T:System.Data.Common.DbDataAdapter" /> verwendet wird, oder legt fest, wie Befehlsergebnisse angewendet werden.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Einer der Enumerationswerte, der angibt, wie die Befehls Ergebnisse angewendet werden. Die Standardeinstellung ist <see langword="Both" />, sofern der Befehl nicht automatisch generiert wird. Dann ist die Standardeinstellung <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">Generiert automatisch Befehle für einzelne Tabellen, durch die an einem <see cref="T:System.Data.DataSet" /> vorgenommene Änderungen mit der zugeordneten Datenbank abgeglichen werden. Dies ist eine abstrakte Klasse, die nur geerbt werden kann.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Initialisiert eine neue Instanz einer Klasse, die von der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse erbt.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">Ermöglicht es der Anbieterimplementierung der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse, zusätzliche Parametereigenschaften zu behandeln.</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">Ein <see cref="T:System.Data.Common.DbParameter" />, auf den die zusätzlichen Änderungen angewendet werden.</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">Die <see cref="T:System.Data.DataRow" /> aus der von <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> bereitgestellten Schematabelle.</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">Der Typ von Befehl, der generiert wird: INSERT, UPDATE oder DELETE.</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">
        <see langword="true" />, wenn der Parameter Teil der WHERE-Klausel für update oder delete ist, <see langword="false" />, wenn er Teil des Werts für insert oder update ist.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Legt die <see cref="T:System.Data.Common.CatalogLocation" /> für eine Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse fest oder ruft diese ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.CatalogLocation" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Legt eine Zeichenfolge als Katalogtrennzeichen für eine Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse fest oder ruft diese ab.</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Eine Zeichenfolge, die das Katalogtrennzeichen zur Verwendung mit einer Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse angibt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Gibt an, welche <see cref="T:System.Data.ConflictOption" /> vom <see cref="T:System.Data.Common.DbCommandBuilder" /> verwendet werden muss.</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Gibt einen der <see cref="T:System.Data.ConflictOption" />-Werte zurück, der das Verhalten dieses <see cref="T:System.Data.Common.DbCommandBuilder" /> beschreibt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Ruft ein <see cref="T:System.Data.Common.DbDataAdapter" />-Objekt ab, für das automatisch Transact-SQL-Anweisungen generiert werden, oder legt dieses fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbDataAdapter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Data.Common.DbCommandBuilder" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Löschvorgängen in der Datenquelle erforderlich ist.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Das für Löschvorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Löschvorgängen in der Datenquelle erforderlich ist, wobei optional Spalten für Parameternamen verwendet werden.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Generiert bei einem Wert von <see langword="true" /> Parameternamen, die den Spaltennamen entsprechen (falls möglich). Wenn der Wert <see langword="false" /> ist, werden <c>@p1</c>, <c>@p2</c> usw. generiert.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Das für Löschvorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich ist.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Das für Einfügevorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich ist, wobei optional Spalten für Parameternamen verwendet werden.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Generiert bei einem Wert von <see langword="true" /> Parameternamen, die den Spaltennamen entsprechen (falls möglich). Wenn der Wert <see langword="false" /> ist, werden <c>@p1</c>, <c>@p2</c> usw. generiert.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Das für Einfügevorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">Gibt den Namen des angegebenen Parameters im Format <c>@p#</c> zurück. Verwenden Sie diesen zum Erstellen eines benutzerdefinierten Befehls-Generators.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Die Zahl, die als Teil des Parameternamens eingeschlossen werden muss.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">Der Name des Parameters mit der angegebenen Zahl, die als Teil des Parameternamens angefügt wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">Gibt den vollständigen Parameternamen zurück, wenn der partielle Parameternamen angegeben ist.</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">Der partielle Name des Parameters.</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">Der vollständige Parametername, der dem angeforderten partiellen Parameternamen entspricht.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">Gibt den Platzhalter für den Parameter in der zugeordneten SQL-Anweisung zurück.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Die Zahl, die als Teil des Parameternamens eingeschlossen werden muss.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">Der Name des Parameters, an den die festgelegte Zahl angefügt ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Gibt die Schematabelle für den <see cref="T:System.Data.Common.DbCommandBuilder" /> zurück.</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">Der <see cref="T:System.Data.Common.DbCommand" /> für den die entsprechende Schematabelle abgerufen werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Eine <see cref="T:System.Data.DataTable" />, die das Schema für den bestimmten <see cref="T:System.Data.Common.DbCommand" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Aktualisierungen in der Datenquelle erforderlich ist.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Das für Aktualisierungen erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Aktualisierungen in der Datenquelle erforderlich ist, wobei optional Spalten für Parameternamen verwendet werden.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Generiert bei einem Wert von <see langword="true" /> Parameternamen, die den Spaltennamen entsprechen (falls möglich). Wenn der Wert <see langword="false" /> ist, werden <c>@p1</c>, <c>@p2</c> usw. generiert.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Das für Aktualisierungen erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Legt die Eigenschaften <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> und <see cref="T:System.Data.UpdateRowSource" /> für <see cref="T:System.Data.Common.DbCommand" /> erneut fest.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">Der <see cref="T:System.Data.Common.DbCommand" />, der vom Befehls-Generator für einen der entsprechenden Befehle insert, update oder delete verwendet werden muss.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Eine <see cref="T:System.Data.Common.DbCommand" />-Instanz, die für die einzelnen Operationen insert, update oder delete verwendet werden muss. Durch Übergeben eines NULL-Werts kann die <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> -Methode ein <see cref="T:System.Data.Common.DbCommand" />-Objekt erstellen. Dies erfolgt auf der Grundlage des Select-Befehls, der dem <see cref="T:System.Data.Common.DbCommandBuilder" /> zugeordnet ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">Bei einem Bezeichner ohne Anführungszeichen in der richtigen Katalogschreibweise wird die korrekte Form des jeweiligen Bezeichners mit Anführungszeichen zurückgegeben, einschließlich der ordnungsgemäßen Escapezeichen für ggf. vorhandene eingebettete Anführungszeichen im Bezeichner.</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">Der ursprüngliche Bezeichner ohne Anführungszeichen.</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">Die Version des Bezeichners mit Anführungszeichen. Eingebettete Anführungszeichen im Bezeichner werden ordnungsgemäß mit Escapezeichen versehen.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Ruft das oder die Anfangszeichen ab, die beim Angeben von Datenbankobjekten (z. B. Tabellen oder Spalten) verwendet werden sollen, deren Namen Zeichen wie Leerzeichen oder reservierte Token enthalten, oder legt diese fest.</summary>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">Das oder die zu verwendende(n) Anfangszeichen. Der Standardwert ist eine leere Zeichenfolge.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">Diese Eigenschaft kann nicht geändert werden, nachdem ein INSERT-Befehl, ein UPDATE-Befehl oder ein DELETE-Befehl generiert wurde.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Ruft das oder die Endzeichen ab, die beim Angeben von Datenbankobjekten (z. B. Tabellen oder Spalten) verwendet werden sollen, deren Namen Zeichen wie Leerzeichen oder reservierte Token enthalten, oder legt diese fest.</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">Das oder die zu verwendende(n) Endzeichen. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Löscht die diesem <see cref="T:System.Data.Common.DbCommandBuilder" /> zugeordneten Befehle.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">Fügt einen Ereignishandler für das <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />-Ereignis hinzu.</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">Eine Instanz von <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> mit Informationen über das Ereignis.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">Ruft das als Trennzeichen zwischen dem Schemabezeichner und anderen Bezeichnern zu verwendende Zeichen ab oder legt dieses fest.</summary>
      <returns vsli:raw="The character to be used as the schema separator.">Das Zeichen, das als Schematrennzeichen verwendet werden soll.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">Gibt an, ob alle Spaltenwerte oder nur die geänderten in einer Aktualisierungsanweisung eingeschlossen sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">
        <see langword="true" />, wenn die vom <see cref="T:System.Data.Common.DbCommandBuilder" /> generierte UPDATE-Anweisung alle Spalten einschließt; <see langword="false" />, wenn nur die geänderten Spalten eingeschlossen werden.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Registriert den <see cref="T:System.Data.Common.DbCommandBuilder" /> zum Behandeln des <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />-Ereignisses für einen <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">Der für die Aktualisierung zu verwendende <see cref="T:System.Data.Common.DbDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">Bei einem Bezeichner mit Anführungszeichen wird die richtige Form des Bezeichners ohne Anführungszeichen zurückgegeben. Dies schließt ein, dass Escapezeichen für eingebettete Anführungszeichen im Bezeichner ordnungsgemäß entfernt werden.</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">Der Bezeichner, dessen eingebettete Anführungszeichen entfernt werden.</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">Der Bezeichner ohne Anführungszeichen, bei dem die Escapezeichen für eingebettete Anführungszeichen ordnungsgemäß entfernt wurden.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">Definiert das Kernverhalten der Datenbankverbindungen und stellt eine Basisklasse für datenbankspezifische Verbindungen bereit</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbConnection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">Startet beim Überschreiben in einer abgeleiteten Klasse eine Datenbanktransaktion</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <returns vsli:raw="An object representing the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">Startet asynchron eine Datenbanktransaktion</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft ein Objekt ist, das die neue Transaktion darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">Startet eine Datenbanktransaktion.</summary>
      <returns vsli:raw="An object representing the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">Startet eine Datenbanktransaktion mit dem angegebenen Isolationsgrad.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <returns vsli:raw="An object representing the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Startet asynchron eine Datenbanktransaktion</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft ein Objekt ist, das die neue Transaktion darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Startet asynchron eine Datenbanktransaktion</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft ein Objekt ist, das die neue Transaktion darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">Ändert beim Überschreiben in einer abgeleiteten Klasse die aktuelle Datenbank für eine geöffnete Verbindung</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Der Name der Datenbank für die zu verwendende Verbindung</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">Ändert asynchron die aktuelle Datenbank für eine offene Verbindung</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Der Name der Datenbank für die zu verwendende Verbindung</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">Schließt beim Überschreiben in einer abgeleiteten Klasse die Verbindung zur Datenbank</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">Schließt asynchron die Verbindung mit der Datenbank</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Zeichenfolge, die für die Verbindung benötigt wird, ab oder legt sie fest</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">Die Verbindungszeichenfolge, mit der die ursprüngliche Verbindung hergestellt wird. Der genaue Inhalt der Verbindungszeichenfolge hängt von der bestimmten Datenquelle für diese Verbindung ab. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">Ruft die Zeit ab, die beim Verbindungsaufbau gewartet werden soll, bis der Versuch beendet und ein Fehler generiert wird.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">Der Zeitraum in Sekunden, in dem auf das Öffnen einer Verbindung gewartet werden soll. Der Standardwert wird vom bestimmten Verbindungstyp bestimmt, den Sie verwenden.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Erstellt ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der aktuellen Verbindung zugeordnet ist, und gibt es zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Erstellt beim Überschreiben in einer abgeleiteten Klasse ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der aktuellen Verbindung zugeordnet ist, und gibt es zurück</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen der aktuellen Datenbank ab, nachdem eine Verbindung geöffnet wurde, oder ruft den in der Verbindungszeichenfolge angegebenen Datenbanknamen ab, bevor die Verbindung geöffnet wird</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">Der Name der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung zu verwendenden Datenbank. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Datenbankservers ab, zu dem die Verbindung hergestellt werden soll</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">Der Name des Datenbankervers, mit dem eine Verbindung hergestellt werden soll. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Ruft das <see cref="T:System.Data.Common.DbProviderFactory" /> für dieses <see cref="T:System.Data.Common.DbConnection" /> ab.</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">Ein Satz von Methoden für das Erstellen von Instanzen der Implementierung eines Anbieters der Datenquellenklassen.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">Stellt das Verbindungsobjekt asynchron bereit</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">Führt zu einem Eintrag in der angegebenen Transaktion.</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">Ein Verweis auf eine vorhandene <see cref="T:System.Transactions.Transaction" />, in der die Eintragung vorgenommen werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.Common.DbConnection" /> zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.Common.DbConnection" /> mithilfe der angegebenen Zeichenfolge des Schemanamens zurück.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Gibt den zurückzugebenden Namen des Schemas an.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> ist als null angegeben.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.Common.DbConnection" /> mithilfe der angegebenen Zeichenfolge des Schemanamens und des angegebenen Zeichenfolgenarrays der Einschränkungswerte zurück.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Gibt den zurückzugebenden Namen des Schemas an.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">Gibt eine Gruppe von Einschränkungswerten für das angeforderte Schema an.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> ist als null angegeben.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Löst das <see cref="E:System.Data.Common.DbConnection.StateChange" />-Ereignis aus.</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.StateChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">Öffnet beim Überschreiben in einer abgeleiteten Klasse eine Datenbankverbindung mit den Einstellungen, die durch <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> angegeben werden</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Eine asynchrone Version von <see cref="M:System.Data.Common.DbConnection.Open" />, die eine Datenbankverbindung mit den Einstellungen öffnet, die durch <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> angegeben werden. Diese Methode ruft die virtuelle Methode <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbConnection.Open" />. Anbieter sollten mit einer entsprechenden Implementierung überschreiben. Das Abbruchtoken kann optional berücksichtigt werden.  
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbConnection.Open" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen cancellationToken erhalten hat. Die Ausnahmen, die von Open ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
Rufen Sie keine anderen Methoden und Eigenschaften des <see langword="DbConnection" />-Objekts auf, bis die zurückgegebene Aufgabe abgeschlossen ist.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Die Abbruchanweisung.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">Ruft beim Überschreiben in einer abgeleiteten Klasse eine Zeichenfolge ab, die die Version des Servers darstellt, mit der das Objekt verbunden ist</summary>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">Die Version der Datenbank. Das Format der zurückgegebenen Zeichenfolge hängt vom bestimmten Verbindungstyp ab, den Sie verwenden.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> wurde aufgerufen, während die zurückgegebene Aufgabe nicht abgeschlossen wurde, und die Verbindung wurde nach einem Aufruf von <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /> nicht geöffnet.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">Ruft eine Zeichenfolge ab, die den Zustand der Verbindung beschreibt.</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">Der Zustand der Verbindung. Das Format der zurückgegebenen Zeichenfolge hängt vom bestimmten Verbindungstyp ab, den Sie verwenden.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">Tritt ein, wenn der Zustand des Ereignisses geändert wird.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Beginnt eine Datenbanktransaktion.</summary>
      <returns vsli:raw="An object that represents the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">Beginnt eine Datenbanktransaktion mit der angegebenen Isolationsstufe.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <returns vsli:raw="An object that represents the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">Erstellt ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der aktuellen Verbindung zugeordnet ist, und gibt dieses zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der Verbindung zugeordnet ist.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">Stellt eine Basisklasse für stark typisierte Verbindungszeichenfolgen-Generatoren bereit.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Klasse, wobei optional ODBC-Regeln zum Zitieren von Werten verwendet werden.</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> zum Begrenzen von Feldern mit {}, <see langword="false" /> zum Verwenden von Anführungszeichen.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Fügt dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen Eintrag mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Der dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hinzuzufügende Schlüssel.</param>
      <param name="value" vsli:raw="The value for the specified key.">Der Wert für den angegebenen Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Bietet eine effiziente und sichere Möglichkeit, einen Schlüssel und Wert an ein vorhandenes <see cref="T:System.Text.StringBuilder" />-Objekt anzufügen.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">Der <see cref="T:System.Text.StringBuilder" />, dem das Schlüssel-Wert-Paar hinzugefügt werden soll.</param>
      <param name="keyword" vsli:raw="The key to be added.">Der hinzuzufügende Schlüssel.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Der Wert für den bereitgestellten Schlüssel.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Bietet eine effiziente und sichere Möglichkeit, einen Schlüssel und Wert an ein vorhandenes <see cref="T:System.Text.StringBuilder" />-Objekt anzufügen.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">Der <see cref="T:System.Text.StringBuilder" />, dem das Schlüssel-Wert-Paar hinzugefügt werden soll.</param>
      <param name="keyword" vsli:raw="The key to be added.">Der hinzuzufügende Schlüssel.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Der Wert für den angegebenen Schlüssel.</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> zum Begrenzen von Feldern mit {}, <see langword="false" /> zum Verwenden von Anführungszeichen.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />-Eigenschaft in Visual Studio-Designern sichtbar ist, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn die Verbindungszeichenfolge in Designern sichtbar ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Löscht den Inhalt der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Löscht die Auflistung von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zugeordnet sind.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ruft die Verbindungszeichenfolge ab, die dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zugeordnet ist, oder legt diese fest.</summary>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">Die aktuelle Verbindungszeichenfolge, die aus den im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthaltenen Schlüssel-Wert-Paaren erstellt wird. Der Standardwert ist eine leere Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">Es wurde ein ungültiges Argument für eine Verbindungszeichenfolge bereitgestellt.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">Stellt fest, ob der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen bestimmten Schlüssel enthält.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Der im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zu suchende Schlüssel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen Eintrag mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Ruft die aktuelle Anzahl von Schlüsseln ab, die innerhalb der <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />-Eigenschaft enthalten sind.</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Die Anzahl der Schlüssel in der Verbindungszeichenfolge, die von der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz verwaltet wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">Vergleicht die Verbindungsinformationen in diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Objekt mit den Verbindungsinformationen im angegebenen Objekt.</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">Der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, der mit diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Verbindungsinformationen in beiden <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Objekten eine gleichwertige Verbindungszeichenfolge ergeben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Füllt eine angegebene <see cref="T:System.Collections.Hashtable" /> mit Informationen zu allen Eigenschaften dieses <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Die <see cref="T:System.Collections.Hashtable" />, die mit Informationen zu diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ausgefüllt werden soll.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> eine feste Größe hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">Der Schlüssel des abzurufenden oder festzulegenden Elements.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">Der dem angegebenen Schlüssel zugeordnete Wert. Wenn der angegebene Schlüssel nicht gefunden werden kann, wird beim Abrufen dieses Schlüssels ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben. Beim Festlegen wird ein neues Element mit dem angegebenen Schlüssel erstellt.  
Die Übergabe eines NULL-Schlüssels (<see langword="Nothing" /> in Visual Basic) löst eine <see cref="T:System.ArgumentNullException" /> aus. Durch Zuweisen eines NULL-Werts wird das Schlüssel-Wert-Paar entfernt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Die Eigenschaft wird festgelegt, und der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt.  

oder - 
Die Eigenschaft wird festgelegt, <paramref name="keyword" /> ist in der Auflistung nicht vorhanden, und der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hat eine feste Größe.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Entfernt den Eintrag mit dem angegebenen Schlüssel aus der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz.</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Der Schlüssel des Schlüssel-Wert-Paars, das aus der Verbindungszeichenfolge in diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> entfernt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">
        <see langword="true" />, wenn der Schlüssel in der Verbindungszeichenfolge vorhanden war und entfernt wurde, <see langword="false" />, wenn der Schlüssel nicht vorhanden war.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt, oder <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Gibt an, ob der angegebene Schlüssel in dieser <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz vorhanden ist.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Der im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zu suchende Schlüssel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen Eintrag mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Fügt dem <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">Das <see cref="T:System.Object" />, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">Das <see cref="T:System.Object" />, das als Wert für das hinzuzufügende Element verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">Ermittelt, ob das <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Der im <see cref="T:System.Collections.IDictionary" />-Objekt zu suchende Schlüssel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Gibt ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The element with the specified key.">Das Element mit dem angegebenen Schlüssel.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />-Objekt.</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">Der Schlüssel des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">Eine <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für dieses Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Der Klassenname des Objekts oder <see langword="null" />, wenn die Klasse keinen Namen hat.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">Der Name des Objekts oder <see langword="null" />, wenn das Objekt keinen Namen hat.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">Ein <see cref="T:System.ComponentModel.TypeConverter" />, bei dem es sich um den Konverter für dieses Objekt handelt, oder <see langword="null" />, wenn für dieses Objekt kein <see cref="T:System.ComponentModel.TypeConverter" /> vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">Ein <see cref="T:System.ComponentModel.EventDescriptor" />, der das Standardereignis dieses Objekts darstellt, oder <see langword="null" />, wenn dieses Objekt keine Ereignisse aufweist.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Standardeigenschaft dieses Objekts darstellt, oder <see langword="null" />, wenn dieses Objekt keine Eigenschaften aufweist.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Gibt die Ereignisse für diese Instanz einer Komponente zurück, wobei das angegebene Attributarray als Filter verwendet wird.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die gefilterten Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Gibt die Eigenschaften für diese Instanz einer Komponente zurück, wobei das Attributarray als Filter verwendet wird.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die gefilterten Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Gibt die diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zugeordnete Verbindungszeichenfolge zurück.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Die aktuelle <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />-Eigenschaft.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ruft einen Wert ab, der dem von diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> bereitgestellten Schlüssel entspricht.</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">Der Schlüssel des abzurufenden Elements.</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">Der Wert, der dem <paramref name="keyword" /> entspricht.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn <paramref name="keyword" /> in der Verbindungszeichenfolge gefunden wurde, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> enthält einen NULL-Wert (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ruft ein <see cref="T:System.Collections.ICollection" /> ab, das die Werte im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Eine <see cref="T:System.Collections.ICollection" />, die die Werte aus den <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">Unterstützt die Implementierung der <see cref="T:System.Data.IDbDataAdapter" />-Schnittstelle. Vererber von <see cref="T:System.Data.Common.DbDataAdapter" /> implementieren verschiedene Funktion zur Bereitstellung einer starken Typisierung, aber vererben die meisten Funktionen, die benötigt werden, um einen DataAdapter vollständig zu implementieren.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">Initialisiert eine neue Instanz einer DataAdapter Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">Initialisiert eine neue Instanz einer <see langword="DataAdapter" />-Klasse aus einem vorhandenen Objekt desselben Typs.</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">Ein für die Erstellung des neuen <see langword="DataAdapter" /> verwendetes <see langword="DataAdapter" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">Fügt im aktuellen Batch einen <see cref="T:System.Data.IDbCommand" /> hinzu.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">Der dem Batch hinzuzufügende <see cref="T:System.Data.IDbCommand" />.</param>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Die Anzahl der Befehle im Batch vor dem Hinzufügen des <see cref="T:System.Data.IDbCommand" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">Entfernt alle <see cref="T:System.Data.IDbCommand" />-Objekte aus dem Batch.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatedEventArgs" />-Klasse.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">Die <see cref="T:System.Data.DataRow" />, mit der die Datenquelle aktualisiert wird.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Der während des <see cref="T:System.Data.IDbCommand" /> ausgeführte <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Gibt an, ob es sich bei dem Befehl um eine UPDATE-Anweisung, INSERT-Anweisung, DELETE-Anweisung oder SELECT-Anweisung handelt.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatedEventArgs" />-Klasse.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatingEventArgs" />-Klasse.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">Die <see cref="T:System.Data.DataRow" />, mit der die Datenquelle aktualisiert wird.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Das während des <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Gibt an, ob es sich bei dem Befehl um eine UPDATE-Anweisung, INSERT-Anweisung, DELETE-Anweisung oder SELECT-Anweisung handelt.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatingEventArgs" />-Klasse.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">Der vom <see cref="T:System.Data.Common.DataAdapter" />-Objekt verwendete Standardname für Tabellenzuordnungen.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">Ruft einen Befehl zum Löschen von Datensätzen aus dem Dataset ab oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu löschen, die gelöschten Zeilen im DataSet entsprechen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Data.Common.DbDataAdapter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">Führt den aktuellen Batch aus.</summary>
      <returns vsli:raw="The return value from the last command in the batch.">Der Rückgabewert des letzten Befehls im Batch.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Fügt Zeilen in <see cref="T:System.Data.DataSet" /> hinzu oder aktualisiert diese.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">Die Quelltabelle ist ungültig.  

oder -  

 Die Verbindung ist ungültig.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">Die Verbindung konnte nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Der <paramref name="startRecord" />-Parameter ist kleiner als 0.  

oder - 
Der <paramref name="maxRecords" />-Parameter ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">Aktualisiert Zeilen in einem angegebenen Bereich im <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" />, den Namen der Quelltabelle, die Befehlszeichenfolge und das Befehlsverhalten verwenden.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Der <paramref name="startRecord" />-Parameter ist kleiner als 0.  

oder - 
Der <paramref name="maxRecords" />-Parameter ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Aktualisiert Zeilen im <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den <see cref="T:System.Data.DataTable" />-Namen verwendet.</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">Der Name der <see cref="T:System.Data.DataTable" />, die für die Tabellenzuordnung verwendet werden soll.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">Aktualisiert Zeilen in einer <see cref="T:System.Data.DataTable" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, wobei die angegebenen Werte für <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> und <see cref="T:System.Data.CommandBehavior" /> verwendet werden.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataTable" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Die <see cref="T:System.Data.DataTable" />-Objekte, die aus der Datenquelle gefüllt werden sollen.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Der <see cref="T:System.Data.IDbCommand" />, der ausgeführt wird, um die <see cref="T:System.Data.DataTable" />-Objekte zu füllen.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">Die Anzahl der Zeilen, die in den Datentabellen hinzugefügt bzw. darin aktualisiert wurden.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">Die Quelltabelle ist ungültig.  

oder -  

 Die Verbindung ist ungültig.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">Die Verbindung konnte nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Der <paramref name="startRecord" />-Parameter ist kleiner als 0.  

oder - 
Der <paramref name="maxRecords" />-Parameter ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">Aktualisiert Zeilen in einer <see cref="T:System.Data.DataTable" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen. Dabei wird mit dem angegebenen Datensatz begonnen, und es werden bis zur angegebenen Anzahl an Datensätzen abgerufen.</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Die <see cref="T:System.Data.DataTable" />-Objekte, die aus der Datenquelle gefüllt werden sollen.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dieser Wert schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">Ruft das Verhalten des Befehls für das Füllen des Datenadapters ab oder dieses legt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">Das <see cref="T:System.Data.CommandBehavior" /> des Befehls für das Füllen des Datenadapters.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> mit dem Namen "Table" hinzu und konfiguriert das Schema anhand des angegebenen <see cref="T:System.Data.SchemaType" /> so, dass es dem Schema in der Datenquelle entspricht.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">Ein <see cref="T:System.Data.DataSet" />, in das das Schema eingefügt werden soll.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Einer der <see cref="T:System.Data.SchemaType" />-Werte, die angeben, wie das Schema eingefügt wird.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein Verweis auf eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die dem <see cref="T:System.Data.DataSet" /> hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> mit dem Namen "Table" hinzu und konfiguriert das Schema anhand des angegebenen <see cref="T:System.Data.SchemaType" /> so, dass es dem Schema in der Datenquelle entspricht.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Die mit dem Schema aus der Datenquelle zu füllende <see cref="T:System.Data.DataSet" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Ein Array von <see cref="T:System.Data.DataTable" />-Objekten, die aus der Datenquelle zurückgegebene Schemainformationen enthalten.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu und konfiguriert das Schema auf der Grundlage des angegeben <see cref="T:System.Data.SchemaType" /> und der angegebenen <see cref="T:System.Data.DataTable" /> so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">Ein <see cref="T:System.Data.DataSet" />, in das das Schema eingefügt werden soll.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Einer der <see cref="T:System.Data.SchemaType" />-Werte, die angeben, wie das Schema eingefügt wird.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein Verweis auf eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die dem <see cref="T:System.Data.DataSet" /> hinzugefügt wurden.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">Eine Quelltabelle, aus der das Schema abgerufen werden soll, konnte nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Konfiguriert das Schema der angegebenen <see cref="T:System.Data.DataTable" /> auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">Die mit dem Schema aus der Datenquelle zu füllende <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">Eine <see cref="T:System.Data.DataTable" />, die aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Konfiguriert das Schema der angegebenen <see cref="T:System.Data.DataTable" /> auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" />, der angegebenen Befehlszeichenfolge und der angegebenen <see cref="T:System.Data.CommandBehavior" />-Werte.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">Die mit dem Schema aus der Datenquelle zu füllende <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Ein <see cref="T:System.Data.DataTable" />-Objekt, das aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">Gibt einen <see cref="T:System.Data.IDataParameter" /> von einem der Befehle im aktuellen Batch zurück.</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">Der Index des Befehls, dessen Parameter abgerufen werden soll.</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">Der Index des Parameter im Befehl.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">Die angegebene <see cref="T:System.Data.IDataParameter" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">Gibt Informationen über einen einzelnen Updateversuch innerhalb eines größeren Updates im Batchmodus zurück.</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">Die nullbasierte Ordnungszahl der Spalte des einzelnen Befehls im Batch.</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">Die Anzahl der Zeilen im Datenspeicher, auf die sich der angegebene Befehl im Batch auswirkt.</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">Eine <see cref="T:System.Exception" />, die während der Ausführung des angegebenen Befehls ausgelöst wird. Gibt <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) zurück, wenn keine Ausnahme ausgelöst wird.</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">Informationen über einen einzelnen Updateversuch innerhalb eines größeren Updates im Batchmodus.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Ruft die Parameter ab, die vom Benutzer beim Ausführen einer SQL-SELECT-Anweisung festgelegt wurden.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Ein Array von <see cref="T:System.Data.IDataParameter" />-Objekten, das die vom Benutzer festgelegten Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Initialisiert die Batchverarbeitung für den <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">Ruft einen Befehl ab, mit dem neue Datensätze in die Datenquelle eingefügt werden, oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Löst das <see langword="RowUpdated" />-Ereignis eines .NET Framework-Datenanbieters aus.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.Common.RowUpdatedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">Löst das <see langword="RowUpdating" />-Ereignis eines .NET Framework-Datenanbieters aus.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">Ruft einen Befehl ab, mit dem Datensätze in der Datenquelle ausgewählt werden, oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Ruft eine SQL-Anweisung zum Löschen von Datensätzen aus dem Dataset ab oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu löschen, die gelöschten Zeilen im DataSet entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Ruft eine SQL-Anweisung ab, mit der neue Datensätze in die Datenquelle eingefügt werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle ausgewählt werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle aktualisiert werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu aktualisieren, die geänderten Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Ein neues Objekt, das eine Kopie dieser Instanz ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Beendet die Batchverarbeitung für den <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen Array in <see cref="T:System.Data.DataSet" /> die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, mit denen die Datenquelle aktualisiert wird.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Es ist keine zu aktualisierende <see cref="T:System.Data.DataRow" /> vorhanden.  

oder - 
Es ist keine zu aktualisierende <see cref="T:System.Data.DataTable" /> vorhanden.  

oder - 
Es ist kein <see cref="T:System.Data.DataSet" /> vorhanden, das als Quelle verwendet werden kann.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen Array von <see cref="T:System.Data.DataSet" />-Objekten die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, mit denen die Datenquelle aktualisiert wird.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">Die zu verwendende <see cref="P:System.Data.IDataAdapter.TableMappings" />-Auflistung.</param>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Es ist keine zu aktualisierende <see cref="T:System.Data.DataRow" /> vorhanden.  

oder - 
Es ist keine zu aktualisierende <see cref="T:System.Data.DataTable" /> vorhanden.  

oder - 
Es ist kein <see cref="T:System.Data.DataSet" /> vorhanden, das als Quelle verwendet werden kann.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen <see cref="T:System.Data.DataSet" /> die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Die <see cref="T:System.Data.DataSet" />, mit der die Datenquelle aktualisiert wird.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Aktualisiert die Werte in der Datenbank, indem es die jeweiligen Anweisungen „Einfügen“, „Aktualisieren“ oder „Löschen“ für jede eingefügte, aktualisierte oder gelöschte Zeile in dem <see cref="T:System.Data.DataSet" /> mit dem angegebenen <see cref="T:System.Data.DataTable" />-Namen ausführt.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">Das zum Aktualisieren der Datenquelle zu verwendende <see cref="T:System.Data.DataSet" />.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen <see cref="T:System.Data.DataTable" /> die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">Die <see cref="T:System.Data.DataTable" />, mit der die Datenquelle aktualisiert wird.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Es ist keine zu aktualisierende <see cref="T:System.Data.DataRow" /> vorhanden.  

oder - 
Es ist keine zu aktualisierende <see cref="T:System.Data.DataTable" /> vorhanden.  

oder - 
Es ist kein <see cref="T:System.Data.DataSet" /> vorhanden, das als Quelle verwendet werden kann.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">Ruft einen Wert ab oder legt einen Wert fest, mit dem die Batchverarbeitung aktiviert bzw. deaktiviert wird, und gibt die Anzahl der Befehle an, die pro Batch ausgeführt werden können.</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">Die Anzahl der Zeilen, die pro Batch verarbeitet werden.  
  Wert 
  Effekt 
  0 
  Es gibt keine Beschränkung für die Batchgröße.  

  1 
  Deaktiviert die Batchaktualisierung.  

  &gt; 1 
  Änderungen werden mit Batches von <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />-Operationen gleichzeitig übertragen.  

   

 Wenn Sie diese Einstellung auf einen anderen Wert als 1 festlegen, muss für alle Befehle <see cref="T:System.Data.Common.DbDataAdapter" /> , die dem <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> zugeordnet sind, die-Eigenschaft auf None oder OutputParametersfestgelegt sein. Andernfalls wird eine Ausnahme ausgelöst.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">Ruft einen Befehl ab, mit dem Datensätze in der Datenquelle aktualisiert werden, oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu aktualisieren, die geänderten Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">Liest einen Vorwärtsstream von Zeilen aus einer Datenquelle.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbDataReader" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Schließt das <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Schließt das <see cref="T:System.Data.Common.DbDataReader" />-Objekt asynchron</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Ruft einen Wert ab, der die Tiefe der Schachtelung für die aktuelle Zeile angibt.</summary>
      <returns vsli:raw="The depth of nesting for the current row.">Die Tiefe der Schachtelung für die aktuelle Zeile.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.Common.DbDataReader" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">Gibt die vom <see cref="T:System.Data.Common.DbDataReader" /> verwendeten verwalteten Ressourcen und optional auch die nicht verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.Common.DbDataReader" />-Klasse verwendeten Ressourcen asynchron frei.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Spalten in der aktuellen Zeile ab</summary>
      <returns vsli:raw="The number of columns in the current row.">Die Anzahl der Spalten in der aktuellen Zeile.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">Es ist keine aktuelle Verbindung zu einer Instanz von SQL Server vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">Ruft beim Überschreiben in einer abgeleiteten Klasse den booleschen Wert der angegebenen Spalte ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Bytewert der angegebenen Spalte ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Liest beim Überschreiben in einer abgeleiteten Klasse eine angegebene Anzahl Bytes, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns vsli:raw="The actual number of bytes read.">Die tatsächlich gelesene Anzahl von Bytes.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">Ruft beim Überschreiben in einer abgeleiteten Klasse Wert der angegebenen Spalte als einzelnes Zeichen ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Liest beim Überschreiben in einer abgeleiteten Klasse eine angegebene Anzahl Zeichen, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters read.">Die tatsächlich gelesene Anzahl von Zeichen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Gibt einen verschachtelten Datenreader für die angeforderte Spalte zurück.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A data reader.">Ein Datenreader.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Datentyps der angegebenen Spalte ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The name of the data type.">Der Name des Datentyps.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Gibt ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt für die angeforderte Spaltenordnungszahl zurück, das mit einer anbieterspezifischen Implementierung überschrieben werden kann.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">Gibt beim Überschreiben in einer abgeleiteten Klasse einen Enumerator zurück, mit dem die Zeilen im Datenleser durchlaufen werden kann</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">Ein Enumerator, mit dem die Zeilen im Datenleser durchlaufen werden können</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Datentyp der angegebenen Spalte ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The data type of the specified column.">Der Datentyp der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Ruft den Wert der angegebenen Spalte als angeforderten Typ ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Der Typ des zurückzugebenden Werts.</typeparam>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder - 
Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -


Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).  

oder -

Der Reader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Der Typ des zurückzugebenden Werts.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

oder -

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Der Typ des zurückzugebenden Werts.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

oder -

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Globally Unique Identifier (GUID) ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen von 16 Bit ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen von 32 Bit ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen von 64 Bit ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">Ruft bei Überschreibung in einer abgeleiteten Klasse den Namen der Spalte mit der nullbasierten Ordnungszahl der Spalte ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The name of the specified column.">Der Name der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">Ruft bei Überschreibung in einer abgeleiteten Klasse die Ordnungszahl der Spalte mit dem Spaltennamen ab</summary>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Ruft den anbieterspezifischen Typ der angegebenen Spalte ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A provider-specific .NET type.">Ein anbieterspezifischer .NET-Typ.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Ruft den Wert der angegebenen Spalte als Instanz eines anbieterspezifischen Typs ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">Ruft alle anbieterspezifischen Attributspalten in der Auflistung der aktuellen Zeile ab.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Ein Array vom Typ <see cref="T:System.Object" />, in das die Attributspalten kopiert werden sollen.</param>
      <returns vsli:raw="The number of instances of elements in the array.">Die Anzahl der Instanzen von Elementen im Array.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.Common.DbDataReader" /> beschreibt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Der <see cref="T:System.Data.Common.DbDataReader" /> ist geschlossen.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Nur .NET Core: Dieser Member wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Ruft einen Stream ab, um Daten aus der angegebenen Spalte abzurufen.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A stream.">Ein Stream.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Die angegebene Spalte ist kein binärer Typ, der Lesevorgänge mit einem <see cref="T:System.IO.Stream" /> unterstützt.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.String" />-Instanz ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Ruft einen Textreader zum Auslesen von Daten aus der Spalte ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A text reader.">Ein Textreader.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Die angegebene Spalte ist kein Texttyp, der Lesevorgänge mit einem <see cref="T:System.IO.TextReader" /> unterstützt.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.Object" />-Instanz ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">Füllt beim Überschreiben in einer abgeleiteten Klasse ein Array von Objekten mit den Spaltenwerten der aktuellen Zeile auf</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Ein Array vom Typ <see cref="T:System.Object" />, in das die Attributspalten kopiert werden sollen.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob <see cref="T:System.Data.Common.DbDataReader" /> eine Zeile oder mehrere Zeilen enthält</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Data.Common.DbDataReader" /> eine oder mehrere Zeilen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DbDataReader" />-Klasse geschlossen ist</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn der <see cref="T:System.Data.Common.DbDataReader" /> geschlossen ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Der <see cref="T:System.Data.Common.DbDataReader" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">Die nullbasierte abzurufende Spalte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">Die nullbasierte abzurufende Spalte.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder - 
Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.Object" />-Instanz ab</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Instanz von <see cref="T:System.Object" /> ab</summary>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Es wurde keine Spalte mit dem angegebenen Namen gefunden.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">Setzt beim Überschreiben in einer abgeleiteten Klasse den Datenreader beim Lesen der Ergebnisse von Batchanweisungen asynchron auf das nächste Ergebnis</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Setzt den Datenreader beim Lesen der Ergebnisse von Batchanweisungen asynchron auf das nächste Ergebnis.</summary>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" /></returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Setzt den Datenreader beim Lesen der Ergebnisse von Batchanweisungen asynchron auf das nächste Ergebnis.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Die Abbruchanweisung.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">Verschiebt beim Überschreiben in einer abgeleiteten Klasse den Reader auf den nächsten Datensatz in einem Resultset</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Setzt den Reader asynchron auf den nächsten Datensatz in einem Resultset.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Zeilen vorhanden sind, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Setzt den Reader asynchron auf den nächsten Datensatz in einem Resultset.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Die Abbruchanweisung.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Zeilen vorhanden sind, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen. -1 für SELECT-Anweisungen, 0, wenn keine Zeilen betroffen sind oder die Anweisung fehlgeschlagen ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">Eine Instanz von <see cref="T:System.Data.IDataReader" />, die verwendet werden soll, wenn das Feld auf weitere strukturierte Remotedaten zeigt.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">Ruft die Anzahl der nicht ausgeblendeten Felder im <see cref="T:System.Data.Common.DbDataReader" /> ab.</summary>
      <returns vsli:raw="The number of fields that are not hidden.">Die Anzahl der nicht ausgeblendeten Felder.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Diese Klasse enthält Spaltenschema-Erweiterungsmethoden für <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt ein Spaltenschema haben kann.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">Das <see cref="T:System.Data.Common.DbDataReader" />-Objekt, das auf Unterstützung für Spaltenschemas geprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbDataReader" />-Objekt ein Spaltenschema abrufen kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Ruft das Spaltenschema für ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt ab (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">Das <see cref="T:System.Data.Common.DbDataReader" />-Objekt, das das Spaltenschema zurückgeben soll.</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Das Spaltenschema für ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">Implementiert <see cref="T:System.Data.IDataRecord" /> und <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, und unterstützt die Datenbindung für <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbDataRecord" />-Klasse.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">Gibt die Anzahl von Feldern im aktuellen Datensatz an. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The number of fields within the current record.">Die Anzahl von Feldern im aktuellen Datensatz.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">Keine Verbindung zu einer Datenquelle, aus der gelesen werden kann.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">Gibt den Wert der angegebenen Spalte als booleschen Wert zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der boolesche Wert <see langword="true" /> ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">Gibt den Wert der angegebenen Spalte als Byte zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">Gibt den Wert der angegebenen Spalte als Bytearray zurück.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Der Index in dem Feld, in dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Der Index für <paramref name="buffer" /> für den Beginn des Lesevorgangs.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Die Anzahl der zu lesenden Bytes.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">Gibt den Wert der angegebenen Spalte als Zeichen zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Gibt den Wert der angegebenen Spalte als Zeichenarray zurück.</summary>
      <param name="i" vsli:raw="Column ordinal.">Spaltenordnungszahl.</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">Maximale Länge, die in den Puffer kopiert werden kann.</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">Startpunkt innerhalb des Puffers.</param>
      <param name="length" vsli:raw="Point to start from within the source data.">Startpunkt innerhalb der Quelldaten.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">Wird derzeit nicht unterstützt.</summary>
      <param name="i" vsli:raw="Not currently supported.">Wird derzeit nicht unterstützt.</param>
      <returns vsli:raw="Not currently supported.">Wird derzeit nicht unterstützt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">Gibt den Namen des Back-End-Datentyps zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The name of the back-end data type.">Der Name des Back-End-Datentyps.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Gibt den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Gibt ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt für die angeforderte Spaltenordnungszahl zurück, das mit einer anbieterspezifischen Implementierung überschrieben werden kann.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Gibt den Wert der angegebenen Spalte als <see cref="T:System.Decimal" />-Objekt zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">Gibt den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Gibt den <see cref="T:System.Type" /> zurück, der der Datentyp des Objekts ist.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">Gibt den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Gibt den GUID-Wert des angegebenen Felds zurück.</summary>
      <param name="i" vsli:raw="The index of the field to return.">Der Index des zurückzugebenden Felds.</param>
      <returns vsli:raw="The GUID value of the specified field.">Der GUID-Wert des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">Gibt den Wert der angegebenen Spalte als 16-Bit-Ganzzahlwert mit Vorzeichen zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">Gibt den Wert der angegebenen Spalte als 32-Bit-Ganzzahlwert mit Vorzeichen zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">Gibt den Wert der angegebenen Spalte als 64-Bit-Ganzzahlwert mit Vorzeichen zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">Gibt den Namen der angegebenen Spalte zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The name of the specified column.">Der Name der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">Ruft bei angegebenem Spaltennamen die Ordnungszahl der Spalte ab.</summary>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">Gibt den Wert der angegebenen Spalte als Zeichenfolge zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">Gibt den Wert an der angegebenen Spalte im nativen Format zurück.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value to return.">Der zurückzugebende Wert.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Füllt ein Array von Objekten mit den Spaltenwerten des aktuellen Datensatzes.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Ein Array von <see cref="T:System.Object" />, in das die Attributfelder kopiert werden.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">Wird zum Angeben nicht vorhandener Werte verwendet.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">Gibt den Wert an der angegebenen Spalte im nativen Format an, wenn die Spaltenordnungszahl angegeben wird. Diese Eigenschaft ist schreibgeschützt.</summary>
      <param name="i" vsli:raw="The column ordinal.">Die Spaltenordnungszahl.</param>
      <returns vsli:raw="The value at the specified column in its native format.">Der Wert an der angegebenen Spalte im nativen Format.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">Gibt den Wert an der angegebenen Spalte im nativen Format an, sofern es sich um den Spaltennamen handelt. Diese Eigenschaft ist schreibgeschützt.</summary>
      <param name="name" vsli:raw="The column name.">Der Spaltenname</param>
      <returns vsli:raw="The value at the specified column in its native format.">Der Wert an der angegebenen Spalte im nativen Format.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">Eine <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für dieses Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Der Klassenname des Objekts oder <see langword="null" />, wenn die Klasse keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">Der Name des Objekts oder <see langword="null" />, wenn das Objekt keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">Ein <see cref="T:System.ComponentModel.TypeConverter" />, der der Konverter für dieses Objekt ist, oder <see langword="null" />, wenn für dieses Objekt kein <see cref="T:System.ComponentModel.TypeConverter" /> vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">Ein <see cref="T:System.ComponentModel.EventDescriptor" />, das das Standardereignis für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Ereignisse aufweist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Standardeigenschaft für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Eigenschaften hat.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Gibt die Ereignisse für diese Instanz einer Komponente zurück, wobei das angegebene Attributarray als Filter verwendet wird.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die gefilterten Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Gibt die Eigenschaften für diese Instanz einer Komponente zurück, wobei das Attributarray als Filter verwendet wird.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die gefilterten Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">Stellt einen Mechanismus für das Auflisten aller verfügbaren Instanzen von Datenbankservern im lokalen Netzwerk bereit.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Data.Common.DbDataSourceEnumerator" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">Ruft eine <see cref="T:System.Data.DataTable" /> mit Informationen über alle sichtbaren Instanzen des Servers ab, der durch die stark typisierte Instanz dieser Klasse dargestellt wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">Eine <see cref="T:System.Data.DataTable" /> mit Informationen über die sichtbaren Instanzen der zugeordneten Datenquelle.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Macht die <see cref="M:System.Collections.IEnumerable.GetEnumerator" />-Methode verfügbar, die eine einfache Iteration über eine Auflistung durch einen .NET Framework-Datenanbieter unterstützt.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen Datenreader.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">Der Datenreader, der durchlaufen werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen Reader und gibt an, ob der Reader nach dem Durchlaufen seiner Daten automatisch geschlossen werden soll.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">Der Datenreader, der durchlaufen werden soll.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den Datenreader nach dem Durchlaufen seiner Daten automatisch zu schließen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen <see langword="DataReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">Der <see langword="DataReader" />, der durchlaufen werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen <see langword="DataReader" />, und gibt an, ob der <see langword="DataReader" /> nach dem Durchlaufen seiner Daten automatisch geschlossen werden soll.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">Der <see langword="DataReader" />, der durchlaufen werden soll.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den <see langword="DataReader" /> nach dem Durchlaufen seiner Daten automatisch zu schließen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Ruft das aktuelle Element in der Auflistung ab.</summary>
      <returns vsli:raw="The current element in the collection.">Das aktuelle Element in der Auflistung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">Der Enumerator befindet sich vor dem ersten Element der Sammlung oder hinter dem letzten Element.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">Die Basisklasse für alle von der Datenquelle ausgelösten Ausnahmen.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Kontext.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message" vsli:raw="The message to display for this exception.">Die für diese Ausnahme anzuzeigende Meldung.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit der angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message string.">Die Zeichenfolge der Fehlermeldung.</param>
      <param name="innerException" vsli:raw="The inner exception reference.">Der Verweis auf die interne Ausnahme.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit der angegebenen Fehlermeldung und dem angegebenen Fehlercode.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">Der Fehlercode für die Ausnahme.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">Liefert eine Liste von Konstanten für die bekannten MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords und Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die DataSourceInformation-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die DataTypes-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die MetaDataCollections-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die ReservedWords-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die Restrictions-Auflistung darstellt.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">Stellt statische Werte bereit, die als Spaltennamen in den MetaDataCollection-Objekten verwendet werden, die in der <see cref="T:System.Data.DataTable" /> enthalten sind. Die <see cref="T:System.Data.DataTable" /> wird von der GetSchema-Methode erstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der CollectionName-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der ColumnSize-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der CompositeIdentifierSeparatorPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der CreateFormat-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der CreateParameter-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der DataSourceProductName-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der DataSourceProductVersion-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der DataSourceProductVersionNormalized-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der DataType-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der GroupByBehavior-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der IdentifierCase-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der IdentifierPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsAutoIncrementable-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsBestMatch-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsCaseSensitive-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsConcurrencyType-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsFixedLength-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsFixedPrecisionScale-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsLiteralSupported-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsLong-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsNullable-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsSearchable-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsSearchableWithLike-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der IsUnsigned-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der LiteralPrefix-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der LiteralSuffix-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der MaximumScale-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der MinimumScale-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">Wird von der GetSchema-Methode zum Erstellen der NumberOfIdentifierParts-Spalte in der MetaDataCollections-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">Wird von der GetSchema-Methode zum Erstellen der NumberOfRestrictions-Spalte in der MetaDataCollections-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der OrderByColumnsInSelect-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der ParameterMarkerFormat-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der ParameterMarkerPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der ParameterNameMaxLength-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der ParameterNamePattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der ProviderDbType-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der QuotedIdentifierCase-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der QuotedIdentifierPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">Wird von der GetSchema-Methode zum Erstellen der ReservedWord-Spalte in der ReservedWords-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der StatementSeparatorPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der StringLiteralPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">Wird von der GetSchema-Methode zum Erstellen der SupportedJoinOperators-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">Wird von der GetSchema-Methode zum Erstellen der TypeName-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Stellt einen Parameter für einen <see cref="T:System.Data.Common.DbCommand" /> sowie optional dessen Zuordnung zu einer <see cref="T:System.Data.DataSet" />-Spalte dar. Weitere Informationen zu Parametern finden Sie unter Konfigurieren von Parametern und Parameterdatentypen.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbParameter" />-Klasse.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Ruft den <see cref="T:System.Data.DbType" /> des Parameters ab oder legt ihn fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Einer der <see cref="T:System.Data.DbType" />-Werte. Die Standardeinstellung ist <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">Die Eigenschaft ist nicht auf einen gültigen <see cref="T:System.Data.DbType" /> festgelegt.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Parameter nur zur Eingabe, nur zur Ausgabe oder bidirektional verwendet wird oder ob es sich um einen Parameter für den Rückgabewert einer gespeicherten Prozedur handelt.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Einer der <see cref="T:System.Data.ParameterDirection" />-Werte. Die Standardeinstellung ist <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">Die Eigenschaft ist nicht auf einen der gültigen <see cref="T:System.Data.ParameterDirection" />-Werte festgelegt.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">Ruft einen Wert ab, der angibt, ob der Parameter NULL-Werte akzeptiert, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL-Werte akzeptiert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Ruft den Namen der <see cref="T:System.Data.Common.DbParameter" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">Der Name des <see cref="T:System.Data.Common.DbParameter" />. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Ruft die maximale Anzahl von Ziffern ab, die zur Darstellung der <see cref="P:System.Data.Common.DbParameter.Value" />-Eigenschaft verwendet werden kann, oder legt diese fest.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.Common.DbParameter.Value" />-Eigenschaft.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">Setzt die DbType-Eigenschaft auf ihre ursprünglichen Einstellungen zurück.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Ruft die Anzahl der Dezimalstellen ab, in die <see cref="P:System.Data.Common.DbParameter.Value" /> aufgelöst wird, oder legt diese fest.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Die Anzahl der Dezimalstellen, in die <see cref="P:System.Data.Common.DbParameter.Value" /> aufgelöst wird.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">Ruft die maximale Größe der Daten innerhalb der Spalte in Bytes ab oder legt diese fest.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Die maximale Größe (in Bytes) der Daten in der Spalte. Der Standardwert wird aus dem Parameterwert hergeleitet.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Ruft den Namen der Quellspalte ab, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist und zum Laden oder Zurückgeben des <see cref="P:System.Data.Common.DbParameter.Value" /> verwendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Der Name der Quellspalte, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">Legt einen Wert fest, der angibt, ob die Quellspalte NULL-Werte zulässt, oder ruft ihn ab. So kann <see cref="T:System.Data.Common.DbCommandBuilder" /> ordnungsgemäß Update-Anweisungen für Spalten generieren, die NULL-Werte zulassen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see langword="true" />, wenn die Quellspalte NULL-Werte zulässt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Ruft die <see cref="T:System.Data.DataRowVersion" /> ab, die beim Laden von <see cref="P:System.Data.Common.DbParameter.Value" /> verwendet werden soll, oder legt diese fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Die Standardeinstellung ist <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Die Eigenschaft ist nicht auf einen der <see cref="T:System.Data.DataRowVersion" />-Werte festgelegt.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Gibt die Genauigkeit numerischer Parameter an.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">Die maximale Anzahl von Ziffern für die Darstellung der <see langword="Value" />-Eigenschaft eines Datenanbieter-<see langword="Parameter" />-Objekts. Der Standardwert ist 0 und gibt an, dass ein Datenanbieter die Genauigkeit für <see langword="Value" /> festlegt.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">Die Anzahl der Dezimalstellen, in die der <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Ruft den Wert des Parameters ab oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">Ein <see cref="T:System.Object" />, das den Wert des Parameters darstellt. Der Standardwert ist NULL.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Die Basisklasse für eine Auflistung von Parametern für einen <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbParameterCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Fügt der <see cref="T:System.Data.Common.DbParameter" /> das angegebene <see cref="T:System.Data.Common.DbParameterCollection" />-Objekt hinzu.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">Der <see cref="P:System.Data.Common.DbParameter.Value" /> des <see cref="T:System.Data.Common.DbParameter" />, der der Auflistung hinzugefügt werden soll.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Der Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Fügt in der <see cref="T:System.Data.Common.DbParameterCollection" /> ein Array von Elementen mit den angegebenen Werten hinzu.</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">Ein Array von Werten vom Typ <see cref="T:System.Data.Common.DbParameter" />, die der Auflistung hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Entfernt alle <see cref="T:System.Data.Common.DbParameter" />-Werte aus der <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">Gibt an, ob ein <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen <see cref="P:System.Data.Common.DbParameter.Value" /> in der Auflistung enthalten ist.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">Der <see cref="P:System.Data.Common.DbParameter.Value" /> des <see cref="T:System.Data.Common.DbParameter" />, der in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich der <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">Gibt an, ob ein <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen Namen in der Auflistung vorhanden ist.</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">Der Name des <see cref="T:System.Data.Common.DbParameter" />, der in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich der <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">Kopiert ein Array von Elementen beginnend am angegebenen Index in die Auflistung.</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">Das Array von Elementen, das in die Auflistung kopiert werden soll.</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">Der Index in der Auflistung, an den die Elemente kopiert werden sollen.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">Gibt die Anzahl der Elemente in der Auflistung an.</summary>
      <returns vsli:raw="The number of items in the collection.">Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Macht die <see cref="M:System.Collections.IEnumerable.GetEnumerator" />-Methode verfügbar, die eine einfache Iteration über eine Auflistung eines .NET Framework-Datenanbieters unterstützt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Gibt das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index in der Auflistung zurück.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Der Index des <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Gibt das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen zurück.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Der Name des <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Gibt den Index des angegebenen <see cref="T:System.Data.Common.DbParameter" />-Objekts zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Das <see cref="T:System.Data.Common.DbParameter" />-Objekt in der Auflistung.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Der Index des angegebenen <see cref="T:System.Data.Common.DbParameter" />-Objekts.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Gibt den Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts mit dem angegebenen Namen zurück.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Der Name des <see cref="T:System.Data.Common.DbParameter" />-Objekts in der Auflistung.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Der Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts mit dem angegebenen Namen.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">Fügt das angegebene <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen am angegebenen Index in die Auflistung ein.</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Der Index, an dem das <see cref="T:System.Data.Common.DbParameter" />-Objekt eingefügt werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">Das in die Auflistung einzufügende <see cref="T:System.Data.Common.DbParameter" />-Objekt.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">Gibt an, ob die Auflistung eine feste Größe hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung eine feste Größe hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">Gibt an, ob die Auflistung schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">Gibt an, ob die Auflistung synchronisiert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung synchronisiert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Ruft die <see cref="T:System.Data.Common.DbParameter" />-Klasse am angegebenen Index ab oder legt diese fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">Der nullbasierte Index des Parameters.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Das <see cref="T:System.Data.Common.DbParameter" />-Element am angegebenen Index.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">Der angegebene Index ist nicht vorhanden.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Ruft den <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen Namen ab oder legt diesen fest.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Der Name des Parameters.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Der <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen Namen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">Der angegebene Index ist nicht vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">Entfernt das angegebene <see cref="T:System.Data.Common.DbParameter" />-Objekt aus der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Das zu entfernende <see cref="T:System.Data.Common.DbParameter" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">Entfernt das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Der Index, in dem sich das <see cref="T:System.Data.Common.DbParameter" />-Objekt befindet.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">Entfernt das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Der Name des zu entfernenden <see cref="T:System.Data.Common.DbParameter" />-Objekts.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">Legt das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index auf einen neuen Wert fest.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Der Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Der neue <see cref="T:System.Data.Common.DbParameter" />-Wert.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">Legt das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen auf einen neuen Wert fest.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Der Name des <see cref="T:System.Data.Common.DbParameter" />-Objekts in der Auflistung.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Der neue <see cref="T:System.Data.Common.DbParameter" />-Wert.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">Gibt das <see cref="T:System.Object" /> an, das zum Synchronisieren des Zugriffs auf die Auflistung verwendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Ein <see cref="T:System.Object" />, das zum Synchronisieren des Zugriffs auf die <see cref="T:System.Data.Common.DbParameterCollection" /> verwendet wird.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Ruft den Parameter am angegebenen Index ab oder legt diesen fest.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Der Name des abzurufenden Parameters.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">Eine <see cref="T:System.Object" />-Klasse am angegebenen Index.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">Stellt einen Satz von statischen Methoden für das Erstellen einer oder mehrerer Instanzen von <see cref="T:System.Data.Common.DbProviderFactory" />-Klassen dar.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Gibt eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <param name="connection" vsli:raw="The connection used.">Die verwendete Verbindung.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">Eine Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" /> für eine angegebene Verbindung.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Gibt eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">Die <see cref="T:System.Data.DataRow" /> mit den Konfigurationsinformationen des Anbieters.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Eine Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" /> für eine angegebene <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Gibt eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">Unveränderlicher Name eines Anbieters.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">Eine Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" /> für einen angegebenen Anbieternamen.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die Informationen über alle installierten Anbieter enthält, die <see cref="T:System.Data.Common.DbProviderFactory" /> implementieren.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine <see cref="T:System.Data.DataTable" /> mit <see cref="T:System.Data.DataRow" />-Objekten, die die folgenden Daten enthalten: 
  Spaltenordinalzahl 
  Spaltenname 
  Beschreibung 
  0 
  Name  
  Lesbarer Name für den Datenanbieter.  
  1 
  Beschreibung  
  Lesbare Beschreibung des Datenanbieters.  
  2 
  InvariantName  
  Name, mit dem programmgesteuert auf den Datenanbieter verwiesen werden kann.  
  3 
  AssemblyQualifiedName  
  Vollqualifizierter Name der Factoryklasse, der ausreichende Informationen für das Instanziieren des Objekts enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames" />
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="factory" vsli:raw="The instance of the provider factory to be registered." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up." />
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove." />
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">Stellt einen Satz von Methoden für das Erstellen von Instanzen der Implementierung eines Anbieters der Datenquellenklassen dar.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" />-Klasse.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbProviderFactory" />-Instanz die <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse unterstützt</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Data.Common.DbCommandBuilder" /> ,<see langword="false" />wenn diese Instanz die-Klasse unterstützt, andernfalls.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbProviderFactory" />-Instanz die <see cref="T:System.Data.Common.DbDataAdapter" />-Klasse unterstützt</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Data.Common.DbDataAdapter" /> ,<see langword="false" />wenn die-Instanz die-Klasse unterstützt, andernfalls.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbProviderFactory" />-Instanz die <see cref="T:System.Data.Common.DbDataSourceEnumerator" />-Klasse unterstützt</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> ,<see langword="false" />wenn die-Instanz die-Klasse unterstützt, andernfalls.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbCommand" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbConnection" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbDataAdapter" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbDataSourceEnumerator" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbParameter" />-Klasse implementiert.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">Gibt an, welche anbieterspezifische Eigenschaft in den stark typisierten Parameterklassen beim Festlegen eines anbieterspezifischen Typs verwendet werden soll.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />-Klasse.</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">Gibt an, ob diese Eigenschaft eine anbieterspezifische Eigenschaft ist.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">Gibt an, ob die attributierte Eigenschaft ein anbieterspezifischer Typ ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft, auf die dieses Attribut angewendet wird, eine anbieterspezifische Typeigenschaft ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">Definiert das Kernverhalten der Datenbanktransaktionen und stellt eine Basisklasse für datenbankspezifische Transaktionen bereit</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">Initialisiert ein neues <see cref="T:System.Data.Common.DbTransaction" />-Objekt.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">Committet die Datenbanktransaktion beim Überschreiben in einer abgeleiteten Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">Führt einen asynchronen Commit der Datenbanktransaktion aus.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Gibt das <see cref="T:System.Data.Common.DbConnection" />-Objekt an, das der Transaktion zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Ein <see cref="T:System.Data.Common.DbConnection" />-Objekt, das der Transaktion zugeordnet ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Ruft beim Überschreiben in einer abgeleiteten Klasse das der Transaktion zugeordnete <see cref="T:System.Data.Common.DbConnection" />-Objekt ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Ein <see cref="T:System.Data.Common.DbConnection" />-Objekt, das der Transaktion zugeordnet ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">Gibt die von <see cref="T:System.Data.Common.DbTransaction" /> verwendeten, nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Data.Common.DbTransaction" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">Wenn <see langword="true" />, gibt diese Methode alle Ressourcen frei, die von verwalteten Objekten verwendet werden, auf die diese <see cref="T:System.Data.Common.DbTransaction" /> verweist.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">Stellt das Transaktionsobjekt asynchron bereit.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Isolationsstufe für diese Transaktion ab.</summary>
      <returns vsli:raw="The isolation level for this transaction.">Die Isolationsstufe für diese Transaktion.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">Führt beim Überschreiben in einer abgeleiteten Klasse einen Rollback für eine Transaktion aus einem ausstehenden Zustand aus.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">Führt einen asynchronen Rollback für eine Transaktion aus einem ausstehenden Zustand durch.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">Ruft das der Transaktion zugeordnete <see cref="T:System.Data.Common.DbConnection" />-Objekt ab, oder einen NULL-Verweis, wenn die Transaktion nicht mehr gültig ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Ein <see cref="T:System.Data.Common.DbConnection" />-Objekt, das der Transaktion zugeordnet ist.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">Gibt die Beziehung zwischen den Spalten in einer GROUP BY-Klausel und nicht zusammengesetzten Spalten in der Select-Liste einer SELECT-Anweisung an.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">Die GROUP BY-Klausel muss alle nicht zusammengesetzten Spalten in der Select-Liste enthalten und darf keine anderen Spalten enthalten, die nicht in der Select-Liste enthalten sind.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">Die GROUP BY-Klausel muss alle nicht zusammengesetzten Spalten in der Select-Liste enthalten und kann andere Spalten enthalten, die nicht in der Select-Liste enthalten sind.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">Die GROUP BY-Klausel wird nicht unterstützt.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">Die Unterstützung für die GROUP BY-Klausel ist unbekannt.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">Es gibt keine Beziehung zwischen den Spalten in der GROUP BY-Klausel und den nicht zusammengesetzten Spalten in der SELECT-Liste. Sie können nach einer beliebigen Spalte gruppieren.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">Generiert ein Spaltenschema.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Ruft das Spaltenschema ab (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Das Spaltenschema (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">Gibt an, wie Bezeichner von der Datenquelle behandelt werden, wenn der Systemkatalog durchsucht wird.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">Die Datenquelle ignoriert beim Durchsuchen des Systemkatalogs die Groß- und Kleinschreibung von Bezeichnern. Die Bezeichner "ab" und "AB" werden gleich behandelt.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">Die Datenquelle berücksichtigt beim Durchsuchen des Systemkatalogs die Groß- und Kleinschreibung von Bezeichnern. Die Bezeichner "ab" und "AB" werden nicht gleich behandelt.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">Die Datenquelle verfügt über verschiedene Regeln hinsichtlich der Groß- und Kleinschreibung von Bezeichnern und kann diese Informationen nicht ermitteln.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Stellt Daten für das <see langword="RowUpdated" />-Ereignis eines .NET Framework-Datenproviders bereit.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatedEventArgs" />-Klasse.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch ein <see cref="T:System.Data.DataRow" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Der beim Aufruf von <see cref="T:System.Data.IDbCommand" /> ausgeführte <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">Der Typ der ausgeführten SQL-Anweisung.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch ein <see cref="T:System.Data.Common.DataTableMapping" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Ruft den beim Aufruf von <see cref="T:System.Data.IDbCommand" /> ausgeführten <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Der beim Aufruf von <see cref="T:System.Data.IDbCommand" /> ausgeführte <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Kopiert Verweise auf die geänderten Zeilen in das bereitgestellte Array.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Das Array, in das <see cref="T:System.Data.DataRow" /> kopiert werden soll.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Kopiert Verweise auf die geänderten Zeilen in das bereitgestellte Array.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Das Array, in das <see cref="T:System.Data.DataRow" /> kopiert werden soll.</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">Der Index im Array, an dem der Kopiervorgang gestartet werden soll.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Ruft alle Fehler ab, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Die Fehler, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Ruft die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen; 0, wenn keine Zeilen betroffen sind, oder bei der Anweisung ein Fehler aufgetreten ist, und -1 für SELECT-Anweisungen.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Ruft das durch ein <see cref="T:System.Data.DataRow" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch ein <see cref="T:System.Data.DataRow" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">Ruft die Anzahl von Zeilen ab, die in einem Batch aktualisierter Datensätze verarbeitet wurden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">
        <see langword="int" />, der die Anzahl verarbeiteter Zeilen angibt.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">Ruft den Typ der ausgeführten SQL-Anweisung ab.</summary>
      <returns vsli:raw="The type of SQL statement executed.">Der Typ der ausgeführten SQL-Anweisung.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Ruft den <see cref="T:System.Data.UpdateStatus" /> der <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />-Eigenschaft ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Einer der <see cref="T:System.Data.UpdateStatus" />-Werte. Die Standardeinstellung ist <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Ruft das durch ein <see cref="T:System.Data.Common.DataTableMapping" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch ein <see cref="T:System.Data.Common.DataTableMapping" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">Stellt die Daten für das RowUpdating-Ereignis eines .NET Framework-Datenanbieters bereit.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatingEventArgs" />-Klasse.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die <see cref="T:System.Data.DataRow" /> für das <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Der beim Aufruf von <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">Der Typ der auszuführenden SQL-Anweisung.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch ein <see cref="T:System.Data.Common.DataTableMapping" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">Ruft das <see cref="T:System.Data.IDbCommand" />-Objekt für eine Instanz dieser Klasse ab oder legt dieses fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Das während des <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">Ruft den während der <see cref="T:System.Data.IDbCommand" />-Operation auszuführenden <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Das während des <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Ruft alle Fehler ab, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Die Fehler, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">Ruft die <see cref="T:System.Data.DataRow" /> ab, die beim Einfügen, Aktualisieren oder Löschen an den Server gesendet wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch ein <see cref="T:System.Data.DataRow" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">Ruft den Typ der auszuführenden SQL-Anweisung ab.</summary>
      <returns vsli:raw="The type of SQL statement to execute.">Der Typ der auszuführenden SQL-Anweisung.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Ruft den <see cref="T:System.Data.UpdateStatus" /> der <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />-Eigenschaft ab oder legt diesen fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Einer der <see cref="T:System.Data.UpdateStatus" />-Werte. Die Standardeinstellung ist <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Ruft die durch das <see cref="T:System.Data.Common.DataTableMapping" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Die durch das <see cref="T:System.Data.Common.DataTableMapping" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">Beschreibt die Spaltenmetadaten des Schemas für eine Datenbanktabelle.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">Gibt an, ob der Wert <see langword="DBNull" /> zulässig ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Gibt den Namen der Spalte in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">Gibt den Namen des Schemas in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">Gibt den Namen der Tabelle in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Gibt den Namen der Spalte in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">Gibt die Ordnungszahl der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">Gibt die Größe der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">Gibt den Typ der Daten in der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">Gibt an, ob diese Spalte einen Alias besitzt.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">Gibt an, ob diese Spalte ein Ausdruck ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">Gibt an, ob diese Spalte ein Schlüssel für die Tabelle ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">Gibt an, ob diese Spalte long-Daten enthält.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">Gibt an, ob eine Unique-Einschränkung für diese Spalte gilt.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">Gibt den anbieterspezifischen Datentyp ohne Versionsangabe der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">Gibt die Genauigkeit der Spaltendaten an, wenn die Daten numerisch sind.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">Gibt die Skalierung der Spaltendaten an, wenn die Daten numerisch sind.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Gibt den anbieterspezifischen Datentyp der Spalte an.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">Beschreibt optionale Spaltenmetadaten des Schemas für eine Datenbanktabelle.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">Gibt den Wert an, bei dem die Reihe für neue Identitätsspalten zugewiesen wird.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">Gibt die Schrittweite zwischen Werten in der Identitätsspalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">Der Name des den Ergebnissen der letzten Abfrage zugeordneten Katalogs.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">Der Namespace der Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">Der Servername der Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">Der Namespace für die Tabelle mit der Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">Gibt die Zuordnung für die Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">Der Standardwert für die Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">Der Ausdruck, der zum Berechnen der Spalte verwendet wird.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">Gibt an, ob die Spaltenwerte in der Spalte automatisch inkrementiert werden.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">Gibt an, ob diese Spalte ausgeblendet ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">Gibt an, ob diese Spalte schreibgeschützt ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">Gibt an, ob diese Spalte Zeilenversionsinformationen enthält.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Gibt den anbieterspezifischen Datentyp der Spalte an.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">Gibt an, welche Typen von Transact-SQL-Joinanweisungen von der Datenquelle unterstützt werden.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">Die Datenquelle unterstützt vollständige äußere Joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">Die Datenquelle unterstützt innere Joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">Die Datenquelle unterstützt linke äußere Joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">Die Datenquelle unterstützt keine Joinabfragen.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">Die Datenquelle unterstützt rechte äußere Joins.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">Gibt an, wie Konflikte verursachende Änderungen an der Datenquelle erkannt und aufgelöst werden.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">Update- und Delete-Anweisungen schließen alle Spalten aus der Tabelle, nach denen gesucht werden kann, in die WHERE-Klausel ein. Dies entspricht dem Angeben von <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">Wenn in der Tabelle Timestampspalten vorhanden sind, werden sie in der WHERE-Klausel für alle generierten Update-Anweisungen verwendet. Dies entspricht dem Angeben von <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">Alle Update- und Delete-Anweisungen schließen ausschließlich <see cref="P:System.Data.DataTable.PrimaryKey" />-Spalten in die WHERE-Klausel ein. Wenn kein <see cref="P:System.Data.DataTable.PrimaryKey" /> definiert wird, werden alle Spalten, nach denen gesucht werden kann, in die WHERE-Klausel eingeschlossen. Das entspricht <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">Beschreibt den aktuellen Zustand der Verbindung mit einer Datenquelle.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">Die Verbindung mit der Datenquelle ist unterbrochen. Dies kann nur nach dem Öffnen der Verbindung auftreten. Eine Verbindung in diesem Zustand kann geschlossen und anschließend erneut geöffnet werden. (Dieser Wert ist für zukünftige Versionen des Produkts reserviert.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">Die Verbindung ist geschlossen.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">Das Verbindungsobjekt stellt eine Verbindung mit der Datenquelle her.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">Das Verbindungsobjekt führt einen Befehl aus. (Dieser Wert ist für zukünftige Versionen des Produkts reserviert.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">Das Verbindungsobjekt ruft Daten ab. (Dieser Wert ist für zukünftige Versionen des Produkts reserviert.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">Die Verbindung ist geöffnet.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Stellt eine Einschränkung dar, die für ein oder mehrere <see cref="T:System.Data.DataColumn" />-Objekte erzwungen werden kann.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">Das <see cref="T:System.Data.DataSet" />, zu dem diese Einschränkung gehört.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">Der Name einer Einschränkung in der <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Der Name des <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">Der <see cref="T:System.Data.Constraint" />-Name ist ein NULL-Wert oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">Die <see cref="T:System.Data.ConstraintCollection" /> enthält bereits eine <see cref="T:System.Data.Constraint" /> mit demselben Namen (Vergleich ohne Berücksichtigung von Groß- und Kleinschreibung).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">Ruft die Auflistung von benutzerdefinierten Einschränkungseigenschaften ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">Eine <see cref="T:System.Data.PropertyCollection" /> mit benutzerdefinierten Informationen.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Legt das <see cref="T:System.Data.DataSet" /> der Einschränkung fest.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">Das <see cref="T:System.Data.DataSet" />, zu dem diese Einschränkung gehören wird.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Ruft die <see cref="T:System.Data.DataTable" /> ab, auf die die Einschränkung angewendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Eine <see cref="T:System.Data.DataTable" />, auf die die Einschränkung angewendet wird.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">Ruft den <see cref="P:System.Data.Constraint.ConstraintName" /> (falls vorhanden) als Zeichenfolge ab.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">Der Zeichenfolgenwert des <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt eine Auflistung von Einschränkungen für eine <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">Fügt der Auflistung das angegebene <see cref="T:System.Data.Constraint" />-Objekt hinzu.</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">Das hinzuzufügende <see langword="Constraint" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">Das <paramref name="constraint" />-Argument ist null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">Die Einschränkung gehört bereits zu dieser oder einer anderen Sammlung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">Die Sammlung enthält bereits eine Einschränkung gleichen Namens. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">Erstellt eine neue <see cref="T:System.Data.UniqueConstraint" /> mit dem angegebenen Namen der <see cref="T:System.Data.DataColumn" /> sowie einem Wert, der angibt, ob die Spalte eine Primärschlüsselspalte ist, und fügt diese der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Der Name des <see langword="UniqueConstraint" />.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">Die <see cref="T:System.Data.DataColumn" />, auf die die Einschränkung angewendet wird.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Gibt an, ob die Spalte der Primärschlüssel sein sollte. Wenn <see langword="true" />, dann ist die Spalte eine Primärschlüsselspalte.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Ein neuer <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">Die Einschränkung gehört bereits zu dieser Auflistung.  
 – oder –  
 Die Einschränkung gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">Die Auflistung enthält bereits eine Einschränkung mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">Erstellt eine neue <see cref="T:System.Data.ForeignKeyConstraint" /> mit dem angegebenen Namen, der angegebenen übergeordneten Spalte sowie der angegebenen untergeordneten Spalte und fügt der Auflistung die Einschränkung hinzu.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Der Name des <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Die übergeordnete oder Primärschlüssel, <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der untergeordnete oder Fremdschlüssel, <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Ein neuer <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">Erstellt eine neue <see cref="T:System.Data.UniqueConstraint" /> mit dem angegebenen Namen, einem Array von <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob die Spalte eine Primärschlüsselspalte ist, und fügt diese der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">Der Name des <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, auf die die Einschränkung angewendet wird.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Gibt an, ob die Spalte der Primärschlüssel sein sollte. Wenn <see langword="true" />, dann ist die Spalte eine Primärschlüsselspalte.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Ein neuer <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">Die Einschränkung gehört bereits zu dieser Auflistung.  
 – oder –  
 Die Einschränkung gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">Die Auflistung enthält bereits eine Einschränkung mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">Erstellt eine neue <see cref="T:System.Data.ForeignKeyConstraint" /> mit den angegebenen Arrays von übergeordneten und untergeordneten Spalten und fügt die Einschränkung der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Der Name des <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die Primärschlüsselspalten oder übergeordneten Spalten sind.</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die Fremdschlüsselspalten oder untergeordneten Spalten sind.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Ein neuer <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">Kopiert die Elemente des angegebenen <see cref="T:System.Data.ConstraintCollection" />-Arrays an das Ende der Auflistung.</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">Ein Array von <see cref="T:System.Data.ConstraintCollection" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">Gibt an, ob eine <see cref="T:System.Data.Constraint" /> entfernt werden kann.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">Die <see cref="T:System.Data.Constraint" />, für die untersucht werden soll, ob sie aus der Auflistung entfernt werden kann.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Data.Constraint" /> entfernt werden kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">Löscht sämtliche <see cref="T:System.Data.Constraint" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">Tritt immer dann ein, wenn die <see cref="T:System.Data.ConstraintCollection" /> aufgrund des Hinzufügens oder Entfernens von <see cref="T:System.Data.Constraint" />-Objekten geändert wurde.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">Gibt an, ob das mit Namen angegebene <see cref="T:System.Data.Constraint" />-Objekt in der Auflistung vorhanden ist.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">Der <see cref="P:System.Data.Constraint.ConstraintName" /> der Einschränkung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung die angegebene Einschränkung enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Der Index des Arrays, an dem mit dem Einfügen begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Ruft den Index der angegebenen <see cref="T:System.Data.Constraint" /> ab.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">Die zu suchende <see cref="T:System.Data.Constraint" />.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Der nullbasierte Index der <see cref="T:System.Data.Constraint" />, wenn sich diese in der Auflistung befindet, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">Ruft den Index der mit Namen angegebenen <see cref="T:System.Data.Constraint" /> ab.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Der Name des <see cref="T:System.Data.Constraint" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Der Index der <see cref="T:System.Data.Constraint" />, wenn sich diese in der Auflistung befindet, andernfalls -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">Ruft die <see cref="T:System.Data.Constraint" /> am angegebenen Index aus der Auflistung ab.</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">Der Index der zurückzugebenden Einschränkung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">Der <see cref="T:System.Data.Constraint" /> am angegebenen Index.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">Ruft die <see cref="T:System.Data.Constraint" /> mit dem angegebenen Namen aus der Auflistung ab.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">Der <see cref="P:System.Data.Constraint.ConstraintName" /> der zurückzugebenden Einschränkung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">Die <see cref="T:System.Data.Constraint" /> mit dem angegebenen Namen, andernfalls ein NULL-Wert, wenn die <see cref="T:System.Data.Constraint" /> nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">Entfernt den angegebenen <see cref="T:System.Data.Constraint" /> aus der Auflistung.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Data.Constraint" />-Element.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="constraint" />-Argument lautet <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">Die Einschränkung gehört nicht zu der Auflistung.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">Entfernt das mit Namen angegebene <see cref="T:System.Data.Constraint" />-Objekt aus der Auflistung.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Der Name des zu entfernenden <see cref="T:System.Data.Constraint" />.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">Entfernt das <see cref="T:System.Data.Constraint" />-Objekt am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Der Index der zu entfernenden <see cref="T:System.Data.Constraint" />-Klasse.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">In der Auflistung ist an diesem Index keine Einschränkung vorhanden.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">Stellt die Ausnahme dar, die ausgelöst wird, wenn eine Aktion versucht wird, die gegen eine Einschränkung verstößt.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse. Dies ist der parameterlose Konstruktor.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse mit dem angegebenen Serialisierungs- und Streamkontext.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse, die die angegebene Zeichenfolge und die angegebene innere Ausnahme verwendet.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">Ruft die <see langword="Exception" />-Instanz ab, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt das Schema einer Spalte in einer Datentabelle (<see cref="T:System.Data.DataTable" />) dar.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.DataColumn" />-Klasse als type-Zeichenfolge.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse als type-Zeichenfolge und unter Verwendung des angegebenen Spaltennamens.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse unter Verwendung des angegebenen Spaltennamens und Datentyps.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Ein unterstützter <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Es wurde kein <paramref name="dataType" /> angegeben.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse unter Verwendung des angegebenen Namens, Datentyps und Ausdrucks.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Ein unterstützter <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Der Ausdruck, der zum Erstellen dieser Spalte verwendet wird. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Es wurde kein <paramref name="dataType" /> angegeben.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse unter Verwendung des angegebenen Namens, Datentyps, Ausdrucks und des Werts, der bestimmt, ob es sich bei der Spalte um ein Attribut handelt.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Ein unterstützter <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Der Ausdruck, der zum Erstellen dieser Spalte verwendet wird. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Einer der <see cref="T:System.Data.MappingType" />-Werte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Es wurde kein <paramref name="dataType" /> angegeben.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">Ruft einen Wert ab, der angibt, ob in dieser Spalte für die zur Tabelle gehörenden Zeilen NULL-Werte zulässig sind, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn NULL-Werte zulässig sind. <see langword="false" />andernfalls. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">Ruft einen Wert ab, der angibt, ob der Wert der Spalte für neu zur Tabelle hinzugefügte Zeilen in der Spalte automatisch erhöht wird, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert der Spalte automatisch erhöht wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">Die Spalte ist eine berechnete Spalte.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">Ruft den Anfangswert für eine Spalte ab, deren <see cref="P:System.Data.DataColumn.AutoIncrement" />-Eigenschaft auf <see langword="true" /> festgelegt ist, oder legt diesen fest. Der Standard ist 0.</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">Der Anfangswert für das <see cref="P:System.Data.DataColumn.AutoIncrement" />-Feature.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">Ruft die Schrittweite ab, die von einer Spalte verwendet wird, deren <see cref="P:System.Data.DataColumn.AutoIncrement" />-Eigenschaft auf <see langword="true" /> festgelegt ist, oder legt diese fest.</summary>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">Die Zahl, um die der Wert der Spalte automatisch erhöht wird. Der Standard ist 1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">Der festgelegte Wert ist 0.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">Ruft die Beschriftung für die Spalte ab, oder legt diese fest.</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">Die Beschriftung der Spalte. Wenn nicht festgelegt, wird der <see cref="P:System.Data.DataColumn.ColumnName" />-Wert zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">Ruft den <see cref="T:System.Data.MappingType" /> der Spalte ab oder legt diesen fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Einer der <see cref="T:System.Data.MappingType" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Ruft den Namen der Spalte in der <see cref="T:System.Data.DataColumnCollection" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the column.">Der Name der Spalte.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">Die Eigenschaft ist auf <see langword="null" /> oder eine leere Zeichenfolge festgelegt, und die Spalte gehört zu einer Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">Eine Spalte mit demselben Namen ist bereits in der Auflistung vorhanden. Beim Namensvergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">Ruft den Typ der in der Spalte gespeicherten Daten ab oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">Ein <see cref="T:System.Type" />, der den Datentyp der Spalte darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">In der Spalte sind bereits Daten gespeichert.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">Ruft den <see langword="DateTimeMode" /> für die Spalte ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">Der <see cref="T:System.Data.DataSetDateTime" /> für die angegebene Spalte.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">Ruft beim Erstellen neuer Zeilen den Standardwert für die Spalte ab oder legt diesen fest.</summary>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Ein Wert, der dem <see cref="P:System.Data.DataColumn.DataType" /> der Spalte entspricht.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">Beim Hinzufügen einer Zeile stellt der Standardwert keine Instanz des Datentyps der Spalte dar.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">Ruft den Ausdruck ab, mit dem Zeilen gefiltert, die Werte in einer Spalte berechnet oder eine Aggregatspalte erstellt werden, oder legt diesen fest.</summary>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">Ein Ausdruck, mit dem der Wert einer Spalte berechnet oder eine Aggregatspalte erstellt wird. Der Rückgabetyp eines Ausdrucks wird durch den <see cref="P:System.Data.DataColumn.DataType" /> der Spalte bestimmt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Die <see cref="P:System.Data.DataColumn.AutoIncrement" />-Eigenschaft oder die <see cref="P:System.Data.DataColumn.Unique" />-Eigenschaft ist auf <see langword="true" /> festgelegt.</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">Bei der Verwendung der CONVERT-Funktion wird der Ausdruck als Zeichenfolge ausgewertet, die Zeichenfolge enthält jedoch keine Darstellung, die in den Typparameter konvertiert werden kann.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">Bei der Verwendung der CONVERT-Funktion ist die angeforderte Umwandlung nicht möglich. Ausführliche Informationen zu möglichen Umwandlungen finden Sie im folgenden Abschnitt unter der Konvertierungsfunktion.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">Bei der Verwendung der SUBSTRING-Funktion befindet sich das Anfangsargument außerhalb des gültigen Bereichs.  
– oder – 
Bei der Verwendung der SUBSTRING-Funktion befindet sich das Längenargument außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Bei der Verwendung der LEN-Funktion oder der TRIM-Funktion wird der Ausdruck nicht als Zeichenfolge ausgewertet. Dies gilt auch für Ausdrücke, die als <see cref="T:System.Char" /> ausgewertet werden.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ruft die Auflistung der benutzerdefinierten Benutzerinformationen ab, die einer <see cref="T:System.Data.DataColumn" /> zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">Eine <see cref="T:System.Data.PropertyCollection" /> mit benutzerdefinierten Informationen.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">Ruft die maximale Länge einer Textspalte ab oder legt diese fest.</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">Die maximale Länge der Spalte in Zeichen. Wenn die Spalte keine maximale Länge aufweist, ist der Wert-1 (Standard).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ruft den Namespace der <see cref="T:System.Data.DataColumn" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der Namespace von <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">Der Namespace enthält bereits Daten.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Parameterverweis.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">Ruft die nullbasierte Position der Spalte in der <see cref="T:System.Data.DataColumnCollection" /> Auflistung ab.</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">Die Position der Spalte. Ruft -1 ab, wenn die Spalte kein Member der Auflistung ist.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft ein XML-Präfix ab, das als Alias für den Namespace der <see cref="T:System.Data.DataTable" /> fungiert, oder legt dieses fest.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">Das XML-Präfix für den <see cref="T:System.Data.DataTable" />-Namespace.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="name" vsli:raw="Parameter reference.">Parameterverweis.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">Ruft einen Wert ab, der angibt, ob die Spalte nach dem Hinzufügen einer Zeile zur Tabelle Änderungen zulässt, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Spalte schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">Die Eigenschaft ist für eine berechnete Spalte auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">Ändert die Ordnungszahl oder Position der <see cref="T:System.Data.DataColumn" /> in die angegebene Ordnungszahl oder Position.</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">Die angegebene Ordnungszahl.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">Ruft die <see cref="T:System.Data.DataTable" /> ab, zu der die Spalte gehört.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">Die <see cref="T:System.Data.DataTable" />, zu der die <see cref="T:System.Data.DataColumn" /> gehört.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">Ruft den <see cref="P:System.Data.DataColumn.Expression" /> der Spalte ab, sofern ein solcher vorhanden ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">Der <see cref="P:System.Data.DataColumn.Expression" />-Wert, wenn die Eigenschaft festgelegt ist, andernfalls die <see cref="P:System.Data.DataColumn.ColumnName" />-Eigenschaft.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">Ruft einen Wert ab, der angibt, ob die Werte in allen Zeilen der Spalte eindeutig sein müssen, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert eindeutig sein muss, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">Die Spalte ist eine berechnete Spalte.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumnChangeEventArgs" />-Klasse.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">Die <see cref="T:System.Data.DataRow" /> der Spalte mit dem Wert, der geändert wird.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">Die <see cref="T:System.Data.DataColumn" /> mit dem Wert, der geändert wird.</param>
      <param name="value" vsli:raw="The new value.">Der neue Wert.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Ruft die <see cref="T:System.Data.DataColumn" /> mit einem Wert ab, der geändert wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Die <see cref="T:System.Data.DataColumn" /> mit einem Wert, der geändert wird.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">Ruft den vorgeschlagenen neuen Wert für die Spalte ab oder legt diesen fest.</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Der vorgeschlagene Wert vom Typ <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Ruft die <see cref="T:System.Data.DataRow" /> der Spalte mit einem Wert ab, der geändert wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Die <see cref="T:System.Data.DataRow" /> der Spalte mit einem Wert, der geändert wird.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Stellt die Methode zur Behandlung des <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignisses dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt eine Auflistung von <see cref="T:System.Data.DataColumn" />-Objekten für eine <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Erstellt das angegebene <see cref="T:System.Data.DataColumn" />-Objekt und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="column" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">Die Spalte gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">Der Ausdruck ist ungültig. Weitere Informationen zum Erstellen von Ausdrücken finden Sie unter der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen und Typ und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">Der beim Erstellen der Spalte zu verwendende <see cref="P:System.Data.DataColumn.ColumnName" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">Der <see cref="P:System.Data.DataColumn.DataType" /> der neuen Spalte.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">Der Ausdruck ist ungültig. Weitere Informationen zum Erstellen von Ausdrücken finden Sie unter der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen, Typ und Ausdruck und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">Der beim Erstellen der Spalte zu verwendende Name.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">Der <see cref="P:System.Data.DataColumn.DataType" /> der neuen Spalte.</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Der Ausdruck, der der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft zugewiesen werden soll.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">Der Ausdruck ist ungültig. Weitere Informationen zum Erstellen von Ausdrücken finden Sie unter der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">Kopiert die Elemente des angegebenen <see cref="T:System.Data.DataColumn" />-Arrays an das Ende der Auflistung.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">Das Array von <see cref="T:System.Data.DataColumn" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">Überprüft, ob eine bestimmte Spalte aus der Auflistung entfernt werden kann.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">Eine <see cref="T:System.Data.DataColumn" /> in der Auflistung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">
        <see langword="true" />, wenn die Spalte entfernt werden kann. <see langword="false" /> falls, 
–   Der <paramref name="column" />-Parameter ist <see langword="null" />.  
–   Die Spalte gehört nicht zu dieser Auflistung.  
–   Die Spalte ist Teil einer Beziehung.  
–   Der Ausdruck einer anderen Spalte ist von dieser Spalte abhängig.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">Der <paramref name="column" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">Die Spalte gehört nicht zu dieser Auflistung.

oder -

Die Spalte ist Teil einer Beziehung.

oder -

Der Ausdruck einer anderen Spalte ist von dieser Spalte abhängig.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">Löscht sämtliche Spalten aus der Auflistung.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">Tritt ein, wenn sich die Auflistung der Spalten durch Hinzufügen oder Entfernen einer Spalte ändert.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">Überprüft, ob die Auflistung eine Spalte mit dem angegebenen Namen enthält.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">Der <see cref="P:System.Data.DataColumn.ColumnName" /> der zu suchenden Spalte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Spalte mit diesem Namen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">Kopiert die gesamte Auflistung ab einem angegebenen Index in einem vorhandenen Array in das Array.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, in das die Auflistung kopiert werden soll.</param>
      <param name="index" vsli:raw="The index to start from.">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">Ruft den Index einer durch den Namen angegebenen Spalte ab.</summary>
      <param name="column" vsli:raw="The name of the column to return.">Der Name der zurückzugebenden Spalte.</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">Der Index der durch <paramref name="column" /> angegebenen Spalte, wenn diese gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">Ruft den Index der Spalte mit dem bestimmten Namen ab, bei dem die Groß- und Kleinschreibung nicht berücksichtigt wird.</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">Der Name der zu suchenden Spalte.</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">Der nullbasierte Index der Spalte mit dem angegebenen Namen oder -1, wenn die Spalte in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">Ruft die <see cref="T:System.Data.DataColumn" /> am angegebenen Index aus der Auflistung ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">Der nullbasierte Index der zurückzugebenden Spalte.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">Der <see cref="T:System.Data.DataColumn" /> am angegebenen Index.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">Ruft die <see cref="T:System.Data.DataColumn" /> mit dem angegebenen Namen aus der Auflistung ab.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">Der <see cref="P:System.Data.DataColumn.ColumnName" /> der zurückzugebenden Spalte.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">Die <see cref="T:System.Data.DataColumn" /> in der Auflistung mit dem angegebenen <see cref="P:System.Data.DataColumn.ColumnName" />. Andernfalls ein NULL-Wert, wenn die <see cref="T:System.Data.DataColumn" /> nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">Entfernt das angegebene <see cref="T:System.Data.DataColumn" />-Objekt aus der Auflistung.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Data.DataColumn" />-Element.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="column" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">Die Spalte gehört nicht zu dieser Auflistung.  
 – oder –  
 Die Spalte ist Teil einer Beziehung.  
 – oder –  
 Der Ausdruck einer anderen Spalte ist von dieser Spalte abhängig.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">Entfernt das <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name" vsli:raw="The name of the column to remove.">Der Name der zu entfernenden Spalte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">Die Auflistung enthält keine Spalte mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">Entfernt die Spalte am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The index of the column to remove.">Der Index der zu entfernenden Spalte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">Die Auflistung enthält keine Spalte am angegebenen Index.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">Stellt die Ausnahme dar, die ausgelöst wird, wenn Fehler bei der Verwendung von ADO.NET-Komponenten generiert werden.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse. Dies ist der parameterlose Konstruktor.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Kontext.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse mit der angegebenen Zeichenfolge und der angegebenen inneren Ausnahme.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Stellt Erweiterungsmethoden für <see cref="T:System.Data.Common.DbDataReader" /> bereit.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Ruft den Wert der angegebenen Spalte als ein Byte ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Liest eine angegebene Anzahl Bytes, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns vsli:raw="The actual number of bytes read.">Die tatsächlich gelesene Anzahl von Bytes.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">Ruft den Wert der angegebenen Spalte als ein einzelnes Zeichen ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Liest eine angegebene Anzahl Zeichen, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters read.">Die tatsächlich gelesene Anzahl von Zeichen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Gibt einen verschachtelten Datenreader für die angeforderte Spalte zurück.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="A data reader.">Ein Datenreader.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">Ruft den Namen des Datentyps der angegebenen Spalte ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">Der Datenreader, bei dem der Name des Spaltentyps abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The name of the data type.">Der Name des Datentyps.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">Ruft den Datentyp der angegebenen Spalte ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">Der Datenreader, bei dem der Feldtyp abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The data type of the specified column.">Der Datentyp der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Ruft den Wert der angegebenen Spalte als angeforderten Typ ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Der Typ des zurückzugebenden Werts.</typeparam>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder - 
Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -


Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).  

oder -

Der Reader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Der Typ des zurückzugebenden Werts.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

oder -

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">Ruft den Wert der angegebenen Spalte als global eindeutigen Bezeichner (Globally Unique Identifier, GUID) ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Ruft den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen und einer Länge von 32 Bit ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Ruft den anbieterspezifischen Typ der angegebenen Spalte ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="A provider-specific .NET type.">Ein anbieterspezifischer .NET-Typ.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Ruft den Wert der angegebenen Spalte als Instanz eines anbieterspezifischen Typs ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Ruft einen Stream ab, um Daten aus der angegebenen Spalte abzurufen.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="A stream.">Ein Stream.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Die angegebene Spalte ist kein binärer Typ, der Lesevorgänge mit einem <see cref="T:System.IO.Stream" /> unterstützt.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.String" /> ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Die angegebene Umwandlung ist ungültig.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Ruft einen Textreader zum Auslesen von Daten aus der Spalte ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="A text reader.">Ein Textreader.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Die angegebene Spalte ist kein Texttyp, der Lesevorgänge mit einem <see cref="T:System.IO.TextReader" /> unterstützt.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.Object" /> ab.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

oder -

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

oder - 
Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Stellt die hierarchische Beziehung zwischen zwei <see cref="T:System.Data.DataTable" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen <see cref="T:System.Data.DataRelation" />-Namens sowie der angegebenen übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekte.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataRelation" />. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte enthalten <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf. 
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen Namens, der übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekte sowie eines Werts, der angibt, ob Einschränkungen erstellt werden sollen.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Ein Wert, der angibt, ob Einschränkungen erstellt werden. <see langword="true" />, wenn Einschränkungen erstellt werden, Andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte enthalten <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf. 
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen <see cref="T:System.Data.DataRelation" />-Namens sowie der übereinstimmenden Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte enthalten <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die <see cref="T:System.Data.DataColumn" />-Objekte weisen unterschiedliche Datentypen auf. 
– oder – 
Eines oder beide der Arrays setzen sich nicht aus unterschiedlichen Spalten aus derselben Tabelle zusammen.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen Namens, der übereinstimmenden Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten sowie eines Werts, der angibt, ob Einschränkungen erstellt werden sollen.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Ein Wert, der angibt, ob Einschränkungen erstellt werden sollen. <see langword="true" />, wenn Einschränkungen erstellt werden, Andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte ist bzw. sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf. 
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataRelation" />. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Der Name der <see cref="T:System.Data.DataTable" />, die die übergeordnete Tabelle der Beziehung ist.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">Der Name des Namespaces der übergeordneten Tabelle.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Der Name der <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle der Beziehung ist.</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">Der Name des Namespaces der untergeordneten Tabelle.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der übergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der untergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Ein Wert, der angibt, ob Beziehungen geschachtelt sind.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Der Name der <see cref="T:System.Data.DataTable" />, die die übergeordnete Tabelle der Beziehung ist.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Der Name der <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle der Beziehung ist.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der übergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der untergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Ein Wert, der angibt, ob Beziehungen geschachtelt sind.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">Die übergeordnete und die untergeordnete Tabelle gehören zu verschiedenen <see cref="T:System.Data.DataSet" />-Objekten.  
– oder – 
Mindestens eines der Paare von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten weist unterschiedliche Datentypen auf.  
– oder – 
Das übergeordnete und das untergeordnete <see cref="T:System.Data.DataColumn" />-Objekt sind identisch.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">Ruft die untergeordneten <see cref="T:System.Data.DataColumn" />-Objekte dieser Beziehung ab.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">Ruft die <see cref="T:System.Data.ForeignKeyConstraint" /> für die Beziehung ab.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Ein <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">Ruft die untergeordnete Tabelle dieser Beziehung ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Eine <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle der Beziehung darstellt.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem die <see cref="T:System.Data.DataRelation" /> gehört.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Ein <see cref="T:System.Data.DataSet" />, zu dem die <see cref="T:System.Data.DataRelation" /> gehört.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">Ruft die Auflistung ab, in der angepasste Eigenschaften gespeichert werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">Eine <see cref="T:System.Data.PropertyCollection" />, die benutzerdefinierte Eigenschaften enthält.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Data.DataRelation" />-Objekte geschachtelt sind, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Data.DataRelation" />-Objekte geschachtelt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Parameterverweis.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft ein Array von <see cref="T:System.Data.DataColumn" />-Objekten ab, die die übergeordneten Spalten dieser <see cref="T:System.Data.DataRelation" /> darstellen.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die übergeordneten Spalten dieser <see cref="T:System.Data.DataRelation" /> darstellen.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">Ruft die <see cref="T:System.Data.UniqueConstraint" /> ab, durch die sichergestellt wird, dass Werte in der übergeordneten Spalte einer <see cref="T:System.Data.DataRelation" /> eindeutig sind.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">Eine <see cref="T:System.Data.UniqueConstraint" />, durch die sichergestellt wird, dass Werte in einer übergeordneten Spalte eindeutig sind.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft das übergeordnete <see cref="T:System.Data.DataTable" /> dieses <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">Eine <see cref="T:System.Data.DataTable" />, die die übergeordnete Tabelle dieser Beziehung ist.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="name" vsli:raw="Parameter reference.">Parameterverweis.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Ruft den Namen ab, der zum Abrufen einer <see cref="T:System.Data.DataRelation" /> aus der <see cref="T:System.Data.DataRelationCollection" /> verwendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Der Name der <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see langword="null" /> oder eine leere Zeichenfolge ("") wurde an eine <see cref="T:System.Data.DataColumn" /> übergeben, die eine <see cref="T:System.Data.DataRelation" /> ist.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">Die <see cref="T:System.Data.DataRelation" /> gehört zu einer Auflistung, die bereits eine <see cref="T:System.Data.DataRelation" /> mit demselben Namen enthält.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">Ruft den <see cref="P:System.Data.DataRelation.RelationName" /> ab, sofern vorhanden.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">Der Wert der <see cref="P:System.Data.DataRelation.RelationName" />-Eigenschaft.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Stellt die Auflistung von <see cref="T:System.Data.DataRelation" />-Objekten für dieses <see cref="T:System.Data.DataSet" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelationCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">Erstellt eine <see cref="T:System.Data.DataRelation" /> mit der angegebenen übergeordneten und untergeordneten Spalte und fügt sie der Auflistung hinzu.</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Die übergeordnete Spalte in der Beziehung.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Die untergeordnete Spalte in der Beziehung.</param>
      <returns vsli:raw="The created relation.">Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">Erstellt eine <see cref="T:System.Data.DataRelation" /> mit den angegebenen übergeordneten und untergeordneten Spalten und fügt sie der Auflistung hinzu.</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">Die übergeordneten Spalten in der Beziehung.</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">Die untergeordneten Spalten in der Beziehung.</param>
      <returns vsli:raw="The created relation.">Die erstellte Beziehung.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">Das <paramref name="relation" />-Argument ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Fügt der <see cref="T:System.Data.DataRelation" /> einen <see cref="T:System.Data.DataRelationCollection" /> hinzu.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">Der der Auflistung hinzuzufügende <see langword="DataRelation" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">Der <paramref name="relation" />-Parameter ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">Die Auflistung enthält bereits eine Beziehung mit dem angegebenen Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">Erstellt eine <see cref="T:System.Data.DataRelation" /> mit dem angegebenen Namen und den angegebenen übergeordneten und untergeordneten Spalten und fügt sie der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the relation.">Der Name der Beziehung.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Die übergeordnete Spalte in der Beziehung.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Die untergeordnete Spalte in der Beziehung.</param>
      <returns vsli:raw="The created relation.">Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">Erstellt eine <see cref="T:System.Data.DataRelation" /> mit dem angegebenen Namen, übergeordneten und untergeordneten Spalten mit optionalen Beschränkungen entsprechend dem Wert des <paramref name="createConstraints" />-Parameters und fügt diese der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the relation.">Der Name der Beziehung.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Die übergeordnete Spalte in der Beziehung.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Die untergeordnete Spalte in der Beziehung.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">
        <see langword="true" />, wenn Einschränkungen erstellt werden sollen, andernfalls <see langword="false" />. (Der Standardwert ist <see langword="true" />).</param>
      <returns vsli:raw="The created relation.">Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">Erstellt mit dem angegebenen Namen sowie den angegebenen Arrays der übergeordneten und untergeordneten Spalten eine <see cref="T:System.Data.DataRelation" /> und fügt diese der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Der Name der zu erstellenden <see langword="DataRelation" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Ein Array von untergeordneten <see langword="DataColumn" />-Objekten.</param>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">Der erstellte <see langword="DataRelation" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">Der Name der Beziehung ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">Erstellt mit dem angegebenen Namen, den angegebenen Arrays der übergeordneten und untergeordneten Spalten sowie dem Wert, der angibt, ob eine Einschränkung erstellt werden soll, eine <see cref="T:System.Data.DataRelation" /> und fügt diese der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Der Name der zu erstellenden <see langword="DataRelation" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Ein Array von untergeordneten <see langword="DataColumn" />-Objekten.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Einschränkung erstellt werden soll, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The created relation.">Die erstellte Beziehung.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">Der Name der Beziehung ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">Führt eine Überprüfung der Tabelle durch.</summary>
      <param name="relation" vsli:raw="The relation to check.">Die zu überprüfende Beziehung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">Die Beziehung ist NULL.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">Kopiert die Elemente des angegebenen <see cref="T:System.Data.DataRelation" />-Arrays an das Ende der Auflistung.</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">Das Array von <see cref="T:System.Data.DataRelation" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">Überprüft, ob die angegebene <see cref="T:System.Data.DataRelation" /> aus der Auflistung entfernt werden kann.</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">Die Beziehung, für die die Überprüfung durchgeführt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Data.DataRelation" /> entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">Löscht sämtliche Beziehungen aus der Auflistung.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">Tritt ein, wenn die Auflistung geändert wurde.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">Überprüft, ob eine <see cref="T:System.Data.DataRelation" /> mit dem angegebenen Namen (ohne Berücksichtigung von Groß- und Kleinschreibung) in der Auflistung vorhanden ist.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Der Name der zu suchenden Beziehung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Beziehung mit dem angegebenen Namen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">Kopiert die Auflistung von <see cref="T:System.Data.DataRelation" />-Objekten ab dem angegebenen Index.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">Das Array von <see cref="T:System.Data.DataRelation" />-Objekten, in das die Auflistung kopiert werden soll.</param>
      <param name="index" vsli:raw="The index to start from.">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
      <returns vsli:raw="The referenced DataSet.">Das DataSet, auf das verwiesen wird.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Ruft den Index des angegebenen <see cref="T:System.Data.DataRelation" />-Objekts ab.</summary>
      <param name="relation" vsli:raw="The relation to search for.">Die zu suchende Beziehung.</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">Der nullbasierte Index der Beziehung oder -1, wenn die Beziehung nicht in der Auflistung gefunden wird.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">Ruft den Index der mit Namen angegebenen <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">Der Name der zu suchenden Beziehung.</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">Der nullbasierte Index der Beziehung mit dem angegebenen Namen oder -1, wenn die Beziehung in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">Ruft das <see cref="T:System.Data.DataRelation" />-Objekt am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index to find.">Der zu suchende nullbasierte Index.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">Die <see cref="T:System.Data.DataRelation" /> oder ein NULL-Wert, wenn die angegebene <see cref="T:System.Data.DataRelation" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">Ruft das durch den Namen angegebene <see cref="T:System.Data.DataRelation" />-Objekt ab.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Der Name der zu suchenden Beziehung.</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">Die benannte <see cref="T:System.Data.DataRelation" /> oder ein NULL-Wert, wenn die angegebene <see cref="T:System.Data.DataRelation" /> nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />-Ereignis aus.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />-Ereignis aus.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">Entfernt die angegebene Beziehung aus der Auflistung.</summary>
      <param name="relation" vsli:raw="The relation to remove.">Die zu entfernende Beziehung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">Die Beziehung ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">Die Beziehung gehört nicht zur Auflistung.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">Entfernt die Beziehung mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">Der Name der zu entfernenden Beziehung.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">Die Auflistung enthält keine Beziehung mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">Entfernt die Beziehung am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">Der Index der zu entfernenden Beziehung.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">Die Auflistung enthält keine Beziehung am angegebenen Index.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Führt eine Überprüfung des angegebenen <see cref="T:System.Data.DataRelation" />-Objekts durch.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">Das zu überprüfende <see langword="DataRelation" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">Die Auflistung enthält keine Beziehung am angegebenen Index.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">Die angegebene Beziehung gehört nicht zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt eine Datenzeile in einer <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">Initialisiert eine neue Instanz von DataRow. Erstellt eine Zeile aus dem Generator. Nur zur internen Verwendung.</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">der Generator.</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">Führt einen Commit für alle Änderungen aus, die an dieser Zeile seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> vorgenommen wurden.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Startet einen Bearbeitungsvorgang für ein <see cref="T:System.Data.DataRow" />-Objekt.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">Die Methode wurde für eine gelöschte Zeile aufgerufen.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">Bricht den aktuellen Bearbeitungsvorgang für die Zeile ab.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">Löscht die Fehler für die Zeile. Dazu zählen auch der <see cref="P:System.Data.DataRow.RowError" /> und Fehler, die mit <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> festgelegt wurden.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Löscht die <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">Die <see cref="T:System.Data.DataRow" /> wurde bereits gelöscht.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">Beendet den Bearbeitungsvorgang an der Zeile.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">Bei dem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">Die Zeile gehört zu der Tabelle, und beim Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Beim Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die untergeordneten Zeilen dieser <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">Die Beziehung ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und einer <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ruft die Fehlerbeschreibung der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ein <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="The text of the error description.">Der Text der Fehlerbeschreibung.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">Ruft die Fehlerbeschreibung für die durch den Index angegebene Spalte ab.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Der nullbasierte Index der Spalte.</param>
      <returns vsli:raw="The text of the error description.">Der Text der Fehlerbeschreibung.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">Ruft die Fehlerbeschreibung für eine durch den Namen angegebene Spalte ab.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The text of the error description.">Der Text der Fehlerbeschreibung.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">Ruft ein Array von Spalten ab, die Fehler enthalten.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die Fehler enthalten.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">Die <paramref name="relation" /> gehört nicht zur <see cref="T:System.Data.DataTable" />.  

oder -

Die Zeile ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Diese Zeile gehört nicht zur untergeordneten Tabelle des <see cref="T:System.Data.DataRelation" />-Objekts.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">Die Zeile gehört nicht zu einer Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">Die Zeile ist <see langword="null" />.  

oder -

Die <paramref name="relation" /> gehört nicht zu den übergeordneten Beziehungen dieser Tabelle.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">Die Zeile gehört nicht zu einer Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">Die Zeile ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">Die Zeile ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">Ruft einen Wert ab, der angibt, ob eine Zeile Fehler enthält.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zeile einen Fehler enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">Ruft einen Wert ab, der angibt, ob eine angegebene Version vorhanden ist.</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Version vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> einen NULL-Wert enthält.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ein <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> und <see cref="T:System.Data.DataRowVersion" /> einen NULL-Wert enthält.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ein <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">Die Zeile verfügt nicht über die angeforderte <paramref name="version" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">Ruft einen Wert ab, der angibt, ob die Spalte am angegebenen Index einen NULL-Wert enthält.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Der nullbasierte Index der Spalte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Dem durch <paramref name="columnIndex" /> angegebenen Index entspricht keine Spalte.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">Ruft einen Wert ab, der angibt, ob die benannte Spalte einen NULL-Wert enthält.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ruft die in der angegebenen <see cref="T:System.Data.DataColumn" /> gespeicherten Daten ab oder legt diese fest.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">Ein <see cref="T:System.Data.DataColumn" />, der die Daten enthält.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">Die Spalte gehört nicht zu dieser Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">Die <paramref name="column" /> ist NULL.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ruft die angegebene Version der Daten aus der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">Eine <see cref="T:System.Data.DataColumn" />, die Informationen über die Spalte enthält.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">Die Spalte gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">Das <paramref name="column" />-Argument ist NULL.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">Ruft die Daten aus der durch den Index angegebenen Spalte ab oder legt diese fest.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Der nullbasierte Index der Spalte.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Wird ausgelöst, wenn Sie einen Wert festlegen und der <see cref="T:System.Type" /> des neuen Werts nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">Ruft die durch den Index und die Version angegebenen Daten aus der Spalte ab.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Der nullbasierte Index der Spalte.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">Ruft die Daten aus der durch den Namen angegebenen Spalte ab oder legt diese fest.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Tritt auf, wenn Sie einen Wert festlegen, dessen <see cref="T:System.Type" /> nicht mit <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Tritt auf, wenn Sie versuchen, einen NULL-Wert in eine Spalte einzufügen, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> zu <see langword="false" /> festgelegt ist.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">Ruft die angegebene Version der Daten aus der benannten Spalte ab.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">Die Zeile wurde gelöscht.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">Ruft alle Werte für diese Zeile über ein Array ab oder legt diese fest.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ein Array vom Typ <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ein Wert im Array stimmt nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> in der entsprechenden <see cref="T:System.Data.DataColumn" /> überein.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">Bei einem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">Bei einem Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">Bei einem Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> für das <see cref="T:System.Data.DataColumn" />-Objekts <see langword="false" /> ist.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">Die Zeile wurde gelöscht.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Lehnt alle Änderungen ab, die seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> an der Zeile vorgenommen wurden.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">Ruft die benutzerdefinierte Fehlerbeschreibung für eine Zeile ab oder legt diese fest.</summary>
      <returns vsli:raw="The text describing an error.">Der Text, der einen Fehler beschreibt.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Ruft den aktuellen Zustand der Zeile bezüglich ihrer Beziehung zur <see cref="T:System.Data.DataRowCollection" /> ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Legt die Fehlerbeschreibung für eine als <see cref="T:System.Data.DataColumn" /> angegebene Spalte fest.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">Die <see cref="T:System.Data.DataColumn" />, für die die Fehlerbeschreibung festgelegt werden soll.</param>
      <param name="error" vsli:raw="The error description.">Die Fehlerbeschreibung.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">Legt die Fehlerbeschreibung für eine durch den Index angegebene Spalte fest.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Der nullbasierte Index der Spalte.</param>
      <param name="error" vsli:raw="The error description.">Die Fehlerbeschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">Legt die Fehlerbeschreibung für eine durch den Namen angegebene Spalte fest.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <param name="error" vsli:raw="The error description.">Die Fehlerbeschreibung.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">Legt den Wert der angegebenen <see cref="T:System.Data.DataColumn" /> auf einen NULL-Wert fest.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Ein <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> fest.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> fest.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Die zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">Eine der Zeilen gehört nicht zu einer Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">Eine der Zeilen ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">Die Beziehung gehört nicht zur <see cref="T:System.Data.DataRelationCollection" /> des <see cref="T:System.Data.DataSet" />-Objekts.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">Die untergeordnete <see cref="T:System.Data.DataTable" /> der Beziehung ist nicht die Tabelle, zu der diese Zeile gehört.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">Ruft die <see cref="T:System.Data.DataTable" /> ab, für die diese Zeile über ein Schema verfügt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">Die <see cref="T:System.Data.DataTable" />, zu der diese Zeile gehört.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Beschreibt eine Aktion, die für eine <see cref="T:System.Data.DataRow" /> ausgeführt wird.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">Die Zeile wurde der Tabelle hinzugefügt.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">Die Zeile wurde geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">Die ursprünglichen und die aktuellen Versionen der Zeile wurden geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">Die ursprüngliche Version der Zeile wurde geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">Die Änderungen an der Zeile wurden übernommen.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">Die Zeile wurde aus der Tabelle gelöscht.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">Die Zeile wurde nicht geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">Für die letzte Änderung an der Zeile wurde ein Rollback ausgeführt.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">Der <see langword="DataRowBuilder" />-Typ unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code ausgelegt.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">Stellt Daten für das <see cref="E:System.Data.DataTable.RowChanged" />-Ereignis, das <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis, das <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />-Ereignis und das <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRowChangeEventArgs" />-Klasse.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">Das <see cref="T:System.Data.DataRow" />-Element, für das eine Aktion ausgeführt wird.</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowAction" />-Werte.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ruft die Aktion ab, die für eine <see cref="T:System.Data.DataRow" /> durchgeführt wurde.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowAction" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">Ruft die Zeile ab, für die eine Aktion durchgeführt wurde.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">Die <see cref="T:System.Data.DataRow" />, für die eine Aktion durchgeführt wurde.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt die Methode dar, die die folgenden Ereignisse einer <see cref="E:System.Data.DataTable.RowChanging" /> behandelt:<see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, <see cref="E:System.Data.DataTable.RowDeleted" /> und <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt eine Auflistung von Zeilen für eine <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">Fügt dem <see cref="T:System.Data.DataRow" />-Objekt die angegebene <see cref="T:System.Data.DataRowCollection" /> hinzu.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">Die Zeile ist NULL.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">Die Zeile gehört entweder zu einer anderen Tabelle, oder sie gehört bereits zu dieser Tabelle.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">Durch das Hinzufügen wird eine Einschränkung ungültig gemacht.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Beim Hinzufügen wird versucht, eine NULL in einer <see cref="T:System.Data.DataColumn" /> zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Erstellt eine Zeile mit den angegebenen Werten und fügt diese der <see cref="T:System.Data.DataRowCollection" /> hinzu.</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">Das Array von Werten, mit denen die neue Zeile erstellt wird.</param>
      <returns vsli:raw="The new row.">Keine</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">Ein Wert stimmt nicht mit seinem entsprechenden Spaltentyp überein.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">Durch das Hinzufügen der Zeile wird eine Einschränkung für ungültig erklärt.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Es wird versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">Löscht alle Zeilen aus der Auflistung.</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Eine <see cref="T:System.Data.ForeignKeyConstraint" /> wird für die <see cref="T:System.Data.DataRowCollection" /> erzwungen.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">Ruft einen Wert ab, der angibt, ob der Primärschlüssel einer Zeile in der Auflistung den angegebenen Wert enthält.</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">Der Wert des Primärschlüssels, der überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung eine <see cref="T:System.Data.DataRow" /> mit dem angegebenen Primärschlüsselwert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">Ruft einen Wert ab, der angibt, ob die Primärschlüsselspalten der Zeilen in der Auflistung die im Objektarray angegebenen Werte enthalten.</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">Ein Array von Primärschlüsselwerten, die überprüft werden sollen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Data.DataRowCollection" /> eine <see cref="T:System.Data.DataRow" /> mit den angegebenen Schlüsselwerten enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Kopiert alle <see cref="T:System.Data.DataRow" />-Objekte ab dem angegebenen Index aus der Auflistung in das angegebene Array ab dem angegebenen Index im Zielarray.</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Das eindimensionale Array, das das Ziel der aus <see langword="DataRowCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Kopiert alle <see cref="T:System.Data.DataRow" />-Objekte ab dem angegebenen Index aus der Auflistung in das angegebene Array ab dem angegebenen Index im Zielarray.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Das eindimensionale Array, das das Ziel der aus <see langword="DataRowCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Ruft die Gesamtanzahl der <see cref="T:System.Data.DataRow" />-Objekte in dieser Auflistung ab.</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Die Gesamtanzahl der <see cref="T:System.Data.DataRow" />-Objekte in dieser Auflistung.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">Ruft die durch den Primärschlüsselwert angegebene Zeile ab.</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">Der Primärschlüsselwert der zu suchenden <see cref="T:System.Data.DataRow" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Eine <see cref="T:System.Data.DataRow" />, die den angegebenen Primärschlüsselwert enthält, andernfalls ein NULL-Wert, wenn der Primärschlüsselwert in der <see cref="T:System.Data.DataRowCollection" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">Ruft die Zeile mit den angegebenen Primärschlüsselwerten ab.</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">Ein Array von zu suchenden Primärschlüsselwerten. Der Typ des Arrays ist <see langword="Object" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Ein <see cref="T:System.Data.DataRow" />-Objekt, das die angegebenen Primärschlüsselwerte enthält, andernfalls ein NULL-Wert, wenn der Primärschlüsselwert in der <see cref="T:System.Data.DataRowCollection" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">Diesem Indexwert entspricht keine Zeile.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Ruft einen <see cref="T:System.Collections.IEnumerator" /> für diese Auflistung ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Ein <see cref="T:System.Collections.IEnumerator" /> für diese Auflistung.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Ruft den Index des angegebenen <see cref="T:System.Data.DataRow" />-Objekts ab.</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">Die zu suchende <see langword="DataRow" />.</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">Der nullbasierte Index der angegebenen Zeile oder -1, wenn die Zeile in der Auflistung nicht gefunden wurde.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">Fügt eine neue Zeile an der angegebenen Position in die Auflistung ein.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Data.DataRow" />.</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">Die (nullbasierte) Position in der Auflistung, wo Sie die <see langword="DataRow" /> hinzufügen möchten.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">Die <paramref name="pos" /> ist kleiner als 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">Ruft die Zeile am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">Der nullbasierte Index der zurückzugebenden Zeile.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Das angegebene <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">Entfernt den angegebenen <see cref="T:System.Data.DataRow" /> aus der Auflistung.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Data.DataRow" />-Element.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">Entfernt die Zeile am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The index of the row to remove.">Der Index der zu entfernenden Zeile.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">Gibt eine Singletoninstanz der <see cref="T:System.Data.DataRowComparer`1" />-Klasse zurück.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Ruft eine Singletoninstanz von <see cref="T:System.Data.DataRowComparer`1" /> ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">Vergleicht zwei <see cref="T:System.Data.DataRow" />-Objekte in einem wertbasiertem Vergleich auf Übereinstimmung.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Die Objekttypen, die verglichen werden, i. d. R. <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Ruft eine Singletoninstanz von <see cref="T:System.Data.DataRowComparer`1" /> ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Eine Instanz von <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">Vergleicht zwei <see cref="T:System.Data.DataRow" />-Objekte in einem spaltenweisen, wertbasierten Vergleich.</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Das erste zu vergleichende <see cref="T:System.Data.DataRow" />-Objekt.</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Das zweite zu vergleichende <see cref="T:System.Data.DataRow" />-Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden <see cref="T:System.Data.DataRow" />-Objekte über geordnete Mengen von gleichen Spaltenwerten verfügen; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">Mindestens eines der <see cref="T:System.Data.DataRow" />-Quellobjekte ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Gibt einen Hashcode für das angegebene <see cref="T:System.Data.DataRow" />-Objekt zurück.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">Die <see cref="T:System.Data.DataRow" />, aus der der Hashcode berechnet werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">Ein <see cref="T:System.Int32" />-Wert, der den Hashcode der Zeile darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die <see cref="T:System.Data.DataRow" />-Quellobjekte gehören nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Data.DataRow" />-Quellobjekte sind <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">Definiert die Erweiterungsmethoden der <see cref="T:System.Data.DataRow" />-Klasse. Dies ist eine statische Klasse.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">Das <see cref="T:System.Data.DataColumn" />-Eingabeobjekt, das die Spalte angibt, deren Wert zurückgegeben werden soll.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">Der Wert (vom Typ <paramref name="T" />) der von <paramref name="column" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Die von <paramref name="column" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">Das <see cref="T:System.Data.DataColumn" />-Eingabeobjekt, das die Spalte angibt, deren Wert zurückgegeben werden soll.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Der Wert (vom Typ <paramref name="T" />) der von <paramref name="column" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Die von <paramref name="column" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnIndex" vsli:raw="The column index.">Der Spaltenindex.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnIndex" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Die von <paramref name="ordinal" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">Die nullbasierte Ordnungszahl der Spalte, deren Wert zurückgegeben werden soll.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Der Wert (vom Typ <paramref name="T" />) der von <paramref name="ordinal" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Die von <paramref name="ordinal" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Der Name der Spalte, deren Wert zurückgegeben werden soll.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnName" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Die von <paramref name="columnName" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">Einem Typ, der keine NULL-Werte zulässt, wurde ein <see langword="null" />-Wert zugewiesen.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Der Name der Spalte, deren Wert zurückgegeben werden soll.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnName" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Die von <paramref name="columnName" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">Die <see cref="T:System.Data.DataColumn" /> für die Eingabe gibt an, welcher Zeilenwert abgerufen werden soll.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Der neue Zeilenwert für die angegebene Spalte vom Typ <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">Die durch <paramref name="column" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> ist NULL.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest, für die die Methode aufgerufen wird. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">Die nullbasierte Ordnungszahl der Spalte, deren Wert festgelegt werden soll.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Der neue Zeilenwert für die angegebene Spalte vom Typ <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">Das <paramref name="ordinal" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">Der Name der Spalte, deren Wert festgelegt werden soll.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Der neue Zeilenwert für die angegebene Spalte vom Typ <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Ruft den Zustand eines <see cref="T:System.Data.DataRow" />-Objekts ab.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">Die Zeile wurde einer <see cref="T:System.Data.DataRowCollection" />-Klasse hinzugefügt, und <see cref="M:System.Data.DataRow.AcceptChanges" /> wurde nicht aufgerufen.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Die Zeile wurde mit der <see cref="M:System.Data.DataRow.Delete" />-Methode von <see cref="T:System.Data.DataRow" /> gelöscht.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">Die Zeile wurde zwar erstellt, gehört aber keiner <see cref="T:System.Data.DataRowCollection" /> an. Eine <see cref="T:System.Data.DataRow" />-Klasse befindet sich in diesem Zustand, wenn sie unmittelbar nach ihrer Erstellung noch keiner Auflistung hinzugefügt wurde oder wenn sie aus einer Auflistung entfernt wurde.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">Die Zeile wurde geändert, und <see cref="M:System.Data.DataRow.AcceptChanges" /> wurde nicht aufgerufen.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Die Zeile wurde seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> nicht geändert.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Beschreibt die Version einer <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">Die Zeile enthält aktuelle Werte.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">Die Standardversion von <see cref="T:System.Data.DataRowState" />. Für einen <see langword="DataRowState" />-Wert von <see langword="Added" />, <see langword="Modified" /> oder <see langword="Deleted" /> ist die Standardversion <see langword="Current" />. Für einen <see cref="T:System.Data.DataRowState" />-Wert von <see langword="Detached" /> ist die Version <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">Die Zeile enthält die ursprünglichen Werte.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">Die Zeile enthält einen vorgeschlagenen Wert.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Stellt eine benutzerdefinierte Ansicht einer <see cref="T:System.Data.DataRow" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">Beginnt eine Bearbeitungsprozedur.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">Bricht eine Bearbeitungsprozedur ab.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Gibt eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" /> mit dem angegebenen untergeordneten <see cref="T:System.Data.DataRelation" /> zurück.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Das <see cref="T:System.Data.DataRelation" />-Objekt.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">Gibt eine <see cref="T:System.Data.DataView" /> für das untergeordnete <see cref="T:System.Data.DataTable" /> Element mit dem angegebenen übergeordnetem <see cref="T:System.Data.DataRelation" />-Element zurück.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Das <see cref="T:System.Data.DataRelation" />-Objekt.</param>
      <param name="followParent" vsli:raw="The parent object.">Das übergeordnete Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Gibt eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" /> mit dem angegebenen untergeordneten <see cref="T:System.Data.DataRelation" />-Namen zurück.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Eine Zeichenfolge, die den <see cref="T:System.Data.DataRelation" />-Namen enthält.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">Gibt eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" /> mit dem angegebenen <see cref="T:System.Data.DataRelation" />-Namen und übergeordnetem Element zurück.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Eine Zeichenfolge, die den <see cref="T:System.Data.DataRelation" />-Namen enthält.</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die erstellte untergeordnete Ansicht synchron mit der übergeordneten Ansicht zu erhalten; sonst <see langword="false" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">Ruft die <see cref="T:System.Data.DataView" /> ab, zu der diese Zeile gehört.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">Die <see langword="DataView" />, zu der diese Zeile gehört.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">Löscht eine Zeile.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Führt Änderungen in der zugrunde liegenden <see cref="T:System.Data.DataRow" /> durch und beendet die Sitzung, die mit <see cref="M:System.Data.DataRowView.BeginEdit" /> gestartet wurde.  Verwenden Sie <see cref="M:System.Data.DataRowView.CancelEdit" />, um die Änderungen zu verwerfen, die an <see cref="T:System.Data.DataRow" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">Ruft einen Wert ab, der angibt, ob der aktuelle <see cref="T:System.Data.DataRowView" /> mit dem angegebenen Objekt identisch ist</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Ein zu vergleichendes <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="object" /> eine <see cref="T:System.Data.DataRowView" /> ist und dieselbe Zeile wie die aktuelle <see cref="T:System.Data.DataRowView" /> zurückgibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Gibt den Hashcode des <see cref="T:System.Data.DataRow" />-Objekts zurück</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">Der 32-Bit-Ganzzahl-Hashcode 1 mit Vorzeichen, der den booleschen Wert <see langword="true" /> darstellt, wenn der Wert dieser Instanz ungleich 0 (null) ist. Andernfalls die ganze Zahl 0 (null), die den booleschen Wert <see langword="false" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">Gibt an, ob sich die Zeile im Bearbeitungsmodus befindet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Zeile im Bearbeitungsmodus befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">Gibt an, ob eine <see cref="T:System.Data.DataRowView" /> neu ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zeile neu ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Ruft einen Wert in einer angegebenen Spalte ab oder legt diesen fest.</summary>
      <param name="ndx" vsli:raw="The column index.">Der Spaltenindex.</param>
      <returns vsli:raw="The value of the column.">Der Wert der Spalte.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">Die <see cref="P:System.Data.DataRowView.DataView" />-Eigenschaft kann nicht bearbeitet werden, und die <see cref="T:System.Data.DataRowView" />-Klasse ist nicht neu.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">Diesem Indexwert entspricht keine Spalte.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Ruft einen Wert in einer angegebenen Spalte ab oder legt diesen fest.</summary>
      <param name="property" vsli:raw="String that contains the specified column.">Eine Zeichenfolge, die die angegebene Spalte enthält.</param>
      <returns vsli:raw="The value of the column.">Der Wert der Spalte.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">Eine Spalte mit dem angegebenen Namen oder der Beziehung, die nicht gefunden wurde.

oder -

Die <see cref="P:System.Data.DataRowView.DataView" />-Eigenschaft kann nicht bearbeitet werden, und die <see cref="T:System.Data.DataRowView" />-Klasse ist nicht neu.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">Das Ereignis, das ausgelöst wird, wenn eine <see cref="T:System.Data.DataRowView" />-Eigenschaft geändert wird.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">Ruft die angezeigte <see cref="T:System.Data.DataRow" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">Die <see cref="T:System.Data.DataRow" />, die über die <see cref="T:System.Data.DataRowView" /> angezeigt wird.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ruft die aktuelle Versionsbeschreibung der <see cref="T:System.Data.DataRow" /> ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Mögliche Werte für die <see cref="P:System.Data.DataRowView.RowVersion" />-Eigenschaft sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">Eine AttributeCollection, die die Attribute für dieses Objekt enthält.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The class name of this instance of a component.">Der Klassenname dieser Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The name of this instance of a component.">Der Namen dieser Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The type converter for this instance of a component.">Der Typkonverter für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The default event for this instance of a component.">Das Standardereignis für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The default property for this instance of a component.">Die Standardeigenschaft für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The events for this instance of a component.">Die Ereignisse für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">Gibt die Ereignisse für diese Instanz einer Komponente mit angegebenen Attributen zurück.</summary>
      <param name="attributes" vsli:raw="The attributes.">Die Attribute.</param>
      <returns vsli:raw="The events for this instance of a component.">Die Ereignisse für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns vsli:raw="The properties for this instance of a component.">Die Eigenschaften für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">Gibt die Eigenschaften für diese Instanz einer Komponente mit angegebenen Attributen zurück.</summary>
      <param name="attributes" vsli:raw="The attributes.">Die Attribute.</param>
      <returns vsli:raw="The properties for this instance of a component.">Die Eigenschaften für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">Ruft eine Meldung ab, die alle Validierungsfehler für das Objekt beschreibt.</summary>
      <returns vsli:raw="The validation error on the object.">Der Validierungsfehler für das Objekt.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">Ruft die Fehlermeldung für die Eigenschaft mit dem angegebenen Namen ab.</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">Der Name der Eigenschaft, deren Fehlermeldung abgerufen werden soll.</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">Die Fehlermeldung für die Eigenschaft. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">Stellt einen speicherresidenten Datencache dar.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataSet" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.DataSet" />-Klasse, die über die angegebenen Serialisierungsinformationen und den angegebenen Kontext verfügt.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataSet" />-Klasse.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
      <param name="ConstructSchema" vsli:raw="">Der boolesche Wert.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.DataSet" />-Klasse mit dem angegebenen Namen.</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Führt einen Commit für alle Änderungen aus, die an diesem <see cref="T:System.Data.DataSet" /> seit dem letzten Ladevorgang oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Beginnt die Initialisierung einer <see cref="T:System.Data.DataSet" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">Ruft einen Wert ab, der angibt, ob bei Zeichenfolgenvergleichen in <see cref="T:System.Data.DataTable" />-Objekten die Groß- und Kleinschreibung berücksichtigt wird, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Wenn bei Zeichen folgen vergleichen die Groß-/Kleinschreibung beachtet <see langword="false" />andernfalls. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">Entfernt alle Daten aus dem <see cref="T:System.Data.DataSet" />, indem alle Zeilen in sämtlichen Tabellen entfernt werden.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">Kopiert die Struktur des <see cref="T:System.Data.DataSet" />, einschließlich aller Schemas, Beziehungen und Einschränkungen von <see cref="T:System.Data.DataTable" />. Es werden keine Daten kopiert.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">Ein neues <see cref="T:System.Data.DataSet" /> mit demselben Schema wie das aktuelle <see cref="T:System.Data.DataSet" />, jedoch nicht mit den darin enthaltenen Daten.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Kopiert die Struktur und die Daten für diese <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein neues <see cref="T:System.Data.DataSet" /> mit derselben Struktur (Tabellenschemas, -beziehungen und -einschränkungen) und denselben Daten wie dieses <see cref="T:System.Data.DataSet" />.  
   
 Wenn diese Klassen in Unterklassen unterteilt wurden, besteht die Kopie aus denselben Unterklassen.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">Gibt einen <see cref="T:System.Data.DataTableReader" /> mit einem Resultset pro <see cref="T:System.Data.DataTable" /> zurück, und zwar in der Reihenfolge der Tabellen in der <see cref="P:System.Data.DataSet.Tables" />-Auflistung.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein <see cref="T:System.Data.DataTableReader" /> mit einem oder mehreren Resultsets, die den im Quell-<see cref="T:System.Data.DataTable" /> enthaltenen <see cref="T:System.Data.DataSet" />-Instanzen entsprechen.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Gibt einen <see cref="T:System.Data.DataTableReader" /> mit einem Resultset pro <see cref="T:System.Data.DataTable" /> zurück.</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Ein Array von DataTables, das die Reihenfolge der im <see cref="T:System.Data.DataTableReader" /> zurückzugebenden Resultsets angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">Ein <see cref="T:System.Data.DataTableReader" /> mit einem oder mehreren Resultsets, die den im Quell-<see cref="T:System.Data.DataTable" /> enthaltenen <see cref="T:System.Data.DataSet" />-Instanzen entsprechen. Die Resultsets werden in der vom <paramref name="dataTables" />-Parameter angegebenen Reihenfolge zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft den Namen des aktuellen <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Ruft eine benutzerdefinierte Ansicht der im <see cref="T:System.Data.DataSet" /> enthaltenen Daten ab, mit der unter Verwendung eines benutzerdefinierten <see cref="T:System.Data.DataViewManager" /> gefiltert, gesucht und navigiert werden kann.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Ein <see cref="T:System.Data.DataViewManager" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Bestimmt den <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> für ein <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, mit der der geschützte <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Konstruktor eines <see langword="DataSet" /> bei der Deserialisierung in Remotingszenarios aufgerufen wird.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">Die <see cref="T:System.Runtime.Serialization.StreamingContext" />, mit der der geschützte <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Konstruktor eines <see langword="DataSet" /> bei der Deserialisierung in Remotingszenarios aufgerufen wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Eine <see cref="T:System.Data.SchemaSerializationMode" />-Enumeration, die angibt, ob Schemainformationen aus der Nutzlast ausgelassen wurden.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Bestimmt den <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> für ein <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die <see cref="T:System.Xml.XmlReader" />-Instanz, die bei der Deserialisierung des <see cref="T:System.Data.DataSet" /> übergeben wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Eine <see cref="T:System.Data.SchemaSerializationMode" />-Enumeration, die angibt, ob Schemainformationen aus der Nutzlast ausgelassen wurden.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Beendet die Initialisierung einer <see cref="T:System.Data.DataSet" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">Ruft einen Wert ab, der angibt, ob bei Aktualisierungen Einschränkungsregeln beachtet werden, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn Regeln erzwungen werden. <see langword="false" />andernfalls. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">Mindestens eine Einschränkung kann nicht erzwungen werden.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">Ruft die dem <see langword="DataSet" /> zugeordnete Auflistung von benutzerdefinierten Benutzerinformationen ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">Eine <see cref="T:System.Data.PropertyCollection" /> mit sämtlichen benutzerdefinierten Benutzerinformationen.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">Ruft eine Kopie des <see cref="T:System.Data.DataSet" /> ab, die sämtliche seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommenen Änderungen enthält.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Eine Kopie der Änderungen aus diesem <see cref="T:System.Data.DataSet" />, für das Aktionen ausgeführt werden können und das nachfolgend durch Verwendung von <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> wieder zusammengeführt werden kann. Wenn keine geänderten Zeilen gefunden werden, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Ruft eine Kopie der <see cref="T:System.Data.DataSet" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommenen und durch <see cref="T:System.Data.DataRowState" /> gefilterten Änderungen enthält.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Eine gefilterte Kopie des <see cref="T:System.Data.DataSet" />, für die Aktionen durchgeführt werden und die nachfolgend mithilfe von <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> wieder mit dem Original zusammengeführt werden kann. Wenn keine Zeilen mit dem gewünschten <see cref="T:System.Data.DataRowState" /> gefunden werden, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">Ruft eine Kopie von <see cref="T:System.Xml.Schema.XmlSchemaSet" /> für das DataSet ab.</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">Das angegebene Schemaset.</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine Kopie von <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Füllt ein Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren des <see cref="T:System.Data.DataSet" /> erforderlich sind.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten, die dem <see cref="T:System.Data.DataSet" /> zugeordnet sind.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der Quelle und Ziel des serialisierten Streams enthält, der dem <see cref="T:System.Data.DataSet" /> zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="info" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Gibt eine serialisierbare <see cref="T:System.Xml.Schema.XmlSchema" />-Instanz zurück.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Die <see cref="T:System.Xml.Schema.XmlSchema" />-Instanz.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">Deserialisiert die Tabellendaten aus dem Binär- oder XML-Stream.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz.</param>
      <param name="context" vsli:raw="The streaming context.">Der Streamingkontext.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Gibt die XML-Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten zurück.</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Eine Zeichenfolge, die eine Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten ist.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Gibt das XSD-Schema für die XML-Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten zurück.</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Eine Zeichenfolge, die das XSD-Schema für die XML-Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten darstellt.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen, gefiltert durch <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob in diesem <see cref="T:System.Data.DataTable" /> in einem der <see cref="T:System.Data.DataSet" />-Objekte Fehler vorliegen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Tabelle einen Fehler enthält. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Wendet das XML-Schema aus dem angegebenen <see cref="T:System.IO.Stream" /> auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">Der <see langword="Stream" />, aus dem das Schema gelesen werden soll.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Wendet das XML-Schema aus dem angegebenen <see cref="T:System.IO.TextReader" /> auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">Der <see langword="TextReader" />, aus dem das Schema gelesen werden soll.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Wendet das XML-Schema aus der angegebenen Datei auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">Der Name der Datei, aus der das Schema gelesen werden soll, einschließlich des Pfades.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Wendet das XML-Schema aus dem angegebenen <see cref="T:System.Xml.XmlReader" /> auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">Der <see langword="XMLReader" />, aus dem das Schema gelesen werden soll.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Tritt nach dem Initialisieren der <see cref="T:System.Data.DataSet" /> auf.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">Deserialisiert alle Tabellendaten des Dataset aus dem Binär- oder XML-Stream.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">Überprüft das Format der serialisierten Darstellung des <see langword="DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn die angegebene <see cref="T:System.Runtime.Serialization.SerializationInfo" /> ein in seinem Binärformat serialisiertes <see langword="DataSet" /> darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataSet" /> initialisiert wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die Komponente die Initialisierung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Füllt ein <see cref="T:System.Data.DataSet" /> mit Werten aus einer Datenquelle. Dazu werden der bereitgestellte <see cref="T:System.Data.IDataReader" /> sowie ein Array von <see cref="T:System.Data.DataTable" />-Instanzen verwendet, mit dem Schema- und Namespaceinformationen bereitgestellt werden.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in den <see cref="T:System.Data.DataTable" />-Instanzen des <see cref="T:System.Data.DataSet" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein Array von <see cref="T:System.Data.DataTable" />-Instanzen, aus dem die <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />-Methode Namens- und Namespaceinformationen abruft. Jede dieser Tabellen muss ein Member der <see cref="T:System.Data.DataTableCollection" /> sein, die in diesem <see cref="T:System.Data.DataSet" /> enthalten ist.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Füllt ein <see cref="T:System.Data.DataSet" /> mit Werten aus einer Datenquelle. Dazu werden der bereitgestellte <see cref="T:System.Data.IDataReader" /> sowie ein Array von <see cref="T:System.Data.DataTable" />-Instanzen verwendet, mit dem Schema- und Namespaceinformationen bereitgestellt werden.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in den <see cref="T:System.Data.DataTable" />-Instanzen des <see cref="T:System.Data.DataSet" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der aufgerufen wird, wenn beim Laden von Daten Fehler auftreten.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">Ein Array von <see cref="T:System.Data.DataTable" />-Instanzen, aus dem die <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />-Methode Namens- und Namespaceinformationen abruft.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">Füllt ein <see cref="T:System.Data.DataSet" /> mit Werten aus einer Datenquelle. Dazu wird der bereitgestellte <see cref="T:System.Data.IDataReader" /> sowie ein Array von Zeichenfolgen verwendet, mit dem die Namen der Tabellen im <see langword="DataSet" /> bereitgestellt werden.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in den <see cref="T:System.Data.DataTable" />-Instanzen des <see langword="DataSet" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">Ein Zeichenfolgenarray, aus dem die <see langword="Load" />-Methode Tabellennameninformationen abruft.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Ruft die Gebietsschemainformationen ab, die für den Vergleich von Zeichenfolgen in der Tabelle verwendet werden, oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Globalization.CultureInfo" />, die Daten zum Computergebietsschema des Benutzers enthält. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Führt ein Array von <see cref="T:System.Data.DataRow" />-Objekten mit dem aktuellen <see cref="T:System.Data.DataSet" /> zusammen.</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Das Array von <see langword="DataRow" />-Objekten, das mit dem <see langword="DataSet" /> zusammengeführt werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Führt ein Array von <see cref="T:System.Data.DataRow" />-Objekten mit dem aktuellen <see cref="T:System.Data.DataSet" /> zusammen. Dabei werden Änderungen des <see langword="DataSet" /> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Das Array von <see cref="T:System.Data.DataRow" />-Objekten, das mit dem <see langword="DataSet" /> zusammengeführt werden soll.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um am <see langword="DataSet" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">Führt ein angegebenes <see cref="T:System.Data.DataSet" /> und das entsprechende Schema mit dem aktuellen <see langword="DataSet" /> zusammen.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">Die <see langword="DataSet" />, deren Daten und Schema zusammengeführt werden.</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">Mindestens eine Einschränkung kann nicht aktiviert werden.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">Führt ein angegebenes <see cref="T:System.Data.DataSet" /> und sein Schema mit dem aktuellen <see langword="DataSet" /> zusammen. Dabei werden entsprechend dem angegebenen Argument alle Änderungen in diesem <see langword="DataSet" /> beibehalten oder verworfen.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">Die <see langword="DataSet" />, deren Daten und Schema zusammengeführt werden.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um Änderungen im aktuellen <see langword="DataSet" /> beizubehalten, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Führt ein angegebenes <see cref="T:System.Data.DataSet" /> und sein Schema mit dem aktuellen <see langword="DataSet" /> zusammen. Dabei werden Änderungen des aktuellen <see langword="DataSet" /> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">Die <see langword="DataSet" />, deren Daten und Schema zusammengeführt werden.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um Änderungen im aktuellen <see langword="DataSet" /> beizubehalten, andernfalls <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Führt ein angegebenes <see cref="T:System.Data.DataTable" /> und das entsprechende Schema mit dem aktuellen <see cref="T:System.Data.DataSet" /> zusammen.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">Die <see cref="T:System.Data.DataTable" />, deren Daten und Schema zusammengeführt werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="table" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Führt eine angegebene <see cref="T:System.Data.DataTable" /> und ihr Schema mit dem aktuellen <see langword="DataSet" /> zusammen. Dabei werden Änderungen des aktuellen <see langword="DataSet" /> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">Die <see langword="DataTable" />, deren Daten und Schema zusammengeführt werden.</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um am <see langword="DataSet" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> ist <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">Tritt auf, wenn eine Ziel- und eine Quell-<see cref="T:System.Data.DataRow" /> denselben Primärschlüsselwert aufweisen und <see cref="P:System.Data.DataSet.EnforceConstraints" /> auf True festgelegt ist.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft den Namespace der <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Der Namespace von <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">Der Namespace enthält bereits Daten.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">Löst das <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />-Ereignis aus.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Tritt beim Entfernen eines <see cref="T:System.Data.DataRelation" />-Objekts aus einer <see cref="T:System.Data.DataTable" /> ein.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">Die <see cref="T:System.Data.DataRelation" />, die entfernt wird.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Tritt beim Entfernen einer <see cref="T:System.Data.DataTable" /> aus einem <see cref="T:System.Data.DataSet" /> ein.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">Die <see cref="T:System.Data.DataTable" />, die entfernt wird.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft ein XML-Präfix ab, das als Alias für den Namespace der <see cref="T:System.Data.DataSet" /> fungiert, oder legt dieses fest.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">Das XML-Präfix für den <see cref="T:System.Data.DataSet" />-Namespace.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">Sendet eine Benachrichtigung, dass die angegebene <see cref="T:System.Data.DataSet" />-Eigenschaft gerade geändert wird.</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">Der Name der Eigenschaft, die gerade geändert wird.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Ein von <see cref="T:System.IO.Stream" /> abgeleitetes Objekt.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.Stream" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Der <see cref="T:System.IO.Stream" />, aus dem gelesen werden soll.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">Der <see langword="TextReader" />, aus dem das Schema und die Daten gelesen werden sollen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.TextReader" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">Der <see cref="T:System.IO.TextReader" />, aus dem gelesen werden soll.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">Liest mithilfe der angegebenen Datei das XML-Schema und die XML-Daten in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Liest mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in die <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.Xml.XmlReader" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Liest das XML-Schema aus dem angegebenen <see cref="T:System.IO.Stream" /> in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Der <see cref="T:System.IO.Stream" />, aus dem gelesen werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Liest das XML-Schema aus dem angegebenen <see cref="T:System.IO.TextReader" /> in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">Der <see cref="T:System.IO.TextReader" />, aus dem gelesen werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Liest das XML-Schema aus der angegebenen Datei in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Liest das XML-Schema aus dem angegebenen <see cref="T:System.Xml.XmlReader" /> in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">Ignoriert Attribute und gibt ein leeres DataSet zurück.</summary>
      <param name="reader" vsli:raw="The specified XML reader.">Der angegebene XML-Reader.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Führt einen Rollback aller Änderungen aus, die am <see cref="T:System.Data.DataSet" /> seit dessen Erstellung oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">Ruft die Collection der Beziehungen ab, die Tabellen verknüpfen und die Navigation von übergeordneten Tabellen zu untergeordneten Tabellen ermöglichen.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Eine <see cref="T:System.Data.DataRelationCollection" />, die eine Auflistung von <see cref="T:System.Data.DataRelation" />-Objekten enthält. Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">Ruft das <see cref="T:System.Data.SerializationFormat" /> für das beim Remoting verwendete <see cref="T:System.Data.DataSet" /> ab oder legt dieses fest.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Ein <see cref="T:System.Data.SerializationFormat" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">Löscht alle Tabellen und entfernt alle Beziehungen, Einschränkungen und fremden Tabellen von <see cref="T:System.Data.DataSet" />. Untergeordnete Klassen müssen <see cref="M:System.Data.DataSet.Reset" /> überschreiben, um ein <see cref="T:System.Data.DataSet" /> mit dem ursprünglichen Zustand wiederherzustellen.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft einen <see cref="T:System.Data.SchemaSerializationMode" /> für ein <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Eine <see cref="T:System.Data.SchemaSerializationMode" /> für <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.DataSet.Relations" />-Eigenschaft beibehalten werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Eigenschaftswert von seinem Standardwert geändert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.DataSet.Tables" />-Eigenschaft beibehalten werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Eigenschaftswert von seinem Standardwert geändert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft eine <see cref="T:System.ComponentModel.ISite" /> für den <see cref="T:System.Data.DataSet" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ein <see cref="T:System.ComponentModel.ISite" /> für das <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft die Auflistung der im <see cref="T:System.Data.DataSet" /> enthaltenen Tabellen ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">Die in diesem <see cref="T:System.Data.DataTableCollection" /> enthaltene <see cref="T:System.Data.DataSet" />. Wenn keine <see cref="T:System.Data.DataTable" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> die aktuellen Daten für das <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Ein <see cref="T:System.IO.Stream" />-Objekt, mit dem in eine Datei geschrieben wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.Stream" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Ein <see cref="T:System.IO.Stream" />-Objekt, mit dem in eine Datei geschrieben wird.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> die aktuellen Daten für das <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Das <see cref="T:System.IO.TextWriter" />-Objekt, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">Ein <see cref="T:System.IO.TextWriter" />-Objekt, mit dem das Dokument geschrieben wird.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">Schreibt die aktuellen Daten für das <see cref="T:System.Data.DataSet" /> in die angegebene Datei.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt im angegebenen <see cref="T:System.Data.DataSet" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt die aktuellen Daten für das <see cref="T:System.Data.DataSet" /> in den angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">Der <see cref="T:System.Xml.XmlWriter" />, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">Der <see cref="T:System.Xml.XmlWriter" />, mit dem geschrieben werden soll.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schreibt in das angegebene <see cref="T:System.IO.Stream" />-Objekt.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Ein <see cref="T:System.IO.Stream" />-Objekt, mit dem in eine Datei geschrieben wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in das angegebene <see cref="T:System.IO.Stream" />-Objekt.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">Ein <see cref="T:System.IO.Stream" />-Objekt, in das geschrieben werden soll.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schreibt in das angegebene <see cref="T:System.IO.TextWriter" />-Objekt.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Das <see cref="T:System.IO.TextWriter" />-Objekt, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in den angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">Ein <see cref="T:System.IO.TextWriter" />-Objekt, in das geschrieben werden soll.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in eine Datei.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in eine Datei.</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">Der Name der Datei, in die geschrieben werden soll.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">Der <see cref="T:System.Xml.XmlWriter" />, in den geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in den angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, in das geschrieben werden soll.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Beschreibt das Serialisierungsformat für <see cref="T:System.DateTime" />-Spalten in einem <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> wird immer in Local gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Utc" /> oder <see cref="F:System.Data.DataSetDateTime.Unspecified" /> einer Spalte in diesem Modus zugewiesen werden, werden sie zuerst in Local konvertiert. Die Serialisierung in diesem Modus wird immer in Local ausgeführt. Während der Serialisierung gibt es einen Offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> wird immer in Unspecified gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Local" /> oder <see cref="F:System.Data.DataSetDateTime.Utc" /> einer Spalte in diesem Modus zugewiesen wird, wird der Wert zuerst in <see cref="F:System.Data.DataSetDateTime.Unspecified" /> konvertiert. Die Serialisierung in diesem Modus verursacht keinen Offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> wird in Unspecified gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Local" /> oder <see cref="F:System.Data.DataSetDateTime.Utc" /> einer Spalte in diesem Modus zugewiesen wird, wird der Wert zuerst in <see cref="F:System.Data.DataSetDateTime.Unspecified" /> konvertiert. Die Serialisierung in diesem Modus verursacht einen Offset. Dieses Standardverhalten ist abwärts kompatibel. Diese Option sollte bezüglich der Speicherung als Unspecified betrachtet werden. Sie wendet jedoch während der Serialisierung einen Offset an, der <see cref="F:System.Data.DataSetDateTime.Local" /> ähnlich ist.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> wird in Universal Coordinated Time (UTC) gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Local" /> oder <see cref="F:System.Data.DataSetDateTime.Unspecified" /> einer Spalte in diesem Modus zugewiesen wird, wird der Wert zuerst in das <see langword="Utc" />-Format konvertiert. Die Serialisierung in diesem Modus wird immer in <see langword="Utc" /> ausgeführt. Während der Serialisierung gibt es keinen Offset.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">Kennzeichnet eine Eigenschaft, ein Ereignis oder einen Extender mit einer Beschreibung. In visuellen Designern kann diese Beschreibung beim Verweisen auf den Member angezeigt werden.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataSysDescriptionAttribute" />-Klasse unter Verwendung der angegebenen Beschreibungszeichenfolge.</summary>
      <param name="description" vsli:raw="The description string.">Die Beschreibungszeichenfolge.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">Ruft den Text für die Beschreibung ab.</summary>
      <returns vsli:raw="The description string.">Die Beschreibungszeichenfolge.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">Stellt eine Tabelle mit Daten im Arbeitsspeicher dar.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse ohne Argumente.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit dem angegebenen Tabellennamen.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Der Name, der der Tabelle gegeben werden soll. Wenn <paramref name="tableName" /><see langword="null" /> oder eine leere Zeichenfolge ist, wird beim Hinzufügen zur <see cref="T:System.Data.DataTableCollection" /> ein Standardname vergeben.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit dem angegebenen Tabellennamen und Namespace.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Der Name, der der Tabelle gegeben werden soll. Wenn <paramref name="tableName" /><see langword="null" /> oder eine leere Zeichenfolge ist, wird beim Hinzufügen zur <see cref="T:System.Data.DataTableCollection" /> ein Standardname vergeben.</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">Der Namespace für die XML-Darstellung der in der <see langword="DataTable" /> gespeicherten Daten.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Übernimmt alle Änderungen, die an dieser Tabelle seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Beginnt die Initialisierung einer <see cref="T:System.Data.DataTable" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">Deaktiviert während des Ladens von Daten Benachrichtigungen, Indexverwaltung und Einschränkungen.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">Gibt an, ob Vergleiche zwischen Zeichenfolgen in der Tabelle unter Berücksichtigung der Groß- und Kleinschreibung ausgeführt werden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see langword="true" />, wenn beim Vergleich zwischen Groß- und Kleinschreibung unterschieden wird, andernfalls <see langword="false" />. Der Standard ist auf die <see cref="T:System.Data.DataSet" />-Eigenschaft des übergeordneten <see cref="P:System.Data.DataSet.CaseSensitive" />-Objekts festgelegt oder auf <see langword="false" />, wenn die <see cref="T:System.Data.DataTable" /> unabhängig von einem <see cref="T:System.Data.DataSet" /> erstellt wurde.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft die Auflistung untergeordneter Beziehungen für diese <see cref="T:System.Data.DataTable" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Eine <see cref="T:System.Data.DataRelationCollection" />, die die untergeordneten Beziehungen für die Tabelle enthält. Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">Löscht alle Daten aus der <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">Klont die Struktur der <see cref="T:System.Data.DataTable" />, einschließlich aller Schemas und Einschränkungen der <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine neue <see cref="T:System.Data.DataTable" /> mit demselben Schema wie die aktuelle <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tritt ein, nachdem ein Wert für die angegebene <see cref="T:System.Data.DataColumn" /> in einer <see cref="T:System.Data.DataRow" /> geändert wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tritt ein, wenn ein Wert für die angegebene <see cref="T:System.Data.DataColumn" /> in einer <see cref="T:System.Data.DataRow" /> geändert wird.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">Ruft die Auflistung der Spalten ab, die zu dieser Tabelle gehören.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">Eine <see cref="T:System.Data.DataColumnCollection" />, die die Auflistung von <see cref="T:System.Data.DataColumn" />-Objekten für die Tabelle enthält. Wenn keine <see cref="T:System.Data.DataColumn" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">Berechnet den angegebenen Ausdruck für die aktuellen Zeilen, die die Filterkriterien erfüllen.</summary>
      <param name="expression" vsli:raw="The expression to compute.">Der zu berechnende Ausdruck.</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">Der Filter zum Begrenzen der Zeilen, die in dem Ausdruck ausgewertet werden.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">Ein <see cref="T:System.Object" />, das auf das Ergebnis der Berechnung festgelegt ist. Wenn der Ausdruck NULL ergibt, ist der Rückgabewert <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">Ruft die Auflistung der Einschränkungen ab, die von dieser Tabelle verwaltet werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">Eine <see cref="T:System.Data.ConstraintCollection" />, die die Auflistung von <see cref="T:System.Data.Constraint" />-Objekten für die Tabelle enthält. Wenn keine <see cref="T:System.Data.Constraint" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Kopiert die Struktur und die Daten für diese <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">Eine neue <see cref="T:System.Data.DataTable" /> mit derselben Struktur (Tabellenschemas und Einschränkungen) und denselben Daten wie diese <see cref="T:System.Data.DataTable" />.  
Wenn diese Klassen abgeleitet wurden, besteht die Kopie aus denselben abgeleiteten Klassen.  
 <see cref="M:System.Data.DataTable.Copy" /> erstellt ein neues <see cref="T:System.Data.DataTable" /> mit der gleichen Struktur und den Daten wie das ursprüngliche <see cref="T:System.Data.DataTable" />. Um die Struktur, nicht jedoch die Daten, zu neuen <see cref="T:System.Data.DataTable" />, zu kopieren, verwenden Sie <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Gibt einen <see cref="T:System.Data.DataTableReader" /> zurück, der den Daten innerhalb dieser <see cref="T:System.Data.DataTable" /> entspricht.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">Ein <see cref="T:System.Data.DataTableReader" />, der entsprechend der <see cref="T:System.Data.DataTable" />-Quellinstanz ein Resultset enthält.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Erstellt eine neue Instanz von <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The new expression.">Der neue Ausdruck.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Das <see cref="T:System.Data.DataSet" />, zu dem diese Tabelle gehört.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">Ruft eine benutzerdefinierte Sicht der Tabelle ab, wobei es sich um eine gefilterte Sicht oder eine Cursorposition handeln kann.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der mit dem <see cref="T:System.Data.DataView" /> verknüpfte <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">Ruft den Ausdruck ab, der einen Wert für die Darstellung dieser Tabelle auf der Benutzeroberfläche zurückgibt, oder legt diesen fest. Mit der <see langword="DisplayExpression" />-Eigenschaft können Sie den Namen dieser Tabelle auf einer Benutzeroberfläche anzeigen.</summary>
      <returns vsli:raw="A display string.">Eine Anzeigezeichenfolge.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Beendet die Initialisierung einer <see cref="T:System.Data.DataTable" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">Aktiviert nach dem Laden von Daten Benachrichtigungen, Indexverwaltung und Einschränkungen.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">Ruft die Auflistung benutzerdefinierter Benutzerinformationen ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">Eine <see cref="T:System.Data.PropertyCollection" />, die benutzerdefinierte Benutzerinformationen enthält.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">Überprüft, ob die Initialisierung gegenwärtig ausgeführt wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen Änderungen enthält.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">Eine Kopie der Änderungen aus dieser <see cref="T:System.Data.DataTable" /> oder <see langword="null" />, wenn keine Änderungen gefunden wurden.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen und durch <see cref="T:System.Data.DataRowState" /> gefilterten Änderungen enthält.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Eine gefilterte Kopie der <see cref="T:System.Data.DataTable" />, für die Aktionen ausgeführt werden können und die nachfolgend durch Verwendung von <see cref="T:System.Data.DataTable" /> wieder mit der <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> zusammengeführt werden kann. Wenn keine Zeilen mit dem gewünschten <see cref="T:System.Data.DataRowState" /> gefunden werden, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">Diese Methode gibt eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz mit der WSDL (Web Services Description Language) zurück, die die <see cref="T:System.Data.DataTable" /> für Webdienste beschreibt.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Die <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">Ruft ein Array von <see cref="T:System.Data.DataRow" />-Objekten ab, die Fehler enthalten.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, die Fehler enthalten.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Data.DataTable" /> erforderlich sind.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den serialisierten Daten, die der <see cref="T:System.Data.DataTable" /> zugeordnet sind.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt mit Quelle und Ziel des serialisierten Streams, der der <see cref="T:System.Data.DataTable" /> zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">Ruft den Zeilentyp ab.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ des <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">Ruft einen Wert ab, der angibt, ob in einer Zeile in einer Tabelle des <see cref="T:System.Data.DataSet" />, zu dem die Tabelle gehört, Fehler aufgetreten sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Fehler vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">Kopiert eine <see cref="T:System.Data.DataRow" /> in eine <see cref="T:System.Data.DataTable" />, wobei alle Eigenschafteneinstellungen sowie die ursprünglichen und die aktuellen Werte beibehalten werden.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">Die zu importierende <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Tritt nach dem Initialisieren der <see cref="T:System.Data.DataTable" /> auf.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataTable" /> initialisiert wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die Initialisierung der Komponente abgeschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet. Wenn die <see cref="T:System.Data.DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Ein <see cref="T:System.Data.IDataReader" />, der ein Resultset bereitstellt.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet. Wenn die <see langword="DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten gemäß dem Wert des <paramref name="loadOption" />-Parameters aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in der <see cref="T:System.Data.DataTable" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle mit dem bereitgestellten <see cref="T:System.Data.IDataReader" /> und unter Verwendung eines Fehlerbehandlungsdelegaten.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Ein <see cref="T:System.Data.IDataReader" />, der ein Resultset bereitstellt.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in der <see cref="T:System.Data.DataTable" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der aufgerufen wird, wenn beim Laden von Daten Fehler auftreten.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Sucht eine bestimmte Zeile und aktualisiert diese. Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Ein Array von Werten, mit denen die neue Zeile erstellt wird.</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um Änderungen anzunehmen, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Die neue <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">Ein Wert stimmt nicht mit dem entsprechenden Spaltentyp überein.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">Durch das Hinzufügen der Zeile wird eine Einschränkung für ungültig erklärt.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Es wird versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Sucht eine bestimmte Zeile und aktualisiert diese. Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Ein Array von Werten, mit denen die neue Zeile erstellt wird.</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">Wird verwendet, um zu bestimmen, wie die Arraywerte auf die entsprechenden Werte in einer vorhandenen Zeile angewendet werden.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Die neue <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Ruft die Gebietsschemainformationen ab, die für den Vergleich von Zeichenfolgen in der Tabelle verwendet werden, oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Eine <see cref="T:System.Globalization.CultureInfo" />, die Daten zum Computergebietsschema des Benutzers enthält. Der Standard ist die <see cref="T:System.Data.DataSet" /> des <see cref="T:System.Globalization.CultureInfo" />-Objekts (von der <see cref="P:System.Data.DataSet.Locale" />-Eigenschaft zurückgegeben), zu der die <see cref="T:System.Data.DataTable" /> gehört. Wenn die Tabelle keinem <see cref="T:System.Data.DataSet" /> angehört, wird die aktuelle <see cref="T:System.Globalization.CultureInfo" /> des Systems standardmäßig verwendet.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammen.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die <see cref="T:System.Data.DataTable" />, die mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammengeführt werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see langword="DataTable" /> zusammen, und geben Sie an, ob die Änderungen in der aktuellen <see langword="DataTable" /> beibehalten werden sollen.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Die <see langword="DataTable" />, die mit der aktuellen <see langword="DataTable" /> zusammengeführt werden soll.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um an der aktuellen <see langword="DataTable" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see langword="DataTable" /> zusammen, und geben Sie an, ob die Änderungen in der aktuellen <see langword="DataTable" /> beibehalten werden sollen und wie das fehlende Schema behandelt werden soll.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die <see cref="T:System.Data.DataTable" />, die mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammengeführt werden soll.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um an der aktuellen <see cref="T:System.Data.DataTable" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">Ruft die Ausgangsgröße für diese Tabelle ab oder legt diese fest.</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">Die Ausgangsgröße dieser Tabelle in Zeilen. Der Standardwert ist 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft den Namespace für die XML-Darstellung der in der <see cref="T:System.Data.DataTable" /> gespeicherten Daten ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Namespace von <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">Erstellt eine neue <see cref="T:System.Data.DataRow" /> mit dem Schema der Tabelle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Eine <see cref="T:System.Data.DataRow" /> mit demselben Schema wie die <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Gibt ein Array von <see cref="T:System.Data.DataRow" /> zurück.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">Ein <see cref="T:System.Int32" />-Wert, der die Größe des Arrays beschreibt.</param>
      <returns vsli:raw="The new array.">Das neue Array.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">Erstellt eine neue Zeile aus einer vorhandenen Zeile.</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">Ein <see cref="T:System.Data.DataRowBuilder" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">Eine von <see cref="T:System.Data.DataRow" /> abgeleitete Klasse.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.ColumnChanged" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis aus.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">Benachrichtigt die <see cref="T:System.Data.DataTable" />, dass eine <see cref="T:System.Data.DataColumn" /> entfernt wird.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">Die <see cref="T:System.Data.DataColumn" />, die entfernt wird.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.RowChanged" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.RowDeleted" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.RowDeleting" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.TableCleared" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.TableClearing" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataTable.TableNewRow" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataTableNewRowEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft die Auflistung übergeordneter Beziehungen für diese <see cref="T:System.Data.DataTable" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Eine <see cref="T:System.Data.DataRelationCollection" />, die die übergeordneten Beziehungen für die Tabelle enthält. Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft den Namespace für die XML-Darstellung der in der <see cref="T:System.Data.DataTable" /> gespeicherten Daten ab oder legt diesen fest.</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Das Präfix der <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">Ruft ein Array von Spalten ab, die als Primärschlüssel für die Datentabelle verwendet werden, oder legt dieses fest.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">Der Schlüssel ist ein Fremdschlüssel.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataTable" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Ein von <see cref="T:System.IO.Stream" /> abgeleitetes Objekt.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Liest mit dem angegebenen <see cref="T:System.Data.DataTable" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">Der <see cref="T:System.IO.TextReader" />, der verwendet wird, um die Daten zu lesen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Liest das XML-Schema und die XML-Daten in die <see cref="T:System.Data.DataTable" /> aus der angegebenen Datei.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">Der Name der Datei, aus der die Daten gelesen werden sollen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Liest das XML-Schema und die XML-Daten mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">Der <see cref="T:System.Xml.XmlReader" />, der verwendet wird, um die Daten zu lesen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">Liest ein XML-Schema mit dem angegebenen Stream in die <see cref="T:System.Data.DataTable" />.</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">Der zum Lesen des Schemas verwendete Stream.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Liest ein XML-Schema mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">Der zum Lesen der Schemainformationen verwendete <see cref="T:System.IO.TextReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Liest ein XML-Schema aus der angegebenen Datei in die <see cref="T:System.Data.DataTable" />.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">Der Name der Datei, aus der die Schemainformationen gelesen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Liest ein XML-Schema mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">Der zum Lesen der Schemainformationen verwendete <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">Liest aus einem XML-Stream.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Ein <see cref="T:System.Xml.XmlReader" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Führt einen Rollback aller Änderungen durch, die an der Tabelle seit dem Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">Ruft das Serialisierungsformat ab oder legt dieses fest.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Eine <see cref="T:System.Data.SerializationFormat" />-Enumeration, die <see langword="Binary" />- oder <see langword="Xml" />-Serialisierung angibt.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">Setzt die <see cref="T:System.Data.DataTable" /> auf den ursprünglichen Zustand zurück. Zurücksetzen entfernt alle Daten, Indizes, Beziehungen und Spalten der Tabelle. Wenn ein DataSet ein DataTable umfasst, ist die Tabelle noch ein Teil des DataSet, nachdem die Tabelle zurückgesetzt ist.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">Tritt auf, nachdem eine <see cref="T:System.Data.DataRow" /> erfolgreich geändert wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">Tritt ein, wenn eine <see cref="T:System.Data.DataRow" /> geändert wird.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">Tritt ein, nachdem eine Zeile in der Tabelle gelöscht wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">Tritt ein, bevor eine Zeile in der Tabelle gelöscht wird.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">Ruft die Auflistung der Zeilen ab, die zu dieser Tabelle gehören.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Eine <see cref="T:System.Data.DataRowCollection" />, die <see cref="T:System.Data.DataRow" />-Objekte enthält, andernfalls ein NULL-Wert, wenn keine <see cref="T:System.Data.DataRow" />-Objekte vorhanden sind.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab, die den Filterkriterien entsprechen.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Die beim Filtern der Zeilen zu verwendenden Kriterien. Beispiele zum Filtern von Zeilen finden Sie unter DataView RowFilter Syntax [C#].</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte, die die Filterkriterien erfüllen, in der angegebenen Sortierreihenfolge ab.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Die beim Filtern der Zeilen zu verwendenden Kriterien. Beispiele zum Filtern von Zeilen finden Sie unter DataView RowFilter Syntax [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Eine Zeichenfolge, die die Spalte und die Sortierrichtung angibt.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, die dem Filterausdruck entsprechen.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab, die die Filterkriterien in der Sortierreihenfolge erfüllen und zum angegebenen Zustand passen.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Die beim Filtern der Zeilen zu verwendenden Kriterien. Beispiele zum Filtern von Zeilen finden Sie unter DataView RowFilter Syntax [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Eine Zeichenfolge, die die Spalte und die Sortierrichtung angibt.</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataViewRowState" />-Werte.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft eine <see cref="T:System.ComponentModel.ISite" /> für den <see cref="T:System.Data.DataTable" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ein <see cref="T:System.ComponentModel.ISite" /> für das <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung eine Auflistung von <see cref="T:System.Collections.IList" />-Objekten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">Eine <see cref="T:System.Collections.IList" />, die an eine Datenquelle eines Objekts gebunden werden kann.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="An XmlReader.">Ein XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="An XmlWriter.">Ein XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Tritt ein, nachdem eine <see cref="T:System.Data.DataTable" /> gelöscht wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Tritt ein, wenn eine <see cref="T:System.Data.DataTable" /> gelöscht wird.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft den Namen der <see cref="T:System.Data.DataTable" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Name des <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">Es wird <see langword="null" /> oder eine leere Zeichenfolge ("") übergeben, und diese Tabelle gehört zu einer Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">Die Tabelle gehört zu einer Auflistung, die bereits eine Tabelle mit demselben Namen enthält. (Beim Vergleich wird die Groß- und Kleinschreibung berücksichtigt.)</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">Tritt ein, wenn eine neue <see cref="T:System.Data.DataRow" /> eingefügt wird.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">Ruft den <see cref="P:System.Data.DataTable.TableName" /> und den <see cref="P:System.Data.DataTable.DisplayExpression" />, sofern vorhanden, als verkettete Zeichenfolge ab.</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">Eine Zeichenfolge, die aus dem <see cref="P:System.Data.DataTable.TableName" />-Wert und dem <see cref="P:System.Data.DataTable.DisplayExpression" />-Wert besteht.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.Stream" /> im XML-Format.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Der Stream, in den die Daten geschrieben werden.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.Stream" /> im XML-Format. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Der Stream, in den die Daten geschrieben werden.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Der Stream, in den die Daten geschrieben werden.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Der Stream, in den die Daten geschrieben werden.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> im XML-Format.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> im XML-Format. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">Der zum Schreiben des Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">Der zum Schreiben des Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML mit der angegebenen Datei.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Die Datei, in die die XML-Daten geschrieben werden sollen.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML mit der angegebenen Datei. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Die Datei, in die die XML-Daten geschrieben werden sollen.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für das <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Der Name der Datei, in die die Daten geschrieben werden.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für das <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Der Name der Datei, in die die Daten geschrieben werden.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.Xml.XmlWriter" /> im XML-Format.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.Xml.XmlWriter" /> im XML-Format.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in den angegebenen Stream.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Der Stream, in den das XML-Schema geschrieben wird.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in den angegebenen Stream. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Der Stream, in den das XML-Schema geschrieben wird.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">Der <see cref="T:System.IO.TextWriter" />, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" />. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">Der <see cref="T:System.IO.TextWriter" />, mit dem geschrieben werden soll.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in die angegebene Datei.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Der Name der zu verwendenden Datei.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in die angegebene Datei. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Der Name der zu verwendenden Datei.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Stellt Daten für die <see cref="M:System.Data.DataTable.Clear" />-Methode bereit.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTableClearEventArgs" />-Klasse.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">Die <see cref="T:System.Data.DataTable" />, deren Zeilen gelöscht werden.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">Ruft die Tabelle ab, deren Zeilen gelöscht werden.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">Die <see cref="T:System.Data.DataTable" />, deren Zeilen gelöscht werden.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">Ruft den Namen der Tabelle ab, deren Zeilen gelöscht werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">Ein <see cref="T:System.String" />, der den Tabellennamen angibt.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">Ruft den Namespace der Tabelle ab, deren Zeilen gelöscht werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">Ein <see cref="T:System.String" />, der den Namespacenamen angibt.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Stellt die Methode dar, die die <see cref="M:System.Data.DataTable.Clear" />-Methode behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Stellt die Auflistung von Tabellen für das <see cref="T:System.Data.DataSet" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">Erstellt ein neues <see cref="T:System.Data.DataTable" />-Objekt mit einem Standardnamen und fügt es der Auflistung hinzu.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">Fügt der Auflistung den angegebenen <see langword="DataTable" /> hinzu.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">Das hinzuzufügende <see langword="DataTable" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">Der für die Tabelle angegebene Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">Die Tabelle gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">Eine Tabelle in der Auflistung hat bereits denselben Namen. Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Erstellt ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen und fügt es der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Name, den die erstellte <see cref="T:System.Data.DataTable" /> erhalten soll.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Eine Tabelle in der Auflistung hat bereits denselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Erstellt ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen und fügt es der Auflistung hinzu.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Name, den die erstellte <see cref="T:System.Data.DataTable" /> erhalten soll.</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Namespace, den die erstellte <see cref="T:System.Data.DataTable" /> erhalten soll.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der neu erstellte <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Eine Tabelle in der Auflistung hat bereits denselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">Kopiert die Elemente des angegebenen <see cref="T:System.Data.DataTable" />-Arrays an das Ende der Auflistung.</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">Das Array von <see cref="T:System.Data.DataTable" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">Überprüft, ob das angegebene <see cref="T:System.Data.DataTable" />-Objekt aus der Auflistung entfernt werden kann.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">Die <see langword="DataTable" /> in der Auflistung, für die die Überprüfung durchgeführt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Tabelle entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Löscht alle <see cref="T:System.Data.DataTable" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Tritt ein, wenn die <see cref="T:System.Data.DataTableCollection" /> aufgrund des Hinzufügens oder Entfernens von <see cref="T:System.Data.DataTable" />-Objekten geändert wurde.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Tritt ein, während die <see cref="T:System.Data.DataTableCollection" /> aufgrund des Hinzufügens oder Entfernens von <see cref="T:System.Data.DataTable" />-Objekten geändert wird.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen in der Auflistung vorhanden ist.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Tabelle vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen und dem angegebenen Tabellennamespace in der Auflistung vorhanden ist.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Tabelle vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">Kopiert alle Elemente der aktuellen <see cref="T:System.Data.DataTableCollection" /> in ein eindimensionales <see cref="T:System.Array" />, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">Das eindimensionale <see cref="T:System.Array" />, in das die Elemente des aktuellen <see cref="T:System.Data.DataTableCollection" />-Objekts kopiert werden sollen.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Der Index des Ziel-<see cref="T:System.Array" />, an dem mit dem Kopieren begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Ruft den Index des angegebenen <see cref="T:System.Data.DataTable" />-Objekts ab.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">Die zu suchende <see langword="DataTable" />.</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">Der nullbasierte Index der angegebenen Tabelle oder -1, wenn das Element in der Auflistung nicht gefunden wurde.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Ruft den Index des <see cref="T:System.Data.DataTable" />-Objekts mit dem angegebenen Namen in der Auflistung ab.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">Der Name des zu suchenden <see langword="DataTable" />-Objekts.</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Der nullbasierte Index der <see langword="DataTable" /> mit dem angegebenen Namen, oder -1, wenn die Tabelle in der Auflistung nicht vorhanden ist.  
   
 Gibt -1 zurück, wenn zwei oder mehr Tabellen den gleichen Namen besitzen, aber über unterschiedliche Namespaces verfügen. Der Aufruf führt zu einem Fehler, wenn beim Zuordnen eines Tabellenamen zu genau einer Tabelle Mehrdeutigkeiten auftreten.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Ruft den Index des angegebenen <see cref="T:System.Data.DataTable" />-Objekts in der Auflistung ab.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />-Objekts.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Der nullbasierte Index der <see cref="T:System.Data.DataTable" /> mit dem angegebenen Namen, oder -1, wenn die Tabelle in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">Ruft das <see cref="T:System.Data.DataTable" />-Objekt am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Der nullbasierte Index der zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Ein <see cref="T:System.Data.DataTable" /> mit dem angegebenen Index; andernfalls <see langword="null" /> , wenn <see cref="T:System.Data.DataTable" /> der nicht vorhanden ist.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Ruft das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen ab.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Der Name des zu suchenden <see langword="DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> mit dem angegebenen Namen oder <see langword="null" />, wenn <see cref="T:System.Data.DataTable" /> nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">Ruft das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen im angegebenen Namespace ab.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Der Name des zu suchenden <see langword="DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> mit dem angegebenen Namen oder <see langword="null" />, wenn <see cref="T:System.Data.DataTable" /> nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">Entfernt das angegebene <see cref="T:System.Data.DataTable" />-Objekt aus der Auflistung.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">Das zu entfernende <see langword="DataTable" />-Element.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">Der für die Tabelle angegebene Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">Die Tabelle gehört nicht zu dieser Auflistung.  

oder -  

 Die Tabelle ist Teil einer Beziehung.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Entfernt das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">Der Name des zu entfernenden <see cref="T:System.Data.DataTable" />-Objekts.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">Die Auflistung enthält keine Tabelle mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Entfernt das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">Der Name des zu entfernenden <see cref="T:System.Data.DataTable" />-Objekts.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">Die Auflistung enthält keine Tabelle mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">Entfernt das <see cref="T:System.Data.DataTable" />-Objekt am angegebenen Index aus der Auflistung.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">Der Index der zu entfernenden <see langword="DataTable" />-Klasse.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">Die Auflistung enthält keine Tabelle am angegebenen Index.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">Definiert die Erweiterungsmethoden der <see cref="T:System.Data.DataTable" />-Klasse. <see cref="T:System.Data.DataTableExtensions" /> ist eine statische Klasse.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Erstellt ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt und gibt es zurück.</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">Die Quell-<see cref="T:System.Data.DataTable" />, aus der der LINQ-aktivierte <see cref="T:System.Data.DataView" /> erstellt wird.</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">Erstellt ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt, das die LINQ to DataSet-Abfrage darstellt, und gibt es zurück.</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">Die LINQ to DataSet-Quellabfrage, aus der der LINQ-aktivierte <see cref="T:System.Data.DataView" /> erstellt wird.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Gibt ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt zurück, bei dem der generische Parameter <paramref name="T" /> gleich <see cref="T:System.Data.DataRow" /> ist. Dieses Objekt kann in einem LINQ-Ausdruck oder einer Methodenabfrage verwendet werden.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">Die Quell-<see cref="T:System.Data.DataTable" />, die als aufzählbar festgelegt werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Die Quell <see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die Kopien der <see cref="T:System.Data.DataRow" />-Objekte enthält, wenn ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt vorhanden ist, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Eine <see cref="T:System.Data.DataTable" />, die die Eingabesequenz als den Typ von <see cref="T:System.Data.DataRow" />-Objekten enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, und es kann keine neue Tabelle erstellt werden.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Kopiert <see cref="T:System.Data.DataRow" />-Objekte in die angegebene <see cref="T:System.Data.DataTable" />, bei einem <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> aufweist.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Das Ziel-<see cref="T:System.Data.DataTable" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Eine <see cref="T:System.Data.LoadOption" />-Enumeration, die die <see cref="T:System.Data.DataTable" />-Ladeoptionen angibt.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die kopierten <see cref="T:System.Data.DataRow" />-Objekte stimmen nicht mit dem Schema der Ziel-<see cref="T:System.Data.DataTable" /> überein.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, oder die Ziel-<see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Kopiert <see cref="T:System.Data.DataRow" />-Objekte in die angegebene <see cref="T:System.Data.DataTable" />, bei einem <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> aufweist.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Das Ziel-<see cref="T:System.Data.DataTable" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Eine <see cref="T:System.Data.LoadOption" />-Enumeration, die die <see cref="T:System.Data.DataTable" />-Ladeoptionen angibt.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der die Methode darstellt, die einen Fehler behandelt.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Die kopierten <see cref="T:System.Data.DataRow" />-Objekte stimmen nicht mit dem Schema der Ziel-<see cref="T:System.Data.DataTable" /> überein.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, oder die Ziel-<see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  

oder - 
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  

oder - 
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Stellt Daten für die <see cref="M:System.Data.DataTable.NewRow" />-Methode bereit.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">Initialisiert eine neue Instanz von <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">Die <see cref="T:System.Data.DataRow" />, die hinzugefügt wird.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">Ruft die Zeile ab, die hinzugefügt wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">Die <see cref="T:System.Data.DataRow" />, die hinzugefügt wird.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Stellt die Methode dar, die die <see cref="M:System.Data.DataTable.NewRow" />-Methode behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Data.DataTableNewRowEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">Der <see cref="T:System.Data.DataTableReader" /> ruft den Inhalt eines oder mehrerer <see cref="T:System.Data.DataTable" />-Objekte in Form eines oder mehrerer schreibgeschützter vorwärts gerichteter Resultsets ab.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Initialisiert unter Verwendung von Daten aus der bereitgestellten <see cref="T:System.Data.DataTableReader" /> eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">Die <see cref="T:System.Data.DataTable" />, von der der neue <see cref="T:System.Data.DataTableReader" /> sein Resultset erhält.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTableReader" />-Klasse unter Verwendung des bereitgestellten Arrays von <see cref="T:System.Data.DataTable" />-Objekten.</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">Das Array von <see cref="T:System.Data.DataTable" />-Objekten, das die Ergebnisse für das neue <see cref="T:System.Data.DataTableReader" />-Objekt bereitstellt.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Schließt den aktuellen <see cref="T:System.Data.DataTableReader" />.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Die Tiefe der Schachtelung für die aktuelle Zeile des <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">Die Tiefe der Schachtelung für die aktuelle Zeile, immer 0 (null).</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">Gibt die Anzahl der Spalten in der aktuellen Zeile zurück.</summary>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">Wenn die Position außerhalb eines gültigen Resultsets liegt, 0 (null), andernfalls die Anzahl der Spalten in der aktuellen Zeile.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, die Feldanzahl in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> abzurufen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Ruft den Wert der angegebenen Spalte als <see cref="T:System.Boolean" /> ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">Die angegebene Spalte enthält keinen <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Ruft den Wert der angegebenen Spalte als ein Byte ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">Die angegebene Spalte enthält kein Byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">Liest beginnend am jeweiligen Pufferoffset einen Stream von Bytes aus dem angegebenen Spaltenoffset als Array in den Puffer.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Der Index in dem Feld, in dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Der Puffer, in den der Bytestream gelesen werden soll.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Der Index innerhalb des Puffers, an dem mit dem Platzieren der Daten begonnen werden soll.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Die maximale Länge, die in den Puffer kopiert werden soll.</param>
      <returns vsli:raw="The actual number of bytes read.">Die tatsächlich gelesene Anzahl von Bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">Die angegebene Spalte enthält kein Bytearray.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">Ruft den Wert der angegebenen Spalte als Zeichen ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the column.">Der Wert der Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">Das angegebene Feld enthält kein Zeichen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Gibt den Wert der angegebenen Spalte als Zeichenarray zurück.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Der Index im Feld, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">Der Puffer, in den der Zeichenstream gelesen werden soll.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Der Index innerhalb des Puffers, an dem mit dem Platzieren der Daten begonnen werden soll.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Die maximale Länge, die in den Puffer kopiert werden soll.</param>
      <returns vsli:raw="The actual number of characters read.">Die tatsächlich gelesene Anzahl von Zeichen.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">Die angegebene Spalte enthält kein Zeichenarray.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">Ruft eine Zeichenfolge ab, die den Datentyp der angegebenen Spalte darstellt.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="A string representing the column's data type.">Eine Zeichenfolge, die den Datentyp der Spalte darstellt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">Die angegebene Spalte enthält keinen DateTime-Wert.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Die angegebene Spalte enthält keinen <see langword="Decimal" />-Wert.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">Ruft den Wert der Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">Die angegebene Spalte enthält keine Gleitkommazahl mit doppelter Genauigkeit.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">Gibt einen Enumerator zurück, der zum Durchlaufen der Elementauflistung verwendet werden kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das die Elementauflistung darstellt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Ruft den <see cref="T:System.Type" /> ab, der den Datentyp des Objekts darstellt.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the column.">Der Wert der Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">Die angegebene Spalte enthält keine Gleitkommazahl mit einfacher Genauigkeit.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">Ruft den Wert der angegebenen Spalte als global eindeutigen Bezeichner (Globally Unique Identifier, GUID) ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">Die angegebene Spalte enthält keine GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">Die angegebene Spalte enthält keine 16-Bit-Ganzzahl mit Vorzeichen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Ruft den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen und einer Länge von 32 Bit ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">Die angegebene Spalte enthält keinen 32-Bit-Ganzzahlwert mit Vorzeichen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">Die angegebene Spalte enthält keine ganze Zahl mit Vorzeichen und einer Länge von 64 Bit.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ruft den Wert der angegebenen Spalte als <see cref="T:System.String" /> ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="The name of the specified column.">Der Name der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">Ruft bei angegebenem Spaltennamen die Ordnungszahl der Spalte ab.</summary>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">Ruft den Typ der angegebenen Spalte im anbieterspezifischen Format ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">Ruft den Wert der angegebenen Spalte im anbieterspezifischen Format ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">Die nullbasierte Anzahl der Spalten, deren Wert abgerufen wird.</param>
      <returns vsli:raw="The value of the specified column in provider-specific format.">Ruft den Wert der angegebenen Spalte im anbieterspezifischen Format ab.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Füllt das angegebene Array mit anbieterspezifischen Typinformationen für alle Spalten im <see cref="T:System.Data.DataTableReader" /> auf.</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Ein Objektarray, das mit Typinformationen für die Spalten im <see cref="T:System.Data.DataTableReader" /> aufgefüllt werden soll.</param>
      <returns vsli:raw="The number of column values copied into the array.">Die Anzahl der in das Array kopierten Spaltenwerte.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.DataTableReader" /> beschreibt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Der <see cref="T:System.Data.DataTableReader" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">Ruft den Wert der angegebenen Spalte als eine Zeichenfolge ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="The value of the specified column.">Der Wert der angegebenen Spalte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">Die angegebene Spalte enthält keine Zeichenfolge.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">Ruft den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">Der Wert der angegebenen Spalte. Die Methode gibt für Spalten mit NULL-Werten <see langword="DBNull" /> zurück.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, die Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">Füllt ein Array von Objekten mit den Spaltenwerten der aktuellen Zeile auf.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Ein Array vom Typ <see cref="T:System.Object" />, in das die Spaltenwerte aus dem <see cref="T:System.Data.DataTableReader" /> kopiert werden sollen.</param>
      <returns vsli:raw="The number of column values copied into the array.">Die Anzahl der in das Array kopierten Spaltenwerte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Data.DataTableReader" /> eine oder mehrere Zeilen enthält.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Data.DataTableReader" /> eine oder mehrere Zeilen enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, Informationen über einen geschlossenen <see cref="T:System.Data.DataTableReader" /> abzurufen.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Data.DataTableReader" /> synchronisiert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn der <see cref="T:System.Data.DataTableReader" /> geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Spaltenwert <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">Ruft bei angegebener Spaltenordnungszahl den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the specified column in its native format.">Der Wert der angegebenen Spalte im systemeigenen Format.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">Ruft bei angegebenem Spaltennamen den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
      <param name="name" vsli:raw="The name of the column.">Der Name der Spalte.</param>
      <returns vsli:raw="The value of the specified column in its native format.">Der Wert der angegebenen Spalte im systemeigenen Format.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">Setzt den <see cref="T:System.Data.DataTableReader" /> auf das nächste Resultset, sofern vorhanden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein anderes Resultsets vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Es wurde versucht, innerhalb eines geschlossenen <see cref="T:System.Data.DataTableReader" /> zu navigieren.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">Setzt den <see cref="T:System.Data.DataTableReader" /> auf den nächsten Datensatz.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine andere zu lesende Zeile vorhanden war, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">Ruft die Anzahl der durch die Ausführung der SQL-Anweisung eingefügten, geänderten oder gelöschten Zeilen ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">Der <see cref="T:System.Data.DataTableReader" /> unterstützt diese Eigenschaft nicht und gibt immer 0 zurück.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">Stellt eine an Daten bindbare, benutzerdefinierte Ansicht einer <see cref="T:System.Data.DataTable" /> zum Sortieren, Filtern, Durchsuchen, Bearbeiten und Navigieren dar. <see cref="T:System.Data.DataView" /> speichert keine Daten, sondern stellt stattdessen eine verbundene Ansicht der entsprechenden <see cref="T:System.Data.DataTable" /> dar. Änderungen an den Daten von <see cref="T:System.Data.DataView" /> wirken sich auf <see cref="T:System.Data.DataTable" /> aus. Änderungen an den Daten von <see cref="T:System.Data.DataTable" /> wirken sich auf alle <see cref="T:System.Data.DataView" />-Ansichten aus, die dieser zugeordnet sind.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataView" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataView" />-Klasse mit der angegebenen <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ein <see cref="T:System.Data.DataTable" />, das zu <see cref="T:System.Data.DataView" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataView" />-Klasse mit den angegebenen <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> und <see cref="T:System.Data.DataViewRowState" />.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ein <see cref="T:System.Data.DataTable" />, das zu <see cref="T:System.Data.DataView" /> hinzugefügt werden soll.</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ein <see cref="P:System.Data.DataView.RowFilter" />, das auf <see cref="T:System.Data.DataView" /> angewendet werden soll.</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ein <see cref="P:System.Data.DataView.Sort" />, das auf <see cref="T:System.Data.DataView" /> angewendet werden soll.</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ein <see cref="T:System.Data.DataViewRowState" />, das auf <see cref="T:System.Data.DataView" /> angewendet werden soll.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Fügt <see cref="T:System.Data.DataView" /> eine neue Zeile hinzu.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">Ein neues <see cref="T:System.Data.DataRowView" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">Ruft einen Wert ab, der angibt, ob Löschungen zulässig sind, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Löschungen zulässig sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">Ruft einen Wert ab, der angibt, ob Bearbeitungen zulässig sind, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Bearbeitungen zulässig sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">Ruft einen Wert ab, der angibt, ob die neuen Zeilen mithilfe der <see cref="M:System.Data.DataView.AddNew" />-Methode hinzugefügt werden können, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zeilen hinzugefügt werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob die Standardsortierung verwendet werden soll, oder legt diesen Wert fest. Die Standardsortierung erfolgt nach allen Primärschlüsseln (in aufsteigender Reihenfolge), wie durch <see cref="P:System.Data.DataTable.PrimaryKey" /> angegeben.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Standardsortierung verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Startet die Initialisierung einer <see cref="T:System.Data.DataView" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Schließt den <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">Tritt auf, nachdem eine <see cref="T:System.Data.DataColumnCollection" /> erfolgreich geändert wurde.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">Kopiert die Elemente in ein Array. Nur für Web Forms-Schnittstellen.</summary>
      <param name="array" vsli:raw="array to copy into.">Array, in das kopiert werden soll.</param>
      <param name="index" vsli:raw="index to start at.">Index, ab dem begonnen wird.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">Ruft die Anzahl der Datensätze in <see cref="T:System.Data.DataView" /> ab, nachdem <see cref="P:System.Data.DataView.RowFilter" /> und <see cref="P:System.Data.DataView.RowStateFilter" /> angewendet wurden.</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Die Anzahl der Datensätze in der <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">Ruft den <see cref="T:System.Data.DataViewManager" /> ab, der dieser Ansicht zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">Der <see langword="DataViewManager" />, der diese Ansicht erstellt hat. Ist dies die standardmäßige <see cref="T:System.Data.DataView" /> für eine <see cref="T:System.Data.DataTable" />, gibt die <see langword="DataViewManager" />-Eigenschaft den standardmäßigen <see langword="DataViewManager" /> für den <see langword="DataSet" /> zurück. Wenn die <see langword="DataView" /> hingegen ohne <see langword="DataViewManager" /> erstellt wurde, ist diese Eigenschaft <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">Löscht eine Zeile am angegebenen Index.</summary>
      <param name="index" vsli:raw="The index of the row to delete.">Der Index der zu löschenden Zeile.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Löscht (außer den Speicherressourcen) alle Ressourcen, die vom <see cref="T:System.Data.DataView" />-Objekt verwendet werden.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Beendet die Initialisierung einer <see cref="T:System.Data.DataView" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">Stellt fest, ob die angegebenen <see cref="T:System.Data.DataView" />-Instanzen als gleich betrachtet werden.</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.DataView" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden <see cref="T:System.Data.DataView" />-Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">Sucht eine Zeile in der <see cref="T:System.Data.DataView" /> anhand des angegebenen Sortierschlüsselwerts.</summary>
      <param name="key" vsli:raw="The object to search for.">Das Objekt, nach dem gesucht werden soll.</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">Der Index der Zeile in der <see cref="T:System.Data.DataView" />, die den angegebenen Sortierschlüsselwert enthält. Andernfalls -1, wenn der Sortierschlüsselwert nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">Sucht eine Zeile in der <see cref="T:System.Data.DataView" /> anhand der angegebenen Sortierschlüsselwerte.</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ein Array von Werten als <see cref="T:System.Object" />-Typ.</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">Der Index der Position der ersten Zeile in der <see cref="T:System.Data.DataView" />, die mit den angegebenen Sortierschlüsselwerten übereinstimmt, andernfalls -1, wenn keine übereinstimmenden Sorrtierschlüsselwerte vorhanden sind.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Gibt ein Array von <see cref="T:System.Data.DataRowView" />-Objekten zurück, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen.</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Der als <see cref="T:System.Object" /> typisierte Spaltenwert, nach dem gesucht wird.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Ein Array von <see langword="DataRowView" />-Objekten, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen. Wenn keine Zeilen die angegebenen Sortierschlüsselwerte enthalten, ist dies ein leeres <see langword="DataRowView" />-Array.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Gibt ein Array von <see cref="T:System.Data.DataRowView" />-Objekten zurück, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen.</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Ein Array von Spaltenwerten als <see cref="T:System.Object" />-Typ, nach denen gesucht werden soll.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Ein Array von <see langword="DataRowView" />-Objekten, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen. Wenn keine Zeilen die angegebenen Sortierschlüsselwerte enthalten, ist dies ein leeres <see langword="DataRowView" />-Array.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ruft einen Enumerator für diese <see cref="T:System.Data.DataView" /> ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">Ein <see cref="T:System.Collections.IEnumerator" /> zum Navigieren in der Liste.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">Tritt auf, nachdem eine <see cref="T:System.Data.DataView" /> erfolgreich geändert wurde.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">Tritt auf, wenn die Initialisierung von <see cref="T:System.Data.DataView" /> abgeschlossen ist.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">Ruft einen Wert ab, der angibt, ob die Komponente initialisiert wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die Komponente die Initialisierung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob die Datenquelle aktuell geöffnet ist und Ansichten der Daten in der <see cref="T:System.Data.DataTable" /> projiziert.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Quelle geöffnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">Ruft eine Datenzeile aus einer angegebenen Tabelle ab.</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Index eines Datensatzes in der <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">Eine Ansicht (<see cref="T:System.Data.DataRowView" />) der von Ihnen gewünschten Zeile.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">Tritt auf, wenn die von <see cref="T:System.Data.DataView" /> verwaltete Liste geändert wird.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataView.ListChanged" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Öffnet eine <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">Nur für die interne Verwendung vorgesehen.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ruft den Ausdruck ab, mit dem die in <see cref="T:System.Data.DataView" /> anzuzeigenden Zeilen gefiltert werden, oder legt diesen fest.</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">Eine Zeichenfolge, die angibt, wie Zeilen gefiltert werden sollen.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Dient zum Abrufen oder Festlegen des Zeilenstatusfilters, der in der <see cref="T:System.Data.DataView" /> verwendet wird.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Einer der <see cref="T:System.Data.DataViewRowState" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ruft die Sortierspalte(n) und die Sortierreihenfolge für die <see cref="T:System.Data.DataView" /> ab oder legt sie fest.</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">Eine Zeichenfolge, die den Spaltennamen gefolgt von "ASC" (aufsteigend) oder "DESC" (absteigend) enthält. Spalten werden standardmäßig in aufsteigender Reihenfolge sortiert. Mehrere Spalten können durch Kommas getrennt werden.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Ein <see cref="T:System.Int32" />-Wert.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">Ein <see cref="T:System.Object" />-Wert, der eingefügt werden soll.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Ein <see cref="T:System.Int32" />-Wert.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Ein <see cref="T:System.Object" />-Wert.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Ein <see cref="T:System.Int32" />-Wert.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="The item added to the list.">Das der Liste hinzugefügte Element.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.ListSortDirection" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />-Objekt.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die in der Sammlung als bindbar gesucht werden. Dieser Wert kann <see langword="null" /> sein.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft die Quell-<see cref="T:System.Data.DataTable" /> ab oder legt sie fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">Eine <see cref="T:System.Data.DataTable" />, die die Daten für diese Ansicht bereitstellt.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Wenn auf <see langword="true" /> festgelegt, enthält die zurückgegebene <see cref="T:System.Data.DataTable" /> Zeilen mit unterschiedlichen Werten für alle Spalten. Der Standardwert ist <see langword="false" />sein.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Ein Zeichenfolgenarray mit einer Liste der Spaltennamen, die in der zurückgegebenen <see cref="T:System.Data.DataTable" /> enthalten sein sollen. Die <see cref="T:System.Data.DataTable" /> enthält die angegebenen Spalten in der Reihenfolge, in der sie in diesem Array angezeigt werden.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Name der zurückgegebenen <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Der Name der zurückgegebenen <see cref="T:System.Data.DataTable" />.</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Wenn auf <see langword="true" /> festgelegt, enthält die zurückgegebene <see cref="T:System.Data.DataTable" /> Zeilen mit unterschiedlichen Werten für alle Spalten. Der Standardwert ist <see langword="false" />sein.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Ein Zeichenfolgenarray mit einer Liste der Spaltennamen, die in der zurückgegebenen <see cref="T:System.Data.DataTable" /> enthalten sein sollen. Die <see langword="DataTable" /> enthält die angegebenen Spalten in der Reihenfolge, in der sie in diesem Array angezeigt werden.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">Nur für die interne Verwendung vorgesehen.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">Nur für die interne Verwendung vorgesehen.</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">Nur für die interne Verwendung vorgesehen.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Enthält eine standardmäßige <see cref="T:System.Data.DataViewSettingCollection" /> für jede <see cref="T:System.Data.DataTable" /> in einem <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataViewManager" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataViewManager" />-Klasse für den angegebenen <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Der Name des zu verwendenden <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Erstellt einen <see cref="T:System.Data.DataView" /> für das angegebene <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Der Name der <see cref="T:System.Data.DataTable" />, die in der <see cref="T:System.Data.DataView" /> verwendet werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Ein <see cref="T:System.Data.DataView" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Ruft den für das <see cref="T:System.Data.DataSet" /> zu verwendenden <see cref="T:System.Data.DataViewManager" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">Ruft einen Wert ab, der für die Codedauerhaftigkeit verwendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="A value that is used for code persistence.">Ein Wert, der für die Codedauerhaftigkeit verwendet wird.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft die <see cref="T:System.Data.DataViewSettingCollection" /> für jede <see cref="T:System.Data.DataTable" /> im <see cref="T:System.Data.DataSet" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">Eine <see cref="T:System.Data.DataViewSettingCollection" /> für jede <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Tritt ein, nachdem einer <see cref="T:System.Data.DataView" /> eine Zeile hinzugefügt bzw. eine Zeile aus dieser gelöscht wurde.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">Löst das <see cref="E:System.Data.DataViewManager.ListChanged" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Löst ein <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />-Ereignis aus, wenn eine <see cref="T:System.Data.DataRelation" /> zur <see cref="T:System.Data.DataRelationCollection" /> hinzugefügt bzw. aus dieser entfernt wird.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <returns vsli:raw="The position into which the new element was inserted.">Die Position, an der das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">Ermittelt, ob die <see cref="T:System.Collections.IList" /> einen bestimmten Wert enthält.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Object" /> in der <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.IList" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Die <see cref="T:System.Object" />, die in die <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Der <see cref="T:System.Object" />, der aus der <see cref="T:System.Collections.IList" /> entfernt werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">Entfernt das <see cref="T:System.Collections.IList" />-Element am angegebenen Index.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Der nullbasierte Index des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">Fügt den Indizes, die für die Suche verwendet werden, den <see cref="T:System.ComponentModel.PropertyDescriptor" /> hinzu.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der den Indizes hinzugefügt werden soll, die für die Suche verwendet werden.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">Sortiert die Liste entsprechend einem <see cref="T:System.ComponentModel.PropertyDescriptor" /> und einer <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, nach dem sortiert werden soll.</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Gibt den Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> zurück.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, in dem gesucht werden soll.</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">Der Wert des property-Parameters, nach dem gesucht werden soll.</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Der Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">Entfernt den <see cref="T:System.ComponentModel.PropertyDescriptor" /> aus den Indizes, die für die Suche verwendet werden.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der aus den für die Suche verwendeten Indizes entfernt werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Entfernt alle Sortierungen, die unter Verwendung von <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> angewendet wurden.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">Gibt die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse zurück, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die in der Sammlung als bindbar gesucht werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">Die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">Gibt den Namen der Liste zurück.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, für die der Listenname zurückgegeben wird. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The name of the list.">Der Name der Liste.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Löst ein <see cref="E:System.Data.DataTableCollection.CollectionChanged" />-Ereignis aus, wenn eine <see cref="T:System.Data.DataTable" /> zur <see cref="T:System.Data.DataTableCollection" /> hinzugefügt bzw. aus dieser entfernt wird.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Beschreibt die Version der Daten in einer <see cref="T:System.Data.DataRow" />-Klasse.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">Eine neue Zeile.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">Aktuelle Zeilen, einschließlich unveränderter, neuer und geänderter Zeilen. <see cref="T:System.Data.DataViewRowState" /> ist standardmäßig auf CurrentRows festgelegt.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">Eine gelöschte Zeile.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">Eine aktuelle Version von ursprünglichen Daten, die geändert wurden (siehe <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">Die ursprüngliche Version der geänderten Daten. (Obwohl die Daten inzwischen geändert wurden, ist sie als <see langword="ModifiedCurrent" /> verfügbar).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">Keine</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">Ursprüngliche Zeilen, einschließlich unveränderter und gelöschter Zeilen.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">Eine nicht geänderte Zeile.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Stellt die Standardeinstellungen für <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> und <see cref="P:System.Data.DataView.Table" /> für DataViews dar, die vom <see cref="T:System.Data.DataViewManager" /> erstellt wurden.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">Ruft einen Wert ab, der angibt, ob die Standardsortierung verwendet werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Standardsortierung verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">Ruft das <see cref="T:System.Data.DataViewManager" /> ab, das diese <see cref="T:System.Data.DataViewSetting" /> enthält.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Ein <see cref="T:System.Data.DataViewManager" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">Ruft den Filter ab, der in der <see cref="T:System.Data.DataView" /> angewendet werden soll, oder legt diesen fest. Siehe <see cref="P:System.Data.DataView.RowFilter" /> für ein Codebeispiel mit RowFilter.</summary>
      <returns vsli:raw="A string that contains the filter to apply.">Eine Zeichenfolge, die den anzuwendenden Filter enthält.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob Current, Deleted, ModifiedCurrent, ModifiedOriginal, New, Original, Unchanged oder keine Zeilen in der <see cref="T:System.Data.DataView" /> angezeigt werden sollen, oder legt diesen fest.</summary>
      <returns vsli:raw="A value that indicates which rows to display.">Ein Wert, der angibt, welche Zeilen angezeigt werden sollen.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ruft einen Wert ab, der die Sortierung angibt, die in der <see cref="T:System.Data.DataView" /> angewendet werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Die in der <see cref="T:System.Data.DataView" /> anzuwendende Sortierung.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">Ruft die <see cref="T:System.Data.DataTable" /> ab, auf die die <see cref="T:System.Data.DataViewSetting" />-Eigenschaften angewendet werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Ein <see cref="T:System.Data.DataTable" />-Objekt.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Enthält eine schreibgeschützte Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten für jede <see cref="T:System.Data.DataTable" /> in einem <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Der Index des Arrays, an dem mit dem Einfügen begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Der Index des Arrays, an dem mit dem Einfügen begonnen werden soll.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Ruft die Anzahl der <see cref="T:System.Data.DataViewSetting" />-Objekte in <see cref="T:System.Data.DataViewSettingCollection" /> ab.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">Die Anzahl von <see cref="T:System.Data.DataViewSetting" />-Objekten in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Ruft einen <see cref="T:System.Collections.IEnumerator" /> für die Auflistung ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataViewSettingCollection" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">Gibt immer <see langword="true" /> zurück, um anzugeben, dass die Auflistung schreibgeschützt ist.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Data.DataViewSettingCollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">Diese Eigenschaft ist immer <see langword="false" />, es sei denn, sie wird von einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">Ruft die <see cref="T:System.Data.DataViewSetting" />-Objekte der angegebenen <see cref="T:System.Data.DataTable" /> aus der Auflistung ab.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Das zu suchende <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">Ruft die <see cref="T:System.Data.DataViewSetting" />-Objekte aus der durch den Index angegebenen <see cref="T:System.Data.DataTable" /> ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Der nullbasierte Index der zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">Ruft die durch den Namen angegebene <see cref="T:System.Data.DataViewSetting" /> der <see cref="T:System.Data.DataTable" /> ab.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Data.DataViewSettingCollection" /> synchronisiert werden kann.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Data.DataViewSettingCollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">Die Ausnahme, die vom <see cref="T:System.Data.Common.DataAdapter" /> während eines Einfügungs-, Aktualisierungs- oder Löschvorgangs ausgelöst wird, wenn die Anzahl der betroffenen Zeilen 0 (null) ist.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Die Textzeichenfolge, die die Einzelheiten der Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Die Textzeichenfolge, die die Einzelheiten der Ausnahme beschreibt.</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">Die Fehlermeldung, in der die Ursache dieser Ausnahme erklärt wird.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">Ein Array, das die <see cref="T:System.Data.DataRow" />-Objekte enthält, deren Aktualisierungsfehler diese Ausnahme generiert hat.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Kopiert die <see cref="T:System.Data.DataRow" />-Objekte, deren Aktualisierungsfehler diese Ausnahme generiert hat, in das angegebene Array von <see cref="T:System.Data.DataRow" />-Objekten.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Das eindimensionale Array von <see cref="T:System.Data.DataRow" />-Objekten, in das die <see cref="T:System.Data.DataRow" />-Objekte kopiert werden sollen.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">Kopiert die <see cref="T:System.Data.DataRow" />-Objekte, deren Aktualisierungsfehler diese Ausnahme generiert hat, in das angegebene Array von <see cref="T:System.Data.DataRow" />-Objekten ab dem angegebenen Index im Zielarray.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Das eindimensionale Array von <see cref="T:System.Data.DataRow" />-Objekten, in das die <see cref="T:System.Data.DataRow" />-Objekte kopiert werden sollen.</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">Der Index im Zielarray, an dem der Kopiervorgang gestartet werden soll.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Füllt das angegebene Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren der <see cref="T:System.Data.DBConcurrencyException" /> erforderlich sind.</summary>
      <param name="si">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten, die der <see cref="T:System.Data.DBConcurrencyException" /> zugeordnet sind.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der Quelle und Ziel des serialisierten Streams enthält, der dem <see cref="T:System.Data.DBConcurrencyException" /> zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Ruft den Wert der <see cref="T:System.Data.DataRow" />, die die <see cref="T:System.Data.DBConcurrencyException" /> generiert hat, ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Wert von <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">Ruft die Anzahl von Zeilen ab, deren Aktualisierung zu einem Fehler geführt und dadurch diese Ausnahme generiert hat.</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">Eine ganze Zahl, die die Anzahl der Zeilen enthält, deren Aktualisierung zu einem Fehler geführt hat.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">Gibt den Datentyp eines Felds, einer Eigenschaft oder eines <see langword="Parameter" />-Objekts eines .NET Framework-Datenproviders an.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">Ein Stream variabler Länge von Nicht-Unicode-Zeichen in einem Bereich zwischen 1 und 8000 Zeichen.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">Ein Stream fester Länge mit Nicht-Unicode-Zeichen.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">Ein Stream variabler Länge mit Binärdaten in einem Bereich zwischen 1 und 8000 Bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Ein einfacher Typ zur Darstellung der booleschen Werte <see langword="true" /> und <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">Eine 8-Bit-Ganzzahl ohne Vorzeichen, deren Wert im Bereich von 0 bis 255 liegt.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">Ein Währungswert im Bereich von –2 63 (bzw. –922.337.203.685.477,5808) bis 2 63 –1 (bzw. +922.337.203.685.477,5807) mit einer Genauigkeit von einem Zehntausendstel einer Währungseinheit.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">Ein Typ, der einen Datumswert darstellt.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">Ein Typ zur Darstellung des Werts für Datum und Uhrzeit.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Datums- und Uhrzeitdaten. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Datums- und Zeitdaten mit Unterstützung von Zeitzonen. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden. Der Wertbereich für Zeitzonen liegt zwischen -14: 00 und +14: 00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">Ein einfacher Typ zur Darstellung der Werte im Bereich von 1,0 x 10 –28 bis ungefähr 7,9 x 10 28 mit 28–29 signifikanten Ziffern.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">Ein Gleitkommatyp zur Darstellung von Werten im Bereich von ungefähr 5,0 x 10 –324 bis 1,7 x 10 308 mit einer Genauigkeit von 15–16 Stellen.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">Eine GUID (Globally Unique Identifier, globaler eindeutiger Bezeichner).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">Ein ganzzahliger Typ zur Darstellung von 16-Bit-Ganzzahlen mit Vorzeichen und mit Werten zwischen -32768 und 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">Ein integraler Typ zur Darstellung von ganzen Zahlen mit Vorzeichen und einer Länge von 32 Bit sowie mit Werten zwischen –2147483648 und 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">Ein integraler Typ zur Darstellung von ganzen Zahlen mit Vorzeichen und einer Länge von 64 Bit sowie mit Werten zwischen –9223372036854775808 und 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">Ein allgemeiner Typ, der jeden Verweis bzw. Werttyp darstellt, der nicht explizit durch einen anderen <see langword="DbType" />-Wert dargestellt wird.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">Ein integraler Typ zur Darstellung von ganzen Zahlen mit Vorzeichen und einer Länge von 8 Bit sowie mit Werten zwischen –128 und 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">Ein Gleitkommatyp zur Darstellung von Werten im Bereich von ungefähr 1,5 x 10 –45 bis 3,4 x 10 38 mit einer Genauigkeit von 7 Stellen.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">Ein Typ, der Zeichenfolgen mit Unicode-Zeichen darstellt.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Eine Zeichenfolge mit fester Länge mit Unicode-Zeichen.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">Ein Typ, der einen SQL Server-<see langword="DateTime" />-Wert darstellt. Wenn Sie einen SQL Server-<see langword="time" />-Wert verwenden möchten, verwenden Sie <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">Ein integraler Typ zur Darstellung von ganzen Zahlen ohne Vorzeichen und mit einer Länge von 16 Bit mit Werten zwischen 0 und 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">Ein integraler Typ zur Darstellung von ganzen Zahlen ohne Vorzeichen und einer Länge von 32 Bit mit Werten zwischen 0 und 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">Ein integraler Typ zur Darstellung von ganzen Zahlen ohne Vorzeichen und einer Länge von 64-Bit mit Werten zwischen 0 und 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">Ein numerischer Wert mit variabler Länge.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">Eine analysierte Darstellung eines XML-Dokuments oder eines XML-Fragments.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, eine Aktion für eine gelöschte <see cref="T:System.Data.DataRow" /> auszuführen.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">Stellt die Ausnahme dar, die ausgelöst wird, wenn während eines Hinzufügevorgangs in einem <see cref="T:System.Data.DataSet" />-bezogenen Objekt ein doppelter Datenbankobjektname auftritt.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse mit der angegebenen Zeichenfolge und der angegebenen Ausnahme.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Stellt eine Auflistung von <see cref="T:System.Data.DataRow" />-Objekten dar, die von einer LINQ to DataSet-Abfrage zurückgegeben werden. Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Gibt einen Enumerator für die Auflistung von <see cref="T:System.Data.DataRow" />-Objekten zurück. Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die Auflistung der <see cref="T:System.Data.DataRow" />-Objekte durchlaufen werden kann.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Stellt eine Auflistung von <see cref="T:System.Data.DataRow" />-Objekten dar, die von einer Abfrage zurückgegeben werden.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">Gibt einen Enumerator für die Auflistung der enthaltenen Zeilenobjekte zurück.</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">Ein stark typisierter <see cref="T:System.Collections.Generic.IEnumerator`1" />, mit dem die Auflistung von <paramref name="TRow" />-Objekten durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Gibt einen Enumerator für die Auflistung von <see cref="T:System.Data.DataRow" />-Objekten zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die Auflistung der <see cref="T:System.Data.DataRow" />-Objekte durchlaufen werden kann.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">Enthält die Erweiterungsmethoden für die Datenzeilenauflistungsklassen.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">Konvertiert die Elemente einer <see cref="T:System.Data.EnumerableRowCollection" /> in den angegebenen Typ.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">Das <see cref="T:System.Data.EnumerableRowCollection" />, das die zu konvertierenden Elemente enthält.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">Der Typ, in den die Elemente der Quelle konvertiert werden sollen.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">Eine <see cref="T:System.Data.EnumerableRowCollection" />, die jedes in den angegebenen Typ konvertierte Element der Quellsequenz enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">Ein Element in der Sequenz kann nicht in den Typ <paramref name="TResult" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">Projiziert jedes Element einer <see cref="T:System.Data.EnumerableRowCollection`1" /> in ein neues Format.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">Eine <see cref="T:System.Data.EnumerableRowCollection`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, für die eine Transformationsfunktion aufgerufen werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">Der Typ, in den <paramref name="TRow" /> transformiert wird.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Ein <see cref="T:System.Data.EnumerableRowCollection`1" />, dessen Elemente das Ergebnis des Aufrufs einer Transformationsfunktion für jedes Element von <paramref name="source" /> sind</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel durch.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich durch.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel durch.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich durch.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtert eine Sequenz von Zeilen auf Grundlage des angegebenen Prädikats.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den zu filternden <see cref="T:System.Data.DataRow" />-Elementen.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, die Zeilen aus der Eingabesequenz enthält, die die Bedingung erfüllen.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">Stellt die Ausnahme dar, die ausgelöst wird, wenn die <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft einer <see cref="T:System.Data.DataColumn" /> nicht ausgewertet werden kann.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">Die Quelle und das Ziel eines bestimmten serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Stellt Daten für das <see cref="E:System.Data.Common.DataAdapter.FillError" />-Ereignis eines <see cref="T:System.Data.Common.DbDataAdapter" /> bereit.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.FillErrorEventArgs" />-Klasse.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">Die <see cref="T:System.Data.DataTable" />-Klasse, die aktualisiert wird.</param>
      <param name="values" vsli:raw="The values for the row being updated.">Die Werte für die Zeile, die aktualisiert wird.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">Ruft einen Wert ab, der angibt, ob der Füllvorgang trotz des Fehlers fortgesetzt werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Füllvorgang fortgesetzt werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">Ruft die <see cref="T:System.Data.DataTable" />-Klasse ab, die aktualisiert wurde, als der Fehler auftrat.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">Die <see cref="T:System.Data.DataTable" />-Klasse, die aktualisiert wird.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">Ruft die Fehler ab, die behandelt werden.</summary>
      <returns vsli:raw="The errors being handled.">Die Fehler, die behandelt werden.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">Ruft die Werte für die Zeile ab, die aktualisiert wurde, als der Fehler aufgetreten ist.</summary>
      <returns vsli:raw="The values for the row being updated.">Die Werte für die Zeile, die aktualisiert wird.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">Stellt die Methode zur Behandlung des <see cref="E:System.Data.Common.DataAdapter.FillError" />-Ereignisses dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">Das <see cref="T:System.Data.FillErrorEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">Stellt eine Aktionsbeschränkung dar, die für eine Gruppe von Spalten in einer Primärschlüssel/Fremdschlüssel-Beziehung erzwungen wird, wenn ein Wert oder eine Spalte gelöscht oder aktualisiert wird.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit den angegebenen übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit den angegebenen Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Ein Array der übergeordneten <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Ein Array der untergeordneten <see cref="T:System.Data.DataColumn" /> in der Auflistung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit dem angegebenen Namen und den angegebenen übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit dem angegebenen Namen und den Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">Der Name des <see cref="T:System.Data.ForeignKeyConstraint" />. Wenn <see langword="null" /> oder eine leere Zeichenfolge, wird beim Hinzufügen zur Auflistung der Einschränkungen ein Standardname zugewiesen.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Ein Array der übergeordneten <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Ein Array der untergeordneten <see cref="T:System.Data.DataColumn" /> in der Auflistung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt. Mit diesem Konstruktor erstellte <see cref="T:System.Data.ForeignKeyConstraint" />-Objekte müssen der Auflistung anschließend über <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> hinzugefügt werden. Tabellen und Spalten mit den angegebenen Namen müssen zum Zeitpunkt des Aufrufs der Methode vorhanden sein. Wenn <see cref="M:System.Data.DataTable.BeginInit" /> vor dem Aufrufen dieses Konstruktors aufgerufen wurde, müssen die Tabellen und Spalten mit den angegebenen Namen zum Zeitpunkt des Aufrufs von <see cref="M:System.Data.DataTable.EndInit" /> vorhanden sein.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Der Name der übergeordneten <see cref="T:System.Data.DataTable" />-Klasse, die übergeordnete <see cref="T:System.Data.DataColumn" />-Objekte in der Einschränkung enthält.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">Der Name des <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Ein Array der Namen von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Ein Array der Namen von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Einer der <see cref="T:System.Data.AcceptRejectRule" />-Werte. Mögliche Werte sind <see langword="None" />, <see langword="Cascade" /> und <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Löschen einer Zeile verwendet werden soll. Die Standardeinstellung ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Aktualisieren einer Zeile verwendet werden soll. Die Standardeinstellung ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt. Mit diesem Konstruktor erstellte <see cref="T:System.Data.ForeignKeyConstraint" />-Objekte müssen der Auflistung anschließend über <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> hinzugefügt werden. Tabellen und Spalten mit den angegebenen Namen müssen zum Zeitpunkt des Aufrufs der Methode vorhanden sein. Wenn <see cref="M:System.Data.DataTable.BeginInit" /> vor dem Aufrufen dieses Konstruktors aufgerufen wurde, müssen die Tabellen und Spalten mit den angegebenen Namen zum Zeitpunkt des Aufrufs von <see cref="M:System.Data.DataTable.EndInit" /> vorhanden sein.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Der Name der übergeordneten <see cref="T:System.Data.DataTable" />-Klasse, die übergeordnete <see cref="T:System.Data.DataColumn" />-Objekte in der Einschränkung enthält.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Ein Array der Namen von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Ein Array der Namen von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Einer der <see cref="T:System.Data.AcceptRejectRule" />-Werte. Mögliche Werte sind <see langword="None" />, <see langword="Cascade" /> und <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Löschen einer Zeile verwendet werden soll. Die Standardeinstellung ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Aktualisieren einer Zeile verwendet werden soll. Die Standardeinstellung ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Spalten weisen unterschiedliche Datentypen auf.  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">Gibt die Aktion an, die für die gesamte Einschränkung ausgeführt werden soll, wenn <see cref="M:System.Data.DataTable.AcceptChanges" /> aufgerufen wird.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">Einer der <see cref="T:System.Data.AcceptRejectRule" />-Werte. Mögliche Werte sind <see langword="None" /> und <see langword="Cascade" />. Die Standardeinstellung ist <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">Ruft die untergeordneten Spalten dieser Einschränkung ab.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die untergeordneten Spalten der Einschränkung sind.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">Ruft die Aktion ab, die für diese Einschränkung beim Löschen einer Zeile ausgeführt wird, oder legt diese fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Einer der <see cref="T:System.Data.Rule" />-Werte. Die Standardeinstellung ist <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">Ruft einen Wert ab, der angibt, ob der aktuelle <see cref="T:System.Data.ForeignKeyConstraint" /> mit dem angegebenen Objekt identisch ist</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">Das Objekt, mit dem diese <see cref="T:System.Data.ForeignKeyConstraint" /> verglichen wird. Zwei <see cref="T:System.Data.ForeignKeyConstraint" /> sind gleich, wenn sie dieselben Spalten einschränken.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Objekte identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">Ruft den Hashcode dieser Instanz des <see cref="T:System.Data.ForeignKeyConstraint" />-Objekts ab.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">Die übergeordneten Spalten dieser Einschränkung.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die übergeordneten Spalten der Einschränkung sind.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">Ruft die übergeordnete Tabelle dieser Einschränkung ab.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">Die übergeordnete <see cref="T:System.Data.DataTable" /> dieser Einschränkung.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">Ruft die untergeordnete Tabelle dieser Einschränkung ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">Eine <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle in der Einschränkung ist.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">Ruft die Aktion ab, die für diese Einschränkung beim Aktualisieren einer Zeile ausgeführt wird, oder legt diese fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Einer der <see cref="T:System.Data.Rule" />-Werte. Die Standardeinstellung ist <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">Ordnet einer <see cref="T:System.Data.DataSet" />-Spalte eine Spalte einer Datenquelle zu und wird von der <see cref="T:System.Data.Common.DataColumnMapping" />-Klasse implementiert, die von allen .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Ruft den Namen der Spalte in dem <see cref="T:System.Data.DataSet" /> ab, für das die Zuordnung erfolgen soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Der Name der Spalte in dem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll. Bei dem Namen wird die Groß- und Kleinschreibung nicht berücksichtigt.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Ruft den Namen der Spalte in der Datenquelle ab, aus der die Zuordnung erfolgen soll, oder legt diesen fest. Bei dem Namen wird die Groß- und Kleinschreibung berücksichtigt.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Der Name der Spalte in der Datenquelle unter Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Enthält eine Auflistung von DataColumnMapping-Objekten und wird durch die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> implementiert, die von allen .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Fügt der ColumnMapping-Auflistung mithilfe des Namens der Quellspalte und des Namens der <see cref="T:System.Data.DataSet" />-Spalte ein ColumnMapping-Objekt hinzu.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Der Name der <see cref="T:System.Data.DataSet" />-Spalte.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Das ColumnMapping-Objekt, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen enthält.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Ruft das ColumnMapping-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">Der Name der <see cref="T:System.Data.DataSet" />-Spalte in der Auflistung.</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">Das ColumnMapping-Objekt mit dem angegebenen <see langword="DataSet" />-Spaltennamen.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">Ruft die Position des <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts mit dem angegebenen Quellspaltennamen ab. Bei dem Namen wird die Groß- und Kleinschreibung berücksichtigt.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">Die nullbasierte Position des <see langword="DataColumnMapping" />-Objekts mit dem angegebenen Quellspaltennamen.</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Ruft das <see cref="T:System.Data.IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">Der <see langword="SourceColumn" />-Name des zu suchenden <see langword="IColumnMapping" />-Objekts.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Das <see langword="IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">Entfernt das <see cref="T:System.Data.IColumnMapping" />-Objekt mit dem angegebenen <see cref="P:System.Data.IColumnMapping.SourceColumn" />-Namen aus der Auflistung.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Der <see langword="SourceColumn" />-Name mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Es ist kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen vorhanden.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">Ermöglicht einem Objekt das Implementieren eines DataAdapter und stellt eine Gruppe von Methoden und zuordnungsbezogenen Eigenschaften dar, mit denen ein <see cref="T:System.Data.DataSet" /> gefüllt und aktualisiert sowie eine Datenquelle aktualisiert wird.  
 <see cref="T:System.Data.IDbDataAdapter" />-Instanzen gelten für Datenquellen, die relationale Datenbanken mit Textbefehlen (wie Transact-SQL) sind (oder ihnen ähneln), während <see cref="T:System.Data.IDataAdapter" />-Instanzen jeden Datenquelltyp verwenden können.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Fügt dem <see cref="T:System.Data.DataSet" /> unter Verwendung des <see cref="T:System.Data.DataSet" />-Namens Zeilen hinzu bzw. aktualisiert diese, um eine Übereinstimmung mit den Zeilen in der Datenquelle zu erzielen, und erstellt eine <see cref="T:System.Data.DataTable" /> mit der Bezeichnung "Table".</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Fügt eine <see cref="T:System.Data.DataTable" /> namens „Tabelle“ zum angegebenen <see cref="T:System.Data.DataSet" /> hinzu und konfiguriert das Schema auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" /> so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Die mit dem Schema aus der Datenquelle zu füllende <see cref="T:System.Data.DataSet" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Ein Array von <see cref="T:System.Data.DataTable" />-Objekten, die aus der Datenquelle zurückgegebene Schemainformationen enthalten.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Ruft die Parameter ab, die vom Benutzer beim Ausführen einer SQL-SELECT-Anweisung festgelegt wurden.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Ein Array von <see cref="T:System.Data.IDataParameter" />-Objekten, das die vom Benutzer festgelegten Parameter enthält.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">Gibt an, ob nicht zugeordnete Quelltabellen oder Spalten mit ihren Quellnamen zum Filtern übergeben werden, oder ob ein Fehler ausgelöst wird.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte. Die Standardeinstellung ist <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingMappingAction" />-Werte.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">Gibt an, ob fehlende Quelltabellen, Spalten und ihre Beziehungen dem Datasetschema hinzugefügt oder ignoriert werden, oder ob ein Fehler ausgelöst wird.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte. Die Standardeinstellung ist <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Gibt an, wie eine Quelltabelle einer Datasettabelle zugeordnet wird.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Eine Auflistung, die die Masterzuordnung zwischen den zurückgegebenen Datensätzen und dem <see cref="T:System.Data.DataSet" /> bereitstellt. Der Standardwert ist eine leere Auflistung.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Ruft für jede Zeile im angegebenen <see cref="T:System.Data.DataSet" /> einer <see cref="T:System.Data.DataTable" /> mit dem Namen "Table", die eingefügt, aktualisiert oder gelöscht wird, die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung auf.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Die <see cref="T:System.Data.DataSet" />, mit der die Datenquelle aktualisiert wird.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Stellt einen Parameter sowie optional dessen Zuordnung zu <see cref="T:System.Data.DataSet" />-Spalten für ein Command-Objekt dar und wird von .NET Framework-Datenanbietern implementiert, die auf Datenquellen zugreifen.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Ruft den <see cref="T:System.Data.DbType" /> des Parameters ab oder legt ihn fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Einer der <see cref="T:System.Data.DbType" />-Werte. Die Standardeinstellung ist <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">Die Eigenschaft wurde nicht auf einen gültigen <see cref="T:System.Data.DbType" /> festgelegt.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Ruft einen Wert ab, der angibt, ob der Parameter nur zur Eingabe, nur zur Ausgabe oder bidirektional verwendet wird oder ob es sich um einen Parameter für den Rückgabewert einer gespeicherten Prozedur handelt, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Einer der <see cref="T:System.Data.ParameterDirection" />-Werte. Die Standardeinstellung ist <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">Die Eigenschaft wurde nicht auf einen der gültigen <see cref="T:System.Data.ParameterDirection" />-Werte festgelegt.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">Ruft einen Wert ab, der anzeigt, ob der Parameter NULL-Werte akzeptiert.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL-Werte akzeptiert werden; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">Ruft den Namen der <see cref="T:System.Data.IDataParameter" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">Der Name des <see cref="T:System.Data.IDataParameter" />. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Ruft den Namen der Quellspalte ab, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist und zum Laden oder Zurückgeben des <see cref="P:System.Data.IDataParameter.Value" /> verwendet wird, oder legt diesen Namen fest.</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Der Name der Quellspalte, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Ruft die <see cref="T:System.Data.DataRowVersion" /> ab, die beim Laden von <see cref="P:System.Data.IDataParameter.Value" /> verwendet werden soll, oder legt diese fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Die Standardeinstellung ist <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Die Eigenschaft wurde nicht auf einen der <see cref="T:System.Data.DataRowVersion" />-Werte festgelegt.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Ruft den Wert des Parameters ab oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">Ein <see cref="T:System.Object" />, das den Wert des Parameters darstellt. Der Standardwert ist NULL.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Sammelt alle relevanten Parameter für ein Command-Objekt sowie deren Zuordnungen zu <see cref="T:System.Data.DataSet" />-Spalten, und wird von .NET Framework-Datenanbietern implementiert, die auf Datenquellen zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">Ruft einen Wert ab, der angibt, ob in der Sammlung ein Parameter mit dem angegebenen Namen vorhanden ist.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Der Name des Parameters.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Sammlung den Parameter enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Ruft die Position des angegebenen <see cref="T:System.Data.IDataParameter" /> in der Sammlung ab.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Der Name des Parameters.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Die nullbasierte Position des angegebenen <see cref="T:System.Data.IDataParameter" /> in der Sammlung.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Ruft den Parameter am angegebenen Index ab oder legt diesen fest.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Der Name des abzurufenden Parameters.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">Ein <see cref="T:System.Object" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">Entfernt das <see cref="T:System.Data.IDataParameter" /> aus der Auflistung.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Der Name des Parameters.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">Ermöglicht das Lesen eines oder mehrerer Vorwärtsdatenströme von Resultsets, die durch Ausführen eines Befehls für eine Datenquelle abgerufen wurden, und wird von .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">Schließt das <see cref="T:System.Data.IDataReader" />-Objekt.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Ruft einen Wert ab, der die Tiefe der Schachtelung für die aktuelle Zeile angibt.</summary>
      <returns vsli:raw="The level of nesting.">Die Schachtelungsebene.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.IDataReader" /> beschreibt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">Der <see cref="T:System.Data.IDataReader" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">Ruft einen Wert ab, der angibt, ob der Datenreader geschlossen ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Datenreader geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">Setzt den Datenleser beim Lesen der Ergebnisse von SQL-Anweisungen auf das nächste Ergebnis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">Setzt den <see cref="T:System.Data.IDataReader" /> auf den nächsten Datensatz.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Ruft die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen; 0, wenn keine Zeilen betroffen sind, oder bei der Anweisung ein Fehler aufgetreten ist, und -1 für SELECT-Anweisungen.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">Ermöglicht den Zugriff auf die Spaltenwerte in den einzelnen Zeilen für einen <see langword="DataReader" />, und wird von .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">Ruft die Anzahl der Spalten in der aktuellen Zeile ab.</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">Falls in keinem gültigen Recordset positioniert, 0; andernfalls die Anzahl der Spalten im aktuellen Datensatz. Der Standard ist -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The value of the column.">Der Wert der Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">Ruft den 8-Bit-Ganzzahlwert ohne Vorzeichen der angegebenen Spalte ab.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">Der 8-Bit-Ganzzahlwert ohne Vorzeichen der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">Liest einen Datenstrom aus dem angegebenen Spaltenoffset als Array in den Puffer, beginnend am angegebenen Pufferoffset.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">Der Index in dem Feld, in dem der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Der Index für <paramref name="buffer" /> für den Beginn des Lesevorgangs.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Die Anzahl der zu lesenden Bytes.</param>
      <returns vsli:raw="The actual number of bytes read.">Die tatsächlich gelesene Anzahl von Bytes.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">Ruft den Zeichenwert der angegebenen Spalte ab.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns vsli:raw="The character value of the specified column.">Der Zeichenwert der angegebenen Spalte.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">Liest einen Zeichendatenstrom aus dem angegebenen Spaltenoffset als Array in den Puffer, beginnend am angegebenen Pufferoffset.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">Der Index in der Zeile, in der der Lesevorgang beginnen soll.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Der Index für <paramref name="buffer" /> für den Beginn des Lesevorgangs.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Die Anzahl der zu lesenden Bytes.</param>
      <returns vsli:raw="The actual number of characters read.">Die tatsächlich gelesene Anzahl von Zeichen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Gibt einen <see cref="T:System.Data.IDataReader" /> für die angegebene Spaltenordnungszahl zurück.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Der <see cref="T:System.Data.IDataReader" /> für die angegebene Spaltenordnungszahl.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">Ruft die Datentypinformationen für das angegebene Feld ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The data type information for the specified field.">Die Datentypinformationen für das angegebene Feld.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">Ruft das Datum und die Uhrzeit des angegebenen Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The date and time data value of the specified field.">Das Datum und die Uhrzeit des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">Ruft den an fester Position befindlichen numerischen Wert des angegebenen Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">Der an fester Position befindliche numerische Wert des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">Ruft den Wert des angegebenen Felds als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The double-precision floating point number of the specified field.">Der Wert des angegebenen Felds als Gleitkommazahl mit doppelter Genauigkeit.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Ruft die <see cref="T:System.Type" />-Informationen entsprechend dem Typ von <see cref="T:System.Object" /> ab, die von <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> zurückgegeben würden.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Die <see cref="T:System.Type" />-Informationen entsprechend dem Typ von <see cref="T:System.Object" />, die von <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> zurückgegeben würden.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">Ruft den Wert des angegebenen Felds als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The single-precision floating point number of the specified field.">Der Wert des angegebenen Felds als Gleitkommazahl mit einfacher Genauigkeit.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Gibt den GUID-Wert des angegebenen Felds zurück.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The GUID value of the specified field.">Der GUID-Wert des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">Ruft den 16-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">Der 16-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">Ruft den 32-Bit-Ganzzahl-mit-Vorzeichen-Wert des angegebenen Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">Der 32-Bit-Ganzzahl-mit-Vorzeichen-Wert des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">Ruft den 64-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">Der 64-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">Ruft den Namen des zu suchenden Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">Der Name des Felds oder eine leere Zeichenfolge (""), wenn kein Wert zurückgegeben werden kann.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">Gibt den Index des benannten Felds zurück.</summary>
      <param name="name" vsli:raw="The name of the field to find.">Der Name des zu suchenden Felds.</param>
      <returns vsli:raw="The index of the named field.">Der Index des benannten Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">Ruft den Zeichenfolgenwert des angegebenen Felds ab.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The string value of the specified field.">Der Zeichenfolgenwert des angegebenen Felds.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">Gibt den Wert des angegebenen Felds zurück.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">Das <see cref="T:System.Object" />, das bei der Rückgabe den Feldwert enthält.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Füllt ein Array von Objekten mit den Spaltenwerten des aktuellen Datensatzes.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Ein Array von <see cref="T:System.Object" />, in das die Attributfelder kopiert werden.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">Gibt zurück, ob das angegebene Feld auf NULL festgelegt ist.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Der Index des zu suchenden Felds.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Feld auf NULL festgelegt ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">Ruft die Spalte ab, die sich am angegebenen Index befindet.</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">Der nullbasierte Index der Spalte, die abgerufen werden soll.</param>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Die Spalte, die sich als <see cref="T:System.Object" /> am angegebenen Index befindet.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">Ruft die Spalte mit dem angegebenen Namen ab.</summary>
      <param name="name" vsli:raw="The name of the column to find.">Der Name der zu suchenden Spalte.</param>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Die Spalte mit dem angegebenen Namen als <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Keine Spalte mit dem angegebenen Namen wurde gefunden.</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">Stellt eine SQL-Anweisung dar, die während der Verbindung mit einer Datenquelle ausgeführt wird, und wird von den .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Versucht, die Ausführung eines <see cref="T:System.Data.IDbCommand" /> abzubrechen.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Ruft den für die Datenquelle auszuführenden Textbefehl ab bzw. legt ihn fest.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">Der auszuführende Textbefehl. Der Standardwert ist eine leere Zeichenfolge („“).</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">Ruft die Zeit ab, die gewartet werden soll, bis der Versuch einer Befehlsausführung beendet und ein Fehler generiert wird, oder legt diese fest.</summary>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">Die Zeit in Sekunden, während der auf die Ausführung des Befehls gewartet werden soll. Der Standardwert ist 30 Sekunden.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">Der zugewiesene Eigenschaftswert ist kleiner als 0.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">Gibt an bzw. legt fest, wie die <see cref="P:System.Data.IDbCommand.CommandText" />-Eigenschaft interpretiert wird.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Einer der <see cref="T:System.Data.CommandType" />-Werte. Die Standardeinstellung ist <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Ruft die <see cref="T:System.Data.IDbConnection" /> ab, die von dieser Instanz des <see cref="T:System.Data.IDbCommand" /> verwendet wird, oder legt diese fest.</summary>
      <returns vsli:raw="The connection to the data source.">Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Erstellt eine neue Instanz eines <see cref="T:System.Data.IDbDataParameter" /> -Objekts.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Ein <see langword="IDbDataParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">Führt eine SQL-Anweisung für das <see langword="Connection" />-Objekt eines .NET Framework-Datenanbieters aus und gibt die Anzahl der betroffenen Zeilen zurück.</summary>
      <returns vsli:raw="The number of rows affected.">Die Anzahl der betroffenen Zeilen.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">Die Verbindung ist nicht vorhanden.  

oder -  

 Die Verbindung ist nicht offen.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Führt den <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt einen <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Führt <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt mit einem der <see cref="T:System.Data.IDataReader" />-Werte einen <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">Führt die Abfrage aus und gibt die erste Spalte der ersten Zeile im Resultset zurück, das durch die Abfrage zurückgegeben wird. Zusätzliche Spalten oder Zeilen werden ignoriert.</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">Die erste Spalte der ersten Zeile im Resultset.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Ruft das <see cref="T:System.Data.IDataParameterCollection" /> ab.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Erstellt eine vorbereitete (oder kompilierte) Version des Befehls für die Datenquelle.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> ist nicht festgelegt.  

oder - 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> ist nicht <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">Ruft die Transaktion ab, in der das <see langword="Command" />-Objekt eines .NET Framework-Datenproviders ausgeführt wird, oder legt diese fest.</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Die Transaktion, innerhalb derer das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird. Der Standardwert ist <see langword="null" />sein.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Ruft ab oder legt fest, wie die Ergebnisse von Befehlen auf <see cref="T:System.Data.DataRow" /> angewendet werden, wenn diese von der <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />-Methode eines <see cref="T:System.Data.Common.DbDataAdapter" /> verwendet werden.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Einer der <see cref="T:System.Data.UpdateRowSource" />-Werte. Die Standardeinstellung ist <see langword="Both" />, sofern der Befehl nicht automatisch generiert wird. Dann ist die Standardeinstellung <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">Der eingegebene Wert war keiner der <see cref="T:System.Data.UpdateRowSource" />-Werte.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">Stellt eine offene Verbindung mit einer Datenquelle dar und wird von den .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Beginnt eine Datenbanktransaktion.</summary>
      <returns vsli:raw="An object representing the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">Beginnt eine Datenbanktransaktion mit dem angegebenen <see cref="T:System.Data.IsolationLevel" />-Wert.</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">Einer der <see cref="T:System.Data.IsolationLevel" />-Werte.</param>
      <returns vsli:raw="An object representing the new transaction.">Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">Ändert die aktuelle Datenbank für ein offenes <see langword="Connection" />-Objekt.</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">Der Name der Datenbank, die anstelle der aktuellen Datenbank verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">Schließt die Verbindung mit der Datenbank.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">Ruft die Zeichenfolge ab, mit der eine Datenbank geöffnet wird, oder legt diese fest.</summary>
      <returns vsli:raw="A string containing connection settings.">Eine Zeichenfolge mit Verbindungseinstellungen.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">Ruft die Zeit ab, die beim Verbindungsaufbau gewartet werden soll, bis der Versuch beendet und ein Fehler generiert wird.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">Der Zeitraum in Sekunden, in dem auf das Öffnen einer Verbindung gewartet werden soll. Der Standardwert ist 15 Sekunden.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">Erstellt ein Command-Objekt, das der Verbindung zugeordnet ist, und gibt dieses zurück.</summary>
      <returns vsli:raw="A Command object associated with the connection.">Ein Command-Objekt, das der Verbindung zugeordnet ist.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">Ruft den Namen der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung zu verwendenden Datenbank ab.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">Der Name der aktuellen Datenbank oder der Name der nach dem Öffnen einer Verbindung zu verwendenden Datenbank. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">Öffnet eine Datenbankverbindung mit den Einstellungen, die durch die <see langword="ConnectionString" />-Eigenschaft des anbieterspezifischen Verbindungsobjekts angegebenen werden.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">Ruft den aktuellen Zustand der Verbindung ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">Stellt eine Gruppe von befehlsbezogenen Eigenschaften dar, die zum Auffüllen des <see cref="T:System.Data.DataSet" /> und zum Aktualisieren einer Datenquelle verwendet werden. Die Implementierung erfolgt durch .NET Framework-Datenanbieter, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Ruft eine SQL-Anweisung zum Löschen von Datensätzen aus dem Dataset ab oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu löschen, die gelöschten Zeilen im DataSet entsprechen.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Ruft eine SQL-Anweisung ab, mit der neue Datensätze in die Datenquelle eingefügt werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle ausgewählt werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle aktualisiert werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu aktualisieren, die geänderten Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Hiermit stellt der Visual Basic .NET-Daten-Designer einen Parameter für ein Command-Objekt dar und optional dessen Zuordnung zu <see cref="T:System.Data.DataSet" />-Spalten.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Gibt die Genauigkeit numerischer Parameter an.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">Die maximale Anzahl von Ziffern für die Darstellung der Value-Eigenschaft des Parameter-Objekts eines Datenanbieters. Der Standardwert ist 0 (null) und gibt an, dass ein Datenanbieter die Genauigkeit für „Value“ festlegt.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">Gibt die Größe numerischer Parameter an.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">Die Anzahl der Dezimalstellen, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">Die Größe des Parameters.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Die maximale Größe (in Bytes) der Daten in der Spalte. Der Standardwert wird aus dem Parameterwert hergeleitet.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">Stellt eine Transaktion dar, die in einer Datenquelle ausgeführt werden soll, und wird von den .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">Führt einen Commit der Datenbanktransaktion aus.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Fehler beim Ausführen eines Commits der Transaktion.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">Es wurde bereits ein Commit bzw. ein Rollback für die Transaktion ausgeführt.  

oder -  

 Die Verbindung ist unterbrochen.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">Gibt das mit der Transaktion zu verknüpfende Connection-Objekt an.</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">Das mit der Transaktion zu verknüpfende Connection-Objekt.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">Gibt den <see cref="T:System.Data.IsolationLevel" /> für diese Transaktion an.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">Der <see cref="T:System.Data.IsolationLevel" /> für diese Transaktion. Die Standardeinstellung ist <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">Führt einen Rollback für eine Transaktion aus einem ausstehenden Zustand durch.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Fehler beim Ausführen eines Commits der Transaktion.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">Es wurde bereits ein Commit bzw. ein Rollback für die Transaktion ausgeführt.  

oder -  

 Die Verbindung ist unterbrochen.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Stellt die Ausnahme dar, die ausgelöst wird, wenn die <see cref="M:System.Data.DataRow.EndEdit" />-Methode im <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis aufgerufen wird.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">Stellt die Basisfunktionen für das Erstellen von Auflistungen bereit.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InternalDataCollectionBase" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">Kopiert alle Elemente der aktuellen <see cref="T:System.Data.InternalDataCollectionBase" /> in ein eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen <see cref="T:System.Data.InternalDataCollectionBase" />-Index.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">Das eindimensionale <see cref="T:System.Array" />, in das die Elemente des aktuellen <see cref="T:System.Data.InternalDataCollectionBase" />-Objekts kopiert werden sollen.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Der Index des Ziel-<see cref="T:System.Array" />, an dem mit dem Kopieren begonnen werden soll.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">Ruft die Gesamtzahl der Elemente in einer Auflistung ab.</summary>
      <returns vsli:raw="The total number of elements in a collection.">Die Gesamtzahl der Elemente in einer Auflistung.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Ruft einen <see cref="T:System.Collections.IEnumerator" /> für die Auflistung ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Ein <see cref="T:System.Collections.IEnumerator" /> für die Auflistung.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.InternalDataCollectionBase" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.InternalDataCollectionBase" /> synchronisiert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung synchronisiert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">Ruft die Elemente der Auflistung als Liste ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">Eine <see cref="T:System.Collections.ArrayList" />, die die Auflistung enthält.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">Ruft ein Objekt ab, mit dem die Auflistung synchronisiert werden kann.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">Das <see cref="T:System.Object" />, mit dem die Auflistung synchronisiert wird.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">Stellt die Ausnahme dar, die bei einem fehlgeschlagenen Versuch ausgelöst wird, eine Beziehung zu erstellen oder auf eine Beziehung zuzugreifen.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, einer <see cref="T:System.Data.DataColumn" /> eine <see cref="P:System.Data.DataColumn.Expression" /> hinzuzufügen, die einen ungültigen <see cref="T:System.Data.DataColumnCollection" /> enthält.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">Gibt das Sperrverhalten für Transaktionen für die Verbindung an.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">Die ausstehenden Änderungen von höher isolierten Transaktionen können nicht überschrieben werden.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">Beim Lesen der Daten werden gemeinsame Sperren verwendet, um das Lesen geänderter Daten zu verhindern. Die Daten können jedoch vor dem Ende der Transaktion geändert werden, was zu nicht wiederholbaren Lesevorgängen oder Phantomdaten führen kann.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">Ein Lesen geänderter Daten ist möglich. Das heißt, dass keine gemeinsamen Sperren ausgegeben und keine exklusiven Sperren berücksichtigt werden.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">Die Sperren gelten für alle in einer Abfrage verwendeten Daten, damit die Daten nicht durch andere Benutzer aktualisiert werden können. Nicht wiederholbare Lesevorgänge werden dadurch verhindert, es sind jedoch weiterhin Phantomzeilen möglich.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">Eine Bereichssperre wird für die <see cref="T:System.Data.DataSet" />-Klasse festgelegt. Dadurch wird verhindert, dass andere Benutzer vor dem Abschluss der Transaktion Zeilen in das Dataset einfügen oder darin aktualisieren.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">Reduziert das Blockieren durch Speichern einer Version von Daten, die von einer Anwendung gelesen werden können, während sie von einer anderen Anwendung geändert werden. Gibt an, dass Sie von einer Transaktion aus keine Änderungen sehen können, die in anderen Transaktionen vorgenommen wurden, auch wenn Sie diese erneut abfragen.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">Es wird nicht der angegebene Isolationsgrad verwendet, der Grad kann jedoch nicht bestimmt werden.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">Ordnet einer Tabelle in einer <see cref="T:System.Data.DataSet" />-Klasse eine Quelltabelle zu und wird von der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse implementiert, die von .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ruft die abgeleitete <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Klasse für die <see cref="T:System.Data.DataTable" />-Klasse ab.</summary>
      <returns vsli:raw="A collection of data column mappings.">Eine Sammlung der Datenspaltenzuordnungen.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ruft den Namen der Tabelle in <see cref="T:System.Data.DataSet" /> ohne Berücksichtigung von Groß- und Kleinschreibung ab oder legt diesen fest.</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Der Name der Tabelle in <see cref="T:System.Data.DataSet" /> ohne Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">Ruft den Namen der Quelltabelle unter Berücksichtigung von Groß- und Kleinschreibung ab oder legt diesen fest.</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Enthält eine Auflistung von TableMapping-Objekten und wird durch die <see cref="T:System.Data.Common.DataTableMappingCollection" />-Klasse implementiert, die von .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Fügt der Auflistung eine Tabellenzuordnung hinzu.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Der Name der <see cref="T:System.Data.DataSet" />-Tabelle.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Ein Verweis auf das neu zugeordnete <see cref="T:System.Data.ITableMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">Ruft einen Wert ab, der angibt, ob die Auflistung eine Tabellenzuordnung mit dem angegebenen Quelltabellennamen enthält.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Tabellenzuordnung mit dem angegebenen Quelltabellennamen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Ruft das TableMapping-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Der Name der <see langword="DataSet" />-Tabelle in der Auflistung.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Das TableMapping-Objekt mit dem angegebenen <see langword="DataSet" />-Tabellennamen.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Ruft die Position des <see cref="T:System.Data.ITableMapping" />-Objekts in der Auflistung ab.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Die nullbasierte Position des <see cref="T:System.Data.ITableMapping" />-Objekts in der Auflistung.</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Ruft die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see cref="P:System.Data.ITableMapping.SourceTable" />-Namen ab oder legt diese fest.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Der <see langword="SourceTable" />-Name der <see cref="T:System.Data.ITableMapping" />-Schnittstelle.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see langword="SourceTable" />-Namen.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">Entfernt das <see cref="T:System.Data.ITableMapping" />-Objekt mit dem angegebenen <see cref="P:System.Data.ITableMapping.SourceTable" />-Namen aus der Auflistung.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">Der Name der <see langword="SourceTable" /> mit Berücksichtigung von Groß- und Kleinschreibung.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">Bezeichnet eine Liste von durch die <see langword="KeyRestrictions" />-Eigenschaft angegebenen Parametern für Verbindungszeichenfolgen, die zulässig oder nicht zulässig sind.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">Standard. Gibt die einzigen zulässigen Zusatzparameter für eine Verbindungszeichenfolge an.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">Gibt nicht zulässige Zusatzparameter für eine Verbindungszeichenfolge an.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">Steuert das Anwenden von Werten der Datenquelle auf vorhandene Zeilen bei Verwendung der <see cref="Overload:System.Data.DataTable.Load" />-Methode oder der <see cref="Overload:System.Data.DataSet.Load" />-Methode.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">Die eingehenden Werte für diese Zeile werden sowohl in den aktuellen Wert als auch in die ursprünglichen Werte der Daten der einzelnen Spalten geschrieben.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">Die eingehenden Werte für diese Zeile werden in die ursprünglichen Werte der einzelnen Spalten geschrieben. Die aktuelle Version der Daten in den einzelnen Spalten wird nicht geändert.  Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">Die eingehenden Werte für diese Zeile werden in die aktuellen Werte der einzelnen Spalten geschrieben. Die ursprüngliche Version der Daten in den einzelnen Spalten wird nicht geändert.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">Gibt an, wie eine <see cref="T:System.Data.DataColumn" /> zugeordnet wird.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">Die Spalte wird einem XML-Attribut zugeordnet.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">Die Spalte wird einem XML-Element zugeordnet.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">Die Spalte wird einer internen Struktur zugeordnet.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">Die Spalte wird einem <see cref="T:System.Xml.XmlText" />-Knoten zugeordnet.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">Tritt ein, wenn eine Ziel- und eine Quell-<see langword="DataRow" /> denselben Primärschlüsselwert aufweisen und die <see cref="P:System.Data.DataSet.EnforceConstraints" />-Eigenschaft auf True festgelegt ist.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">Initialisiert eine neue Instanz einer <see cref="T:System.Data.MergeFailedEventArgs" />-Klasse mit der <see cref="T:System.Data.DataTable" /> und einer Beschreibung des Mergekonflikts.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Das <see cref="T:System.Data.DataTable" />-Objekt.</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">Eine Beschreibung des Mergekonflikts.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">Gibt eine Beschreibung des Mergekonflikts zurück.</summary>
      <returns vsli:raw="A description of the merge conflict.">Eine Beschreibung des Mergekonflikts.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Gibt das <see cref="T:System.Data.DataTable" />-Objekt zurück.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Das <see cref="T:System.Data.DataTable" />-Objekt.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">Stellt die Methode zur Behandlung des <see cref="E:System.Data.DataSet.MergeFailed" />-Ereignisses dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The data for the event.">Die Daten für das Ereignis.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">Bestimmt die Aktion, die ausgeführt wird, wenn für eine Quelltabelle oder eine Quellspalte eine Zuordnung fehlt.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme wird ausgelöst, wenn die angegebene Spaltenzuordnung fehlt.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">Die Spalte bzw. Tabelle ohne Zuordnung wird ignoriert. Gibt <see langword="null" /> zurück.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">Die Quellspalte bzw. Quelltabelle wird erstellt und mit ihrem ursprünglichen Namen der <see cref="T:System.Data.DataSet" />-Klasse hinzugefügt.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">Stellt die Ausnahme dar, die beim Versuch ausgelöst wird, auf eine Zeile in einer Tabelle ohne Primärschlüssel zuzugreifen.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">Eine Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">Gibt an, welche Aktion ausgeführt werden soll, wenn der <see cref="T:System.Data.DataSet" />-Klasse Daten hinzugefügt werden und die erforderliche <see cref="T:System.Data.DataTable" />-Klasse bzw. <see cref="T:System.Data.DataColumn" />-Klasse nicht vorhanden ist.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">Fügt die erforderlichen Spalten zum Vervollständigen des Schemas hinzu.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">Fügt die erforderlichen Spalten und Primärschlüsselinformationen zum Vervollständigen des Schemas hinzu. Weitere Informationen über das Hinzufügen von Primärschlüsselinformationen zu einer <see cref="T:System.Data.DataTable" /> finden Sie unter <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Damit eine ordnungsgemäße Funktionsweise mit dem .NET Framework-Datenanbieter für OLE DB gewährleistet wird, ist es für <see langword="AddWithKey" /> erforderlich, dass der systemeigene OLE DB-Anbieter die benötigten Primärschlüsselinformationen durch Festlegen der DBPROP_UNIQUEROWS-Eigenschaft abruft. Anschließend muss durch Überprüfen von DBCOLUMN_KEYCOLUMN in IColumnsRowset bestimmt werden, bei welchen Spalten es sich um Primärschlüsselspalten handelt. Der Benutzer kann aber auch explizit die Primärschlüsseleinschränkungen für jedes <see cref="T:System.Data.DataTable" />-Objekt festlegen. Dadurch wird sichergestellt, dass eingehende, vorhandenen Datensätzen entsprechende Datensätze nicht angefügt, sondern aktualisiert werden. Bei der Verwendung von <see langword="AddWithKey" /> fügt der .NET Framework-Datenanbieter für SQL Server eine FOR BROWSE-Klausel an die ausgeführte Anweisung an. Der Benutzer muss mögliche Nebeneffekte beachten, z. B. Beeinträchtigungen bei der Verwendung von SET FMTONLY ON-Anweisungen. Weitere Informationen finden Sie unter SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme wird ausgelöst, wenn die angegebene Spaltenzuordnung fehlt.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">Ignoriert die zusätzlichen Spalten.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, einen NULL-Wert in eine Spalte einzufügen, bei der <see cref="P:System.Data.DataColumn.AllowDBNull" /> auf <see langword="false" /> festgelegt ist.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Stellt eine Sammlung von sortierten <see cref="T:System.Data.DataRow" /> Objekten dar, die von einer Abfrage zurückgegeben werden.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Gibt den Typ eines Parameters in einer Abfrage relativ zum <see cref="T:System.Data.DataSet" /> an.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">Der Parameter ist ein Eingabeparameter.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">Der Parameter unterstützt sowohl Eingabe als auch Ausgabe.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">Der Parameter ist ein Ausgabeparameter.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">Der Parameter steht für einen Eingabewert aus einem Vorgang, wie z. B. einer gespeicherten Prozedur, einer integrierten Funktion oder einer benutzerdefinierten Funktion.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt eine Auflistung von Eigenschaften dar, die <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> oder <see cref="T:System.Data.DataTable" /> hinzugefügt werden können.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.PropertyCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.PropertyCollection" />-Klasse.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Erstellt eine flache Kopie des <see cref="T:System.Data.PropertyCollection" />-Objekts.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Gibt <see cref="T:System.Object" /> zurück eine flache Kopie <see cref="T:System.Data.PropertyCollection" />-Objekts zurück.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">Stellt die Ausnahme dar, die beim Versuch ausgelöst wird, den Wert einer schreibgeschützten Spalte zu ändern.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Stellt die Ausnahme dar, die beim Versuch ausgelöst wird, eine Operation für eine <see cref="T:System.Data.DataRow" /> auszuführen, die sich nicht in einer <see cref="T:System.Data.DataTable" /> befindet.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">Gibt die Aktion an, die beim Erzwingen einer <see cref="T:System.Data.ForeignKeyConstraint" /> ausgeführt wird.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">Verknüpfte Zeilen werden gelöscht oder aktualisiert. Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">Es wird keine Aktion für verknüpfte Zeilen ausgeführt.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">Festlegen der Werte in verknüpften Zeilen auf den Wert in der <see cref="P:System.Data.DataColumn.DefaultValue" />-Eigenschaft.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">Festlegen der Werte in verknüpften Zeilen auf <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Gibt den Schemaserialisierungsmodus für ein typisiertes <see cref="T:System.Data.DataSet" /> an.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Überspringt die Schemaserialisierung für ein typisiertes <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">Schließt die Schemaserialisierung für ein typisiertes <see cref="T:System.Data.DataSet" /> ein. Der Standardwert.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">Gibt an, wie vorhandene Schemazuordnungen beim Durchführen einer <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />-Operation behandelt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">Anwenden aller vorhandenen Tabellenzuordnungen auf das eingehende Schema. Konfigurieren des <see cref="T:System.Data.DataSet" /> mit dem transformierten Schema.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">Ignorieren sämtlicher Tabellenzuordnungen für den DataAdapter. Konfigurieren des <see cref="T:System.Data.DataSet" /> mit dem eingehenden Schema ohne Anwendung von Transformationen.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Bestimmt das Serialisierungsformat für ein <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">Als binären Inhalt serialisieren. Nur in ADO.NET 2.0 verfügbar.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">Als XML-Inhalt serialisieren. Der Standardwert.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">Gibt den SQL Server-Datentyp eines Felds oder einer Eigenschaft zur Verwendung in einem <see cref="T:System.Data.SqlClient.SqlParameter" /> an.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. Eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Ein Stream fester Länge mit Binärdaten in einem Bereich zwischen 1 und 8.000 Bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. Ein numerischer Wert ohne Vorzeichen, der 0 (null), 1 oder <see langword="null" /> sein kann.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. Ein Stream fester Länge von Nicht-Unicode-Zeichen in einem Bereich zwischen 1 und 8.000 Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">Datumsdaten mit einem Wert zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. Daten zu Datum und Uhrzeit, deren Wert zwischen dem 1. Januar 1753 und dem 31. Dezember 9999 liegt, mit einer Genauigkeit von 3,33 Millisekunden.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Datums- und Uhrzeitdaten. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Datums- und Zeitdaten mit Unterstützung von Zeitzonen. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden. Der Wertbereich für Zeitzonen liegt zwischen -14: 00 und +14: 00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. Ein numerischer Wert mit fester Genauigkeit und Dezimalstellen zwischen –10 38 –1 und 10 38 –1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. Eine Gleitkommazahl im Bereich von -1,79E+308 bis 1,79E+308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Ein Stream variabler Länge mit Binärdaten im Bereich von 0 (null) bis 2 31 –1 (oder 2.147.483.647) Bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. Eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Ein Währungswert im Bereich von –2 63 (oder –9.223.372.036.854.775.808) bis 2 63 –1 (oder +9.223.372.036.854.775.807) mit einer Genauigkeit von einem Zehntausendstel einer Währungseinheit.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. Ein Stream fester Länge von Unicode-Zeichen im Bereich zwischen 1 und 4.000 Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. Ein Stream variabler Länge mit Unicode-Daten mit einer maximalen Länge von 2 30 –1 (oder 1.073.741.823) Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Ein Stream variabler Länge von Unicode-Zeichen im Bereich zwischen 1 und 4.000 Zeichen. Die implizite Konvertierung schlägt fehl, wenn die Zeichenfolge mehr als 4000 Zeichen enthält. Legen Sie das Objekt explizit fest, wenn Sie Zeichenfolgen mit einer Länge von mehr als 4000 Zeichen verwenden. Verwenden Sie <see cref="F:System.Data.SqlDbType.NVarChar" />, wenn die Datenbankspalte <see langword="nvarchar(max)" /> ist.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. Eine Gleitkommazahl im Bereich von -3,40E+38 bis 3,40E+38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. Daten zu Datum und Uhrzeit mit einem Wert im Bereich vom 1. Januar 1900 bis 6. Juni 2079 mit einer Genauigkeit von einer Minute.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. Eine 16-Bit-Ganzzahl mit Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Ein Währungswert im Bereich von -214.748,3648 bis +214.748,3647 mit einer Genauigkeit von einem Zehntausendstel einer Währungseinheit.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">Ein besonderer Datentyp zum Angeben von strukturierten Daten in Tabellenwertparametern.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. Ein Stream variabler Länge mit Nicht-Unicode-Daten mit einer maximalen Länge von 2 31 –1 (oder 2.147.483.647) Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">Zeitdaten auf Grundlage des 24-Stunden-Formats. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden. Entspricht einem SQL Server-<see langword="time" />-Wert.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Automatisch generierte binäre Zahlen, die innerhalb einer Datenbank garantiert eindeutig sind. <see langword="timestamp" /> wird normalerweise zum Hinzufügen eines Versionsstempels zu Tabellenzeilen verwendet. Die Größe des Speichers beträgt 8 Bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. Eine 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">Ein benutzerdefinierter SQL Server-Typ (UDT)</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. Eine GUID (Globally Unique Identifier, globaler eindeutiger Bezeichner).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Ein Stream variabler Länge mit Binärdaten in einem Bereich zwischen 1 und 8000 Bytes. Die implizite Konvertierung schlägt fehl, wenn das Bytearray mehr als 8000 Bytes enthält. Legen Sie das Objekt explizit fest, wenn Sie Bytearrays verwenden, die größer als 8000 Bytes sind.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Ein Stream variabler Länge von Nicht-Unicode-Zeichen in einem Bereich zwischen 1 und 8000 Zeichen. Verwenden Sie <see cref="F:System.Data.SqlDbType.VarChar" />, wenn die Datenbankspalte <see langword="varchar(max)" /> ist.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. Ein spezieller Datentyp, der numerische Daten, Zeichenfolgendaten, binäre Daten oder Datumsdaten sowie die SQL Server-Werte Empty und NULL enthalten kann. Dieser wird angenommen, wenn kein anderer Typ deklariert wird.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">Ein XML-Wert. Rufen Sie den XML-Wert als Zeichenfolge ab, und verwenden Sie dazu die <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />-Methode oder die <see cref="P:System.Data.SqlTypes.SqlXml.Value" />-Eigenschaft. Sie können den Wert auch als <see cref="T:System.Xml.XmlReader" /> abrufen, indem Sie die <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />-Methode aufrufen.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">Alle <see cref="N:System.Data.SqlTypes" />-Objekte und -Strukturen implementieren die <see langword="INullable" />-Schnittstelle.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">Gibt an, ob eine Struktur NULL ist. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />, wenn der Wert dieses Objekts NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">Die <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse ist nicht für die Verwendung als eigenständige Komponente ausgelegt, sondern als Klasse, von der andere Klassen Standardfunktionen ableiten.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">Stellt einen binären Datenstream variabler Länge dar, der in einer Datenbank gespeichert oder aus dieser abgerufen wird.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur und legt die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft auf den Inhalt des bereitgestellten Bytearrays fest.</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">Das zu speichernde oder abzurufende Bytearray.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlBinary" />-Werte, um eine neue <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu erstellen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />, der der verkettete Wert von x und y ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt mit dem bereitgestellten <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Das mit dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu vergleichende <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekts ist kleiner als das Objekt.  

  Zero 
  Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt ist mit dem Objekt identisch.  

  Größer als 0 (null) 
  Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt ist größer als das Objekt.  

- oder - 
Das Objekt ist ein NULL-Verweis.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt mit dem bereitgestellten Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Das mit dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu vergleichende Objekt.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekts ist kleiner als das Objekt.  

  Zero 
  Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt ist mit dem Objekt identisch.  

  Größer als 0 (null) 
  Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt ist größer als das Objekt.  

- oder - 
Das Objekt ist ein NULL-Verweis.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Verkettet zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um eine neue <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu erstellen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Die verketteten Werte des <paramref name="x" />-Parameters und des <paramref name="y" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlBinary" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Gibt den Hashcode für diese <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />, der die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur NULL ist. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn <see langword="null" />; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">Ruft aus der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft das einzelne Byte ab, das sich an der durch den Ganzzahlparameter <paramref name="index" /> angegebenen Position befindet. Wenn <paramref name="index" /> eine Position hinter dem Ende des Bytearrays angibt, wird eine <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> ausgelöst. Diese Eigenschaft ist schreibgeschützt.</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">Die Position des abzurufenden Bytes.</param>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">Das Byte, das sich an der durch den ganzzahligen Parameter angegebenen Position befindet.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">Die Eigenschaft wird gelesen, wenn die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> enthält.  

oder - 
Der <paramref name="index" />-Parameter gibt eine Position an, die sich außerhalb der durch die <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />-Eigenschaft angegebenen Länge des Bytearrays befindet.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">Ruft die Länge der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft in Bytes ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">Die Länge der Binärdaten in der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">Die <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />-Eigenschaft wird gelesen, wenn die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> enthält.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Verkettet die beiden <see cref="T:System.Data.SqlTypes.SqlBinary" />-Parameter, um eine neue <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu erstellen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Die verketteten Werte des <paramref name="x" />-Parameters und des <paramref name="y" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur in ein <see cref="T:System.Byte" />-Array.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Ein <see cref="T:System.Byte" />-Array.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Konvertiert ein Bytearray in eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">Das zu konvertierende Bytearray.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur, die das konvertierte Bytearray darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Eine <see cref="T:System.Xml.Schema.XmlSchema" />-Instanz.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">Konvertiert dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt in eine Zeichenfolge.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">Eine Zeichenfolge mit dem <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBinary" />. Wenn der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> NULL ist, enthält die Zeichenfolge "null".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Der Wert der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">Die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft wird gelesen, wenn die Eigenschaft <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> enthält.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">Stellt einen Ganzzahlwert von entweder 1 oder 0 dar, der in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur unter Verwendung des angegebenen booleschen Werts.</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Der Wert für die neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur; entweder <see langword="true" /> oder <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur unter Verwendung des angegebenen Ganzzahl.</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Die ganze Zahl, deren Wert für die neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Berechnet das bitweise AND von zwei angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The result of the logical AND operation.">Das Ergebnis der logischen AND-Operation.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur als Byte ab.</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein Byte, das den Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt mit dem bereitgestellten <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Ein zu vergleichendes <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert der Instanz und dem Wert angibt.  
  Wert 
  Beschreibung 
  Eine negative ganze Zahl 
  Diese Instanz ist kleiner als <paramref name="value" />.  

  Zero 
  Diese Instanz ist gleich <paramref name="value" />.  

  Eine positive ganze Zahl 
  Diese Instanz ist größer als <paramref name="value" />.  

- oder - 
 <paramref name="value" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Ein zu vergleichendes Objekt oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert der Instanz und dem Wert angibt.  
  Wert 
  Beschreibung 
  Eine negative ganze Zahl 
  Diese Instanz ist kleiner als <paramref name="value" />.  

  Zero 
  Diese Instanz ist gleich <paramref name="value" />.  

  Eine positive ganze Zahl 
  Diese Instanz ist größer als <paramref name="value" />.  

- oder - 
 <paramref name="value" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Vergleicht den angegebenen Objektparameter mit <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> ist und beide gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Stellt einen false-Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer als die zweite ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer oder gleich der zweiten Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Gibt an, ob der aktuelle <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see langword="Value" /> gleich <see langword="False" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> ,<see langword="false" />wenn die-Struktur NULL ist, andernfalls.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see langword="Value" /> gleich <see langword="true" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner als die zweite ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner oder gleich der zweiten ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Prüft zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> auf Gleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen nicht gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Stellt einen Wert von 1 dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Führt eine Einerkomplementoperation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Das Einerkomplement des angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Berechnet das bitweise AND von zwei angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The result of the logical AND operation.">Das Ergebnis der logischen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">Berechnet das bitweise OR der Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The results of the logical OR operation.">Die Ergebnisse der logischen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Prüft zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> auf Gleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">Führt eine bitweise exklusive OR-(XOR-)Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Das Ergebnis der logischen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">Konvertiert einen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> in einen booleschen Wert.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">Ein zu konvertierendes <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Ein boolescher Wert, der auf den <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> festgelegt ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlDouble" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlInt64" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlMoney" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlSingle" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">Mit dem Operator False kann der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> getestet werden, um zu bestimmen, ob dieser false ist.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Die zu testende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Parameter <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see langword="false" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer als die zweite ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer oder gleich der zweiten Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert den angegebenen Bytewert in einen <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Ein Bytewert, der in <see cref="T:System.Data.SqlTypes.SqlBoolean" /> konvertiert werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Wert, der 0 (null) oder 1 enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> auf Ungleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen nicht gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner als die zweite ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner oder gleich der zweiten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Führt eine NOT-Operation für einen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> aus.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">Der <see cref="T:System.Data.SqlTypes.SqlBoolean" />, für den die NOT-Operation ausgeführt wird.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" /> mit dem <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn das Argument true war, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, wenn das Argument NULL war; andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Führt eine Einerkomplementoperation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Das Einerkomplement des angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">Mit dem Operator True kann der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> getestet werden, um zu bestimmen, ob dieser true ist.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Die zu testende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Parameter <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see langword="true" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Führt eine bitweise OR-Operation für die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen durch.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert das Ergebnis der bitweisen OR-Operation ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">Konvertiert die angegebene <see cref="T:System.String" />-Darstellung eines logischen Werts in seine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Entsprechung.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">Der zu konvertierende <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur mit dem analysierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">Eine neue <see langword="SqlInt16" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see langword="SqlInt16" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">Eine neue <see langword="SqlInt32" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see langword="SqlInt32" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">Eine neue <see langword="SqlInt64" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see langword="SqlInt64" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Wert 1. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="false" /> ist, ist der neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Wert 0. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur weder 1 noch 0 ist, ist der neue Wert von <see cref="T:System.Data.SqlTypes.SqlMoney" /><see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren Wert 1 oder 0 ist.  
Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur True ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur 1, andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">Eine neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, dann ist der Wert der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in eine Zeichenfolge.</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">Eine Zeichenfolge mit dem Wert von <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Wenn der Wert NULL ist, enthält die Zeichenfolge "null".</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Stellt einen true-Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">Die Eigenschaft ist auf NULL festgelegt.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Das Ergebnis der logischen XOR-Operation.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">Stellt eine 8-Bit-Ganzzahl ohne Vorzeichen im Bereich zwischen 0 und 255 dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur unter Verwendung des angegebenen Byte.</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Ein Bytewert, der in der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft der neuen <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gespeichert werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" />-Eigenschaft das Ergebnis der Addition enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Die Ergebnisse der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Die Ergebnisse der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">Vergleicht diese Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Objekt und gibt eine Angabe über das Verhältnis der Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">Das zu vergleichende <see cref="T:System.Data.SqlTypes.SqlByte" />-Objekt.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlByte" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">Vergleicht den angegebenen <see cref="T:System.Object" />-Parameter mit der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Objekts.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">Ruft einen Boolean-Wert ab, der angibt, ob diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Eine Konstante, die den größtmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlByte" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Eine Konstante, die den kleinstmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlByte" /> darstellt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" /> auf Ungleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Der Einerkomplementoperator führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, dessen <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft die Summe der beiden Operanden enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Die Ergebnisse der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Die Ergebnisse der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">Die Ergebnisse der bitweisen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter, der in ein <see cref="T:System.Data.SqlTypes.SqlByte" /> konvertiert werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, dessen <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in ein Byte.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">Die <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, die in ein Byte konvertiert werden soll.</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Ein Byte, dessen Wert gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see langword="SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">Eine <see langword="SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">Eine Instanz der <see langword="SqlString" />-Klasse.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem vom <see cref="T:System.Data.SqlTypes.SqlString" /> dargestellten numerischen Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see langword="SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert den angegebenen Bytewert in einen <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Ein Bytewert, der in <see cref="T:System.Data.SqlTypes.SqlByte" /> konvertiert werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem angegebenen Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" /> auf Ungleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Der Einerkomplementoperator führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Das Ergebnis der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Der zu analysierende <see langword="String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur mit der 8-Bit-Zahl, die durch den <see langword="String" />-Parameter dargestellt wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Das Ergebnis der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see langword="SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Eine <see langword="SqlDouble" />-Struktur mit demselben Wert wie dieses <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Eine <see langword="SqlInt16" />-Struktur mit demselben Wert wie dieses <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert dieses <see cref="T:System.Data.SqlTypes.SqlByte" /> in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Eine <see langword="SqlInt32" />-Struktur mit demselben Wert wie dieses <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Eine <see langword="SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlByte" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see langword="SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see langword="SqlSingle" />-Struktur mit demselben <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> wie diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> in <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">Ein <see langword="SqlString" />, der die Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlByte" /> der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">Eine Zeichenfolge mit dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> von <see cref="T:System.Data.SqlTypes.SqlByte" />. Wenn der <see langword="Value" /> NULL ist, ist der <see langword="String" /> eine NULL-Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Der Wert der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="The results of the XOR operation.">Die Ergebnisse der XOR-Operation.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">Stellt einen veränderlichen Referenztyp dar, der entweder einen <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> oder einen <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" /> umschließt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">Initialisiert anhand des angegebenen Bytearrays eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse.</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">Das Array der Bytes ohne Vorzeichen.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse auf Grundlage des angegebenen <see cref="T:System.Data.SqlTypes.SqlBinary" />-Werts.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Wert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse auf Grundlage des angegebenen <see cref="T:System.IO.Stream" />-Werts.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Ein <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Gibt einen Verweis auf den internen Puffer zurück.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Ein Verweis auf den internen Puffer. Für <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanzen, die auf nicht verwalteten Zeigern erstellt wurden, wird eine verwaltete Kopie des internen Puffers zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />, der die XSD des angegebenen <see langword="XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">Ruft einen booleschen Wert ab, der angibt, ob dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn <see cref="T:System.Data.SqlTypes.SqlBytes" /> NULL, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">Ruft die <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz am angegebenen Index ab oder legt diese fest.</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Ein <see cref="T:System.Int64" />-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Ein <see cref="T:System.Byte" />-Wert.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Ruft die Länge des Werts ab, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Ein <see cref="T:System.Int64" />-Wert, der die Länge des Werts darstellt, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.  
Gibt -1 zurück, wenn der Instanz kein Puffer zur Verfügung steht oder wenn der Wert NULL ist.  
Gibt eine <see cref="P:System.IO.Stream.Length" /> für eine mit dem Stream umschlossene Instanz zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Ruft die maximale Länge des Werts des internen Puffers dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> ab.</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Ein long-Wert, der die maximale Länge des Werts des internen Puffers darstellt. Gibt -1 für ein mit dem Stream umschlossenes <see cref="T:System.Data.SqlTypes.SqlBytes" /> zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Ruft eine NULL-Instanz dieses <see cref="T:System.Data.SqlTypes.SqlBytes" />-Objekts ab.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">Eine-Instanz <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> , deren <see langword="true" />-Eigenschaft zurückgibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">Kopiert Bytes aus dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz in den übergebenen Puffer und gibt die Anzahl kopierter Bytes zurück.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Ein <see cref="T:System.Int64" />-long-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Der Bytearraypuffer, in den kopiert werden soll.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Eine <see cref="T:System.Int32" />-Ganzzahl, die die Anzahl der zu kopierenden Bytes darstellt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">Ein <see cref="T:System.Int64" />-long-Wert, der die Anzahl der kopierten Bytes darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Legt die Länge dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz fest.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">Der <see cref="T:System.Int64" />-long-Wert, der die Länge darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">Legt diese <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz auf NULL fest.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Gibt Informationen über den Speicherzustand dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Eine <see cref="T:System.Data.SqlTypes.StorageState" />-Enumeration.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">Ruft die Daten dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> als Stream ab oder legt diese als solchen fest.</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">Der Stream, der die SqlBytes-Daten enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Ruft Serialisierungsinformationen mit allen Daten ab, die für das erneute Instanziieren dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz benötigt werden.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Der Zielkontext der Serialisierung.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Erstellt eine <see cref="T:System.Data.SqlTypes.SqlBinary" /> von dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz oder gibt diese zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" /> von dieser Instanz.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Gibt eine verwaltete Kopie des Werts, der in diesem <see cref="T:System.Data.SqlTypes.SqlBytes" /> enthalten ist, zurück.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> als Bytearray.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Kopiert Bytes aus dem übergebenen Puffer in diese <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Ein <see cref="T:System.Int64" />-long-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Der Bytearraypuffer, in den kopiert werden soll.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Eine <see cref="T:System.Int32" />-Ganzzahl, die die Anzahl der zu kopierenden Bytes darstellt.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> ist ein veränderlicher Referenztyp, der ein <see cref="T:System.Char" />-Array oder eine <see cref="T:System.Data.SqlTypes.SqlString" />-Instanz umschließt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlChars" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">Initialisiert anhand des angegebenen Zeichenarrays eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlChars" />-Klasse.</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Ein <see cref="T:System.Char" />-Array.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlChars" />-Klasse auf Grundlage des angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Werts.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Gibt einen Verweis auf den internen Puffer zurück.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Ein Verweis auf den internen Puffer. Für <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanzen, die auf nicht verwalteten Zeigern erstellt wurden, wird eine verwaltete Kopie des internen Puffers zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">Ruft einen booleschen Wert ab, der angibt, ob dieses <see cref="T:System.Data.SqlTypes.SqlChars" /> NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Data.SqlTypes.SqlChars" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">Ruft die <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz am angegebenen Index ab oder legt diese fest.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Ein <see cref="T:System.Int64" />-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Ein <see cref="T:System.Char" />-Wert.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Ruft die Länge des Werts ab, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Ein <see cref="T:System.Int64" />-Wert, der die Länge des Werts in Zeichen angibt, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.  
Gibt -1 zurück, wenn kein Puffer der Instanz zur Verfügung steht, oder wenn der Wert NULL ist.  
Gibt eine <see cref="P:System.IO.Stream.Length" /> für eine mit dem Stream umschlossene Instanz zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">Ruft die maximale Länge des Werts in 2-Byte-Zeichen ab, die der interne Puffer speichern kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Ein <see cref="T:System.Int64" />-Wert, der in 2-Byte-Zeichen die maximale Länge des Werts des internen Puffers darstellt.  
Gibt -1 für ein mit dem Stream umschlossenes <see cref="T:System.Data.SqlTypes.SqlChars" /> zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Gibt eine NULL-Instanz dieses <see cref="T:System.Data.SqlTypes.SqlChars" /> zurück.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">Eine-Instanz <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> , deren <see langword="true" />-Eigenschaft zurückgibt. Weitere Informationen finden Sie unter Behandeln von NULL-Werten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">Kopiert Zeichen aus dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz in den übergebenen Puffer und gibt die Anzahl kopierter Zeichen zurück.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Ein <see cref="T:System.Int64" />-<see langword="long" />-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Der Zeichenarraypuffer, in den hineinkopiert werden soll.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">Ein <see cref="T:System.Int32" />-Ganzzahlwert, der die Anzahl der zu kopierenden Zeichen darstellt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">Ein <see cref="T:System.Int64" />-<see langword="long" />-Wert, der die Anzahl der kopierten Bytes darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Legt die Länge dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz fest.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">Der <see cref="T:System.Int64" />-<see langword="long" />-Wert, der die Länge darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">Legt diese <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz auf NULL fest.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Gibt Informationen über den Speicherzustand dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Eine <see cref="T:System.Data.SqlTypes.StorageState" />-Enumeration.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Ruft Serialisierungsinformationen mit allen Daten ab, die für das erneute Instanziieren dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz benötigt werden.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Der Zielkontext der Serialisierung.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz in ihre entsprechende <see cref="T:System.Data.SqlTypes.SqlString" />-Darstellung.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Darstellung für diese Typ.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Gibt eine verwaltete Kopie des Werts, der in diesem <see cref="T:System.Data.SqlTypes.SqlChars" /> enthalten ist, zurück.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlChars" /> als Zeichenarray.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Kopiert Zeichen aus dem übergebenen Puffer in diese <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz.</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Ein <see langword="long" />-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Der Zeichenarraypuffer, in den hineinkopiert werden soll.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">Eine <see cref="T:System.Int32" />-Ganzzahl, die die Anzahl der zu kopierenden Zeichen darstellt.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt die Werte für Vergleichsoptionen einer <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Gibt an, dass Sortierungen auf Grundlage des numerischen Werts anstelle des alphabetischen Werts eines Zeichens durchgeführt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">Führt eine binäre Sortierung aus.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen die Groß- und Kleinschreibung nicht beachtet werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen der Kana-Typ ignoriert werden soll. Der Kana-Zeichentyp bezieht sich auf die japanischen Hiragana- und Katakana-Schriftzeichen, die im Japanischen phonetische Laute darstellen. Hiragana wird für japanische Ausdrücke und Wörter verwendet, während Katakana für Lehnwörter aus anderen Sprachen, z. B. "Computer" oder "Internet", verwendet wird. Ein phonetischer Laut kann sowohl in Hiragana als auch in Katakana dargestellt werden. Wenn dieser Wert ausgewählt ist, wird das Hiragana-Zeichen für einen Laut als gleichwertig mit dem Katakana-Zeichen für denselben Laut betrachtet.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen Kombinationszeichen ohne horizontalen Vorschub, z. B. diakritische Zeichen, ignoriert werden. Der Unicode-Standard definiert Kombinationszeichen als solche, die mit Basiszeichen kombiniert werden, um ein neues Zeichen zu bilden. Kombinationszeichen ohne horizontalen Vorschub nehmen beim Rendering keinen eigenständigen Platz ein. Weitere Informationen über Kombinationszeichen ohne horizontalen Vorschub finden Sie im Unicode-Standard unter https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen die Zeichenbreite ignoriert werden soll. Japanische Katakana-Zeichen können z. B. in voller oder halber Breite geschrieben werden. Wenn dieser Wert ausgewählt ist, werden die in voller Breite geschriebenen Katakana-Zeichen als denselben in halber Breite geschriebenen Zeichen gleichwertig betrachtet.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">Gibt die Standardeinstellungen der Optionen für <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleiche an.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">Stellt die Daten für Datum und Uhrzeit mit einem Wert im Bereich zwischen dem 1. Januar 1753 und dem 31. Dezember 9999 mit einer Genauigkeit von 3,33 Millisekunden dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden sollen. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> besitzt eine andere zugrunde liegende Datenstruktur als der entsprechende .NET Framework-Typ <see cref="T:System.DateTime" />, der jede Zeit zwischen dem 01.01.0001 12:00:00 Uhr und dem 31.12.9999 23:59:59 Uhr mit einer Genauigkeit von 100 Nanosekunden darstellen kann. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> speichert den relativen Unterschied zum 01.01.1900 um 00.00.00 Uhr. Deshalb gibt eine Konvertierung von "00.00.00 Uhr am 01.01.1900" in eine ganze Zahl den Wert 0 (null) zurück.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung des angegebenen <see cref="T:System.DateTime" />-Werts.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Eine <see langword="DateTime" />-Struktur.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter.</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">Ein Ganzzahlwert, der das Datum als Ticks darstellt.</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">Ein Ganzzahlwert, der die Uhrzeit als Ticks darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat und den Tag zu initialisieren.</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine ganze Zahl, die das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Tagesnummer der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat, den Tag, die Stunde, die Minute und die Sekunde der neuen Struktur zu initialisieren.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Tag des Monats der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Stunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Minute der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Sekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat, den Tag, die Stunde, die Minute, die Sekunde und die Millisekunde der neuen Struktur zu initialisieren.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Tag des Monats der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Stunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Minute der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Sekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Double-Wert, der die Millisekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat, den Tag, die Stunde, die Minute, die Sekunde und die Mikrosekunde der neuen Struktur zu initialisieren.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der den Tag der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Stunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Minute der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Sekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein Ganzzahlwert, der die Mikrosekunde (Tausendstel einer Millisekunde) der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Fügt dem angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" /> eine <see langword="TimeSpan" /> hinzu.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Ein <see langword="Timespan" />-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur mit der angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Zero 
  Diese Instanz entspricht <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Größer als 0 (null) 
  Diese Instanz ist größer als <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

- oder - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ruft die Anzahl der Ticks ab, die das Datum dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</summary>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Die Anzahl von Ticks, die das in der <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur enthaltene Datum darstellt.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Die Ausnahme, die ausgelöst wird, wenn die <see langword="Value" />-Eigenschaft einer <see cref="N:System.Data.SqlTypes" />-Struktur auf NULL festgelegt wird.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Ruft den Hashcode für diese Instanz ab.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Stellt den größten gültigen Datumswert für eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur dar.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Stellt den kleinsten gültigen Datumswert für eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur dar.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Fügt der angegebenen <see cref="T:System.TimeSpan" />-Struktur die durch den angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Parameter angegebene Zeit <paramref name="t" /> hinzu.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Eine <see cref="T:System.TimeSpan" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Wenn ein Argument <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" /> ist, ist der neue <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> gleich <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur in eine <see cref="T:System.DateTime" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein <see cref="T:System.DateTime" />-Objekt, dessen <see cref="P:System.DateTime.Date" />-Eigenschaft und <see cref="P:System.DateTime.TimeOfDay" />-Eigenschaften dieselben Werte für Datum und Uhrzeit wie die <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft der angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur enthalten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> gleich dem Datum und der Uhrzeit ist, die durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellt werden. Wenn der <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see langword="Value" /> der neu erstellten <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.DateTime" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Eine <see langword="DateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> gleich der Kombination der <see cref="P:System.DateTime.Date" />-Eigenschaft und der <see cref="P:System.DateTime.TimeOfDay" />-Eigenschaft der angegebenen <see cref="T:System.DateTime" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Subtrahiert die angegebene <see cref="T:System.TimeSpan" />-Struktur <paramref name="t" /> von der angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Eine <see cref="T:System.TimeSpan" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, die die Ergebnisse der Subtraktion darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">Konvertiert die angegebene <see cref="T:System.String" />-Darstellung einer Datums- und Zeitangabe in eine entsprechende <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">Der zu analysierende <see langword="string" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, die gleich dem Datum und der Uhrzeit ist, die durch den angegebenen <see langword="string" /> dargestellt werden.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">Eine Konstante, deren Wert die einer Stunde entsprechende Anzahl von Ticks ist.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">Eine Konstante, deren Wert die einer Minute entsprechende Anzahl von Ticks ist.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">Eine Konstante, deren Wert die einer Sekunde entsprechende Anzahl von Ticks ist.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">Subtrahiert die angegebene <see langword="Timespan" /> von dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Instanz.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Ein <see langword="Timespan" />-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ruft die Anzahl der Ticks ab, die die Uhrzeit dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Die Anzahl der Ticks, die die Uhrzeit dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Eine <see langword="SqlString" />-Struktur, deren Wert eine Zeichenfolge ist, die Datum und Uhrzeit aus dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ein <see langword="String" />, der die <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Der Wert dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Die Ausnahme, die ausgelöst wird, wenn die <see langword="Value" />-Eigenschaft einer <see cref="N:System.Data.SqlTypes" />-Struktur auf NULL festgelegt wird.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">Stellt einen numerischen Wert mit fester Genauigkeit und Dezimalstellen zwischen - 10^38 +1 und 10^38 - 1 dar.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung der angegebenen Parameter.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die Anzahl der Dezimalstellen, in die die <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur aufgelöst wird.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Ein boolescher Wert, der angibt, ob die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur eine positive oder negative Zahl darstellt.</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data2, data3 und data4 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data1, data3 und data4 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data1, data2 und data4 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data1, data2 und data3 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung der angegebenen Parameter.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die Anzahl der Dezimalstellen, in die die <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur aufgelöst wird.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Ein boolescher Wert, der angibt, ob die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur eine positive oder negative Zahl darstellt.</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Die 128-Bit-Ganzzahl ohne Vorzeichen, die den Wert des neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" /> bereitstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen <see cref="T:System.Decimal" />-Werts.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Der <see cref="T:System.Decimal" />-Wert, der als <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur gespeichert werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen Double-Parameters.</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Ein Double, der den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen Ganzzahlwerts.</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Der angegebene Ganzzahlwert, der als Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen Long Integer-Werts.</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Der angegebene Long Integer-Wert, der als Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Die Abs-Methode ruft den absoluten Wert des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ab.</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Zahl ohne Vorzeichen enthält, die den absoluten Wert des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Berechnet die Summe der beiden Operatoren <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Summe enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">Die Dezimalstellen des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden werden an die Anzahl der Ziffern angepasst, die durch den digits-Parameter angegeben sind. Abhängig vom Wert des fRound-Parameters wird der Wert entweder auf die entsprechende Anzahl Ziffern gerundet oder abgeschnitten.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">Die anzupassende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">Die Anzahl der Ziffern in der angepassten Struktur.</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">Wenn dieser Parameter <see langword="true" /> ist, wird der neue Wert gerundet. Wenn er <see langword="false" /> ist, wird der Wert abgeschnitten.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die angepasste Zahl enthält.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">Ruft die binäre Darstellung des Werts dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur als ein Bytearray ab.</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">Ein Bytearray, das die binäre Darstellung des Werts der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Gibt die kleinste ganze Zahl zurück, die größer oder gleich der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ist.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, für die der Höchstwert berechnet werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der die kleinste ganze Zahl darstellt, die größer oder gleich der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Objekt und gibt eine Angabe über das Verhältnis der Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">Passt den Wert des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden an die angegebene Genauigkeit und die Anzahl von Dezimalstellen an.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert angepasst werden soll.</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die Genauigkeit für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die Anzahl der Dezimalstellen für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert an die Genauigkeit und die Anzahl von Dezimalstellen angepasst wurde, die in den Parametern angegeben sind.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">Ruft die binäre Darstellung dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur als ein Array von ganzen Zahlen ab.</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Ein Array von ganzen Zahlen, das die binäre Darstellung dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">Der Divisionsoperator berechnet die Ergebnisse der Division des ersten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist der Wert von <see langword="SqlDecimal" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">Vergleicht den angegebenen <see cref="T:System.Object" />-Parameter mit der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Instanz.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> und gleich diesem ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">Rundet eine angegebene <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Zahl auf die nächstkleinere ganze Zahl ab.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, für die der niedrigste Wert berechnet werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, die den Ganzzahlteil dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">Gibt an, ob der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur größer 0 (null) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> NULL zugewiesen wurde. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">Eine Konstante, die den größtmöglichen Wert für die <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />-Eigenschaft darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">Eine Konstante, die den Höchstwert für die <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />-Eigenschaft darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine Konstante, die den Höchstwert für eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine Konstante, die den Mindestwert für eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur darstellt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Berechnet die Summe der beiden Operatoren <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Summe enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">Der Divisionsoperator berechnet die Ergebnisse der Division des ersten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see langword="Decimal" />-Struktur, deren Wert gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert den <see cref="T:System.Double" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Double" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert gleich dem Wert des <see cref="T:System.Double" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur in SqlDecimal.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Operanden in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert den <see cref="T:System.Decimal" />-Wert in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Der zu konvertierende <see cref="T:System.Decimal" />-Wert.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich dem Wert des <see langword="Decimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Int64" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Int64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich dem Wert des <see cref="T:System.Int64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Berechnet die Ergebnisse der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Werteigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Der unäre Operator Minus negiert den <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">Die zu negierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert die Ergebnisse der Negation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in ihre <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Entsprechung.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Der zu analysierende <see langword="String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">Erhöht den Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur auf die angegebene Potenz.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">Die zu potenzierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">Ein Double-Wert, der die Potenz angibt, um die die Zahl erhöht werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur mit den Ergebnissen.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Ruft die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft ab.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Die maximale Anzahl von Ziffern für die Darstellung des <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">Ruft die Zahl, die dem Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur am nächsten liegt, mit der angegebenen Genauigkeit ab.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">Die zu rundende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">Die Anzahl der signifikanten Ziffern für Bruchzahlen (Genauigkeit) im Rückgabewert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur mit den Ergebnissen der Rundung.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">Ruft die Anzahl der Dezimalstellen ab, in die der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> aufgelöst wird.</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">Die Anzahl der Dezimalstellen, in die die <see langword="Value" />-Eigenschaft aufgelöst wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Ruft einen Wert ab, der das Vorzeichen der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Eigenschaft einer <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Struktur angibt.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Vorzeichen ermittelt werden soll.</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine Zahl, die das Vorzeichen der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Berechnet die Ergebnisse der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Werteigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">Gibt ein Double zurück, das dem Inhalt der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft dieser Instanz entspricht.</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft als Dezimalzahl.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur gleich <see langword="true" /> ist, ist der <see langword="Value" /> der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gleich 1. Andernfalls ist der <see langword="Value" /> von <see cref="T:System.Data.SqlTypes.SqlByte" /> gleich 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, deren Wert eine Zeichenfolgendarstellung des in dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthaltenen Werts ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Ein neues <see cref="T:System.String" />-Objekt mit der Zeichenfolgenentsprechung der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Eigenschaft der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">Schneidet den Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur an der gewünschten Position ab.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">Die zu verkürzende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">Die Dezimalstelle, auf die die Zahl abgeschnitten wird.</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">Geben Sie für den <paramref name="position" />-Parameter einen negativen Wert an, um den Wert an der entsprechenden Position links vom Dezimaltrennzeichen abzuschneiden.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">Eine Zahl zwischen -79.228.162.514.264.337.593.543.950.335 und 79.228.162.514.162.514.264.337.593.543.950.335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">Stellt eine Gleitkommazahl im Bereich zwischen -1,79E +308 bis 1,79E +308 dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur unter Verwendung des angegebenen Double-Parameters, um die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Eigenschaft der neuen <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />-Struktur festzulegen.</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Ein Double, dessen Wert für das neue <see cref="T:System.Data.SqlTypes.SqlDouble" /> verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Der Additionsoperator berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Gibt den Hashcode für diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">Gibt einen Boolean-Wert zurück, mit dem angegeben wird, ob diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Instanz NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine Konstante, die den Höchstwert für eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Eine Konstante, die den kleinstmöglichen Wert vom Typ <see cref="T:System.Data.SqlTypes.SqlDouble" /> darstellt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> auf Ungleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Der Additionsoperator berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />, abhängig von der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters, 0 (null) oder 1 ist. Wenn <see cref="T:System.Data.SqlTypes.SqlBoolean" /> den Wert <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in Double.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Ein Double, der dem Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, dessen <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem Wert der durch den <see cref="T:System.Data.SqlTypes.SqlString" /> dargestellten Zahl ist. Wenn <see cref="T:System.Data.SqlTypes.SqlString" /> den Wert <see cref="F:System.Data.SqlTypes.SqlString.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlByte" /> den Wert <see cref="F:System.Data.SqlTypes.SqlByte.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlDecimal" /> den Wert <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlInt16" /> den Wert <see cref="F:System.Data.SqlTypes.SqlInt16.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlInt32" /> den Wert <see cref="F:System.Data.SqlTypes.SqlInt32.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlInt64" /> den Wert <see cref="F:System.Data.SqlTypes.SqlInt64.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlMoney" /> den Wert <see cref="F:System.Data.SqlTypes.SqlMoney.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlSingle" /> den Wert <see cref="F:System.Data.SqlTypes.SqlSingle.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert den angegebenen Double-Wert in einen <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The double value to convert.">Der zu konvertierende Double-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">Ein <see cref="T:System.Data.SqlTypes.SqlDouble" /> mit demselben Wert wie der angegebene Double-Parameter.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> auf Ungleichheit.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="The results of the subtraction operation.">Die Ergebnisse der Subtraktionsoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Gibt den negierten Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zurück.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Der zu analysierende <see langword="String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlDouble" /> mit dem durch den <see langword="String" /> dargestellten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="The results of the subtraction operation.">Die Ergebnisse der Subtraktionsoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Ein XML-Schema, das von .NET Framework verwendet wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Eine <see langword="SqlBoolean" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn der <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur nicht 0 (null) ist. <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn <see cref="T:System.Data.SqlTypes.SqlDouble" /> 0 (null) ist und <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, wenn die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see langword="SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">Eine neue <see langword="SqlDecimal" />-Struktur, deren konvertierter Wert gleich dem gerundeten Wert dieses <see langword="SqlDouble" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see langword="Value" /> gleich dem ganzzahligen Teil des Werts der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see langword="Value" /> gleich dem ganzzahligen Teil des Werts der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see langword="Value" /> gleich dem ganzzahligen Teil des Werts der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Eine neue <see langword="SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> gleich dem Wert des <see cref="T:System.Data.SqlTypes.SqlDouble" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Eine neue <see langword="SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlDouble" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Ein <see langword="SqlString" />, der den <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlDouble" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in eine Zeichenfolge.</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Eine Zeichenfolge, die den <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlDouble" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Der Wert der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">Stellt eine GUID dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung des angegebenen Bytearrayparameters.</summary>
      <param name="value" vsli:raw="A byte array.">Ein Bytearray.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung des angegebenen <see cref="T:System.Guid" />-Parameters.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Eine <see cref="T:System.Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung der angegebenen Werte.</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Die ersten vier Bytes der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Die nächsten zwei Bytes der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Die nächsten zwei Bytes der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung des angegebenen <see cref="T:System.String" />-Parameters.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Ein <see cref="T:System.String" />-Objekt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück. Vergleicht mehr als die letzten 6 Bytes, behandelt die letzten 6 Bytes beim Vergleich aber als die höchstwertigen Bytes.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist mit dem Objekt identisch.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur mit dem angegebenen Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück. Vergleicht mehr als die letzten 6 Bytes, behandelt die letzten 6 Bytes beim Vergleich aber als die höchstwertigen Bytes.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist mit dem Objekt identisch.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlGuid" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlGuid" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Gibt den Hashcode für diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">Ruft einen Boolean-Wert ab, der angibt, ob diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn <see langword="null" /> Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlBinary" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">Ein <see langword="SqlBinary" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlGuid" />, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> des <see cref="T:System.Data.SqlTypes.SqlBinary" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" />-Parameter in <see cref="T:System.Guid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Eine neue <see cref="T:System.Guid" />, die gleich dem <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> der <see cref="T:System.Data.SqlTypes.SqlGuid" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Guid" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlGuid" />, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> gleich dem <see cref="T:System.Guid" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.String" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Der zu analysierende <see langword="String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlGuid" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur in ein Bytearray.</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Ein Bytearray, das den <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see langword="SqlBinary" />-Struktur, die die Bytes in der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur mit der Zeichenfolgenentsprechung der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Ein <see cref="T:System.String" /> mit der Zeichenfolgenentsprechung der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">Eine <see cref="T:System.Guid" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">Stellt eine 16-Bit-Ganzzahl mit Vorzeichen dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur unter Verwendung des angegebenen Short Integer (kurze ganze Zahl)-Parameters.</summary>
      <param name="value" vsli:raw="A short integer.">Ein Short Integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen AND enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen OR enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlInt16" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">Vergleicht das angegebene Objekt mit der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.String" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />. Weitere Informationen finden Sie unter Behandeln von NULL-Werten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Eine Konstante, die den größtmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Eine Konstante, die den kleinstmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />-Wert.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />-Wert.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Der Operator ~ führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft das Komplement der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen AND enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen OR enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen XOR enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur in einen Short Integer.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Ein Short Integer, dessen Wert der Wert des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert das angegebene <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt in <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Objektparameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert den angegebenen Short Integer in <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A short integer value.">Ein Short Integer-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit demselben Wert wie der angegebene Short Integer.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Der Operator ~ führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft das Komplement der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">Der unäre Operator Minus negiert den <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Der zu analysierende <see langword="String" />.</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Eine 16-Bit-Ganzzahl mit Vorzeichen, die dem Wert im angegebenen <see cref="T:System.String" /> entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Ein XML-Schema, das von .NET Framework verwendet wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist. Wenn der Wert von <see cref="T:System.Data.SqlTypes.SqlInt16" /> kleiner als 0 (null) oder größer als 255 ist, tritt eine <see cref="T:System.OverflowException" /> auf.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> dieser Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur in <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Ein <see cref="T:System.String" />-Objekt, das den <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> dieser Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">Ruft den Wert dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Ein Short Integer, der den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit den Ergebnissen der XOR-Operation.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">Stellt eine 32-Bit-Ganzzahl mit Vorzeichen dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur unter Verwendung des angegebenen Ganzzahlwerts.</summary>
      <param name="value" vsli:raw="The integer to be converted.">Die zu konvertierende ganze Zahl.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Summe der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt32" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Berechnet das bitweise OR der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlInt32" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur NULL ist.</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Diese Eigenschaft ist <see langword="true" />, wenn <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine Konstante, die den größtmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt32" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine Konstante, die den kleinstmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt32" /> darstellt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlInt32" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />-Wert.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />-Wert.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt32" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Führt eine bitweise Einerkomplementoperation für die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der Einerkomplementoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Summe der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt32" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Berechnet das bitweise OR der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Führt eine bitweise exklusive OR-Operation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in eine ganze Zahl.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="The converted integer value.">Der konvertierte Ganzzahlwert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft des <see langword="SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert das angegebene <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Eigenschaft in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert die angegebene ganze Zahl in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="An integer value.">Ein Ganzzahlwert.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren Werteigenschaft dem ganzzahligen Parameter entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Führt eine bitweise Einerkomplementoperation für die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der Einerkomplementoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">Negiert den <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">Der zu analysierende <see cref="T:System.String" />.</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Eine 32-Bit-Ganzzahl mit Vorzeichen, die dem Wert im angegebenen <see cref="T:System.String" /> entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur ist. Wenn der Wert von <see langword="SqlInt32" /> kleiner als 0 (null) oder größer als 255 ist, tritt eine <see cref="T:System.OverflowException" /> auf.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Eine <see cref="T:System.String" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">Ruft den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine ganze Zahl, die den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur darstellt.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">Die Eigenschaft enthält <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Führt eine bitweise exklusive OR-Operation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">Stellt eine 64-Bit-Ganzzahl mit Vorzeichen dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur unter Verwendung des angegebenen Long Integer.</summary>
      <param name="value" vsli:raw="A long integer.">Ein Long Integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich der Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft die Ergebnisse der Divisionsoperation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlInt64" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />, der die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">Ruft einen Boolean-Wert ab, der angibt, ob diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine Konstante, die den größtmöglichen Wert einer <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine Konstante, die den kleinstmöglichen Wert einer <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur darstellt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlInt64" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlInt64" />-Wert.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Ein <see cref="T:System.Data.SqlTypes.SqlInt64" />-Wert.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden SqlInt64-Parameter durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich der Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft die Ergebnisse der Divisionsoperation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem ganzzahligen Teil des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in Long.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer Long-Wert, der gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> von <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft den ganzzahligen Teil des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Eine neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert den long-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A long integer value.">Ein Long Integer-Wert.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Wert des long-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden SqlInt64-Parameter durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich den Ergebnissen der Subtraktionsoperation ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Der unäre Operator Minus negiert den <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem negierten <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">Der zu analysierende <see cref="T:System.String" />.</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Eine 64-Bit-Ganzzahl mit Vorzeichen, die dem Wert im angegebenen <see cref="T:System.String" /> entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich den Ergebnissen der Subtraktionsoperation ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt16" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlMoney" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlSingle" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> in <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Ein <see cref="T:System.String" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">Ruft den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Ein Long Integer, der den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">Stellt einen Währungswert von –2 63 (oder –922.337.203.685.477,5808) bis 263 –1 (oder +922.337.203.685.477,5807) mit einer Genauigkeit eines Zehntausendstels einer Währungseinheit dar, der in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen <see cref="T:System.Decimal" />-Wert.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen Double-Wert.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen Ganzzahlwert.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen Long Integer-Wert.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Element die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlMoney" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist und damit übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Ruft den Hashcode für diese Instanz ab.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />, der die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">Gibt einen Boolean-Wert zurück, mit dem angegeben wird, ob diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Stellt den Höchstwert dar, der der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Stellt den kleinsten Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Element die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch den zweiten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Decimal" />-Struktur, deren Wert gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser Operator konvertiert den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert den <see cref="T:System.Decimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Der zu konvertierende <see cref="T:System.Decimal" />-Wert.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> gleich dem Wert des <see cref="T:System.Decimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Int64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Int64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem Wert des <see cref="T:System.Int64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Der unäre Operator Minus negiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">Die zu negierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> die Ergebnisse der Negation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in ihre <see cref="T:System.Data.SqlTypes.SqlMoney" />-Entsprechung.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Der zu analysierende <see langword="String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlMoney" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter vom ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">Konvertiert den Wert dieser Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> in eine <see cref="T:System.Decimal" />-Struktur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine <see cref="T:System.Decimal" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in einen <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Ein Double mit einem Wert, der gleich dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in einen <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine 32-Bit-Ganzzahl, deren Wert gleich dem ganzzahligen Bereich dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Konvertiert den Wert dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in einen <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Eine 64-Bit-Ganzzahl, deren Wert gleich dem ganzzahligen Bereich dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur 0 (null) ist, ist der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, das gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt16" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt32" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlSingle" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, deren Wert eine Zeichenfolge ist, die den Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> in eine Zeichenfolge.</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Eine Zeichenfolge, deren Wert die Zeichenfolgendarstellung des Werts dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">Ruft den Währungswert einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Der Währungswert einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">Die Eigenschaft ist auf NULL festgelegt.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Stellt den Wert 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">Die <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse ist nicht für die Verwendung als eigenständige Komponente ausgelegt, sondern als Klasse, von der andere Klassen Standardfunktionen ableiten.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Die Ausnahme, die ausgelöst wird, wenn die <see langword="Value" />-Eigenschaft einer <see cref="N:System.Data.SqlTypes" />-Struktur auf NULL festgelegt wird.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNullValueException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNullValueException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNullValueException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <c>innerException</c>-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">Stellt eine Gleitkommazahl im Bereich zwischen -3,40E +38 bis 3,40E +38 dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur unter Verwendung des angegebenen Double-Parameters.</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Ein Double-Wert, der als <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine Gleitkommazahl, die als <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit der Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Dividiert die erste <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur durch die zweite.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">Eine <see langword="SqlInt64" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlSingle" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> und gleich diesem ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Ruft den Hashcode für diese Instanz ab.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen durch, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Stellt den Höchstwert dar, der der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Stellt den kleinsten Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Berechnet das Produkt der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem Ergebnis der Multiplikation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit der Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Dividiert die erste <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur durch die zweite.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">Führt einen logischen Vergleich der beiden SqlSingle-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in Gleitkommanotierung.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">Der in eine Gleitkommanotierung zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Wert.</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine Gleitkommanotierung mit dem Wert der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen durch, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Dieser implizite Operator konvertiert den <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert den angegebenen Gleitkommawert in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Der Gleitkommawert, der in <see cref="T:System.Data.SqlTypes.SqlSingle" /> zu konvertieren ist.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem Wert der angegebenen Gleitkommanotierung.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Berechnet das Produkt der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem Ergebnis der Multiplikation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Subtrahiert die zweite <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur von der ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Negiert den <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> der angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Konvertiert den angegebenen <see cref="T:System.String" /> in eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">Der zu analysierende <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlSingle" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Subtrahiert die zweite <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur von der ersten.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur gleich <see langword="true" /> ist, ist der <see langword="Value" /> der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gleich 1. Andernfalls ist der <see langword="Value" /> von <see cref="T:System.Data.SqlTypes.SqlByte" /> gleich 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein neuer <see langword="SqlDecimal" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein neuer <see langword="SqlDouble" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein neuer <see langword="SqlInt16" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt32" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlMoney" />, das gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Ein <see langword="String" />-Objekt, das den Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">Ruft den Wert dieser <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">Ein Gleitkommawert im Bereich zwischen -3,40E+38 bis 3,40E+38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Stellt den Wert 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">Stellt einen Zeichenstream variabler Länge dar, der in der Datenbank gespeichert oder dort abgerufen wird. <see cref="T:System.Data.SqlTypes.SqlString" /> hat eine andere zugrunde liegende Datenstruktur als der entsprechende <see cref="T:System.String" />-Datentyp in .NET Framework.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Gebietsschemabezeichner, Vergleichsoptionen und Daten.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data" vsli:raw="The data array to store.">Das zu speichernde Datenarray.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Klasse.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data" vsli:raw="The data array to store.">Das zu speichernde Datenarray.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> bei Unicode-Codierung. Andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Klasse.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data" vsli:raw="The data array to store.">Das zu speichernde Datenarray.</param>
      <param name="index" vsli:raw="The starting index within the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Die Anzahl der ab dem Index zu kopierenden Zeichen.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Klasse.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data" vsli:raw="The data array to store.">Das zu speichernde Datenarray.</param>
      <param name="index" vsli:raw="The starting index within the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Die Anzahl der ab dem Index zu kopierenden Zeichen.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> bei Unicode-Codierung. Andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Zeichenfolge.</summary>
      <param name="data" vsli:raw="The string to store.">Die zu speichernde Zeichenfolge.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Zeichenfolge und der Werte für den Gebietsschemabezeichner.</summary>
      <param name="data" vsli:raw="The string to store.">Die zu speichernde Zeichenfolge.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Zeichenfolge, des Gebietsschemabezeichners und der Werte für die Vergleichsoptionen.</summary>
      <param name="data" vsli:raw="The string to store.">Die zu speichernde Zeichenfolge.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Werte, um eine neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu erstellen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den verketteten Wert von <paramref name="x" /> und <paramref name="y" /> darstellt.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Gibt an, dass Sortierungen auf Grundlage des numerischen Werts anstelle des alphabetischen Werts eines Zeichens durchgeführt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">Gibt an, dass Sortierungen auf Grundlage des numerischen Werts anstelle des alphabetischen Werts eines Zeichens durchgeführt werden sollen.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Erstellt eine Kopie dieses <see cref="T:System.Data.SqlTypes.SqlString" />-Objekts.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt, in dem alle Eigenschaftswerte mit dem Original übereinstimmen.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Ruft das <see cref="T:System.Globalization.CompareInfo" />-Objekt ab, das definiert, wie für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur Zeichenfolgenvergleiche durchgeführt werden sollen.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Ein <see langword="CompareInfo" />-Objekt, das Zeichenfolgenvergleiche für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur definiert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">Ruft die <see cref="T:System.Globalization.CompareOptions" />-Enumeration ab, die dem angegebenen <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />-Wert entspricht.</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Ein <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />-Wert, der die Vergleichsoptionen für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur beschreibt.</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Ein <see langword="CompareOptions" />-Wert, der den <see langword="SqlCompareOptions" /> für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlString" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlString" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  Rückgabewert 
  Bedingung 
  Kleiner als 0 (null) 
  Diese Instanz ist kleiner als das Objekt.  

  Zero 
  Diese Instanz ist gleich dem Objekt.  

  Größer als 0 (null) 
  Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Ein <see cref="T:System.Data.SqlTypes.SqlString" /> mit dem neu verketteten Wert, der den Inhalt der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Ruft die <see cref="T:System.Globalization.CultureInfo" />-Struktur ab, die Informationen über die Kultur dieses <see cref="T:System.Data.SqlTypes.SqlString" />-Objekts darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">Eine <see cref="T:System.Globalization.CultureInfo" />-Struktur, die Informationen über die Kultur dieser SqlString-Struktur enthält, einschließlich der Namen der Kultur, des Schreibsystems und des verwendeten Kalenders. Außerdem beschreibt sie den Zugriff auf kulturabhängige Objekte, die Methoden für häufige Vorgänge bereitstellen, z. B. für das Formatieren von Datumsangaben und das Sortieren von Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlString" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlString.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlString" />-Objekts.</summary>
      <param name="value" vsli:raw="The object to be compared.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> ist und damit übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Ruft den Hashcode für diese Instanz ab.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Ruft ein Bytearray ab, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im ANSI-Format enthält.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Ein Bytearray, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im ANSI-Format enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Ruft ein Bytearray ab, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im Unicode-Format enthält.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Ein Bytearray, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im Unicode-Format enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen die Groß- und Kleinschreibung nicht berücksichtigt werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">Gibt an, dass beim Zeichenfolgenvergleich Zeichen vom Typ Kana ignoriert werden.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">Gibt an, dass bei Zeichenfolgenvergleichen Kombinationszeichen ohne horizontalen Vorschub, z. B. diakritische Zeichen, ignoriert werden.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">Gibt an, dass beim Zeichenfolgenvergleich die Zeichenbreite ignoriert wird.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur NULL ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="P:System.Data.SqlTypes.SqlString.Value" /><see cref="F:System.Data.SqlTypes.SqlString.Null" /> ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Gibt das Gebietsschema und die Sprache für die <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">Der Gebietsschemabezeichner für die in der <see cref="P:System.Data.SqlTypes.SqlString.Value" />-Eigenschaft gespeicherte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Ein <see cref="T:System.Data.SqlTypes.SqlString" /> mit dem neu verketteten Wert, der den Inhalt der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">Die zu konvertierende <see langword="SqlDecimal" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see langword="SqlDecimal" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, dessen Wert die Zeichenfolgenentsprechung der angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">Die zu konvertierende SqlInt32-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert einen <see cref="T:System.Data.SqlTypes.SqlString" /> in einen <see cref="T:System.String" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Ein <see langword="String" />, dessen Inhalt mit der <see cref="P:System.Data.SqlTypes.SqlString.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlString" />-Parameters übereinstimmt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Konvertiert den <see cref="T:System.String" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">Der zu konvertierende <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" /> mit dem Wert des angegebenen <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Eine Kombination von einem oder mehreren Werten der <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />-Enumeration, die angeben, wie dieser <see cref="T:System.Data.SqlTypes.SqlString" /> mit anderen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen verglichen werden soll.</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Ein Wert, der angibt, wie dieser <see cref="T:System.Data.SqlTypes.SqlString" /> mit anderen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen verglichen werden soll.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Eine <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlString.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Eine neue <see langword="SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> mit der von dieser <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur dargestellten Zahl identisch ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Eine neue <see langword="SqlDateTime" />-Struktur, die den Datumswert enthält, der von diesem <see cref="T:System.Data.SqlTypes.SqlString" /> dargestellt wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Eine neue <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> die von dieser <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur dargestellte <see langword="Guid" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt16" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt32" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlMoney" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Ein neuer <see cref="T:System.Data.SqlTypes.SqlSingle" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt in einen <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Ein <see cref="T:System.String" /> mit demselben Wert wie diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">Ruft die Zeichenfolge ab, die in dieser <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur gespeichert ist. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns vsli:raw="The string that is stored.">Die gespeicherte Zeichenfolge.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">Der Wert der Zeichenfolge ist <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">Die Ausnahme, die ausgelöst wird, wenn das Festlegen eines Werts in einer <see cref="N:System.Data.SqlTypes" />-Struktur zum Abschneiden dieses Werts führen würde.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTruncateException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTruncateException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTruncateException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die <see cref="T:System.Exception" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Ein Verweis auf eine innere <see cref="T:System.Exception" />.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">Die Basisausnahmeklasse für die <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse mit serialisierten Daten.</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <c>innerException</c>-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">Stellt XML-Daten dar, die auf einem Server gespeichert oder von diesem abgerufen werden.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Erstellt eine neue <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">Erstellt eine neue <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz und gibt den XML-Wert der von <see cref="T:System.IO.Stream" /> abgeleiteten Instanz an, die bereitgestellt wird.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">Eine von <see cref="T:System.IO.Stream" /> abgeleitete Instanz (z. B. <see cref="T:System.IO.FileStream" />), aus der der XML-Inhalt der <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz geladen werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Erstellt eine neue <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz und ordnet diese dem Inhalt des bereitgestellten <see cref="T:System.Xml.XmlReader" /> zu.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Eine von <see cref="T:System.Xml.XmlReader" /> abgeleitete Klasseninstanz, die als Wert der neuen <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ruft den Wert des XML-Inhalts von diesem <see cref="T:System.Data.SqlTypes.SqlXml" /> als <see cref="T:System.Xml.XmlReader" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">Eine von <see cref="T:System.Xml.XmlReader" /> abgeleitete Instanz, die den XML-Inhalt enthält. Der tatsächliche Typ kann variieren (z. B. könnte der Rückgabewert <see cref="T:System.Xml.XmlTextReader" /> sein), und zwar in Abhängigkeit davon, wie die Informationen intern auf dem Server dargestellt werden.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">Es wurde versucht, auf diese Eigenschaft auf einer NULL-Instanz von <see cref="T:System.Data.SqlTypes.SqlXml" /> zuzugreifen.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Eine Zeichenfolge, die die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">Gibt an, ob diese Instanz einen <see cref="T:System.Data.SqlTypes.SqlXml" />-Wert gleich NULL darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see langword="Value" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Stellt eine NULL-Instanz des <see cref="T:System.Data.SqlTypes.SqlXml" />-Typs dar.</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Eine NULL-Instanz des <see cref="T:System.Data.SqlTypes.SqlXml" />-Typs.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r" vsli:raw="An XmlReader.">Ein XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">Ein XmlWriter</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Ruft die Zeichenfolgenentsprechung des XML-Inhalts dieser <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz ab.</summary>
      <returns vsli:raw="The string representation of the XML content.">Die Zeichenfolgenentsprechung des XML-Inhalts.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">Die <see cref="T:System.Data.SqlTypes.StorageState" />-Enumeration ist nicht für die Verwendung als eigenständige Komponente ausgelegt, sondern als eine Enumeration, von der andere Klassen Standardfunktionen ableiten.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">Puffergröße.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">Stream.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">Nicht verwalteter Puffer.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">Stellt Daten für das Zustandsänderungsereignis eines .NET Framework-Datenproviders bereit.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">Initialisiert eine neue Instanz der <see cref="T:System.Data.StateChangeEventArgs" />-Klasse, wenn der ursprüngliche Zustand und der aktuelle Zustand des Objekts angegeben sind.</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">Ruft den neuen Zustand der Verbindung ab. Das Verbindungsobjekt weist beim Auslösen des Ereignisses bereits den neuen Zustand auf.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">Ruft den ursprünglichen Zustand der Verbindung ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Stellt die Methode zur Behandlung des <see cref="E:System.Data.Common.DbConnection.StateChange" />-Ereignisses dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Das <see cref="T:System.Data.StateChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Stellt zusätzliche Informationen für das <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Data.StatementCompletedEventArgs" />-Klasse.</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Gibt die Anzahl von Zeilen an, die von der Anweisung betroffen sind, die das Auslösen des <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignisses verursacht hat.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Gibt die Anzahl von Zeilen an, die von der Anweisung betroffen sind, die das Auslösen des <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignisses verursacht hat.</summary>
      <returns vsli:raw="The number of rows affected.">Die Anzahl der betroffenen Zeilen.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Der Delegattyp für die Ereignishandler des <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignisses.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The data for the event.">Die Daten für das Ereignis.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">Gibt den Typ der SQL-Abfrage an, der von einer der folgenden Klassen verwendet werden soll: <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> oder <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">Eine SQL-Abfrage, die eine Batchanweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">Eine SQL-Abfrage, die eine DELETE-Anweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">Eine SQL-Abfrage, die eine INSERT-Anweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">Eine SQL-Abfrage, die eine SELECT-Anweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">Eine SQL-Abfrage, die eine UPDATE-Anweisung ist.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">Die Ausnahme, die von einer stark typisierten <see cref="T:System.Data.DataSet" />-Klasse ausgelöst wird, wenn der Benutzer auf einen <see langword="DBNull" />-Wert zugreift.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Streamingkontext.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">Eine <see cref="T:System.Runtime.Serialization.StreamingContext" />-Struktur.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse mit der angegebenen Zeichenfolge und der angegebenen inneren Ausnahme.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">Stellt die Ausnahme dar, die ausgelöst wird, wenn die <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft einer <see cref="T:System.Data.DataColumn" /> einen Syntaxfehler enthält.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">Die Quelle und das Ziel eines bestimmten serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">Dieser Typ wird als Basisklasse für die typisierte <see cref="T:System.Data.DataTable" />-Objektgenerierung durch Visual Studio und das .NET Framework-Tool XSD.exe verwendet, und er ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Objekte in der von der Tabelle dargestellten Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">Initialisiert eine neue <see cref="T:System.Data.TypedTableBase`1" />. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Dieser Typ ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Initialisiert eine neue <see cref="T:System.Data.TypedTableBase`1" />. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die Daten zum Erstellen des Objekts enthält.</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">Der Streamingkontext für das deserialisierte Objekt.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Konvertiert die Elemente einer <see cref="T:System.Data.TypedTableBase`1" /> in den angegebenen Typ. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to." />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">Eine <see cref="T:System.Data.EnumerableRowCollection" />, die jedes in den angegebenen Typ konvertierte Element der Quellsequenz enthält.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Gibt einen Enumerator für die typisierte <see cref="T:System.Data.DataRow" /> zurück. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Ein Objekt, das die <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Gibt einen Enumerator für die typisierte <see cref="T:System.Data.DataRow" /> zurück. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Ein Objekt, das die <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">Enthält die Erweiterungsmethoden für die <see cref="T:System.Data.TypedTableBase`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Listet die Elemente der Datenzeile von <see cref="T:System.Data.TypedTableBase`1" /> auf und gibt ein <see cref="T:System.Data.EnumerableRowCollection`1" />-Objekt zurück, wobei der generische Parameter <paramref name="T" /> gleich <see cref="T:System.Data.DataRow" /> ist. Dieses Objekt kann in einem LINQ-Ausdruck oder einer Methodenabfrage verwendet werden.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">Die Quell-<see cref="T:System.Data.TypedTableBase`1" />, die als aufzählbar festgelegt werden soll.</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">Der Typ, in den die Elemente der Quelle konvertiert werden sollen.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ein <see cref="T:System.Data.EnumerableRowCollection`1" />-Objekt bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">Gibt das Element an einer angegebenen Zeile in einer Sequenz oder einen Standardwert zurück, wenn die Zeile außerhalb des gültigen Bereichs liegt.</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">Ein aufzählbares Objekt, aus dem ein Element zurückgegeben werden soll.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Der auf 0 (null) basierende Index des abzurufenden Elements.</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">Der Typ des Elements der Reihe.</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">Das Element an einer angegebenen Zeile in einer Sequenz.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">Projiziert jedes Element von <see cref="T:System.Data.TypedTableBase`1" /> in ein neues Format.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, für die eine Transformationsfunktion aufgerufen werden soll.</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />: <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Eine <see cref="T:System.Data.EnumerableRowCollection`1" />, deren Elemente das Ergebnis des Aufrufs einer Transformationsfunktion für jedes Element von <paramref name="source" /> sind.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtert eine Sequenz von Zeilen auf Grundlage des angegebenen Prädikats.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die gefiltert werden sollen.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Der Typ der Zeilenelemente in <paramref name="source" />: <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, die Zeilen aus der Eingabesequenz enthält, die die Bedingung erfüllen.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">Stellt eine Einschränkung für eine Gruppe von Spalten dar, bei der alle Werte eindeutig sein müssen.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit der angegebenen <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit der einzuschränkenden <see cref="T:System.Data.DataColumn" /> und einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Array von <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Das Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit einem Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Ein Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen und der angegebenen <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen, der einzuschränkenden <see cref="T:System.Data.DataColumn" /> sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen und dem angegebenen Array von <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Das Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen, einem Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Ein Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen, einem Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Der Name der Einschränkung.</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Ein Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">Ruft das Array der Spalten ab, die von dieser Einschränkung betroffen sind.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">Vergleicht diese Einschränkung mit einer zweiten, um zu bestimmen, ob diese identisch sind.</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">Das Objekt, mit dem diese <see cref="T:System.Data.UniqueConstraint" /> verglichen wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Einschränkungen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">Ruft den Hashcode dieser Instanz des <see cref="T:System.Data.UniqueConstraint" />-Objekts ab.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">Ruft einen Wert ab, der angibt, ob die Einschränkung für einen Primärschlüssel gilt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Einschränkung für einen Primärschlüssel gilt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">Ruft die Tabelle ab, zu der diese Einschränkung gehört.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">Das <see cref="T:System.Data.DataTable" />, zu dem diese Einschränkung gehört.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">Gibt an, wie Ergebnisse von Abfragebefehlen auf die aktualisierte Zeile angewendet werden.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Sowohl die Ausgabeparameter als auch die erste zurückgegebene Zeile werden der geänderten Zeile im <see cref="T:System.Data.DataSet" /> zugeordnet.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Die Daten in der ersten zurückgegebenen Zeile werden der geänderten Zeile im <see cref="T:System.Data.DataSet" /> zugeordnet.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">Alle zurückgegebenen Parameter oder Zeilen werden ignoriert.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ausgabeparameter werden der geänderten Zeile im <see cref="T:System.Data.DataSet" /> zugeordnet.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Gibt die Aktion an, die während der Ausführung eines <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> für die aktuelle Zeile und für die restlichen Zeilen ausgeführt werden soll.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" /> soll mit der Verarbeitung von Zeilen fortfahren.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">Der Ereignishandler meldet, dass die Aktualisierung als Fehler behandelt werden soll.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">Die aktuelle Zeile und alle restlichen Zeilen sollen nicht aktualisiert werden.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">Die aktuelle Zeile soll nicht aktualisiert werden.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, eine Version einer gelöschten <see cref="T:System.Data.DataRow" /> zurückzugeben.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Gibt an, wie XML-Daten und ein relationales Schema in ein <see cref="T:System.Data.DataSet" /> eingelesen werden sollen.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">Der Standardlesemodus.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">Liest ein DiffGram, wobei die Änderungen aus dem DiffGram auf das <see cref="T:System.Data.DataSet" />-Objekt angewendet werden. Die Semantik ist identisch mit der einer <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />-Operation. Wie bei der <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />-Operation werden die <see cref="P:System.Data.DataRow.RowState" />-Werte beibehalten. Die Eingabe in <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> mit DiffGrams sollte nur unter Verwendung der Ausgabe von <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> als DiffGram abgerufen werden.
Das Ziel <see cref="T:System.Data.DataSet" /> muss das gleiche Schema wie das <see cref="T:System.Data.DataSet" /> haben, auf dem <see cref="Overload:System.Data.DataSet.WriteXml" /> als DiffGram aufgerufen wird. Andernfalls tritt bei dem DiffGram-Zusammenführungsvorgang ein Fehler auf, und eine Ausnahme wird ausgelöst.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">Liest XML-Fragmente, z. B. solche, die durch Ausführen von FOR XML-Abfragen generiert werden, für eine Instanz von SQL Server. Wenn <see cref="T:System.Data.XmlReadMode" /> auf <see langword="Fragment" /> festgelegt ist, wird der Standardnamespace als Inlineschema gelesen.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">Ignoriert alle Inlineschemata und liest Daten in das vorhandene <see cref="T:System.Data.DataSet" />-Schema ein. Wenn Daten nicht dem vorhandenen Schema entsprechen, werden sie verworfen (auch die Daten aus anderen Namespaces, die für das <see cref="T:System.Data.DataSet" /> definiert wurden). Wenn es sich bei den Daten um ein DiffGram handelt, hat <see langword="IgnoreSchema" /> dieselbe Funktion wie <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Ignoriert alle Inlineschemas, leitet das Schema von den Daten her und lädt die Daten. Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, wird das aktuelle Schema durch Hinzufügen neuer Tabellen oder neuer Spalten zu vorhandenen Tabellen erweitert. Eine Ausnahme wird ausgelöst, wenn die hergeleitete Tabelle bereits mit einem anderen Namespace vorhanden ist, oder wenn bei hergeleiteten Spalten ein Konflikt mit vorhandenen Spalten auftritt.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Ignoriert alle Inlineschemas, leitet ein Schema mit starker Typisierung von den Daten her und lädt die Daten. Wenn der Typ nicht von den Daten abgeleitet werden kann, wird die Daten als Zeichenfolgendaten interpretiert. Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, wird das aktuelle Schema entweder durch Hinzufügen neuer Tabellen oder durch Hinzufügen neuer Spalten zu vorhandenen Tabellen erweitert. Eine Ausnahme wird ausgelöst, wenn die hergeleitete Tabelle bereits mit einem anderen Namespace vorhanden ist, oder wenn bei hergeleiteten Spalten ein Konflikt mit vorhandenen Spalten auftritt.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Liest jedes Inlineschema und lädt die Daten. Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, können diesem evtl. neue Tabellen hinzugefügt werden. Es wird jedoch eine Ausnahme ausgelöst, wenn Tabellen im Inlineschema bereits im <see cref="T:System.Data.DataSet" /> vorhanden sind.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Gibt an, wie XML-Daten und ein relationales Schema aus einer <see cref="T:System.Data.DataSet" />-Klasse geschrieben werden sollen.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Schreibt das gesamte <see cref="T:System.Data.DataSet" /> als DiffGram, einschließlich der ursprünglichen und aktuellen Werte. Rufen Sie <see cref="M:System.Data.DataSet.GetChanges" /> auf, um ein DiffGram zu generieren, das nur geänderte Werte enthält. Rufen Sie anschließend <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> als DiffGram für das zurückgegebene <see cref="T:System.Data.DataSet" />-Objekt auf.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataSet" />-Klasse als XML-Daten ohne ein XSD-Schema. Wenn keine Daten in die <see cref="T:System.Data.DataSet" />-Klasse geladen werden, wird nichts geschrieben.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataSet" />-Klasse als XML-Daten mit der relationalen Struktur als XSD-Inlineschema. Wenn die <see cref="T:System.Data.DataSet" />-Klasse nur über ein Schema ohne Daten verfügt, wird nur das Inlineschema geschrieben. Wenn die <see cref="T:System.Data.DataSet" />-Klasse über kein aktuelles Schema verfügt, wird nichts geschrieben.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ermöglicht das Speichern, Abrufen und Bearbeiten strukturierter Daten über ein relationales <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDataDocument" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDataDocument" />-Klasse mit der angegebenen <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Das <see langword="DataSet" />, das in das <see langword="XmlDataDocument" /> geladen werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">Erstellt ein Duplikat des aktuellen Knotens.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns vsli:raw="The cloned node.">Der geklonte Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Erstellt ein Element mit der angegebenen <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> und der <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">Das Präfix des neuen Elements. Bei String.Empty oder <see langword="null" /> ist kein Präfix vorhanden.</param>
      <param name="localName" vsli:raw="The local name of the new element.">Der lokale Name des neuen Elements.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">Der Namespace-URI (Uniform Resource Identifier) des neuen Elements. Bei String.Empty oder <see langword="null" /> ist kein namespaceURI vorhanden.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Ein neuer <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Erstellt eine <see cref="T:System.Xml.XmlEntityReference" /> mit dem angegebenen Namen.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Der Name des Entitätsverweises.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Die <see cref="T:System.Xml.XmlEntityReference" /> mit dem angegebenen Namen.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Das Aufrufen dieser Methode.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">Erstellt ein neues <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt zum Navigieren in diesem Dokument. Der <see langword="XPathNavigator" /> ist auf dem im <paramref name="node" />-Parameter angegebenen Knoten positioniert.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">Der <see cref="T:System.Xml.XmlNode" />, auf dem Sie den Navigator zunächst positionieren möchten.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">Ein zum Navigieren im Dokument verwendeter <see langword="XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Ruft ein <see cref="T:System.Data.DataSet" /> ab, das eine relationale Darstellung der Daten im <see langword="XmlDataDocument" /> bereitstellt.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">Ein <see langword="DataSet" />, das verwendet werden kann, um mithilfe eines relationalen Modells auf die Daten im <see langword="XmlDataDocument" /> zuzugreifen.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">Ruft das <see cref="T:System.Xml.XmlElement" /> mit der angegebenen ID ab. Diese Methode wird von der <see cref="T:System.Xml.XmlDataDocument" />-Klasse nicht unterstützt. Das Aufrufen dieser Methode löst eine Ausnahme aus.</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">Die Attribut-ID, mit der eine Übereinstimmung gefunden werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">Das <see cref="T:System.Xml.XmlElement" /> mit der angegebenen ID.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Das Aufrufen dieser Methode.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ruft das <see cref="T:System.Xml.XmlElement" /> ab, das der angegebenen <see cref="T:System.Data.DataRow" /> zugeordnet ist.</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">Das <see langword="DataRow" />, dessen zugeordnete <see langword="XmlElement" /> abgerufen werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">Das <see langword="XmlElement" />, das eine Darstellung der angegebenen <see langword="DataRow" /> enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Gibt eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller untergeordneten Elemente zurück, die mit dem angegebenen <see cref="P:System.Xml.XmlDocument.Name" /> übereinstimmen.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">Der qualifizierte Name, mit dem eine Übereinstimmung gefunden werden soll. Er wird mit der <see cref="P:System.Xml.XmlDocument.Name" />-Eigenschaft des übereinstimmenden Knotens verglichen. Der spezielle Wert „*“ entspricht allen Tags.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller übereinstimmenden Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Ruft das <see cref="T:System.Data.DataRow" /> ab, das der angegebenen <see cref="T:System.Xml.XmlElement" /> zugeordnet ist.</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">Das <see langword="XmlElement" />, dessen zugeordnete <see langword="DataRow" /> abgerufen werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">Die <see langword="DataRow" /> enthält eine Darstellung des <see langword="XmlElement" />. <see langword="null" />, wenn dem <see langword="DataRow" /> keine <see langword="XmlElement" /> zugeordnet ist.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">Lädt das <see langword="XmlDataDocument" /> aus dem angegebenen Stream.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">Der Stream, der das zu ladende XML-Dokument enthält.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lädt das <see langword="XmlDataDocument" /> aus dem angegebenen <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">Der zum Übertragen von XML-Daten in das Dokument verwendete <see langword="TextReader" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">Lädt das <see langword="XmlDataDocument" /> mit der angegebenen URL.</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">Die URL der Datei, die das zu ladende XML-Dokument enthält.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lädt das <see langword="XmlDataDocument" /> aus dem angegebenen <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">Der <see langword="XmlReader" />, der das zu ladende XML-Dokument enthält.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">Die geladenen XML-Daten enthalten Entitätsverweise, und der Reader kann Entitäten nicht auflösen.</exception>
    </member>
  </members>
</doc>