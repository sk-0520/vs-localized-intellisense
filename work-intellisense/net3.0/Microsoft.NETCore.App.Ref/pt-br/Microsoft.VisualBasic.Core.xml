<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Fornece propriedades, métodos e eventos relacionados ao aplicativo atual.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Altera a cultura usada pelo thread atual para manipulação e formatação da cadeia de caracteres.</summary>
      <param name="cultureName">
        <see langword="String" />. Nome da cultura como uma cadeia de caracteres. Para obter uma lista de nomes possíveis, consulte <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> não é um nome de cultura válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Altera a cultura que o thread atual usa para recuperar recursos específicos de cultura.</summary>
      <param name="cultureName">
        <see langword="String" />. Nome da cultura como uma cadeia de caracteres. Para obter uma lista de nomes possíveis, consulte <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> não é um nome de cultura válido.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Obtém a cultura que usa o thread atual usa para manipulação e formatação da cadeia de caracteres.</summary>
      <returns>Um <see cref="T:System.Globalization.CultureInfo" /> objeto que representa a cultura que o thread atual usa para a manipulação de cadeia de caracteres e a formatação de cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Retorna o valor da variável de ambiente especificada.</summary>
      <param name="name">Um <see langword="String" /> que contém o nome da variável de ambiente.</param>
      <returns>Um <see langword="String" /> que contém o valor da variável de ambiente com o nome <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">A variável de ambiente especificada por <paramref name="name" /> não existe.</exception>
      <exception cref="T:System.Security.SecurityException">O código de chamada não tem <see cref="T:System.Security.Permissions.EnvironmentPermission" /> com o acesso <see langword="Read" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Obtém um objeto que fornece propriedades para obter informações sobre o assembly do aplicativo, como o número de versão, a descrição e assim por diante.</summary>
      <returns>O objeto <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> para o aplicativo atual.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Obtém a cultura que o thread atual usa para recuperar recursos específicos de cultura.</summary>
      <returns>Um <see cref="T:System.Globalization.CultureInfo" /> objeto que representa a cultura que o thread atual usa para recuperar recursos específicos de cultura.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Fornece propriedades para obter informações sobre o aplicativo, como o número de versão, descrição, assemblies carregados e assim por diante.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> com as informações de assembly especificadas.</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. O assembly para o qual as informações serão obtidas.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Obtém o nome, sem a extensão, do arquivo do assembly para o aplicativo.</summary>
      <returns>Um <see langword="String" /> valor que contém o nome do arquivo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Obtém o nome da empresa associado ao aplicativo.</summary>
      <returns>Um <see langword="String" /> que contém o nome da empresa associado ao aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O assembly não tem um atributo <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Obtém a notificação de direitos autorais associada ao aplicativo.</summary>
      <returns>Um <see langword="String" /> que contém a notificação de direitos autorais associada ao aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O assembly não tem um atributo <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Obtém a descrição associada ao aplicativo.</summary>
      <returns>Um <see langword="String" /> que contém a descrição associada ao aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O assembly não tem um atributo <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Obtém o diretório no qual o aplicativo está armazenado.</summary>
      <returns>Um <see langword="String" /> que contém o diretório no qual o aplicativo está armazenado.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Obtém uma coleção de todos os assemblies carregados pelo aplicativo.</summary>
      <returns>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de<see cref="T:System.Reflection.Assembly" /> contendo todos os assemblies carregados pelo aplicativo.</returns>
      <exception cref="T:System.AppDomainUnloadedException">O domínio de aplicativo não está carregado.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Obtém o nome do produto associado ao aplicativo.</summary>
      <returns>Uma <see langword="String" /> que contém o nome do produto associado ao aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O assembly não tem um atributo <see cref="T:System.Reflection.AssemblyProductAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Obtém as informações do rastreamento de pilha atual.</summary>
      <returns>Um <see langword="String" /> que contém as informações atuais de rastreamento de pilha. O valor de retorno pode <see cref="F:System.String.Empty" />ser.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">As informações de rastreamento de pilha solicitada estão fora do intervalo.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Obtém o título associado ao aplicativo.</summary>
      <returns>Uma <see langword="String" /> que contém o <see cref="T:System.Reflection.AssemblyTitleAttribute" /> associado ao aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O assembly não tem um atributo <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Obtém o aviso de marca registrada associado ao aplicativo.</summary>
      <returns>Um <see langword="String" /> que contém o aviso de marca registrada associado ao aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O assembly não tem um atributo <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Obtém o número de versão do aplicativo.</summary>
      <returns>Um objeto <see cref="T:System.Version" /> que contém o número de versão do aplicativo.</returns>
      <exception cref="T:System.Security.SecurityException">O aplicativo não tem permissões suficientes para acessar a versão do assembly.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Obtém a quantidade de memória física mapeada para o contexto do processo.</summary>
      <returns>Um <see langword="Long" /> valor que contém o número de bytes de memória física mapeados para o contexto do processo.</returns>
      <exception cref="T:System.Security.SecurityException">Uma situação na qual há confiança parcial e o usuário carece das permissões necessárias.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Fornece propriedades, métodos e eventos relacionados ao aplicativo atual.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Obtém uma coleção que contém os argumentos de linha de comando como cadeias de caracteres para o aplicativo atual.</summary>
      <returns>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" /> que contém os argumentos de linha de comando como cadeias de caracteres para o aplicativo atual.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Define os valores a serem usados como argumentos de linha de comando do aplicativo atual.</summary>
      <returns>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de<see langword="String" />, contendo as cadeias de caracteres a serem usadas como argumentos de linha de comando para o aplicativo atual.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Fornece dados para o evento de <see langword="My.Application.Startup" /> .</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />.</summary>
      <param name="args">Um objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os argumentos de linha de comando do aplicativo.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Obtém os argumentos de linha de comando do aplicativo.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os argumentos de linha de comando do aplicativo.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Fornece dados para o evento de <see langword="My.Application.StartupNextInstance" /> .</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="args">Um objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os argumentos de linha de comando da instância de aplicativo subsequente.</param>
      <param name="bringToForegroundFlag">Um <see cref="T:System.Boolean" /> que indica se a primeira instância de aplicativo deve ser colocada em primeiro plano no fechamento do manipulador de exceção.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Indica se a primeira instância de aplicativo deve ser colocada em primeiro plano após o fechamento do manipulador de exceção.</summary>
      <returns>Um <see cref="T:System.Boolean" /> que indica se a primeira instância de aplicativo deve ser colocada em primeiro plano no fechamento do manipulador de exceção.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Obtém os argumentos de linha de comando da instância de aplicativo subsequente.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os argumentos de linha de comando da instância de aplicativo subsequente.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Fornece dados para o evento de <see langword="My.Application.UnhandledException" /> .</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</summary>
      <param name="exitApplication">Um <see cref="T:System.Boolean" /> que indica se o aplicativo deve sair após o fechamento do manipulador de exceção.</param>
      <param name="exception">O <see cref="T:System.Exception" /> que ocorreu.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Indica se o aplicativo deve sair após o fechamento do manipulador de exceção.</summary>
      <returns>Um <see cref="T:System.Boolean" /> que indica se o aplicativo deve sair após o fechamento do manipulador de exceção.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Fornece acesso às informações sobre o usuário atual.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Obtém ou define a entidade de segurança atual (para segurança baseada em função).</summary>
      <returns>Um valor <see cref="T:System.Security.Principal.IPrincipal" /> que representa o contexto de segurança.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para definir a entidade de segurança.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Obtém ou define o objeto de entidade de segurança que representa o usuário atual.</summary>
      <returns>Um objeto <see cref="T:System.Security.Principal.IPrincipal" /> que representa o usuário atual.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Obtém um valor que indica se o usuário foi autenticado.</summary>
      <returns>
        <see langword="True" /> se o usuário foi autenticado; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Determina se o usuário atual pertence à função especificada.</summary>
      <param name="role">O nome da função cuja associação será verificada.</param>
      <returns>
        <see langword="True" /> se o usuário atual for membro da função especificada; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Obtém o nome do usuário atual.</summary>
      <returns>
        <see langword="String" />. O nome do usuário atual.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Indica o estilo da janela a ser usado para o programa invocado ao chamar a função <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>A janela está oculta e o foco é passado para a janela oculta. Esse membro é equivalente à constante <see langword="vbHide" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>A janela é maximizada com foco. Esse membro é equivalente à constante <see langword="vbMaximizedFocus" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>A janela é exibida como um ícone com foco. Esse membro é equivalente à constante <see langword="vbMinimizedFocus" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>A janela é exibida como um ícone. A janela ativa no momento permanece ativa. Esse membro é equivalente à constante <see langword="vbMinimizedNoFocus" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>A janela tem foco e é restaurada ao seu tamanho e posição originais. Esse membro é equivalente à constante <see langword="vbNormalFocus" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>A janela é restaurada ao seu tamanho e posição mais recentes. A janela ativa no momento permanece ativa. Esse membro é equivalente à constante <see langword="vbNormalNoFocus" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Indica o tipo de procedimento que está sendo invocado ao chamar a função <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>Um valor da propriedade está sendo recuperado.  Esse membro é equivalente à constante <see langword="vbGet" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>Um valor da propriedade Object está sendo determinado. Esse membro é equivalente à constante <see langword="vbLet" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>Um método está sendo invocado.  Esse membro é equivalente à constante <see langword="vbMethod" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>Um valor da propriedade está sendo determinado.  Esse membro é equivalente à constante <see langword="vbSet" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>Um Visual Basic <see langword="Collection" /> é um conjunto ordenado de itens que podem ser referenciados como uma unidade.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Cria e retorna um novo objeto <see cref="T:Microsoft.VisualBasic.Collection" /> do Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Adiciona um elemento a um objeto <see langword="Collection" />.</summary>
      <param name="Item">Necessário. Um objeto de qualquer tipo que especifica o elemento a ser adicionado à coleção.</param>
      <param name="Key">Opcional. Uma expressão <see langword="String" /> exclusiva, que especifica uma cadeia de caracteres chave que pode ser usada em vez de um índice posicional, para acessar esse novo elemento na coleção.</param>
      <param name="Before">Opcional. Uma expressão que especifica uma posição relativa na coleção. O elemento a ser adicionado é colocado na coleção antes do elemento identificado pelo argumento <paramref name="Before" />. Se <paramref name="Before" /> for uma expressão numérica, ele deverá ser um número entre 1 e o valor da propriedade <see cref="P:Microsoft.VisualBasic.Collection.Count" /> da coleção. Se <paramref name="Before" /> for uma expressão <see langword="String" />, ele deverá corresponder à cadeia de caracteres de chave especificada quando o elemento que está sendo referenciado foi adicionado à coleção. Não é possível especificar <paramref name="Before" /> e <paramref name="After" />.</param>
      <param name="After">Opcional. Uma expressão que especifica uma posição relativa na coleção. O elemento a ser adicionado é colocado na coleção após o elemento identificado pelo argumento <paramref name="After" />. Se <paramref name="After" /> for uma expressão numérica, ele deverá ser um número entre 1 e o valor da propriedade <see langword="Count" /> da coleção. Se <paramref name="After" /> for uma expressão <see langword="String" />, ele deverá corresponder à cadeia de caracteres de chave especificada quando o elemento referenciado foi adicionado à coleção. Não é possível especificar <paramref name="Before" /> e <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Exclui todos os elementos de um objeto <see langword="Collection" /> do Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Um valor que indica se um objeto <see langword="Collection" /> do Visual Basic contém um elemento com uma chave específica.</summary>
      <param name="Key">Necessário. Uma expressão <see langword="String" /> que especifica a chave pela qual pesquisar os elementos da coleção.</param>
      <returns>
        <see langword="true" /> se um objeto <see langword="Collection" /> do Visual Basic contém um elemento com uma chave específica; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Obtém o número de elementos em uma coleção.</summary>
      <returns>O número de elementos em uma coleção.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Obtém um elemento específico de um objeto <see langword="Collection" /> por posição ou por chave.</summary>
      <param name="Index">Uma expressão numérica que especifica a posição de um elemento da coleção. <paramref name="Index" /> deve ser um número entre 1 e o valor da propriedade <see cref="P:Microsoft.VisualBasic.Collection.Count" /> da coleção. Ou (B) Uma expressão <see langword="Object" /> que especifica a posição ou a cadeia de caracteres de chave de um elemento da coleção.</param>
      <returns>Um elemento específico de um <see langword="Collection" /> objeto, seja por posição ou por chave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Obtém um elemento específico de um objeto <see langword="Collection" /> por posição ou por chave.</summary>
      <param name="Index">Uma expressão numérica que especifica a posição de um elemento da coleção. <paramref name="Index" /> deve ser um número entre 1 e o valor da propriedade <see cref="P:Microsoft.VisualBasic.Collection.Count" /> da coleção. Ou (B) Uma expressão <see langword="Object" /> que especifica a posição ou a cadeia de caracteres de chave de um elemento da coleção.</param>
      <returns>Um elemento específico de um <see langword="Collection" /> objeto, seja por posição ou por chave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Obtém um elemento específico de um objeto <see langword="Collection" /> por posição ou por chave.</summary>
      <param name="Key">Uma expressão <see langword="String" /> exclusiva, que especifica uma cadeia de caracteres chave que pode ser usada, em vez de um índice posicional, para acessar um elemento da coleção. <paramref name="Key" /> deve corresponder ao argumento <paramref name="Key" /> especificado quando o elemento foi adicionado à coleção.</param>
      <returns>Um elemento específico de um <see langword="Collection" /> objeto, seja por posição ou por chave.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Remove um elemento de um objeto <see langword="Collection" />.</summary>
      <param name="Index">Uma expressão numérica que especifica a posição de um elemento da coleção. <paramref name="Index" /> deve ser um número entre 1 e o valor da propriedade <see cref="P:Microsoft.VisualBasic.Collection.Count" /> da coleção.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Remove um elemento de um objeto <see langword="Collection" />.</summary>
      <param name="Key">Uma expressão <see langword="String" /> exclusiva, que especifica uma cadeia de caracteres chave que pode ser usada, em vez de um índice posicional, para acessar um elemento da coleção. <paramref name="Key" /> deve corresponder ao argumento <paramref name="Key" /> especificado quando o elemento foi adicionado à coleção.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>O atributo <see langword="ComClassAttribute" /> instrui o compilador a adicionar metadados que permitem que uma classe seja exposta como um objeto COM.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inicializa o valor da propriedade <see langword="ClassID" /> que é usada para identificar uma classe de modo exclusivo.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inicializa o valor da propriedade <see langword="ClassID" /> que é usada para identificar uma classe de modo exclusivo.</param>
      <param name="_InterfaceID">Inicializa o valor da propriedade <see langword="InterfaceID" /> que é usada para identificar uma interface de modo exclusivo.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inicializa o valor da propriedade <see langword="ClassID" /> que é usada para identificar uma classe de modo exclusivo.</param>
      <param name="_InterfaceID">Inicializa o valor da propriedade <see langword="InterfaceID" /> que é usada para identificar uma interface de modo exclusivo.</param>
      <param name="_EventId">Inicializa o valor da propriedade <see langword="EventID" /> que é usada para identificar um evento de modo exclusivo.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Obtém uma ID de classe usada para identificar exclusivamente uma classe.</summary>
      <returns>Somente leitura. Uma cadeia de caracteres que pode ser usada pelo compilador para identificar exclusivamente a classe quando um objeto COM é criado.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Obtém uma ID do evento usada para identificar exclusivamente um evento.</summary>
      <returns>Somente leitura. Uma cadeia de caracteres que pode ser usada pelo compilador para identificar exclusivamente um evento para a classe quando um objeto COM é criado.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Obtém uma ID de interface usada para identificar exclusivamente uma interface.</summary>
      <returns>Somente leitura. Uma cadeia de caracteres que pode ser usada pelo compilador para identificar exclusivamente uma interface para a classe quando um objeto COM é criado.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Indica que o nome da interface COM sombreia outro membro da classe ou da classe base.</summary>
      <returns>Um <see langword="Boolean" /> valor que indica que o nome da interface com sombreia outro membro da classe ou classe base.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Indica como comparar cadeias de caracteres ao chamar funções de comparação.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Executa uma comparação binária. Esse membro é equivalente à constante <see langword="vbBinaryCompare" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Executa uma comparação textual. Esse membro é equivalente à constante <see langword="vbTextCompare" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Boolean" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Boolean" />.</param>
      <returns>O valor de <see langword="Boolean" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Boolean" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Boolean" />.</param>
      <returns>O valor de <see langword="Boolean" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Byte" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Byte" />.</param>
      <returns>O valor de <see langword="Byte" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Byte" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Byte" />.</param>
      <returns>O valor de <see langword="Byte" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="CharArray" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="CharArray" />.</param>
      <returns>O valor de <see langword="CharArray" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="CharArray" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="CharArray" />.</param>
      <returns>O valor de <see langword="CharArray" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Char" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Char" />.</param>
      <returns>O valor de <see langword="Char" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Char" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Char" />.</param>
      <returns>O valor de <see langword="Char" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Fornece métodos que realizam conversões de tipo diversas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Converte um objeto no tipo especificado.</summary>
      <param name="Expression">O objeto a ser convertido.</param>
      <param name="TargetType">O tipo para o qual o objeto será convertido.</param>
      <returns>Um objeto do tipo de destino especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Converte um objeto no tipo especificado.</summary>
      <param name="Expression">O objeto a ser convertido.</param>
      <param name="TargetType">O tipo para o qual o objeto será convertido.</param>
      <returns>Um objeto do tipo de destino especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Converte um valor <see cref="T:System.Char" /> em uma cadeia de caracteres, considerando uma contagem de bytes.</summary>
      <param name="Value">O valor <see langword="Char" /> a ser convertido.</param>
      <param name="Count">A contagem de bytes do valor <see langword="Char" />.</param>
      <returns>A representação de cadeia de caracteres do valor especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Converte uma matriz <see cref="T:System.Char" /> em uma cadeia de caracteres.</summary>
      <param name="Value">A matriz <see langword="Char" /> a ser convertida.</param>
      <returns>A representação de cadeia de caracteres da matriz especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Converte um subconjunto de uma matriz <see cref="T:System.Char" /> em uma cadeia de caracteres.</summary>
      <param name="Value">A matriz <see langword="Char" /> a ser convertida.</param>
      <param name="StartIndex">Índice baseado em zero da posição inicial.</param>
      <param name="Length">Tamanho do subconjunto em bytes.</param>
      <returns>A representação de cadeia de caracteres da matriz especificada da posição inicial até o tamanho especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.Boolean" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>Um valor <see langword="Boolean" />. Retorna <see langword="False" /> se o objeto é nulo; caso contrário, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.Boolean" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>Um valor <see langword="Boolean" />. Retorna <see langword="False" /> se a cadeia de caracteres é nula; caso contrário, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.Byte" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.Byte" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Byte" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.Char" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.Char" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Char" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Converte um objeto em uma matriz <see cref="T:System.Char" /> unidimensional.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>Uma matriz <see langword="Char" /> unidimensional.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Converte uma cadeia de caracteres em uma matriz <see cref="T:System.Char" /> unidimensional.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>Uma matriz <see langword="Char" /> unidimensional.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.DateTime" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.DateTime" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="DateTime" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Converte um valor <see cref="T:System.Boolean" /> em um valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Um valor booliano a ser convertido.</param>
      <returns>O valor <see langword="Decimal" /> do valor booliano.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Decimal" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.Double" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.Double" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Double" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Converte um objeto em um <paramref name="T" /> de tipo genérico.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <typeparam name="T">O tipo no qual converter <paramref name="Value" />.</typeparam>
      <returns>Uma estrutura ou um objeto do tipo genérico <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Converte um objeto em um valor inteiro.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor inteiro.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="int" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Converte um objeto em um valor <see langword="Long" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see langword="Long" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Long" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.SByte" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="SByte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see cref="T:System.SByte" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="SByte" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Converte um objeto em um valor <see langword="Short" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see langword="Short" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Short" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.Single" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Converte uma <see cref="T:System.String" /> em um valor <see cref="T:System.Single" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Single" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Converte um valor <see cref="T:System.Boolean" /> em uma <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Boolean" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Converte um valor <see cref="T:System.Byte" /> em uma <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Byte" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Converte um valor <see cref="T:System.Char" /> em uma <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Char" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Converte um valor <see cref="T:System.DateTime" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="DateTime" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Converte um valor <see cref="T:System.Decimal" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Decimal" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Converte um valor <see cref="T:System.Decimal" /> para um valor <see cref="T:System.String" />, usando o formato de número especificado.</summary>
      <param name="Value">O valor <see langword="decimal" /> a ser convertido.</param>
      <param name="NumberFormat">O formato de número a ser usado, conforme <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Converte um valor <see cref="T:System.Double" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Double" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Converte um valor <see cref="T:System.Double" /> para um valor <see cref="T:System.String" />, usando o formato de número especificado.</summary>
      <param name="Value">O valor <see langword="Double" /> a ser convertido.</param>
      <param name="NumberFormat">O formato de número a ser usado, conforme <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Converte um valor <see langword="Short" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Short" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Converte um valor inteiro em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="int" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Converte um valor <see langword="Long" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Long" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Converte um objeto em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>A <see langword="String" /> do objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Converte um valor <see cref="T:System.Single" /> (um número de ponto flutuante de precisão simples) em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Single" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Converte um valor <see cref="T:System.Single" /> para um valor <see cref="T:System.String" />, usando o formato de número especificado.</summary>
      <param name="Value">O valor <see langword="Single" /> a ser convertido.</param>
      <param name="NumberFormat">O formato de número a ser usado, conforme <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Converte um valor <see langword="uint" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Uint" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Converte um valor <see langword="Ulong" /> em um valor <see cref="T:System.String" />.</summary>
      <param name="Value">O valor <see langword="Ulong" /> a ser convertido.</param>
      <returns>A representação <see langword="String" /> do valor <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Converte um objeto em um valor <see langword="Uint" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see langword="Uint" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Uint" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Converte um objeto em um valor <see langword="Ulong" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see langword="Ulong" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Ulong" /> da cadeia de caracteres.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Converte um objeto em um valor <see langword="Ushort" />.</summary>
      <param name="Value">O objeto a ser convertido.</param>
      <returns>O valor do objeto <see langword="Ushort" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Converte uma cadeia de caracteres em um valor <see langword="Ushort" />.</summary>
      <param name="Value">A cadeia de caracteres a ser convertida.</param>
      <returns>O valor <see langword="Ushort" /> da cadeia de caracteres.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Date" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Date" />.</param>
      <returns>O valor de <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Date" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Date" />.</param>
      <returns>O valor de <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Retorna um valor <see langword="Date" /> que corresponde às informações de cadeia de caracteres e de cultura especificadas.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Date" />.</param>
      <param name="culture">Necessário. Um objeto <see cref="T:System.Globalization.CultureInfo" /> que define como os valores de data são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor de <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Retorna um valor <see langword="Decimal" /> que corresponde ao valor <see langword="Boolean" /> especificado.</summary>
      <param name="Value">Necessário. O valor <see langword="Boolean" /> a ser convertido para um valor <see langword="Decimal" />.</param>
      <returns>O valor de <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Decimal" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Decimal" />.</param>
      <returns>O valor de <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Decimal" /> que corresponde ao objeto especificado e às informações de formato de número especificadas.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Decimal" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor de <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Decimal" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Decimal" />.</param>
      <returns>O valor de <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Decimal" /> que corresponde às informações de formato de número e de cadeia de caracteres especificadas.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Decimal" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor de <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Decimal" /> que corresponde às informações de formato de número e de cadeia de caracteres especificadas.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Decimal" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor de <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>Quando aplicado a uma classe, o compilador chama implicitamente um método inicializador de componente a partir do construtor sintético padrão.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Inicializa uma nova instância do atributo <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Double" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Double" />.</param>
      <returns>O valor <see langword="Double" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Double" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Double" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="Double" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Double" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Double" />.</param>
      <returns>O valor <see langword="Double" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Double" /> que corresponde às informações de formato de número e de cadeia de caracteres especificadas.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Double" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="Double" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Retorna um valor de <see langword="Double" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Double" />.</param>
      <returns>O valor <see langword="Double" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Double" /> que corresponde às informações de formato de número e de cadeia de caracteres especificadas.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Double" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="Double" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>O compilador do Visual Basic usa essa classe durante a inicialização local estática; ela não deve ser chamada diretamente no seu código. Uma exceção desse tipo é gerada se uma variável local estática falha em ser inicializada.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Retorna um valor <see langword="Integer" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor <see langword="Integer" />.</param>
      <returns>O valor de <see langword="Integer" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Retorna um valor <see langword="Integer" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor <see langword="Integer" />.</param>
      <returns>O valor de <see langword="Integer" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>Essa classe foi preterida desde o Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Executa uma chamada de associação tardia a um método do objeto.</summary>
      <param name="o">O objeto no qual chamar um método.</param>
      <param name="objType">O tipo do objeto.</param>
      <param name="name">O nome do método do <paramref name="o" /> a chamar.</param>
      <param name="args">Uma matriz de valores de parâmetro a passar para o método.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
      <param name="CopyBack">Uma matriz de <see langword="Boolean" /> valores, em que <see langword="True" /> indica que o parâmetro associado é passado <see langword="ByRef" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Retorna um valor de associação tardia de um objeto.</summary>
      <param name="o">O objeto do qual retornar o valor.</param>
      <param name="objType">O tipo do objeto.</param>
      <param name="name">O nome do membro do <paramref name="o" /> do qual recuperar o valor.</param>
      <param name="args">Uma matriz de um ou mais valores de índice que especificam o local no <paramref name="o" />, se <paramref name="o" /> for uma matriz unidimensional ou multidimensional ou valores de argumento para passar para o objeto <paramref name="o" />.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
      <param name="CopyBack">Uma matriz de <see langword="Boolean" /> valores, em que <see langword="True" /> indica que o parâmetro associado é passado <see langword="ByRef" />.</param>
      <returns>Se <paramref name="o" /> é uma matriz, o valor de <paramref name="o" /> no local especificado por <paramref name="args" />. Se <paramref name="o" /> é um objeto, o valor retornado de <paramref name="o" /> invocado usando parâmetros nomeados em <paramref name="paramnames" /> e seus valores associados em <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Retorna um valor de associação tardia de um objeto usando o índice ou os parâmetros especificados.</summary>
      <param name="o">O objeto do qual retornar o valor.</param>
      <param name="args">Uma matriz de um ou mais valores de índice que especificam o local no <paramref name="o" />, se <paramref name="o" /> for uma matriz unidimensional ou multidimensional ou valores de argumento para passar para o objeto <paramref name="o" />.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
      <returns>Se <paramref name="o" /> é uma matriz, o valor de <paramref name="o" /> no local especificado por <paramref name="args" />. Se <paramref name="o" /> é um objeto, o valor retornado de <paramref name="o" /> invocado usando parâmetros nomeados em <paramref name="paramnames" /> e seus valores associados em <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Define um valor de associação tardia de um objeto usando os parâmetros especificados.</summary>
      <param name="o">O objeto para o qual definir o valor.</param>
      <param name="args">Uma matriz de um ou mais valores de índice que especificam o local no <paramref name="o" />, se <paramref name="o" /> for uma matriz unidimensional ou multidimensional ou valores de argumento para passar para o objeto <paramref name="o" />.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Define um valor de associação tardia de um objeto usando os parâmetros especificados.</summary>
      <param name="o">O objeto para o qual definir o valor.</param>
      <param name="args">Uma matriz de um ou mais valores de parâmetro a passar para o objeto <paramref name="o" />.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
      <param name="OptimisticSet">
        <see langword="True" /> para suprimir a exceção gerada quando o membro do conjunto não é encontrado.</param>
      <param name="RValueBase">
        <see langword="True" /> para identificar <paramref name="o" /> como resultado de uma expressão de associação tardia.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Define um valor de associação tardia de um membro de um objeto usando os parâmetros especificados.</summary>
      <param name="o">O objeto para o qual definir o valor do membro.</param>
      <param name="objType">O tipo do objeto.</param>
      <param name="name">O nome do membro a definir.</param>
      <param name="args">Uma matriz de um ou mais valores de parâmetro a passar para o membro <paramref name="o" />.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Define um valor de associação tardia de um membro de um objeto usando os parâmetros especificados.</summary>
      <param name="o">O objeto para o qual definir o valor do membro.</param>
      <param name="objType">O tipo do objeto.</param>
      <param name="name">O nome do membro a definir.</param>
      <param name="args">Uma matriz de um ou mais valores de parâmetro a passar para o membro <paramref name="o" />.</param>
      <param name="paramnames">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <paramref name="args" /> são passados.</param>
      <param name="OptimisticSet">
        <see langword="True" /> para suprimir a exceção gerada quando o membro do conjunto não é encontrado.</param>
      <param name="RValueBase">
        <see langword="True" /> para identificar <paramref name="o" /> como resultado de uma expressão de associação tardia.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>Essa classe fornece auxiliares que o compilador do Visual Basic usa para fazer o trabalho para o Operador Like. Não deve ser chamado diretamente do seu código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Executa a comparação de cadeias de caracteres de texto ou binárias dados dois objetos. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Source">A cadeia de caracteres a ser comparada.</param>
      <param name="Pattern">A cadeia de caracteres na qual <paramref name="Source" /> estão sendo comparados.</param>
      <param name="CompareOption">Uma enumeração <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica se a comparação de texto deve ser usada ou não. Se <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, esse método usa comparação de texto; se <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, esse método usa comparação binária.</param>
      <returns>
        <see langword="True" /> se as cadeias de caracteres corresponderem; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Executa a comparação de cadeias de caracteres de texto ou binárias dadas duas cadeias de caracteres. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Source">A cadeia de caracteres a ser comparada.</param>
      <param name="Pattern">A cadeia de caracteres na qual <paramref name="Source" /> estão sendo comparados.</param>
      <param name="CompareOption">Uma enumeração <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica se a comparação de texto deve ser usada ou não. Se <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, esse método usa comparação de texto; se <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, esse método usa comparação binária.</param>
      <returns>
        <see langword="True" /> se as cadeias de caracteres corresponderem; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Long" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Long" />.</param>
      <returns>O valor de <see langword="Long" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Long" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Long" />.</param>
      <returns>O valor de <see langword="Long" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>Esta classe fornece auxiliares que o compilador do Visual Basic utiliza para chamadas de associação tardias; ele não deve ser chamado diretamente do seu código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Executa uma chamada de método ou função de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="IgnoreReturn">Um valor <see langword="Boolean" /> que indica se o valor retornado pode ser ignorado ou não.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Executa uma chamada de acesso de campo ou obtenção da propriedade de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="OptimisticSet">Um valor <see langword="Boolean" /> usado para determinar se a operação de definição funcionará. Definido como <see langword="True" /> quando você acredita que um valor intermediário foi definido na propriedade ou no campo; caso contrário, <see langword="False" />.</param>
      <param name="RValueBase">Um valor <see langword="Boolean" /> que especifica quando a referência de base da referência tardia é um <see langword="RValue" />. Definido como <see langword="True" /> quando a referência de base da referência final é um <see langword="RValue" />; isso permite gerar uma exceção de tempo de execução para atribuições tardias para campos de <see langword="RValues" /> de tipos de valor. Caso contrário, é definido como <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executa um get de associação tardia da propriedade ou do campo padrão ou chamada à função ou ao método padrão. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método. Se <paramref name="Instance" /> for do tipo <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, associe usando Dynamic Language Runtime; caso contrário, realize a associação tardia padrão.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="ReportErrors">Um valor <see langword="Boolean" /> usado para especificar se é necessário gerar exceções quando um erro for encontrado. Definido como <see langword="True" /> gerar exceções. Definido como <see langword="False" /> para retornar <see langword="Nothing" /> quando um erro for encontrado.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executa um get de associação tardia da propriedade ou do campo padrão ou chamada à função ou ao método padrão. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="ReportErrors">Um valor <see langword="Boolean" /> usado para especificar se é necessário gerar exceções quando um erro for encontrado. Definido como <see langword="True" /> gerar exceções. Definido como <see langword="False" /> para retornar <see langword="Nothing" /> quando um erro for encontrado.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="OptimisticSet">Um valor <see langword="Boolean" /> usado para determinar se a operação de definição funcionará. Definido como <see langword="True" /> quando você acredita que um valor intermediário foi definido na propriedade ou no campo; caso contrário, <see langword="False" />.</param>
      <param name="RValueBase">Um valor <see langword="Boolean" /> que especifica quando a referência de base da referência tardia é um <see langword="RValue" />. Definido como <see langword="True" /> quando a referência de base da referência final é um <see langword="RValue" />; isso permite gerar uma exceção de tempo de execução para atribuições tardias para campos de <see langword="RValues" /> de tipos de valor. Caso contrário, é definido como <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Executa uma chamada de método ou função de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Type">O tipo do objeto de chamada.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="TypeArguments">Uma matriz de tipos de argumento, usada somente para chamadas genéricas para passar tipos de argumento.</param>
      <param name="CopyBack">Uma matriz de valores <see langword="Boolean" /> que o associador tardio usa para se comunicar de volta ao site de chamadas quais argumentos correspondem aos parâmetros <see langword="ByRef" />. Cada valor <see langword="True" /> indica que os argumentos foram correspondidos e devem ser copiados após a chamada para <see langword="LateCall" /> ser concluída.</param>
      <param name="IgnoreReturn">Um valor <see langword="Boolean" /> que indica se o valor retornado pode ser ignorado ou não.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executa uma chamada de associação tardia para o método ou a função padrão. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="ReportErrors">Um valor <see langword="Boolean" /> usado para especificar se é necessário gerar exceções quando um erro for encontrado. Definido como <see langword="True" /> gerar exceções. Definido como <see langword="False" /> para retornar <see langword="Nothing" /> quando um erro for encontrado.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Executa uma chamada de acesso de campo ou obtenção da propriedade de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Type">O tipo do objeto de chamada.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="TypeArguments">Uma matriz de tipos de argumento, usada somente para chamadas genéricas para passar tipos de argumento.</param>
      <param name="CopyBack">Uma matriz de valores <see langword="Boolean" /> que o associador tardio usa para se comunicar de volta ao site de chamadas quais argumentos correspondem aos parâmetros <see langword="ByRef" />. Cada valor <see langword="True" /> indica que os argumentos foram correspondidos e devem ser copiados após a chamada para <see langword="LateCall" /> ser concluída.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executa um get de associação tardia do campo ou da propriedade padrão. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="ReportErrors">Um valor <see langword="Boolean" /> usado para especificar se é necessário gerar exceções quando um erro for encontrado. Definido como <see langword="True" /> gerar exceções. Definido como <see langword="False" /> para retornar <see langword="Nothing" /> quando um erro for encontrado.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Executa uma chamada de acesso de campo ou obtenção da propriedade de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <returns>Uma instância do objeto de chamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="OptimisticSet">Um valor <see langword="Boolean" /> usado para determinar se a operação de definição funcionará. Definido como <see langword="True" /> quando você acredita que um valor intermediário foi definido na propriedade ou no campo; caso contrário, <see langword="False" />.</param>
      <param name="RValueBase">Um valor <see langword="Boolean" /> que especifica quando a referência de base da referência tardia é um <see langword="RValue" />. Definido como <see langword="True" /> quando a referência de base da referência final é um <see langword="RValue" />; isso permite gerar uma exceção de tempo de execução para atribuições tardias para campos de <see langword="RValues" /> de tipos de valor. Caso contrário, é definido como <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Type">O tipo do objeto de chamada.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="TypeArguments">Uma matriz de tipos de argumento, usada somente para chamadas genéricas para passar tipos de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Type">O tipo do objeto de chamada.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="TypeArguments">Uma matriz de tipos de argumento, usada somente para chamadas genéricas para passar tipos de argumento.</param>
      <param name="OptimisticSet">Um valor <see langword="Boolean" /> usado para determinar se a operação de definição funcionará. Definido como <see langword="True" /> quando você acredita que um valor intermediário foi definido na propriedade ou no campo; caso contrário, <see langword="False" />.</param>
      <param name="RValueBase">Um valor <see langword="Boolean" /> que especifica quando a referência de base da referência tardia é um <see langword="RValue" />. Definido como <see langword="True" /> quando a referência de base da referência final é um <see langword="RValue" />; isso permite gerar uma exceção de tempo de execução para atribuições tardias para campos de <see langword="RValues" /> de tipos de valor. Caso contrário, é definido como <see langword="False" />.</param>
      <param name="CallType">Um membro de enumeração do tipo <see cref="T:Microsoft.VisualBasic.CallType" /> representando o tipo de procedimento sendo chamado. O valor de CallType pode ser <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />. Somente <see langword="Set" /> é usado.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Executa uma chamada de gravação de campo ou conjunto de propriedades de associação tardia. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="Instance">Uma instância do objeto de chamada expondo a propriedade ou método.</param>
      <param name="Type">O tipo do objeto de chamada.</param>
      <param name="MemberName">O nome da propriedade ou método no objeto de chamada.</param>
      <param name="Arguments">Uma matriz que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <param name="ArgumentNames">Uma matriz de nomes de argumento.</param>
      <param name="TypeArguments">Uma matriz de tipos de argumento, usada somente para chamadas genéricas para passar tipos de argumento.</param>
      <param name="OptimisticSet">Um valor <see langword="Boolean" /> usado para determinar se a operação de definição funcionará. Definido como <see langword="True" /> quando você acredita que um valor intermediário foi definido na propriedade ou no campo; caso contrário, <see langword="False" />.</param>
      <param name="RValueBase">Um valor <see langword="Boolean" /> que especifica quando a referência de base da referência tardia é um <see langword="RValue" />. Definido como <see langword="True" /> quando a referência de base da referência final é um <see langword="RValue" />; isso permite gerar uma exceção de tempo de execução para atribuições tardias para campos de <see langword="RValues" /> de tipos de valor. Caso contrário, é definido como <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>O compilador do Visual Basic usa esta classe para controle de fluxo de objetos e ela não deve ser chamada diretamente do seu código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Verifica se há um bloqueio de sincronização no tipo especificado.</summary>
      <param name="Expression">O tipo de dados para o qual verificar o bloqueio de sincronização.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Fornece serviços para o compilador do Visual Basic para compilação de loops <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Inicializa um loop <see langword="For...Next" />.</summary>
      <param name="Counter">A variável de contador de loops.</param>
      <param name="Start">O valor inicial do contador de loops.</param>
      <param name="Limit">O valor da opção <see langword="To" />.</param>
      <param name="StepValue">O valor da opção <see langword="Step" />.</param>
      <param name="LoopForResult">Um objeto que contém valores verificados para valores de loop.</param>
      <param name="CounterResult">O valor do contador para a próxima iteração do loop.</param>
      <returns>
        <see langword="False" /> se o loop foi terminado; caso contrário, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Verifica os valores válidos para o contador de loops, os valores <see langword="Step" /> e <see langword="To" />.</summary>
      <param name="count">Necessário. Um valor <see langword="Decimal" /> que representa o valor inicial passado para a variável de contador de loops.</param>
      <param name="limit">Necessário. Um valor <see langword="Decimal" /> que representa o valor passado usando a palavra-chave <see langword="To" />.</param>
      <param name="StepValue">Necessário. Um valor <see langword="Decimal" /> que representa o valor passado usando a palavra-chave <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="StepValue" /> for maior que zero e <paramref name="count" /> for menor ou igual a <paramref name="limit" />; ou se <paramref name="StepValue" /> for menor ou igual a zero e <paramref name="count" /> for maior ou igual a <paramref name="limit" />; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Incrementa um loop <see langword="For...Next" />.</summary>
      <param name="Counter">A variável de contador de loops.</param>
      <param name="LoopObj">Um objeto que contém valores verificados para valores de loop.</param>
      <param name="CounterResult">O valor do contador para a próxima iteração do loop.</param>
      <returns>
        <see langword="False" /> se o loop foi terminado; caso contrário, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Verifica os valores válidos para o contador de loops, os valores <see langword="Step" /> e <see langword="To" />.</summary>
      <param name="count">Necessário. Um valor <see langword="Single" /> que representa o valor inicial passado para a variável de contador de loops.</param>
      <param name="limit">Necessário. Um valor <see langword="Single" /> que representa o valor passado usando a palavra-chave <see langword="To" />.</param>
      <param name="StepValue">Necessário. Um valor <see langword="Single" /> que representa o valor passado usando a palavra-chave <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="StepValue" /> é maior que zero e <paramref name="count" /> é menor que ou igual a <paramref name="limit" /> ou se <paramref name="StepValue" /> é menor ou igual a zero e <paramref name="count" /> é maior que ou igual a <paramref name="limit" />; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Verifica os valores válidos para o contador de loops, os valores <see langword="Step" /> e <see langword="To" />.</summary>
      <param name="count">Necessário. Um valor <see langword="Double" /> que representa o valor inicial passado para a variável de contador de loops.</param>
      <param name="limit">Necessário. Um valor <see langword="Double" /> que representa o valor passado usando a palavra-chave <see langword="To" />.</param>
      <param name="StepValue">Necessário. Um valor <see langword="Double" /> que representa o valor passado usando a palavra-chave <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="StepValue" /> é maior que zero e <paramref name="count" /> é menor que ou igual a <paramref name="limit" /> ou se <paramref name="StepValue" /> é menor ou igual a zero e <paramref name="count" /> é maior que ou igual a <paramref name="limit" />; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Executa uma operação de adição (+).</summary>
      <param name="o1">Necessário. Qualquer expressão numérica.</param>
      <param name="o2">Necessário. Qualquer expressão numérica.</param>
      <returns>A soma de <paramref name="o1" /> e <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Executa uma operação <see langword="And" /> bit a bit.</summary>
      <param name="obj1">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="obj2">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>1 se <paramref name="obj1" /> e <paramref name="obj2" /> forem avaliados como 1; caso contrário, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Executa uma operação <see langword="Or" /> bit a bit.</summary>
      <param name="obj1">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="obj2">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>0 se <paramref name="obj1" /> e <paramref name="obj2" /> forem avaliados como 0; caso contrário, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Executa uma operação <see langword="Xor" />.</summary>
      <param name="obj1">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="obj2">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões de bits numéricos. Para obter mais informações, consulte Operador Xor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Executa uma operação de divisão (/).</summary>
      <param name="o1">Necessário. Qualquer expressão numérica.</param>
      <param name="o2">Necessário. Qualquer expressão numérica.</param>
      <returns>O quociente total de <paramref name="o1" /> dividido por <paramref name="o2" />, incluindo qualquer resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Retorna um valor primitivo demarcado. Esse método é usado para evitar copiar estruturas várias vezes.</summary>
      <param name="o">Necessário. Qualquer expressão.</param>
      <returns>O valor primitivo de <paramref name="o" /> digitado como um objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Executa uma operação de divisão de inteiro (\).</summary>
      <param name="o1">Necessário. Qualquer expressão numérica.</param>
      <param name="o2">Necessário. Qualquer expressão numérica.</param>
      <returns>O quociente de inteiro de <paramref name="o1" /> dividido por <paramref name="o2" />, que descarta qualquer resto e retém apenas a parte do inteiro.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Executa uma comparação de <see langword="Like" />.</summary>
      <param name="vLeft">Necessário. Qualquer expressão.</param>
      <param name="vRight">Necessário. Qualquer expressão de cadeia de caracteres em conformidade com as convenções de correspondência de padrão descritas no Operador Like.</param>
      <param name="CompareOption">Necessário. Um valor <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que a operação usa a comparação de texto ou binária.</param>
      <returns>
        <see langword="True" /> se a representação de cadeia de caracteres do valor em <paramref name="vLeft" /> satisfizer o padrão contido no <paramref name="vRight" />; caso contrário, <see langword="False" />. <see langword="True" /> se <paramref name="vLeft" /> e <paramref name="vRight" /> forem <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Executa uma operação de módulo (<see langword="Mod" />).</summary>
      <param name="o1">Necessário. Qualquer expressão numérica.</param>
      <param name="o2">Necessário. Qualquer expressão numérica.</param>
      <returns>O resto após dividir <paramref name="o1" /> por <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Executa uma operação de multiplicação (*).</summary>
      <param name="o1">Necessário. Qualquer expressão numérica.</param>
      <param name="o2">Necessário. Qualquer expressão numérica.</param>
      <returns>O produto de <paramref name="o1" /> e <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Executa uma operação de unário negativo (-).</summary>
      <param name="obj">Necessário. Qualquer expressão numérica.</param>
      <returns>O valor negativo de <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Executa uma operação de <see langword="Not" />.</summary>
      <param name="obj">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Para operações <see langword="Boolean" />, <see langword="False" /> se <paramref name="obj" /> for <see langword="True" />; caso contrário, <see langword="True" />. Para operações bit a bit, 1 se <paramref name="obj" /> for 0; caso contrário, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Executa a comparação de cadeias de caracteres de texto ou binárias dados dois objetos.</summary>
      <param name="o1">Necessário. Qualquer expressão.</param>
      <param name="o2">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>Valor 
  Condição 
  -1 
 
                <paramref name="o1" /> é menor que <paramref name="o2" />.  

  0 
 
                <paramref name="o1" /> é igual a <paramref name="o2" />.  

  1 
 
                <paramref name="o1" /> é maior que <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Executa uma operação de mais (+) unária.</summary>
      <param name="obj">Necessário. Qualquer expressão numérica.</param>
      <returns>O valor de <paramref name="obj" />. (O sinal do <paramref name="obj" /> permanece inalterado.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Executa uma operação de expoente (^).</summary>
      <param name="obj1">Necessário. Qualquer expressão numérica.</param>
      <param name="obj2">Necessário. Qualquer expressão numérica.</param>
      <returns>O resultado de <paramref name="obj1" /> elevado à potência de <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Executa uma operação de deslocamento aritmético para a esquerda (&lt;&lt;).</summary>
      <param name="o1">Necessário. Expressão numérica integral. O padrão de bit a ser deslocado. O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="amount">Necessário. Expressão numérica. O número de bits para deslocar o padrão de bit. O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</param>
      <returns>Um valor numérico integral. O resultado do deslocamento do padrão de bit. O tipo de dados é o mesmo que o de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Executa uma operação de deslocamento aritmético para a direita (&gt;&gt;).</summary>
      <param name="o1">Necessário. Expressão numérica integral. O padrão de bit a ser deslocado. O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="amount">Necessário. Expressão numérica. O número de bits para deslocar o padrão de bit. O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</param>
      <returns>Um valor numérico integral. O resultado do deslocamento do padrão de bit. O tipo de dados é o mesmo que o de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Executa uma operação de concatenação de cadeias de caracteres (&amp;).</summary>
      <param name="vLeft">Necessário. Qualquer expressão.</param>
      <param name="vRight">Necessário. Qualquer expressão.</param>
      <returns>Uma cadeia de caracteres que representa a concatenação de <paramref name="vLeft" /> e <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Executa uma operação de subtração (-).</summary>
      <param name="o1">Necessário. Qualquer expressão numérica.</param>
      <param name="o2">Necessário. Qualquer expressão numérica.</param>
      <returns>A diferença entre <paramref name="o1" /> e <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Executa uma comparação de <see langword="Xor" />.</summary>
      <param name="obj1">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="obj2">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Um <see langword="Boolean" /> ou valor numérico. Para uma comparação <see langword="Boolean" />, o valor retornado é a exclusão lógica (disjunção lógica exclusiva) de dois valores <see langword="Boolean" />. Para operações bit a bit (numéricas), o valor retornado é um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões numéricos de bits. Para obter mais informações, consulte Operador Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Fornece operadores de matemática de associação tardia, tal como <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> e <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que o compilador do Visual Basic usa internamente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Representa o operador de adição (+) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>A soma de <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Representa o operador <see langword="And" /> do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="Right">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Para operações <see langword="Boolean" />, <see langword="True" /> se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como <see langword="True" />; caso contrário, <see langword="False" />. Para operações bit a bit, 1 se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como 1; caso contrário, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de igual (=) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> e <paramref name="Right" /> forem iguais; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de maior que (&gt;) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> caso <paramref name="Left" /> seja maior que <paramref name="Right" />; do contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de maior ou igual a (&gt;=) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> for maior ou igual a <paramref name="Right" />; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de menor que (&lt;) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> caso <paramref name="Left" /> seja menor que <paramref name="Right" />; do contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de menor ou igual a (&lt;=) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> for menor ou igual a <paramref name="Right" />; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de não igual (&lt;&gt;) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> não for igual a <paramref name="Right" />; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Executa a comparação de cadeias de caracteres de texto ou binárias dadas duas cadeias de caracteres.</summary>
      <param name="Left">Necessário. Qualquer expressão de <see langword="String" /> .</param>
      <param name="Right">Necessário. Qualquer expressão de <see langword="String" /> .</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>Valor 
  Condição 
  -1 
 
                <paramref name="Left" /> é menor que <paramref name="Right" />.  

  0 
 
                <paramref name="Left" /> é igual a <paramref name="Right" />.  

  1 
 
                <paramref name="Left" /> é maior que <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Representa o operador de concatenação (&amp;) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <returns>Uma cadeia de caracteres que representa a concatenação de <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador equals (=) sobrecarregado do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>O resultado do operador equals sobrecarregado. <see langword="False" /> se não houver suporte para a sobrecarga de operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de maior que (&gt;) sobrecarregado do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>O resultado do operador de maior que sobrecarregado. <see langword="False" /> se não houver suporte para a sobrecarga de operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de maior ou igual a (&gt;=) sobrecarregado do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>O resultado do operador de maior que ou igual a sobrecarregado. <see langword="False" /> se não houver suporte para a sobrecarga de operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de menor que (&lt;) sobrecarregado do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>O resultado do operador de menor que sobrecarregado. <see langword="False" /> se não houver suporte para a sobrecarga de operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de menor ou igual a (&lt;=) sobrecarregado do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>O resultado do operador de menor que ou igual a de sobrecarregado. <see langword="False" /> se não houver suporte para a sobrecarga de operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa o operador de não igual equals (&lt;&gt;) sobrecarregado do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão.</param>
      <param name="Right">Necessário. Qualquer expressão.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>O resultado do operador de não igual sobrecarregado. <see langword="False" /> se não houver suporte para a sobrecarga de operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Representa o operador de divisão (/) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>O quociente total de <paramref name="Left" /> dividido por <paramref name="Right" />, incluindo qualquer resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Representa o operador de expoente (^) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>O resultado de <paramref name="Left" /> elevado à potência de <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Executa uma avaliação de associação tardia de um operador definido pelo usuário. Esse método auxiliar não deve ser chamado diretamente do seu código.</summary>
      <param name="vbOp">O operador definido pelo usuário.</param>
      <param name="Arguments">Valores de argumento a passar ao operador definido pelo usuário.</param>
      <returns>O resultado retornado do operador definido pelo usuário.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Representa o operador de divisão de inteiro (\) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>O quociente de inteiro de <paramref name="Left" /> dividido por <paramref name="Right" />, que descarta qualquer resto e retém apenas a parte do inteiro.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Representa operador de deslocamento aritmético à esquerda (&lt;&lt;) do Visual Basic.</summary>
      <param name="Operand">Necessário. Expressão numérica integral. O padrão de bit a ser deslocado. O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="Amount">Necessário. Expressão numérica. O número de bits para deslocar o padrão de bit. O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</param>
      <returns>Um valor numérico integral. O resultado do deslocamento do padrão de bit. O tipo de dados é o mesmo que o de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Representa o operador <see langword="Mod" /> do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>O resto após dividir <paramref name="Left" /> por <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Representa o operador de multiplicação (*) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>O produto de <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Representa o operador unário negativo (-) do Visual Basic.</summary>
      <param name="Operand">Necessário. Qualquer expressão numérica.</param>
      <returns>O valor negativo de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Representa o operador <see langword="Not" /> do Visual Basic.</summary>
      <param name="Operand">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Para operações <see langword="Boolean" />, <see langword="False" /> se <paramref name="Operand" /> for <see langword="True" />; caso contrário, <see langword="True" />. Para operações bit a bit, 1 se <paramref name="Operand" /> for 0; caso contrário, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Representa o operador <see langword="Or" /> do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="Right">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Para operações <see langword="Boolean" />, <see langword="False" /> se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como <see langword="False" />; caso contrário, <see langword="True" />. Para operações bit a bit, 0 se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como 0; caso contrário, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Representa o operador unário positivo (+) do Visual Basic.</summary>
      <param name="Operand">Necessário. Qualquer expressão numérica.</param>
      <returns>O valor de <paramref name="Operand" />. (O sinal do <paramref name="Operand" /> permanece inalterado.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Representa operador de deslocamento aritmético à direita (&gt;&gt;) do Visual Basic.</summary>
      <param name="Operand">Necessário. Expressão numérica integral. O padrão de bit a ser deslocado. O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="Amount">Necessário. Expressão numérica. O número de bits para deslocar o padrão de bit. O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</param>
      <returns>Um valor numérico integral. O resultado do deslocamento do padrão de bit. O tipo de dados é o mesmo que o de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Representa o operador de subtração (-) do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer expressão numérica.</param>
      <param name="Right">Necessário. Qualquer expressão numérica.</param>
      <returns>A diferença entre <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Representa o operador <see langword="Xor" /> do Visual Basic.</summary>
      <param name="Left">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <param name="Right">Necessário. Qualquer <see langword="Boolean" /> ou expressão numérica.</param>
      <returns>Um <see langword="Boolean" /> ou valor numérico. Para uma comparação <see langword="Boolean" />, o valor retornado é a exclusão lógica (disjunção lógica exclusiva) de dois valores <see langword="Boolean" />. Para operações bit a bit (numéricas), o valor retornado é um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões numéricos de bits. Para obter mais informações, consulte Operador Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Especifica que a configuração atual de <see langword="Option Compare" /> deve ser passada como o valor padrão para um argumento.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>O compilador do Visual Basic emite a classe auxiliar para indicar (para depuração do Visual Basic) qual opção de comparação, binária ou de texto, está sendo usada</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Esse é um método auxiliar.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Fornece auxiliares para o objeto <see langword="Err" /> do Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Executa o trabalho para o método <see langword="Clear" /> do objeto <see langword="Err" />. Um método auxiliar.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Executa o trabalho para o método <see langword="Raise" /> do objeto <see langword="Err" />. Um método auxiliar.</summary>
      <param name="hr">Um valor inteiro que identifica a natureza do erro. Os erros do Visual Basic estão no intervalo 0-65535; o intervalo 0-512 é reservado para erros do sistema; o intervalo 513-65535 está disponível para erros definidos pelo usuário.</param>
      <returns>Um objeto <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Fecha todos os arquivos para o assembly de chamada e interrompe o processo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>O compilador do Visual Basic usa esse método auxiliar para capturar exceções no objeto <see langword="Err" />.</summary>
      <param name="ex">O objeto <see cref="T:System.Exception" /> a ser capturado.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>O compilador do Visual Basic usa esse método auxiliar para capturar exceções no objeto <see langword="Err" />.</summary>
      <param name="ex">O objeto <see cref="T:System.Exception" /> a ser capturado.</param>
      <param name="lErl">O número de linha da exceção.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Short" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Short" />.</param>
      <returns>O valor de <see langword="Short" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Short" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Short" />.</param>
      <returns>O valor de <see langword="Short" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="Single" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Single" />.</param>
      <returns>O valor <see langword="Single" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Single" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="Single" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="Single" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Retorna um valor de <see langword="Single" /> que corresponde à cadeia de caracteres especificada.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Single" />.</param>
      <returns>O valor de <see langword="Single" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="Single" /> que corresponde às informações de formato de número e de cadeia de caracteres especificadas.</summary>
      <param name="Value">Necessário. A cadeia de caracteres a ser convertida em um valor de <see langword="Single" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="Single" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>Esta classe fornece os atributos aplicados para o constructo de módulo padrão quando ele é emitido para a IL (linguagem intermediária). Ele não se destina a ser chamado diretamente no seu código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>O compilador do Visual Basic usa esta classe internamente ao inicializar membros locais estáticos; ela não deve ser chamada diretamente do seu código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Retorna o estado do sinalizador de inicialização do membro local estático (inicializado ou não).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>Essa classe foi preterida a partir do Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Boolean" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Boolean" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Byte" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Byte" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Char" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Char" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde à data especificada.</summary>
      <param name="Value">Necessário. Data a ser convertida em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Decimal" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Decimal" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Decimal" /> especificado e informações de formato de número.</summary>
      <param name="Value">Necessário. <see langword="Decimal" /> a ser convertido em um valor de <see langword="String" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde a um <see langword="Double" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Double" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Double" /> especificado e informações de formato de número.</summary>
      <param name="Value">Necessário. <see langword="Double" /> a ser convertido em um valor de <see langword="String" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde a um <see langword="Integer" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Integer" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde a um <see langword="Int64" /> especificado (inteiro de 64 bits).</summary>
      <param name="Value">Necessário. <see langword="Int64" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao objeto especificado.</summary>
      <param name="Value">Necessário. O objeto a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde a um <see langword="Int16" /> especificado (inteiro de 16 bits).</summary>
      <param name="Value">Necessário. <see langword="Int616" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde a um <see langword="Single" /> especificado.</summary>
      <param name="Value">Necessário. <see langword="Single" /> a ser convertido em um valor de <see langword="String" />.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Retorna um valor de <see langword="String" /> que corresponde ao <see langword="Single" /> especificado e informações de formato de número.</summary>
      <param name="Value">Necessário. <see langword="Single" /> a ser convertido em um valor de <see langword="String" />.</param>
      <param name="NumberFormat">Um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define como os valores numéricos são formatados e exibidos, dependendo da cultura.</param>
      <returns>O valor <see langword="String" /> correspondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Substitui o parâmetro <paramref name="sDest" /> pelo conteúdo do parâmetro <paramref name="sInsert" />.</summary>
      <param name="sDest">Necessário. Variável de cadeia de caracteres a ser modificada.</param>
      <param name="StartPosition">Necessário. Localização no parâmetro <paramref name="sDest" /> em que a substituição será iniciada. O índice é baseado em 1.</param>
      <param name="MaxInsertLength">Necessário. Número máximo de caracteres do parâmetro <paramref name="sInsert" /> a ser usado, iniciando no primeiro caractere.</param>
      <param name="sInsert">Necessário. Valor de cadeia de caracteres pelo qual o parâmetro <paramref name="sDest" /> será substituído.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Compara duas cadeias de caracteres.</summary>
      <param name="sLeft">Necessário. Cadeia de caracteres a ser comparada com <paramref name="sRight" />.</param>
      <param name="sRight">Necessário. Cadeia de caracteres a ser comparada com <paramref name="sLeft" />.</param>
      <param name="TextCompare">Necessário. <see langword="True" /> para executar uma comparação que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</param>
      <returns>Valor 
  Condição 
  zero 
  As duas cadeias são iguais.  

  menor que zero 
 
                <paramref name="sLeft" /> é menor que <paramref name="sRight" />.  

  maior que zero 
 
                <paramref name="sLeft" /> é maior que <paramref name="sRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Compara os parâmetros <paramref name="Source" /> e <paramref name="Pattern" /> e retorna os mesmos resultados que o operador <see langword="Like" />.</summary>
      <param name="Source">Necessário. Qualquer expressão de <see langword="String" /> .</param>
      <param name="Pattern">Qualquer expressão <see langword="String" /> de acordo com as convenções de correspondência de padrão descritas no operador Like.</param>
      <param name="CompareOption">Especifica como comparar cadeias de caracteres com padrões, de acordo com o <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Pode ser <see langword="vbBinaryCompare" /> para comparação binária ou <see langword="vbTextCompare" /> para comparação com base em uma ordem de classificação de texto sem diferenciação de maiúsculas e minúsculas determinada pelo valor de <see langword="LocaleID" /> do sistema.</param>
      <returns>Um valor <see langword="Boolean" /> que indica se a cadeia de caracteres satisfaz ou não o padrão. Se o valor na cadeia de caracteres satisfizer o padrão contido no padrão, o resultado será <see langword="True" />. Se a cadeia de caracteres não satisfizer o padrão, o resultado será <see langword="False" />. Se a cadeia de caracteres e o padrão forem cadeias de caracteres vazias, o resultado será <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Compara os parâmetros <paramref name="Source" /> e <paramref name="Pattern" /> e retorna os mesmos resultados que o operador <see langword="Like" />, usando a comparação binária.</summary>
      <param name="Source">Necessário. Qualquer expressão de <see langword="String" /> .</param>
      <param name="Pattern">Necessário. Qualquer expressão <see langword="String" /> de acordo com as convenções de correspondência de padrão descritas no operador Like.</param>
      <returns>Um valor <see langword="Boolean" /> que indica se a cadeia de caracteres satisfaz ou não o padrão. Se o valor na cadeia de caracteres satisfizer o padrão contido no padrão, o resultado será <see langword="True" />. Se a cadeia de caracteres não satisfizer o padrão, o resultado será <see langword="False" />. Se a cadeia de caracteres e o padrão forem cadeias de caracteres vazias, o resultado será <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Compara os parâmetros <paramref name="Source" /> e <paramref name="Pattern" /> e retorna os mesmos resultados que o operador <see langword="Like" /> usando comparação de texto.</summary>
      <param name="Source">Necessário. Qualquer expressão de <see langword="String" /> .</param>
      <param name="Pattern">Necessário. Qualquer expressão <see langword="String" /> de acordo com as convenções de correspondência de padrão descritas no operador Like.</param>
      <returns>Um valor <see langword="Boolean" /> que indica se a cadeia de caracteres satisfaz ou não o padrão. Se o valor na cadeia de caracteres satisfizer o padrão contido no padrão, o resultado será <see langword="True" />. Se a cadeia de caracteres não satisfizer o padrão, o resultado será <see langword="False" />. Se a cadeia de caracteres e o padrão forem cadeias de caracteres vazias, o resultado será <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Contém os utilitários usados pelo compilador do Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Usado pelo compilador do Visual Basic como um auxiliar de <see langword="Redim" />.</summary>
      <param name="arySrc">A matriz a ser copiada.</param>
      <param name="aryDest">A matriz de destino.</param>
      <returns>A matriz copiada.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>O módulo <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contém procedimentos usados para interagir com objetos, aplicativos e sistemas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Executa um método em um objeto ou define ou retorna uma propriedade em um objeto.</summary>
      <param name="Instance">Necessário. <see langword="Object" />. Um ponteiro para o objeto expondo a propriedade ou método.</param>
      <param name="MethodName">Necessário. <see langword="String" />. Uma expressão de cadeia de caracteres que contém o nome da propriedade ou método no objeto.</param>
      <param name="UseCallType">Necessário. Um membro de enumeração do tipo <see cref="T:Microsoft.VisualBasic.CallType" /> representando o tipo de procedimento sendo chamado. O valor de <see langword="CallType" /> pode ser <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</param>
      <param name="Arguments">Opcional. <see langword="ParamArray" />. Uma matriz de parâmetros que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <returns>Executa um método em um objeto ou define ou retorna uma propriedade em um objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Retorna um valor booliano que indica se uma expressão pode ser avaliada como um número.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Object" />.</param>
      <returns>Retorna um valor booliano que indica se uma expressão pode ser avaliada como um número.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Retorna um valor de cadeia de caracteres que contém o nome do tipo de dados do sistema de uma variável.</summary>
      <param name="VbName">Necessário. Uma variável de cadeia de caracteres que contém um nome do tipo Visual Basic.</param>
      <returns>Retorna um valor de cadeia de caracteres que contém o nome do tipo de dados do sistema de uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Retorna um valor de cadeia de caracteres que contém informações sobre o tipo de dados de uma variável.</summary>
      <param name="Expression">Necessário. Variável <see langword="Object" />. Se <see langword="Option Strict" /> for <see langword="Off" />, você poderá passar uma variável de qualquer tipo de dados, exceto uma estrutura.</param>
      <returns>Retorna um valor de cadeia de caracteres que contém informações sobre o tipo de dados de uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Retorna um valor de cadeia de caracteres que contém o nome do tipo de dados do Visual Basic de uma variável.</summary>
      <param name="SystemName">Necessário. Variável de cadeia de caracteres que contém um nome de tipo usado pelo Common Language Runtime.</param>
      <returns>Retorna um valor de cadeia de caracteres que contém o nome do tipo de dados do Visual Basic de uma variável.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>O módulo <see langword="Constants" /> contém constantes diversas. Essas constantes podem ser usadas em qualquer lugar no seu código.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Indica que o botão <see langword="Abort" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Indica se os botões <see langword="Abort" />, <see langword="Retry" /> e <see langword="Ignore" /> serão exibidos quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Indica que a caixa de mensagem será exibida como uma caixa de diálogo modal quando a função <see langword="MsgBox" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Indica que o arquivo foi alterado desde a última operação de backup para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Indica que o tipo de um objeto variante é uma matriz. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Representa um caractere de backspace para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Especifica que uma comparação binária deve ser realizada quando funções de comparação são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Indica que o tipo de um objeto variante é <see langword="Boolean" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Indica que o tipo de um objeto variante é <see langword="Byte" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Indica que o botão <see langword="Cancel" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Representa um caractere de retorno de carro para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Indica que o ícone de mensagem crítica será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Representa um caractere de retorno de carro, combinado com um caractere de avanço de linha para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Indica que o tipo de um objeto variante é <see langword="Currency" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Indica que o tipo de um objeto variante é <see langword="Date" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Indica que o tipo de um objeto variante é <see langword="Decimal" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Indica que o botão mais à esquerda é selecionado como o botão padrão quando a caixa de mensagem é exibida.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Indica que o segundo botão da esquerda é selecionado como o botão padrão quando a caixa de mensagem é exibida.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Indica que o terceiro botão da esquerda é selecionado como o botão padrão quando a caixa de mensagem é exibida.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Indica que o arquivo é um diretório ou pasta para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Indica que o tipo de um objeto variante é <see langword="Double" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Indica que o tipo de um objeto variante é <see langword="Empty" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Indica que o ícone de exclamação será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Indica que um valor <see langword="Boolean" /> igual a <see langword="False" /> deve ser usado quando funções de formatação de número são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Indica que a primeira semana do ano que tenha pelo menos quatro dias deve ser usada quando funções relacionadas a datas forem usadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Indica que a primeira semana completa do ano deverá ser usada quando funções relacionadas a datas forem usadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Indica que a semana do ano na qual 1º de janeiro ocorre deverá ser usada quando funções relacionadas a datas forem usadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Representa um caractere de avanço de página para funções de impressão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Especifica que a sexta-feira deverá ser usada como o primeiro dia da semana quando as funções relacionadas a datas forem chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Indica que o formato de data geral para a cultura atual deve ser usado quando a função <see langword="FormatDateTime" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Especifica que um valor da propriedade deverá ser recuperado quando a função <see langword="CallByName" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Indica que o arquivo é um arquivo oculto para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Indica que o estilo da janela fica oculto para o programa invocado quando a função <see langword="Shell" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Indica que os caracteres Hiragana deverão ser convertidos em caracteres Katakana quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Indica que o botão <see langword="Ignore" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Indica que o ícone de informações será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Indica que o tipo de um objeto variante é <see langword="Integer" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Indica que os caracteres Katakana deverão ser convertidos em caracteres Hiragana quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Indica que um valor da propriedade deverá ser definido como uma instância de objeto quando a função <see langword="CallByName" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Representa um caractere de avanço de linha para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Indica que os caracteres deverão ser convertidos para usar regras linguísticas para maiúsculas e minúsculas em vez de regras do sistema de arquivos para maiúsculas e minúsculas para quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Indica que o tipo de um objeto variante é <see langword="Long" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Indica que o formato de data completa da cultura atual deve ser usado quando a função <see langword="FormatDateTime" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Indica que o formato de hora completa da cultura atual deverá ser usado quando a função <see langword="FormatDateTime" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Indica que os caracteres deverão ser convertidos em minúsculas quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Indica que o estilo da janela é maximizado com foco para o programa invocado quando a função <see langword="Shell" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Especifica que um método deverá ser chamado quando a função <see langword="CallByName" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Indica que o estilo de janela será minimizado com foco para o programa invocado quando a função <see langword="Shell" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Indica que o estilo da janela é minimizado sem foco para o programa invocado quando a função <see langword="Shell" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Especifica que a segunda-feira deve ser usada como o primeiro dia da semana quando as funções relacionadas a data são chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Indica que o botão <see langword="Help" /> será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Indica que texto será alinhado à direita quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Indica que o texto de leitura da direita para a esquerda (sistemas hebraicos e árabes) será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Indica que a caixa de mensagem será exibida em primeiro plano quando a função <see langword="MsgBox" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Indica que os caracteres largos (de dois bytes) deverão ser convertidos em caracteres estreitos (de um byte) quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Representa um caractere newline para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Indica que o botão <see langword="No" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Indica que o arquivo é um arquivo normal para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Indica que o estilo da janela é normal com foco no programa invocado quando a função <see langword="Shell" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Indica que o estilo da janela é normal sem foco no programa invocado quando a função <see langword="Shell" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Indica que o tipo de um objeto variante é <see langword="Nothing" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Representa um caractere nulo para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Representa uma cadeia de comprimento zero para funções de impressão e exibição e para chamar procedimentos externos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Indica que o tipo de um objeto variante é <see langword="Object" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Representa o número do erro do objeto. Os números de erro definidos pelo usuário devem ser maiores que esse valor.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Indica que o botão <see langword="OK" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Indica que os botões <see langword="OK" /> e <see langword="Cancel" /> serão exibidos quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Indica que somente o botão <see langword="OK" /> será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Indica que a primeira letra de cada palavra em uma cadeia de caracteres deve ser convertida em maiúscula e demais caracteres em minúsculo quando a função <see langword="StrConv" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Indica que o ícone de interrogação será exibido quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Indica que o arquivo é um arquivo somente leitura para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Indica que o botão <see langword="Retry" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Indica que os botões <see langword="Retry" /> e <see langword="Cancel" /> serão exibidos quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Especifica que domingo deverá ser usado como o primeiro dia da semana quando funções relacionadas a data forem chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Especifica que um valor da propriedade deverá ser definido quando a função <see langword="CallByName" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Indica que o formato de data abreviada para a cultura atual deve ser usado quando a função <see langword="FormatDateTime" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Indica que o formato de data abreviada para a cultura atual deve ser usada quando a função <see langword="FormatDateTime" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Indica que os caracteres deverão ser convertidos em chinês simplificado quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Indica que o tipo de um objeto variante é <see langword="Single" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Indica que o tipo de um objeto variante é <see langword="String" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Especifica que o domingo deve ser usado como o primeiro dia da semana quando as funções relacionadas à data são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Indica que o arquivo é um arquivo de sistema para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Indica que a caixa de mensagem será exibida como uma caixa de diálogo modal quando a função <see langword="MsgBox" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Representa um caractere de tabulação para funções de impressão e exibição.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Indica que uma comparação de texto deve ser realizada quando funções de comparação são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Especifica que quinta-feira deve ser usada como o primeiro dia da semana quando as funções relacionadas à data são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Indica que os caracteres deverão ser convertidos em chinês tradicional quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Indica que um valor <see langword="Boolean" /> igual a <see langword="True" /> deve ser usado quando funções de formatação de número são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Especifica que terça-feira deve ser usada como o primeiro dia da semana quando as funções relacionadas à data são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Indica que os caracteres devem ser convertidos em maiúsculas quando a função <see langword="StrConv" /> é chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Indica que um valor <see langword="Boolean" /> padrão deverá ser usado quando funções de formatação de número são forem chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Indica que o tipo de um objeto variante é um tipo definido pelo usuário. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Indica que a semana especificada pelo seu sistema como a primeira semana do ano deverá ser usada quando funções relacionadas à data forem chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Indica que o dia especificado por seu sistema como o primeiro dia da semana deve ser usado quando as funções relacionadas à data forem chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Indica que o tipo de um objeto variante é <see langword="Variant" />. Retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Representa um caractere de retorno de carro para funções de impressão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Indica o atributo de arquivo do rótulo de volume para funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Especifica que quarta-feira deve ser usada como o primeiro dia da semana quando as funções relacionadas à data são chamadas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Indica que os caracteres estreitos (de um byte) deverão ser convertidos em caracteres largos (de dois bytes) quando a função <see langword="StrConv" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Indica que o botão <see langword="Yes" /> foi clicado em uma caixa de mensagem. Retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Indica que os botões <see langword="Yes" /> e <see langword="No" /> serão exibidos quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Indica se os botões <see langword="Yes" />, <see langword="No" /> e <see langword="Cancel" /> serão exibidos quando a função <see langword="MsgBox" /> for chamada.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>O módulo <see langword="ControlChars" /> contém constantes usadas como caracteres de controle. Essas constantes podem ser usadas em qualquer lugar no seu código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Representa um caractere backspace (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Representa um caractere de retorno de carro (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Representa uma combinação de caracteres de avanço de linha/retorno de carro (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Representa um caractere de avanço de página para funções de impressão (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Representa um caractere de alimentação de linha (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Representa um caractere de nova linha (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Representa um caractere nulo (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Representa um caractere de aspas duplas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Representa um caractere de tabulação (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Representa um caractere de tabulação vertical (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>O módulo <see langword="Conversion" /> contém procedimentos usados para executar várias operações de conversão.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Converte um objeto no tipo especificado.</summary>
      <param name="Expression">O objeto a ser convertido.</param>
      <param name="TargetType">O tipo para o qual o objeto será convertido.</param>
      <returns>Um objeto cujo tipo em tempo de execução é o tipo de destino solicitado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Converte um objeto no tipo genérico especificado.</summary>
      <param name="Expression">O objeto a ser convertido.</param>
      <typeparam name="TargetType">O tipo para o qual o objeto será convertido.</typeparam>
      <returns>Um objeto digitalmente tipado como o tipo genérico solicitado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Retorna a mensagem de erro que corresponde a um número de erro especificado.</summary>
      <returns>A mensagem de erro que corresponde ao erro em tempo de execução mais recente.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> está fora do intervalo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Retorna a mensagem de erro que corresponde a um número de erro especificado.</summary>
      <param name="ErrorNumber">Opcional. Qualquer número de erro inválido.</param>
      <returns>A mensagem de erro que corresponde a um número de erro especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> está fora do intervalo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Decimal" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Double" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Short" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Integer" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Long" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Object" /> ou qualquer expressão numérica válida. Se <paramref name="Number" /> contiver <see langword="Nothing" />, <see langword="Nothing" /> será retornado.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Single" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Retorna uma cadeia de caracteres que representa o valor hexadecimal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor hexadecimal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Decimal" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Double" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Short" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Integer" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Long" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Object" /> ou qualquer expressão numérica válida. Se <paramref name="Number" /> contiver <see langword="Nothing" />, <see langword="Nothing" /> será retornado.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Retorna a parte inteira de um número.</summary>
      <param name="Number">Necessário. Um número do tipo <see langword="Single" /> ou qualquer expressão numérica válida.</param>
      <returns>A parte inteira de um número.</returns>
      <exception cref="T:System.ArgumentNullException">O número não está especificado.</exception>
      <exception cref="T:System.ArgumentException">O número não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Retorna uma cadeia de caracteres que representa o valor octal de um número.</summary>
      <param name="Number">Necessário. Qualquer expressão numérica válida ou expressão <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres que representa o valor octal de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Retorna uma representação <see langword="String" /> de um número.</summary>
      <param name="Number">Necessário. Um <see langword="Object" /> contendo qualquer expressão numérica válida.</param>
      <returns>Uma representação <see langword="String" /> de um número.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> não está especificado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> não é um tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Retorna os números contidos em uma cadeia de caracteres como um valor numérico do tipo apropriado.</summary>
      <param name="Expression">Necessário. Qualquer expressão <see langword="String" /> válida, variável <see langword="Object" /> ou valor <see langword="Char" />. Se <paramref name="Expression" /> for do tipo <see langword="Object" />, seu valor deverá ser conversível para <see langword="String" /> ou um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>Os números contidos em uma cadeia de caracteres como um valor numérico do tipo apropriado.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> é muito grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> é uma expressão de tipo <see langword="Object" /> não conversível para <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Retorna os números contidos em uma cadeia de caracteres como um valor numérico do tipo apropriado.</summary>
      <param name="Expression">Necessário. Qualquer expressão <see langword="String" /> válida, variável <see langword="Object" /> ou valor <see langword="Char" />. Se <paramref name="Expression" /> for do tipo <see langword="Object" />, seu valor deverá ser conversível para <see langword="String" /> ou um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>Os números contidos em uma cadeia de caracteres como um valor numérico do tipo apropriado.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> é muito grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> é uma expressão de tipo <see langword="Object" /> não conversível para <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Retorna os números contidos em uma cadeia de caracteres como um valor numérico do tipo apropriado.</summary>
      <param name="InputStr">Necessário. Qualquer expressão <see langword="String" /> válida, variável <see langword="Object" /> ou valor <see langword="Char" />. Se <paramref name="Expression" /> for do tipo <see langword="Object" />, seu valor deverá ser conversível para <see langword="String" /> ou um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>Os números contidos em uma cadeia de caracteres como um valor numérico do tipo apropriado.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> é muito grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> é uma expressão de tipo <see langword="Object" /> não conversível para <see langword="String" />.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>O módulo <see langword="DateAndTime" /> contém os procedimentos e propriedades usados em operações de data e hora.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Retorna um valor que contém um valor de data e hora ao qual um intervalo de tempo especificado foi adicionado.</summary>
      <param name="Interval">Necessário. Um valor de enumeração <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou uma expressão de cadeia de caracteres que representa o intervalo de tempo que você deseja adicionar.</param>
      <param name="Number">Necessário. Expressão de ponto flutuante que representa o número de intervalos que você deseja adicionar. Pode ser positivo (para obter valores de data/hora no futuro) ou negativo (para obter valores de data/hora no passado). Pode conter uma fração quando <paramref name="Interval" /> especifica horas, minutos ou segundos. Para outros valores de <paramref name="Interval" />, qualquer fração de <paramref name="Number" /> será ignorada.</param>
      <param name="DateValue">Necessário. Uma expressão que representa a data e hora para a qual o intervalo deve ser adicionado. <paramref name="DateValue" /> em si não é alterado no programa de chamada.</param>
      <returns>Um valor que contém um valor de data e hora ao qual um intervalo de tempo especificado foi adicionado.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> não é coercível para <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> não é válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A data calculada é anterior à 00:00:00 do dia 1º de janeiro do ano 1 ou posterior às 23:59:59 do dia 31 de dezembro de 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Retorna um valor que contém um valor de data e hora ao qual um intervalo de tempo especificado foi adicionado.</summary>
      <param name="Interval">Necessário. Um valor de enumeração <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou uma expressão de cadeia de caracteres que representa o intervalo de tempo que você deseja adicionar.</param>
      <param name="Number">Necessário. Expressão de ponto flutuante que representa o número de intervalos que você deseja adicionar. <paramref name="Number" /> pode ser positivo (para obter valores de data/hora no futuro) ou negativo (para obter valores de data/hora no passado). Pode conter uma fração quando <paramref name="Interval" /> especifica horas, minutos ou segundos. Para outros valores de <paramref name="Interval" />, qualquer fração de <paramref name="Number" /> será ignorada.</param>
      <param name="DateValue">Necessário. Uma expressão que representa a data e hora para a qual o intervalo deve ser adicionado. <paramref name="DateValue" /> em si não é alterado no programa de chamada.</param>
      <returns>Um valor que contém um valor de data e hora ao qual um intervalo de tempo especificado foi adicionado.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> não é coercível para <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> não é válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A data calculada é anterior à 00:00:00 do dia 1º de janeiro do ano 1 ou posterior às 23:59:59 do dia 31 de dezembro de 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retorna um valor longo que especifica o número de intervalos de tempo entre dois valores <see langword="Date" />.</summary>
      <param name="Interval">Necessário. Um valor de enumeração <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou uma expressão de cadeia de caracteres que representa o intervalo de tempo que você deseja usar como a unidade da diferença entre <paramref name="Date1" /> e <paramref name="Date2" />.</param>
      <param name="Date1">Necessário. O primeiro valor de data/hora que você deseja usar no cálculo.</param>
      <param name="Date2">Necessário. O segundo valor de data/hora que você deseja usar no cálculo.</param>
      <param name="DayOfWeek">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica o primeiro dia da semana. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> .</param>
      <param name="WeekOfYear">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica a primeira semana do ano. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Um valor longo que especifica o número de intervalos de tempo entre dois valores <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> ou <paramref name="DayofWeek" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> ou <paramref name="Date2" /> é de um tipo inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retorna um valor longo que especifica o número de intervalos de tempo entre dois valores <see langword="Date" />.</summary>
      <param name="Interval">Necessário. Um valor de enumeração <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou uma expressão de cadeia de caracteres que representa o intervalo de tempo que você deseja usar como a unidade da diferença entre <paramref name="Date1" /> e <paramref name="Date2" />.</param>
      <param name="Date1">Necessário. O primeiro valor de data/hora que você deseja usar no cálculo.</param>
      <param name="Date2">Necessário. O segundo valor de data/hora que você deseja usar no cálculo.</param>
      <param name="DayOfWeek">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica o primeiro dia da semana. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> .</param>
      <param name="WeekOfYear">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica a primeira semana do ano. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Um valor longo que especifica o número de intervalos de tempo entre dois valores <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> ou <paramref name="DayofWeek" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> ou <paramref name="Date2" /> é de um tipo inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retorna um valor inteiro que contém o componente especificado de determinado valor <see langword="Date" />.</summary>
      <param name="Interval">Necessário. Um valor de enumeração <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou uma expressão de cadeia de caracteres que representa a parte do valor de data/hora que você deseja retornar.</param>
      <param name="DateValue">Necessário. O valor <see langword="Date" /> que você deseja avaliar.</param>
      <param name="FirstDayOfWeekValue">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica o primeiro dia da semana. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> .</param>
      <param name="FirstWeekOfYearValue">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica a primeira semana do ano. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Um valor inteiro que contém o componente especificado de determinado valor <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> não é válido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> não é coercível para <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retorna um valor que contém o componente especificado de determinado valor <see langword="Date" />.</summary>
      <param name="Interval">Necessário. Um valor de enumeração <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou uma expressão de cadeia de caracteres que representa a parte do valor de data/hora que você deseja retornar.</param>
      <param name="DateValue">Necessário. Um valor <see langword="Date" /> que você deseja avaliar.</param>
      <param name="DayOfWeek">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica o primeiro dia da semana. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> .</param>
      <param name="WeekOfYear">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica a primeira semana do ano. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Um valor inteiro que contém o componente especificado de determinado valor <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> é inválido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> não é coercível para <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Retorna um valor <see langword="Date" /> que representa um ano, mês e dia especificados, com as informações de hora definidas como meia-noite (00:00:00).</summary>
      <param name="Year">Necessário. Expressão de inteiro de 1 a 9999. No entanto, valores abaixo desse intervalo também são aceitos. Se <paramref name="Year" /> for de 0 a 99, ele será interpretado como sendo entre 1930 e 2029, conforme explicado na seção “Comentários” abaixo. Se <paramref name="Year" /> for menor que 1, ele será subtraído do ano atual.</param>
      <param name="Month">Necessário. Expressão de inteiro de 1 a 12. No entanto, valores fora desse intervalo também são aceitos. O valor de <paramref name="Month" /> é deslocado em 1 e aplicado a janeiro do ano calculado. Em outras palavras, (<paramref name="Month" /> - 1) é adicionado a janeiro. O ano é recalculado se necessário. Os seguintes resultados ilustram esse efeito: 
Se <paramref name="Month" /> for 1, o resultado será janeiro do ano calculado.  
Se <paramref name="Month" /> for 0, o resultado será dezembro do ano anterior.  
Se <paramref name="Month" /> for -1, o resultado será novembro do ano anterior.  
Se <paramref name="Month" /> for 13, o resultado será janeiro do ano seguinte.</param>
      <param name="Day">Necessário. Expressão de inteiro de 1 a 31. No entanto, valores fora desse intervalo também são aceitos. O valor de <paramref name="Day" /> é deslocado em 1 e aplicado ao primeiro dia do mês calculado. Em outras palavras, (<paramref name="Day" /> - 1) é adicionado ao primeiro dia do mês. O mês e ano são recalculados, se necessário. Os seguintes resultados ilustram esse efeito: 
Se <paramref name="Day" /> for 1, o resultado será o primeiro dia do mês calculado.  
Se <paramref name="Day" /> for 0, o resultado será o último dia do mês anterior.  
Se <paramref name="Day" /> for -1, o resultado será o penúltimo dia do mês anterior.  
Se <paramref name="Day" /> for posterior ao fim do mês atual, o resultado será o dia apropriado do mês seguinte. Por exemplo, se <paramref name="Month" /> for 4 e <paramref name="Day" /> for 31, o resultado será 1º de maio.</param>
      <returns>Um valor <see langword="Date" /> que representa um ano, mês e dia especificados, com as informações de hora definidas como meia-noite (00:00:00).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Retorna ou define um valor de cadeia de caracteres que representa a data atual de acordo com o sistema.</summary>
      <returns>Retorna ou define um valor de cadeia de caracteres que representa a data atual de acordo com o sistema.</returns>
      <exception cref="T:System.InvalidCastException">Formato inválido usado para definir o valor de <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Retorna um valor <see langword="Date" /> que contém as informações de data representadas por uma cadeia de caracteres, com as informações de hora definidas para meia-noite (00:00:00).</summary>
      <param name="StringDate">Necessário. expressão de cadeia de caracteres que representa um valor de data/hora entre 00:00:00 de 1º de janeiro do ano 1 e 23:59:59 de 31 de dezembro de 9999.</param>
      <returns>Um valor <see langword="Date" /> que contém as informações de data representadas por uma cadeia de caracteres, com as informações de hora definidas como meia-noite (00:00:00).</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" /> inclui informações de hora inválidas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Retorna um valor inteiro de 1 a 31 que representa o dia do mês.</summary>
      <param name="DateValue">Necessário. Um valor <see langword="Date" /> do qual você deseja extrair o dia.</param>
      <returns>Um valor inteiro de 1 a 31 que representa o dia do mês.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Retorna um valor inteiro de 0 a 23 que representa a hora do dia.</summary>
      <param name="TimeValue">Necessário. Um valor <see langword="Date" /> do qual você deseja extrair a hora.</param>
      <returns>Um valor inteiro de 0 a 23 que representa a hora do dia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Retorna um valor inteiro de 0 a 59 que representa o minuto da hora.</summary>
      <param name="TimeValue">Necessário. Um valor <see langword="Date" /> do qual você deseja extrair o minuto.</param>
      <returns>Um valor inteiro de 0 a 59 que representa o minuto da hora.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Retorna um valor inteiro de 1 a 12 que representa o mês do ano.</summary>
      <param name="DateValue">Necessário. Um valor <see langword="Date" /> do qual você deseja extrair o mês.</param>
      <returns>Um valor inteiro de 1 a 12 que representa o mês do ano.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Retorna um valor de cadeia de caracteres que contém o nome do mês especificado.</summary>
      <param name="Month">Necessário. A designação numérica do mês, de 1 a 13. 1 indica janeiro e 12 indica dezembro. Você pode usar o valor 13 com um calendário de 13 meses. Se o sistema estiver usando um calendário de 12 meses e o <paramref name="Month" /> for 13, <c>MonthName</c> retornará uma cadeia de caracteres vazia.</param>
      <param name="Abbreviate">Opcional. <see langword="True" /> para abreviar o nome do mês; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <returns>Um valor de cadeia de caracteres que contém o nome do mês especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> é menor que 1 ou maior que 13.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Retorna um valor que contém a data e hora atuais de acordo com seu sistema.</summary>
      <returns>A data e a hora atuais de acordo com o seu sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Retorna um valor inteiro de 0 a 59 que representa o segundo do minuto.</summary>
      <param name="TimeValue">Necessário. Um valor <see langword="Date" /> do qual você deseja extrair o segundo.</param>
      <returns>Um valor inteiro de 0 a 59 que representa o segundo do minuto.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Retorna ou define um valor de <see langword="Date" /> que representa a hora atual do dia, de acordo com seu sistema.</summary>
      <returns>Retorna ou define um valor de <see langword="Date" /> que representa a hora atual do dia, de acordo com seu sistema.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Retorna um valor <see cref="T:System.Double" /> que representa o número de segundos decorridos desde a meia-noite.</summary>
      <returns>Um valor que representa o número de segundos decorridos desde a meia-noite.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Retorna um valor <see langword="Date" /> que representa uma hora, um minuto e um segundo especificados, com as informações de data definidas em relação a 1º de janeiro do ano 1.</summary>
      <param name="Hour">Necessário. Expressão de inteiro de 0 a 23. No entanto, valores fora desse intervalo também são aceitos.</param>
      <param name="Minute">Necessário. Expressão de inteiro de 0 a 59. No entanto, valores fora desse intervalo também são aceitos. O valor de <paramref name="Minute" /> é adicionado à hora calculada, para que um valor negativo especifique os minutos antes da hora.</param>
      <param name="Second">Necessário. Expressão de inteiro de 0 a 59. No entanto, valores fora desse intervalo também são aceitos. O valor de <paramref name="Second" /> é adicionado ao minuto calculado, para que um valor negativo especifique os segundos antes do minuto.</param>
      <returns>Um valor <see langword="Date" /> que representa uma hora, um minuto e um segundo especificados, com as informações de data definidas em relação a 1º de janeiro do ano 1.</returns>
      <exception cref="T:System.ArgumentException">Um argumento está fora do intervalo de -2.147.483.648 a 2.147.483.647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O tempo calculado é menor que 24 horas negativas.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Retorna ou define um valor de cadeia de caracteres que representa a hora atual do dia de acordo com o sistema.</summary>
      <returns>Retorna ou define um valor de cadeia de caracteres que representa a hora atual do dia de acordo com o sistema.</returns>
      <exception cref="T:System.InvalidCastException">Formato inválido usado para definir o valor de <see langword="TimeString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Retorna um valor <see langword="Date" /> que contém as informações de hora representadas por uma cadeia de caracteres, com as informações de data definidas como 1 de janeiro do ano 1.</summary>
      <param name="StringTime">Necessário. Uma expressão de cadeia de caracteres que representa um valor de data/hora entre 00:00:00 de 1º de janeiro do ano 1 e 23:59:59 de 31 de dezembro de 9999.</param>
      <returns>Um valor <see langword="Date" /> que contém as informações de hora representadas por uma cadeia de caracteres, com as informações de data definidas como 1º de janeiro do ano 1.</returns>
      <exception cref="T:System.InvalidCastException">O <paramref name="StringTime" /> inclui informações de data inválidas.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Retorna ou define um valor <see langword="Date" /> que contém a data atual de acordo com o sistema.</summary>
      <returns>Retorna ou define um valor <see langword="Date" /> que contém a data atual de acordo com o sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Retorna um valor inteiro que contém um número que representa o dia da semana.</summary>
      <param name="DateValue">Necessário. Um valor <see langword="Date" /> para o qual você deseja determinar o dia da semana.</param>
      <param name="DayOfWeek">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica o primeiro dia da semana. Se não for especificado, é usado <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <returns>Um valor inteiro que contém um número que representa o dia da semana.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" /> é menor que 0 ou maior que 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Retorna um valor de cadeia de caracteres que contém o nome do dia da semana especificado.</summary>
      <param name="Weekday">Necessário. Integer. A designação numérica para o dia da semana, de 1 a 7, 1 indica o primeiro dia da semana e 7 indica o último dia da semana. As identidades do primeiro e do último dia dependem da configuração de <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">Opcional. O valor <see langword="Boolean" /> que indicará se o nome do dia da semana deverá ser abreviado. Se for omitido, o padrão será <see langword="False" />, que significa que o nome do dia da semana não é abreviado.</param>
      <param name="FirstDayOfWeekValue">Opcional. Um valor escolhido na enumeração de <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica o primeiro dia da semana. Se não for especificado, é usado <see langword="FirstDayOfWeek.System" />.</param>
      <returns>Um valor de cadeia de caracteres que contém o nome do dia da semana especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> é menor que 1 ou maior que 7 ou <paramref name="FirstDayOfWeekValue" /> é menor que 0 ou maior que 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Retorna um valor inteiro de 1 a 9999 que representa o ano.</summary>
      <param name="DateValue">Necessário. Um valor <see langword="Date" /> do qual você deseja extrair o ano.</param>
      <returns>Um valor inteiro de 1 a 9999 que representa o ano.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Indica como exibir datas ao chamar a função <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>Para números reais, exibe uma data e hora. Se o número não tiver nenhuma parte fracionária, exibe apenas uma data. Se o número não tiver nenhuma parte inteira, exibe apenas a hora. A exibição de data e hora é determinada pelas configurações regionais do computador. Esse membro é equivalente à constante <see langword="vbGeneralDate" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Exibe uma data usando o formato de data completa especificado nas configurações regionais do computador. Esse membro é equivalente à constante <see langword="vbLongDate" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Exibe a hora usando o formato de hora completa especificado nas configurações regionais do computador. Esse membro é equivalente à constante <see langword="vbLongTime" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Exibe uma data usando o formato de data abreviada especificado nas configurações regionais do computador. Esse membro é equivalente à constante <see langword="vbShortDate" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Exibe a hora usando o formato de hora abreviada especificado nas configurações regionais do computador. Esse membro é equivalente à constante <see langword="vbShortTime" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Indica como determinar e formatar intervalos de datas ao chamar funções relacionadas a datas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>Dia do mês (de 1 a 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>Dia do ano (de 1 a 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Hora (de 0 a 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Minuto (de 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Mês (de 1 a 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Trimestre do ano (de 1 a 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Segundo (de 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>Dia da semana (de 1 a 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Semana do ano (de 1 a 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Ano</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Fornece métodos para reproduzir sons.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Audio" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Fornece propriedades para acessar a hora local atual e o Tempo Universal Coordenado (equivalente ao Horário do Meridiano de Greenwich) no relógio do sistema.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Clock" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Obtém um objeto <see langword="Date" /> que contém a data e hora locais atuais nesse computador, expressas como hora UTC (GMT).</summary>
      <returns>Um <see langword="Date" /> objeto que contém a data e a hora atuais expressas como hora UTC (GMT).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Obtém um objeto <see langword="Date" /> que contém a data e hora locais atuais nesse computador.</summary>
      <returns>Um objeto <see langword="Date" /> que contém a data e hora locais atuais.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Obtém a contagem de milissegundos do timer do sistema do computador.</summary>
      <returns>Um <see langword="Integer" /> que contém a contagem de milissegundos do timer do sistema do computador.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Fornece propriedades para manipular componentes do computador, como o áudio, o relógio, o teclado, o sistema de arquivos e assim por diante.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Computer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Obtém um objeto que fornece propriedades para métodos para reproduzir sons.</summary>
      <returns>O objeto <see langword="My.Computer.Audio" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Obtém um objeto que fornece métodos para manipular a Área de Transferência.</summary>
      <returns>O objeto <see langword="My.Computer.Clipboard" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Obtém um objeto que fornece propriedades para acessar o estado atual do teclado, como quais teclas estão pressionadas no momento, e fornece um método para enviar pressionamentos de tecla para a janela ativa.</summary>
      <returns>O objeto <see langword="My.Computer.Keyboard" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Obtém um objeto que fornece propriedades para obter informações sobre o formato e a configuração do mouse instalado no computador local.</summary>
      <returns>O objeto <see langword="My.Computer.Mouse" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>Obtém um objeto que fornece uma propriedade e um método para acessar as portas seriais do computador.</summary>
      <returns>O objeto <see langword="My.Computer.Ports" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Fornece propriedades para obter informações sobre memória, assemblies carregados, nome e sistema operacional do computador.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Obtém a quantidade total de memória física livre no computador.</summary>
      <returns>Um <see langword="ULong" /> que contém o número de bytes de memória física livre no computador.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">O aplicativo não pode obter o status da memória.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Obtém a quantidade total de espaço livre de endereço virtual do computador.</summary>
      <returns>Um <see langword="ULong" /> que contém o número de bytes do espaço livre do endereço virtual do computador.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">O aplicativo não pode obter o status da memória.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Obtém a cultura de interface do usuário atual instalada com o sistema operacional.</summary>
      <returns>Um objeto <see cref="T:System.Globalization.CultureInfo" /> representa a cultura de interface do usuário instalada no computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Obtém o identificador de plataforma do sistema operacional do computador.</summary>
      <returns>Um <see langword="String" /> que contém o identificador de plataforma do sistema operacional do computador, escolhido pelos nomes de membro da enumeração <see cref="T:System.PlatformID" />.</returns>
      <exception cref="T:System.ExecutionEngineException">O aplicativo não pode obter as informações de plataforma do sistema operacional.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Obtém a versão do sistema operacional do computador.</summary>
      <returns>Uma <see langword="String" /> que contém o número de versão atual do sistema operacional.</returns>
      <exception cref="T:System.ExecutionEngineException">O aplicativo não pode obter as informações de versão do sistema operacional.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Obtém a quantidade total de memória física no computador.</summary>
      <returns>Um <see langword="ULong" /> que contém o número de bytes de memória física no computador.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">O aplicativo não pode obter o status da memória.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Obtém a quantidade total de espaço de endereço virtual disponível para o computador.</summary>
      <returns>Um <see langword="ULong" /> que contém o número de bytes de espaço de endereço virtual disponível para o computador.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">O aplicativo não pode obter o status da memória.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Fornece propriedades para acessar o estado atual do teclado, como quais teclas estão pressionadas no momento e fornece um método para enviar pressionamentos de teclas para a janela ativa.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Fornece propriedades para obter informações sobre o formato e a configuração do mouse instalado no computador local.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Fornece uma propriedade, um evento e métodos para interagir com a rede à qual o computador está conectado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Fornece dados para os eventos de <see langword="My.Application.NetworkAvailabilityChanged" /> e de <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> .</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="networkAvailable">Um <see cref="T:System.Boolean" /> que indica se uma rede está disponível para o aplicativo.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Obtém um valor que indica se uma rede está disponível para o aplicativo.</summary>
      <returns>Um <see cref="T:System.Boolean" /> que indica se uma rede está disponível para o aplicativo.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>Fornece uma propriedade e um método para acessar portas seriais do computador.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Fornece propriedades para manipular componentes do computador, como o áudio, o relógio, o teclado, o sistema de arquivos e assim por diante.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Obtém um objeto que fornece propriedades para acessar a hora local atual e o Tempo Universal Coordenado (o equivalente ao Horário do Meridiano de Greenwich) no relógio do sistema.</summary>
      <returns>O objeto <see langword="My.Computer.Clock" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Obtém um objeto que fornece propriedades e métodos para trabalhar com unidades, arquivos e diretórios.</summary>
      <returns>O objeto <see langword="My.Computer.FileSystem" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Obtém um objeto que fornece propriedades para obter informações sobre memória, assemblies carregados, nome e sistema operacional do computador.</summary>
      <returns>O objeto <see langword="My.Computer.Info" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Obtém o nome do computador.</summary>
      <returns>Uma <see langword="String" /> que contém o nome do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Obtém um objeto que fornece uma propriedade e métodos para interagir com a rede à qual o computador está conectado.</summary>
      <returns>O objeto <see langword="My.Computer.Network" /> do computador.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Obtém um objeto que fornece propriedades e métodos para manipular o Registro.</summary>
      <returns>O objeto <see langword="My.Computer.Registry" /> do computador.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Indica quando os pagamentos vencem ao chamar métodos financeiros.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Cai no início do intervalo de datas</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Cai no final do intervalo de datas</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>O módulo <see langword="ErrObject" /> contém propriedades e procedimentos usados para identificar e manipular erros no tempo de execução usando o objeto <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Limpa todas as configurações de propriedade do objeto <see langword="Err" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Retorna ou define uma expressão <see langword="String" /> que contém uma cadeia de caracteres descritiva associada a um erro. Leitura/gravação.</summary>
      <returns>Retorna ou define uma expressão <see langword="String" /> que contém uma cadeia de caracteres descritiva associada a um erro. Leitura/gravação.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Obtém um inteiro que indica o número de linha da última instrução executada.</summary>
      <returns>O número de linha da última instrução executada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Retorna a exceção que representa o erro ocorrido.</summary>
      <returns>A exceção que representa o erro ocorrido.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Obtém um código de erro do sistema produzido por uma chamada a uma DLL (biblioteca de vínculo dinâmico).</summary>
      <returns>Um código de erro do sistema produzido por uma chamada para uma DLL (biblioteca de vínculo dinâmico).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Retorna ou define um valor numérico que especifica um erro. Leitura/gravação.</summary>
      <returns>Retorna ou define um valor numérico que especifica um erro. Leitura/gravação.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> é maior que 65535.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Gera um erro em tempo de execução; pode ser usado em vez da instrução <see langword="Error" />.</summary>
      <param name="Number">Necessário. <see langword="Long" /> inteiro que identifica a natureza do erro. Os erros do Visual Basic estão no intervalo 0-65535; o intervalo 0-512 é reservado para erros do sistema; o intervalo 513-65535 está disponível para erros definidos pelo usuário. Ao definir a propriedade <see langword="Number" /> com seu próprio código de erro em um módulo de classe, você adiciona seu número de código de erro à constante <see langword="vbObjectError" />. Por exemplo, para gerar o erro número 513, atribua <c>vbObjectError + 513</c> à propriedade <see langword="Number" />.</param>
      <param name="Source">Opcional. <see langword="String" /> expressão que nomeia o objeto ou aplicativo que gerou o erro. Ao configurar essa propriedade para um objeto, use o formato <c>projeto</c>.<c>classe</c>. Se <paramref name="Source" /> não for especificado, a ID do processo do projeto atual do Visual Basic será usada.</param>
      <param name="Description">Opcional. <see langword="String" /> expressão que descreve o erro. Se não for especificado, o valor na propriedade <see langword="Number" /> será examinado. Se ele pode ser mapeado para um código de erro em tempo de execução do Visual Basic, a cadeia de caracteres que seria retornada pela função <see langword="Error" /> é usada como a propriedade <see langword="Description" />. Se não houver nenhum erro do Visual Basic correspondente à propriedade <see langword="Number" />, a mensagem "Erro definido pelo aplicativo ou definido pelo objeto" será usada.</param>
      <param name="HelpFile">Opcional. O caminho totalmente qualificado para o arquivo de Ajuda no qual se pode encontrar ajuda sobre este erro. Se não for especificado, o Visual Basic usará a unidade totalmente qualificada, o caminho e o nome do arquivo de Ajuda do Visual Basic.</param>
      <param name="HelpContext">Opcional. A ID de contexto que identifica um tópico no <paramref name="HelpFile" /> que fornece ajuda para o erro. Se omitida, a ID de contexto do arquivo de Ajuda do Visual Basic para o erro correspondente à propriedade <see langword="Number" /> será usada, se ela existir.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Indica os atributos de arquivo a usar ao chamar funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>O arquivo foi alterado desde o último backup. Esse membro é equivalente à constante <see langword="vbArchive" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Diretório ou pasta. Esse membro é equivalente à constante <see langword="vbDirectory" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Oculto. Esse membro é equivalente à constante <see langword="vbHidden" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Normal (padrão para <see langword="Dir" /> e <see langword="SetAttr" />). Nenhuma característica especial se aplica a esse arquivo. Esse membro é equivalente à constante <see langword="vbNormal" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>Somente leitura. Esse membro é equivalente à constante <see langword="vbReadOnly" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>Arquivo do sistema. Esse membro é equivalente à constante <see langword="vbSystem" />do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Rótulo do volume. Esse atributo não é válido quando usado com <see langword="SetAttr" />. Esse membro é equivalente à constante <see langword="vbVolume" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Especifica o que deve ser feito quando um diretório que deve ser excluído contém arquivos ou diretórios.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Excluir o conteúdo do diretório, juntamente com o diretório. Padrão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Gerar um <see cref="T:System.IO.IOException" /> se o diretório não estiver vazio. A propriedade <see langword="Data" /> da exceção lista os arquivos que não puderam ser excluídos.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Indica se os campos de texto são delimitado ou têm largura fixa.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Indica que os campos são delimitados.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Indica que os campos contém largura fixa.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Fornece propriedades e métodos para trabalhar com unidades, arquivos e diretórios.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Combina dois caminhos e retorna um caminho formatado corretamente.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Primeiro caminho a ser combinado.</param>
      <param name="relativePath">
        <see langword="String" />. Segundo caminho a ser combinado.</param>
      <returns>A combinação dos caminhos especificados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> são caminhos malformados.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Copia o conteúdo de um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o conteúdo do diretório deve ser copiado.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia o conteúdo de um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o conteúdo do diretório deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> está definido como <see langword="UIOption.AllDialogs" /> e o usuário cancelou a operação ou um ou mais arquivos no diretório não podem ser copiados.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia o conteúdo de um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o conteúdo do diretório deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica o que deverá ser feito, se o usuário clicar em Cancelar durante a operação. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> está definido como <see langword="UIOption.AllDialogs" /> e o usuário cancelou a operação ou um ou mais arquivos no diretório não podem ser copiados.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copia o conteúdo de um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o conteúdo do diretório deve ser copiado.</param>
      <param name="overwrite">
        <see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo no diretório de destino com o mesmo nome está sendo usado.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo de destino já existe e <paramref name="overwrite" /> é definido como <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica o que deverá ser feito, se o usuário clicar em Cancelar durante a operação. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo de destino já existe e <paramref name="overwrite" /> é definido como <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> é definido como <see langword="ThrowException" /> e o usuário cancelou a operação ou ocorre um erro de E/S não especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <param name="overwrite">
        <see langword="True" /> se os arquivos existentes devem ser substituídos; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo de destino já existe e <paramref name="overwrite" /> é definido como <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Cria um diretório.</summary>
      <param name="directory">Nome e local do diretório.</param>
      <exception cref="T:System.ArgumentException">O nome do diretório está malformado. Por exemplo, ele contém caracteres inválidos ou é somente um espaço em branco.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O nome do diretório é muito longo.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório é apenas um dois-pontos (:).</exception>
      <exception cref="T:System.IO.IOException">O diretório pai do diretório a ser criado é somente leitura</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para criar o diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Obtém ou define o diretório atual.</summary>
      <returns>O diretório atual para operações de E/S de arquivo.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho não é válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Exclui um diretório.</summary>
      <param name="directory">O diretório a ser excluído.</param>
      <param name="onDirectoryNotEmpty">Especifica o que deve ser feito quando um diretório que deve ser excluído contém arquivos ou diretórios. O padrão é <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">O caminho é uma cadeia de caracteres de tamanho zero, está malformado, contém somente espaços em branco ou caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe ou é um arquivo.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo do diretório ou subdiretório está em uso.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório contém dois-pontos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação ou o diretório não pode ser excluído.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Exclui um diretório.</summary>
      <param name="directory">O diretório a ser excluído.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">O caminho é uma cadeia de caracteres de tamanho zero, está malformado, contém somente espaços em branco ou caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe ou é um arquivo.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo do diretório ou subdiretório está em uso.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório contém dois-pontos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação ou o diretório não pode ser excluído.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Exclui um diretório.</summary>
      <param name="directory">O diretório a ser excluído.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Especifica se deve gerar uma exceção se o usuário clicar em Cancelar.</param>
      <exception cref="T:System.ArgumentException">O caminho é uma cadeia de caracteres de tamanho zero, está malformado, contém somente espaços em branco ou caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe ou é um arquivo.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo do diretório ou subdiretório está em uso.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório contém dois-pontos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação ou o diretório não pode ser excluído.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Exclui um arquivo.</summary>
      <param name="file">O nome e o caminho do arquivo a ser excluído.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de caracteres de tamanho zero, contém somente espaço em branco, contém caracteres inválidos, tem uma barra à direita na qual um arquivo deve ser especificado ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está em uso.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Exclui um arquivo.</summary>
      <param name="file">O nome e o caminho do arquivo a ser excluído.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de caracteres de tamanho zero, contém somente espaço em branco, contém caracteres inválidos, tem uma barra à direita na qual um arquivo deve ser especificado ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está em uso.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Exclui um arquivo.</summary>
      <param name="file">O nome e o caminho do arquivo a ser excluído.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Especifica se uma exceção é lançada ou não quando o usuário cancela a operação. O padrão é <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de caracteres de tamanho zero, contém somente espaço em branco, contém caracteres inválidos, tem uma barra à direita na qual um arquivo deve ser especificado ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está em uso.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação e <paramref name="onUserCancel" /> está definido para <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Retornará <see langword="True" /> se o diretório especificado existir.</summary>
      <param name="directory">O caminho do diretório.</param>
      <returns>
        <see langword="True" /> se o diretório existir; caso contrário, <see langword="False" />. Esse método também retornará <see langword="False" /> se o parâmetro representar o nome e caminho de um arquivo em vez de um diretório.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Retorna uma coleção somente leitura de todos os nomes de unidade disponíveis.</summary>
      <returns>Uma coleção somente leitura de todas as unidades disponíveis como objetos <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Retornará <see langword="True" /> se o arquivo especificado existir.</summary>
      <param name="file">Nome e caminho do arquivo.</param>
      <returns>Retornará <see langword="True" /> se o arquivo existir; caso contrário, esse método retornará <see langword="False" />. Esse método também retornará <see langword="False" /> se o parâmetro representar o caminho de um diretório em vez de um arquivo.</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra invertida (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos que contêm o texto especificado.</summary>
      <param name="directory">O diretório a ser pesquisado.</param>
      <param name="containsText">O texto de pesquisa.</param>
      <param name="ignoreCase">
        <see langword="True" /> se a pesquisa deve diferenciar maiúsculas de minúsculas; Caso contrário, <see langword="False" />. O padrão é <see langword="True" />.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Coleção somente leitura dos nomes de arquivos que contêm o texto especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de comprimento zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">O diretório especificado no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos que contêm o texto especificado.</summary>
      <param name="directory">O diretório a ser pesquisado.</param>
      <param name="containsText">O texto de pesquisa.</param>
      <param name="ignoreCase">
        <see langword="True" /> se a pesquisa deve diferenciar maiúsculas de minúsculas; Caso contrário, <see langword="False" />. O padrão é <see langword="True" />.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Padrão para correspondência.</param>
      <returns>Coleção somente leitura dos nomes de arquivos que contêm o texto especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de comprimento zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">O diretório especificado no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Retorna uma coleção de cadeias de caracteres que representam os nomes dos caminhos dos subdiretórios de um diretório.</summary>
      <param name="directory">Nome e caminho do diretório.</param>
      <returns>Coleção somente leitura dos nomes dos caminhos dos subdiretórios dentro do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retorna uma coleção de cadeias de caracteres que representam os nomes dos caminhos dos subdiretórios de um diretório.</summary>
      <param name="directory">Nome e caminho do diretório.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">O padrão ao qual os nomes serão correspondidos.</param>
      <returns>Coleção somente leitura dos nomes dos caminhos dos subdiretórios dentro do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Um ou mais dos caracteres curinga especificados é <see langword="Nothing" />, uma cadeia de caracteres vazia ou contém somente espaços.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Retorna um objeto <see cref="T:System.IO.DirectoryInfo" /> para o arquivo especificado.</summary>
      <param name="directory">
        <see langword="String" />. Caminho do diretório.</param>
      <returns>Objeto <see cref="T:System.IO.DirectoryInfo" /> do caminho especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">O caminho do diretório contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Retorna um objeto <see cref="T:System.IO.DriveInfo" /> para a unidade especificada.</summary>
      <param name="drive">Unidade a ser examinada.</param>
      <returns>Objeto <see cref="T:System.IO.DriveInfo" /> da unidade especificada.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Retorna um objeto <see cref="T:System.IO.FileInfo" /> para o arquivo especificado.</summary>
      <param name="file">Nome e caminho do arquivo.</param>
      <returns>Objeto <see cref="T:System.IO.FileInfo" /> do arquivo especificado</returns>
      <exception cref="T:System.ArgumentException">O nome do caminho está malformado. Por exemplo, ele contém caracteres inválidos ou é somente um espaço em branco. O nome de arquivo tem uma barra “/” à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.NotSupportedException">O caminho contém dois-pontos no meio da cadeia de caracteres.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho é muito longo.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem acesso à ACL (lista de controle de acesso) do arquivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos de um diretório.</summary>
      <param name="directory">Diretório a ser pesquisado.</param>
      <returns>Coleção somente leitura de nomes de arquivos do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório a ser pesquisado não existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos de um diretório.</summary>
      <param name="directory">Diretório a ser pesquisado.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Padrão para correspondência.</param>
      <returns>Coleção somente leitura de nomes de arquivos do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório a ser pesquisado não existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Analisa o nome de arquivo do caminho fornecido.</summary>
      <param name="path">Necessário. Caminho a ser analisado. <see langword="String" />.</param>
      <returns>O nome de arquivo do caminho especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Retorna o caminho pai do caminho fornecido.</summary>
      <param name="path">Caminho a ser examinado.</param>
      <returns>O caminho pai do caminho fornecido.</returns>
      <exception cref="T:System.ArgumentException">O caminho não tem um caminho pai porque é um caminho raiz.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Cria um arquivo temporário de zero byte nomeado exclusivamente no disco e retorna o caminho completo do arquivo.</summary>
      <returns>
        <see langword="String" /> que contém o caminho completo do arquivo temporário.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">A origem é um diretório raiz ou o caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório de destino já existe e <paramref name="overwrite" /> está definido como <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica se uma exceção é lançada ou não quando o usuário cancela a operação. O padrão é <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> é definido como <see langword="ThrowException" /> e um subdiretório do arquivo não pode ser copiado.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> é definido como <see langword="ThrowException" /> e o usuário cancela a operação ou a operação não pode ser concluída.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <param name="overwrite">
        <see langword="True" /> se os diretórios existentes devem ser substituídos; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório de destino já existe e <paramref name="overwrite" /> está definido como <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica se uma exceção é lançada ou não quando o usuário cancela a operação. O padrão é <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> é definido como <see langword="ThrowException" /> e o usuário cancelou a operação ou ocorreu um erro de E/S não especificado.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <param name="overwrite">
        <see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>O método <see langword="OpenTextFieldParser" /> permite que você crie um objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que fornece uma maneira de analisar fácil e eficientemente os arquivos de texto estruturado, como logs. O objeto <see langword="TextFieldParser" /> pode ser usado para ler arquivos delimitados e de largura fixa.</summary>
      <param name="file">O arquivo a ser aberto com o <see langword="TextFieldParser" />.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para ler o arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Não é possível analisar uma linha usando o formato especificado. A mensagem de exceção especifica a linha causando a exceção, enquanto a propriedade <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> é atribuída ao texto contido na linha.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>O método <see langword="OpenTextFieldParser" /> permite criar um objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que fornece uma maneira fácil e eficiente de analisar os arquivos de texto estruturados, como logs. O objeto <see langword="TextFieldParser" /> pode ser usado para ler arquivos delimitados e de largura fixa.</summary>
      <param name="file">O arquivo a ser aberto com o <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Larguras dos campos.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para ler o arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Não é possível analisar uma linha usando o formato especificado. A mensagem de exceção especifica a linha causando a exceção, enquanto a propriedade <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> é atribuída ao texto contido na linha.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>O método <see langword="OpenTextFieldParser" /> permite criar um objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que fornece uma maneira fácil e eficiente de analisar os arquivos de texto estruturados, como logs. O objeto <see langword="TextFieldParser" /> pode ser usado para ler arquivos delimitados e de largura fixa.</summary>
      <param name="file">O arquivo a ser aberto com o <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Delimitadores para os campos.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para ler o arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Não é possível analisar uma linha usando o formato especificado. A mensagem de exceção especifica a linha causando a exceção, enquanto a propriedade <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> é atribuída ao texto contido na linha.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Abre um objeto <see cref="T:System.IO.StreamReader" /> para ser lido de um arquivo.</summary>
      <param name="file">O arquivo a ser lido.</param>
      <returns>O objeto <see cref="T:System.IO.StreamReader" /> a ser lido do arquivo</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra invertida (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível localizar o arquivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para ler o arquivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Abre um objeto <see cref="T:System.IO.StreamReader" /> para ser lido de um arquivo.</summary>
      <param name="file">O arquivo a ser lido.</param>
      <param name="encoding">A codificação a ser usada nos conteúdos de arquivo. O padrão é ASCII.</param>
      <returns>O objeto <see cref="T:System.IO.StreamReader" /> a ser lido do arquivo</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra invertida (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível localizar o arquivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para ler o arquivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Abre um objeto <see cref="T:System.IO.StreamWriter" /> no qual o arquivo especificado será gravado.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <returns>Objeto <see cref="T:System.IO.StreamWriter" /> no qual o arquivo especificado será gravado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Abre um <see cref="T:System.IO.StreamWriter" /> para gravar no arquivo especificado.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <param name="encoding">Codificação a ser usada na gravação no arquivo. O padrão é ASCII.</param>
      <returns>Objeto <see cref="T:System.IO.StreamWriter" /> no qual o arquivo especificado será gravado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Retorna o conteúdo de um arquivo como uma matriz de bytes.</summary>
      <param name="file">O arquivo a ser lido.</param>
      <returns>Uma matriz <see langword="Byte" /> que contém o conteúdo do arquivo.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Retorna o conteúdo de um arquivo de texto como um <see langword="String" />.</summary>
      <param name="file">Nome e caminho do arquivo que será lido.</param>
      <returns>
        <see langword="String" /> que contém o conteúdo do arquivo.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Retorna o conteúdo de um arquivo de texto como um <see langword="String" />.</summary>
      <param name="file">Nome e caminho do arquivo que será lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada na leitura do arquivo. O padrão é UTF-8.</param>
      <returns>
        <see langword="String" /> que contém o conteúdo do arquivo.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Renomeia um diretório.</summary>
      <param name="directory">O caminho e nome do diretório a ser renomeado.</param>
      <param name="newName">Novo nome do diretório.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">Há um arquivo ou diretório existente com o nome especificado em <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Renomeia um arquivo.</summary>
      <param name="file">Arquivo a ser renomeado.</param>
      <param name="newName">Novo nome do arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contém informações de caminho ou termina com uma barra invertida (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">Há um arquivo ou diretório existente com o nome especificado em <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Grava dados em um arquivo binário.</summary>
      <param name="file">O caminho e o nome do arquivo no qual gravar.</param>
      <param name="data">Os dados a serem gravados no arquivo.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo, <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Grava um texto em um arquivo.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="text">O texto a ser gravado no arquivo.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Grava um texto em um arquivo.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="text">O texto a ser gravado no arquivo.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo.</param>
      <param name="encoding">A codificação a ser utilizada ao gravar um arquivo.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>A exceção que é gerada quando o método <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> não pode analisar uma linha usando o formato especificado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> com dados serializados.</summary>
      <param name="info">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context">A estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">Uma mensagem que descreve o erro.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">Um <see cref="T:System.String" /> que descreve o erro.</param>
      <param name="innerException">O objeto de <see cref="T:System.Exception" /> que é a causa da exceção atual. Caso o parâmetro <see cref="P:System.Exception.InnerException" /> não seja uma referência nula (<see langword="Nothing" /> no Visual Basic), a exceção atual será gerada em um bloco de captura que trata a exceção interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> com uma mensagem de erro e um número de linha.</summary>
      <param name="message">A mensagem para a exceção.</param>
      <param name="lineNumber">O número de linha da linha malformada.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> com uma mensagem de erro especificada, um número de linha e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem para a exceção.</param>
      <param name="lineNumber">O número de linha da linha malformada.</param>
      <param name="innerException">A <see cref="T:System.Exception" /> que é a causa da exceção atual. Caso o parâmetro <see cref="P:System.Exception.InnerException" /> não seja uma referência nula (<see langword="Nothing" /> no Visual Basic), a exceção atual será gerada em um bloco de captura que trata a exceção interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Define o objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com informações sobre a exceção.</summary>
      <param name="info">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context">A estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Obtém o número de linha da linha malformada.</summary>
      <returns>O número de linha da linha malformada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da exceção atual.</summary>
      <returns>Uma representação de cadeia de caracteres de exceção atual.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Especifica se um arquivo deve ser excluído permanentemente ou colocado na Lixeira.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Exclua permanentemente o arquivo ou o diretório. Padrão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Envie o arquivo ou o diretório para a Lixeira.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Especifica se deve pesquisar todos ou somente diretórios de alto nível.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Pesquise o diretório especificado e todos os subdiretórios dentro dele. Padrão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Pesquisar somente o diretório especificado e excluir subdiretórios.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Fornece propriedades para acessar diretórios comumente referenciados.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Retorna uma instância da classe <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Obtém um nome de caminho apontando para o diretório Dados de Aplicativos para todos os usuários.</summary>
      <returns>O caminho para o diretório de dados do aplicativo para todos os usuários.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Controla o acesso a variáveis de ambiente do usuário e do sistema. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Obtém um nome de caminho apontando para o diretório Dados de Aplicativos para o usuário atual.</summary>
      <returns>O caminho para o diretório de dados do aplicativo para o usuário atual.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Obtém um nome de caminho apontando para o diretório da Área de Trabalho.</summary>
      <returns>O caminho para o diretório da Área de Trabalho.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Obtém um nome de caminho apontando para o diretório Meus Documentos.</summary>
      <returns>O caminho para o diretório Meus documentos.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Obtém um nome de caminho apontando para o diretório Músicas.</summary>
      <returns>O caminho para o diretório minhas músicas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Obtém um nome de caminho apontando para o diretório Imagens.</summary>
      <returns>O caminho para o diretório minhas imagens.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Obtém um caminho que aponta para o diretório Arquivos de Programas.</summary>
      <returns>O caminho para o diretório Arquivos de Programas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Obtém um nome de caminho apontando para o diretório Programas.</summary>
      <returns>O caminho para o diretório de programas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Obtém um nome de caminho apontando para o diretório temporário.</summary>
      <returns>O caminho para o diretório temporário.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Fornece métodos e propriedades para analisar arquivos de texto estruturado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. O fluxo a ser analisado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não pode ser lido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. O fluxo a ser analisado.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. A codificação de caractere a ser usada caso a codificação não seja determinada pelo arquivo. O padrão é <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não pode ser lido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. O fluxo a ser analisado.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. A codificação de caractere a ser usada caso a codificação não seja determinada pelo arquivo. O padrão é <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica se é necessário procurar marcas de ordem de byte no início do arquivo. O padrão é <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não pode ser lido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. O fluxo a ser analisado.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. A codificação de caractere a ser usada caso a codificação não seja determinada pelo arquivo. O padrão é <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica se é necessário procurar marcas de ordem de byte no início do arquivo. O padrão é <see langword="True" />.</param>
      <param name="leaveOpen">
        <see langword="Boolean" />. Indica se é necessário deixar <paramref name="stream" /> aberto quando o <see langword="TextFieldParser" /> objeto está fechado. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não pode ser lido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. O fluxo <see cref="T:System.IO.TextReader" /> a ser analisado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. O caminho completo do arquivo a ser analisado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. O caminho completo do arquivo a ser analisado.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. A codificação de caractere a ser usada caso a codificação não seja determinada pelo arquivo. O padrão é <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ou <paramref name="defaultEncoding" /> é <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. O caminho completo do arquivo a ser analisado.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. A codificação de caractere a ser usada caso a codificação não seja determinada pelo arquivo. O padrão é <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica se é necessário procurar marcas de ordem de byte no início do arquivo. O padrão é <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ou <paramref name="defaultEncoding" /> é <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Fecha o objeto <see langword="TextFieldParser" /> atual.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Define tokens de comentário. Um token de comentário é uma cadeia de caracteres que, quando colocada no início de uma linha, indica que a linha é um comentário e deve ser ignorada pelo analisador.</summary>
      <returns>Uma matriz de cadeia de caracteres que contém todos os tokens de comentário para o objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException">Um token de comentário inclui espaço em branco.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Define os delimitadores para um arquivo de texto.</summary>
      <returns>Uma matriz de cadeia de caracteres que contém todos os delimitadores de campo para o objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException">Um valor de delimitador é definido como um caractere de newline, uma cadeia de caracteres vazia ou <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Libera recursos usados pelo objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing">Booliano. <see langword="True" /> libera os recursos gerenciados e não gerenciados; <see langword="False" /> libera apenas os recursos não gerenciados.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Retorna <see langword="True" /> se não houver linha que não está em branco ou linha não comentada entre a posição atual do cursor e o fim do arquivo.</summary>
      <returns>
        <see langword="True" /> se não houver mais dados para ler; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Retorna a linha que causou a mais recente exceção <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
      <returns>A linha que causou a exceção mais <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> recente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Retorna o número da linha que causou a mais recente exceção <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
      <returns>O número da linha que causou a exceção mais recente <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Indica a largura de cada coluna no arquivo de texto que está sendo analisado.</summary>
      <returns>Uma matriz de inteiros que contém a largura de cada coluna no arquivo de texto que está sendo analisado.</returns>
      <exception cref="T:System.ArgumentException">Um valor de largura em qualquer local que não seja a última entrada da matriz é menor que ou igual a zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Permite que o objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> tente liberar recursos e realizar outras operações de limpeza antes que ela é recuperada pela coleta de lixo.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>Indica se os campos serão colocados entre aspas quando um arquivo delimitado está sendo analisado.</summary>
      <returns>
        <see langword="True" /> se os campos forem incluídos entre aspas; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Retorna o número de linha atual ou -1 se não houver mais nenhum caractere disponível no fluxo.</summary>
      <returns>O número de linha atual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Lê o número especificado de caracteres sem avançar o cursor.</summary>
      <param name="numberOfChars">
        <see langword="Int32" />. O número de caracteres a serem lidos. Necessário.</param>
      <returns>Uma cadeia de caracteres que contém o número especificado de caracteres lidos.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> é menor que 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Lê todos os campos na linha atual, retorna-os como uma matriz de cadeias de caracteres e avança o cursor para a próxima linha contendo dados.</summary>
      <returns>Uma matriz de cadeias de caracteres que contém os valores de campo para a linha atual.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Um campo não pode ser analisado usando o formato especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Retorna a linha atual como uma cadeia de caracteres e avança o cursor para a próxima linha.</summary>
      <returns>A linha atual do arquivo ou fluxo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Lê o restante do arquivo de texto e retorna-o como uma cadeia de caracteres.</summary>
      <returns>O texto restante do arquivo ou fluxo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Define os delimitadores do leitor para os valores especificados e define o tipo de campo como <see langword="Delimited" />.</summary>
      <param name="delimiters">Matriz do tipo <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Um delimitador tem tamanho zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Define os delimitadores do leitor para os valores especificados.</summary>
      <param name="fieldWidths">Matriz de <see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Libera recursos usados pelo objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Indica se o arquivo a ser analisado é delimitado ou com uma largura fixa.</summary>
      <returns>Um valor <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> que indica se o arquivo a ser analisado é delimitado ou tem uma largura fixa.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Indica se espaços em branco à esquerda e à direita devem ser removidos dos valores de campo.</summary>
      <returns>
        <see langword="True" /> caso espaços em branco à direita e à esquerda devam ser removidos dos valores de campo; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Especifica se uma exceção será gerada se o usuário clicar em Cancelar durante uma operação.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>Não faz nada quando o usuário clica em Cancelar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Gera uma exceção quando o usuário clica em Cancelar.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Especifica quais caixas de diálogo são exibidas ao copiar, excluir ou mover arquivos ou diretórios.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Exibir a caixa de diálogo de progresso e qualquer caixa de diálogo de erro.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Exibir somente caixas de diálogo de erro e ocultar as caixas de diálogo de progresso. Padrão.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>O módulo <see langword="FileSystem" /> contém os procedimentos usados para executar operações de arquivo, diretório ou pasta e sistema. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo do que usando o módulo <see langword="FileSystem" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Altera o diretório ou pasta atual. O recurso <see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="ChDir" />. Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path">Necessário. Uma expressão de cadeia de caracteres que identifica qual diretório ou pasta se torna o novo diretório ou pasta padrão. <paramref name="Path" /> pode incluir a unidade. Se nenhuma unidade for especificada, o <see langword="ChDir" /> alterará o diretório ou pasta padrão na unidade atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> está vazio.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Uma unidade inválida foi especificada ou a unidade está indisponível.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Altera a unidade atual.</summary>
      <param name="Drive">Necessário. Expressão de cadeia de caracteres que especifica uma unidade existente. Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada. Se o argumento <paramref name="Drive" /> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</param>
      <exception cref="T:System.IO.IOException">Uma unidade inválida foi especificada ou a unidade está indisponível.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Altera a unidade atual.</summary>
      <param name="Drive">Necessário. Expressão de cadeia de caracteres que especifica uma unidade existente. Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada. Se o argumento <paramref name="Drive" /> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</param>
      <exception cref="T:System.IO.IOException">Uma unidade inválida foi especificada ou a unidade está indisponível.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Retorna uma cadeia de caracteres que representa o caminho atual. O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />. Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>Uma cadeia de caracteres que representa o caminho atual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Retorna uma cadeia de caracteres que representa o caminho atual. O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />. Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive">Opcional. A expressão <see langword="Char" /> que especifica uma unidade existente. Se nenhuma unidade for especificada ou, se <paramref name="Drive" /> for uma cadeia de caracteres de tamanho zero (""), <see langword="CurDir" /> retornará o caminho da unidade atual.</param>
      <returns>Uma cadeia de caracteres que representa o caminho atual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade. O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />. Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</summary>
      <returns>Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade. O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />. Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</summary>
      <param name="PathName">Opcional. Uma expressão de cadeia de caracteres que especifica um nome de arquivo, diretório ou pasta ou um rótulo de volume de unidade. Uma cadeia de caracteres de comprimento zero (<see langword="&quot;&quot;" />) será retornada se <paramref name="PathName" /> não for encontrado.</param>
      <param name="Attributes">Opcional. Enumeração ou expressão numérica cujo valor especifica atributos de arquivo. Se omitido, <see langword="Dir" /> retorna arquivos que correspondem a <paramref name="Pathname" />, mas não têm atributos.</param>
      <returns>Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Retorna um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</summary>
      <param name="FileNumber">Necessário. Um <see langword="Integer" /> que contém qualquer número de arquivo válido.</param>
      <returns>Um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</returns>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando a função <see langword="FileOpen" />. O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="FileAttr" />. Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> para obter mais informações.</summary>
      <param name="FileNumber">Necessário. <see langword="Integer" />. Qualquer número de arquivo válido.</param>
      <returns>Os seguintes valores de enumeração indicam o modo de acesso do arquivo: 
  Valor 
  Modo 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Conclui a E/S (Entrada/Saída) para um arquivo aberto usando a função <see langword="FileOpen" />. <see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo. Consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> para obter mais informações.</summary>
      <param name="FileNumbers">Opcional. Matriz de parâmetros de 0 ou mais canais que serão fechados.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> não existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Copia um arquivo. O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="FileCopy" />. Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> para obter mais informações.</summary>
      <param name="Source">Necessário. Uma expressão de cadeia de caracteres que especifica o nome do arquivo a ser copiado. <paramref name="Source" /> pode incluir o diretório ou a pasta e a unidade do arquivo de origem.</param>
      <param name="Destination">Necessário. Uma expressão de cadeia de caracteres que especifica o nome do arquivo de destino. <paramref name="Destination" /> pode incluir o diretório ou a pasta e a unidade do arquivo de destino.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> ou <paramref name="Destination" /> é inválido ou não foi especificado.</exception>
      <exception cref="T:System.IO.IOException">O arquivo já está aberto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Arquivo inexistente.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Retorna um valor <see langword="Date" /> que indica a data e hora em que ocorreu a gravação em um arquivo. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileDateTime" />. Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Necessário. Uma expressão de cadeia de caracteres que especifica um nome de arquivo. <paramref name="PathName" /> pode incluir o diretório ou a pasta, bem como a unidade.</param>
      <returns>Retorna um valor <see langword="Date" /> que indica a data e hora em que um arquivo foi criado ou modificado pela última vez.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> é inválido ou contém caracteres curinga.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de destino não existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <param name="ArrayIsDynamic">Opcional. Aplica-se somente ao gravar uma matriz. Especifica se a matriz deve ser tratada como dinâmica e se é necessário um descritor de matriz que descreve o tamanho e limites da matriz.</param>
      <param name="StringIsFixedLength">Opcional. Aplica-se somente ao gravar uma cadeia de caracteres. Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <param name="StringIsFixedLength">Opcional. Aplica-se somente ao gravar uma cadeia de caracteres. Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Lê dados de um arquivo aberto de disco em uma variável.  O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGetObject" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido no qual os dados são lidos.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Retorna um valor que especifica o tamanho de um arquivo em bytes. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileLen" />. Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Necessário. Uma expressão de cadeia de caracteres que especifica um arquivo. <paramref name="PathName" /> pode incluir o diretório ou a pasta, bem como a unidade.</param>
      <returns>O tamanho do arquivo em bytes.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Arquivo inexistente.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Abre um arquivo para entrada ou saída. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileOpen" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido. Use a função de <see langword="FreeFile" /> para obter o próximo número disponível de arquivo.</param>
      <param name="FileName">Necessário. Uma expressão de cadeia de caracteres que especifica um nome de arquivo – pode incluir o diretório ou a pasta e a unidade.</param>
      <param name="Mode">Necessário. Enumeração especificando o modo de arquivo: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> ou <see langword="Random" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access">Opcional. Enumeração especificando as operações permitidas no arquivo aberto: <see langword="Read" />, <see langword="Write" /> ou <see langword="ReadWrite" />. Assume o padrão de <see langword="ReadWrite" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share">Opcional. Enumeração especificando as operações não permitidas no arquivo aberto: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> ou <see langword="Lock Read Write" />. Assume o padrão de <see langword="Lock Read Write" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength">Opcional. Número menor que ou igual a 32.767 (bytes). Para arquivos abertos para acesso aleatório, esse valor é o tamanho do registro. Para arquivos sequenciais, esse valor é o número de caracteres armazenados em buffer.</param>
      <exception cref="T:System.ArgumentException">tamanho do registro é negativo (e não é igual a -1).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileName" /> já está aberto ou <paramref name="FileName" /> é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <param name="ArrayIsDynamic">Opcional. Aplica-se somente ao gravar uma matriz. Especifica se a matriz deve ou não ser tratada como dinâmica e se um descritor de matriz deve ou não ser gravado na cadeia de caracteres que descreve o comprimento.</param>
      <param name="StringIsFixedLength">Opcional. Aplica-se somente ao gravar uma cadeia de caracteres. Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <param name="StringIsFixedLength">Opcional. Aplica-se somente ao gravar uma cadeia de caracteres. Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Grava dados de uma variável em um arquivo de disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</exception>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Grava dados de uma variável em um arquivo de disco.  O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePutObject" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. Nome de variável válido que contém dados gravados em disco.</param>
      <param name="RecordNumber">Opcional. Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Atribui uma largura de linha de saída a um arquivo aberto usando a função <see langword="FileOpen" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="RecordWidth">Necessário. Expressão numérica no intervalo de 0 a 255 (incluindo este número), que indica quantos caracteres são exibidos em uma linha antes de uma nova linha ser iniciada. Se <paramref name="RecordWidth" /> for igual a 0, não haverá nenhum limite para o tamanho de uma linha. O valor padrão para <paramref name="RecordWidth" /> é 0.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Retorna um valor <see langword="Integer" /> que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</summary>
      <returns>Um valor inteiro que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException">Mais de 255 arquivos estão em uso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Retorna um valor <see langword="FileAttribute" /> que representa os atributos de um arquivo, diretório ou pasta. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileAttribute" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Necessário. Uma expressão de cadeia de caracteres que especifica um nome de arquivo, diretório ou pasta. <paramref name="PathName" /> pode incluir o diretório ou a pasta e a unidade.</param>
      <returns>Um combinação bit a bit dos valores de enumeração.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" /> é inválido ou contém caracteres curinga.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de destino não existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Value">Necessário. A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Retorna o valor <see langword="String" /> que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="CharCount">Necessário. Qualquer expressão numérica válida que especifica o número de caracteres a serem lidos.</param>
      <returns>Uma cadeia de caracteres que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> não existe.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 ou &gt; 214.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Exclui arquivos de um disco. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Kill" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Necessário. Uma expressão de cadeia de caracteres que especifica um ou mais nomes de arquivo a serem excluídos. <paramref name="PathName" /> pode incluir o diretório ou a pasta e a unidade.</param>
      <exception cref="T:System.IO.IOException">Arquivos de destino abertos.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Arquivos de destino não encontrados.</exception>
      <exception cref="T:System.Security.SecurityException">Permissão negada.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <returns>Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Fim do arquivo atingido.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> não existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Retorna um valor que especifica a posição de leitura/gravação atual em um arquivo aberto.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo <see langword="Integer" /> válido.</param>
      <returns>A posição atual de leitura ou gravação em um arquivo aberto.</returns>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Record">Opcional. Número do único registro ou byte a ser bloqueado ou desbloqueado.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="FromRecord">Opcional. Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</param>
      <param name="ToRecord">Opcional. Número do último registro ou byte a ser bloqueado ou desbloqueado.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Retorna o tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Um número inteiro que contém um número de arquivo válido.</param>
      <returns>O tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</returns>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Cria um novo diretório. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="MkDir" />. Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Necessário. Uma expressão de cadeia de caracteres que identifica o diretório a ser criado. O <paramref name="Path" /> pode incluir a unidade. Se nenhuma unidade for especificada, <see langword="MkDir" /> criará um novo diretório na unidade atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> não foi especificado ou está vazio.</exception>
      <exception cref="T:System.Security.SecurityException">Permissão negada.</exception>
      <exception cref="T:System.IO.IOException">O diretório já existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Grava dados formatados para exibição em um arquivo sequencial.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Output">Opcional. Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.  
As configurações do argumento <paramref name="Output" /> são: 
 <see langword="T:System.IO.IOException" />: O modo de arquivo é inválido.  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> não existe.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Grava dados formatados para exibição em um arquivo sequencial.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Output">Opcional. Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.  
As configurações do argumento <paramref name="Output" /> são: 
 <see langword="T:System.IO.IOException" />: O modo de arquivo é inválido.  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> não existe.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Renomeia um arquivo de disco ou um diretório. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Rename" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Necessário. Uma expressão de cadeia de caracteres que especifica o local e o nome do arquivo existente. <paramref name="OldPath" /> pode incluir o diretório e a unidade do arquivo.</param>
      <param name="NewPath">Necessário. Uma expressão de cadeia de caracteres que especifica o local e o nome do novo arquivo. <paramref name="NewPath" /> pode incluir o diretório e a unidade do local de destino. O nome do arquivo especificado por <paramref name="NewPath" /> não pode já existir.</param>
      <exception cref="T:System.ArgumentException">Caminho inválido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo <paramref name="OldPath" /> não existe.</exception>
      <exception cref="T:System.IO.IOException">Não é possível renomear com outro dispositivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Fecha todos os arquivos de disco abertos usando a função <see langword="FileOpen" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Reset" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Remove um diretório existente. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="RmDir" />. Para obter mais informações, consulte <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Necessário. Uma expressão de cadeia de caracteres que identifica o diretório ou a pasta a remover. O <paramref name="Path" /> pode incluir a unidade. Se nenhuma unidade for especificada, <see langword="RmDir" /> removerá o diretório na unidade atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> não foi especificado ou está vazio.</exception>
      <exception cref="T:System.IO.IOException">O diretório de destino contém arquivos.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O diretório não existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Um <see langword="Integer" /> que contém um número de arquivo válido.</param>
      <returns>Um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Um <see langword="Integer" /> que contém um número de arquivo válido.</param>
      <param name="Position">Necessário. Número no intervalo de 1 a 2.147.483.647 (incluindo este número), que indica o local em que a próxima operação de leitura/gravação deverá ocorrer.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Define as informações de atributo de um arquivo. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="SetAttr" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Necessário. Uma expressão de cadeia de caracteres que especifica um nome de arquivo. <paramref name="PathName" /> pode incluir o diretório ou a pasta, bem como a unidade.</param>
      <param name="Attributes">Necessário. Expressão constante ou numérica, cuja soma especifica atributos de arquivo.</param>
      <exception cref="T:System.ArgumentException">O tipo <paramref name="Attribute" /> é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</summary>
      <param name="Count">Necessário. O número de espaços a serem inseridos antes de exibir ou imprimir a próxima expressão em uma lista.</param>
      <returns>Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</summary>
      <returns>Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</summary>
      <param name="Column">Opcional. O número de coluna movido antes de exibir ou imprimir a próxima expressão em uma lista. Se omitido, <see langword="TAB" /> move o ponto de inserção para o início da próxima zona de impressão.</param>
      <returns>Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="Record">Opcional. Número do único registro ou byte a ser bloqueado ou desbloqueado</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />. O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />. Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Necessário. Qualquer número de arquivo válido.</param>
      <param name="FromRecord">Opcional. Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</param>
      <param name="ToRecord">Opcional. Número do último registro ou byte a ser bloqueado ou desbloqueado.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Grava dados em um arquivo sequencial. Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</summary>
      <param name="FileNumber">Necessário. Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</param>
      <param name="Output">Opcional. Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</param>
      <exception cref="T:System.IO.IOException">O modo de arquivo é inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Grava dados em um arquivo sequencial. Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</summary>
      <param name="FileNumber">Necessário. Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</param>
      <param name="Output">Opcional. Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>O módulo <see langword="Financial" /> contém procedimentos usados para executar operações financeiras.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Retorna um valor que especifica a depreciação de um ativo por um período de tempo específico usando o método de redução dupla de saldo ou algum outro método que você especifica.</summary>
      <param name="Cost">Necessário. O custo inicial do ativo.</param>
      <param name="Salvage">Necessário. O valor do ativo no final da vida útil.</param>
      <param name="Life">Necessário. A duração da vida útil do ativo.</param>
      <param name="Period">Necessário. O período no qual a depreciação do ativo é calculada.</param>
      <param name="Factor">Opcional. A taxa em que o saldo é reduzido. Se omitido, supõe-se 2 (método degressivo duplo).</param>
      <returns>A depreciação de um ativo por um período de tempo específico usando o método de redução dupla de saldo ou algum outro método que você especifica.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 ou <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retorna um valor que especifica o valor futuro de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</summary>
      <param name="Rate">Necessário. A taxa de juros por período. Por exemplo, se você conseguir um empréstimo para compra de um carro com uma APR (taxa anual de percentual) de 10% e efetuar pagamentos mensais, a taxa por período será de 0,1/12 ou 0,0083.</param>
      <param name="NPer">Necessário. O número total de períodos de pagamento na anuidade. Por exemplo, se você efetuar pagamentos mensais em um empréstimo de quatro anos para compra de carro, seu empréstimo terá um total de 4 x 12 (ou 48) períodos de pagamento.</param>
      <param name="Pmt">Necessário. O pagamento a ser feito em cada período. Os pagamentos geralmente contêm da entidade de segurança e juros que não são alterados durante a vigência da anuidade.</param>
      <param name="PV">Opcional. O valor atual (ou a quantia total) de uma série de pagamentos futuros. Por exemplo, quando você pede um empréstimo para comprar um carro, o valor do empréstimo é o valor atual para o credor dos pagamentos mensais do carro que serão efetuados. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <see langword="DueDate.EndOfPeriod" /> se os pagamentos vencerem no final do período de pagamento ou <see langword="DueDate.BegOfPeriod" /> se os pagamentos vencerem no início do período. Se omitido, presume-se que seja <see langword="DueDate.EndOfPeriod" />.</param>
      <returns>O valor futuro de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retorna um valor que especifica o pagamento de juros em um determinado período de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</summary>
      <param name="Rate">Necessário. A taxa de juros por período. Por exemplo, se você conseguir um empréstimo para compra de um carro com uma APR (taxa anual de percentual) de 10% e efetuar pagamentos mensais, a taxa por período será de 0,1/12 ou 0,0083.</param>
      <param name="Per">Necessário. O período de pagamento no intervalo de 1 a <paramref name="NPer" />.</param>
      <param name="NPer">Necessário. O número total de períodos de pagamento na anuidade. Por exemplo, se você efetuar pagamentos mensais em um empréstimo de quatro anos para compra de carro, seu empréstimo terá um total de 4 x 12 (ou 48) períodos de pagamento.</param>
      <param name="PV">Necessário. O valor atual, ou o valor de hoje, de uma série de pagamentos ou recebimentos futuros. Por exemplo, quando você pede um empréstimo para comprar um carro, o valor do empréstimo é o valor atual para o credor dos pagamentos mensais do carro que serão efetuados.</param>
      <param name="FV">Opcional. O valor futuro ou o saldo à vista que você deseja ter depois de fazer o pagamento final. Por exemplo, o valor futuro de um empréstimo é US$ 0, porque esse é o valor após o pagamento final. No entanto, se você deseja economizar US$ 50.000 durante 18 anos para a educação de seu filho, o valor futuro é de US$ 50.000. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <c>DueDate.EndOfPeriod</c> se os pagamentos vencerem no final do período de pagamento ou <c>DueDate.BegOfPeriod</c> se os pagamentos vencerem no início do período. Se omitido, <c>DueDate.EndOfPeriod</c> será suposto.</param>
      <returns>O pagamento de juros em um determinado período de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;= 0 ou <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Retorna um valor que especifica a taxa interna de retorno de uma série de fluxos de caixa periódicos (pagamentos e recebimentos).</summary>
      <param name="ValueArray">Necessário. Matriz de <see langword="Double" /> que especifica valores de fluxo de caixa. A matriz deve conter, pelo menos, um valor negativo (um pagamento) e um valor positivo (um recebimento).</param>
      <param name="Guess">Opcional. Um objeto que especifica o valor estimado será retornado pelo <see langword="IRR" />. Se for omitido, <paramref name="Guess" /> será 0,1 (10 por cento).</param>
      <returns>A taxa interna de retorno de uma série de fluxos de caixa periódicos (pagamentos e recebimentos).</returns>
      <exception cref="T:System.ArgumentException">Os valores de argumento de matriz são inválidos ou <paramref name="Guess" /> &lt;= -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Retorna um valor que especifica a taxa interna modificada de retorno de uma série de fluxos de caixa periódicos (pagamentos e recebimentos).</summary>
      <param name="ValueArray">Necessário. Matriz de <see langword="Double" /> que especifica valores de fluxo de caixa. A matriz deve conter, pelo menos, um valor negativo (um pagamento) e um valor positivo (um recebimento).</param>
      <param name="FinanceRate">Necessário. A taxa de juros paga como o custo do financiamento.</param>
      <param name="ReinvestRate">Necessário. A taxa de juros recebida sobre o lucro do reinvestimento.</param>
      <returns>A taxa interna modificada de retorno de uma série de fluxos de caixa periódicos (pagamentos e recebimentos).</returns>
      <exception cref="T:System.ArgumentException">A classificação de <paramref name="ValueArray" /> não é igual a 1, <paramref name="FinanceRate" /> = -1 ou <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException">Ocorreu uma divisão por zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retorna um valor que especifica o número de períodos de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</summary>
      <param name="Rate">Necessário. A taxa de juros por período. Por exemplo, se você conseguir um empréstimo para compra de um carro com uma APR (taxa anual de percentual) de 10% e efetuar pagamentos mensais, a taxa por período será de 0,1/12 ou 0,0083.</param>
      <param name="Pmt">Necessário. O pagamento a ser feito em cada período. Os pagamentos normalmente contêm o montante e os juros, que não são alterados durante a vigência da anuidade.</param>
      <param name="PV">Necessário. O valor atual, ou o valor de hoje, de uma série de pagamentos ou recebimentos futuros. Por exemplo, quando você pede um empréstimo para comprar um carro, o valor do empréstimo é o valor atual para o credor dos pagamentos mensais do carro que serão efetuados.</param>
      <param name="FV">Opcional. O valor futuro ou o saldo à vista que você deseja ter depois de fazer o pagamento final. Por exemplo, o valor futuro de um empréstimo é US$ 0, porque esse é o valor dele após o pagamento final. No entanto, se você deseja guardar US$ 50.000 durante 18 anos para a educação do seu filho, então o valor futuro será de US$ 50.000. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <c>DueDate.EndOfPeriod</c> se os pagamentos vencerem no final do período de pagamento ou <c>DueDate.BegOfPeriod</c> se os pagamentos vencerem no início do período. Se omitido, <c>DueDate.EndOfPeriod</c> será suposto.</param>
      <returns>O número de períodos de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 e <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Retorna um valor que especifica o valor líquido atual de um investimento com base em uma série de fluxos de caixa periódicos (pagamentos e recebimentos) e em uma taxa de desconto.</summary>
      <param name="Rate">Necessário. A taxa de desconto durante o período, expressa como um decimal.</param>
      <param name="ValueArray">Necessário. Matriz de <see langword="Double" /> que especifica valores de fluxo de caixa. A matriz deve conter, pelo menos, um valor negativo (um pagamento) e um valor positivo (um recebimento).</param>
      <returns>O valor líquido atual de um investimento com base em uma série de fluxos de caixa periódicos (pagamentos e recebimentos) e em uma taxa de desconto.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" /> é <see langword="Nothing" />, classificação de <paramref name="ValueArray" /> &lt; &gt; 1 ou <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retorna um valor que especifica o pagamento de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</summary>
      <param name="Rate">Necessário. A taxa de juros por período. Por exemplo, se você conseguir um empréstimo para compra de um carro com uma APR (taxa anual de percentual) de 10% e efetuar pagamentos mensais, a taxa por período será de 0,1/12 ou 0,0083.</param>
      <param name="NPer">Necessário. O número total de períodos de pagamento na anuidade. Por exemplo, se você efetuar pagamentos mensais de um empréstimo de quatro anos para compra de um carro, o empréstimo terá um total de 4 x 12 (ou 48) períodos de pagamento.</param>
      <param name="PV">Necessário. O valor atual (ou a quantia total) que uma série de pagamentos a serem pagos no futuro vale agora. Por exemplo, quando você pede um empréstimo para comprar um carro, o valor do empréstimo é o valor atual para o credor dos pagamentos mensais do carro que serão efetuados.</param>
      <param name="FV">Opcional. O valor futuro ou o saldo à vista que você deseja ter depois de fazer o pagamento final. Por exemplo, o valor futuro de um empréstimo é US$ 0, porque esse é o valor dele após o pagamento final. No entanto, se você deseja economizar US$ 50.000 em um período de 18 anos para a educação do seu filho, o valor futuro é de US$ 50.000. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <c>DueDate.EndOfPeriod</c> se os pagamentos vencerem no final do período de pagamento ou <c>DueDate.BegOfPeriod</c> se os pagamentos vencerem no início do período. Se omitido, <c>DueDate.EndOfPeriod</c> será suposto.</param>
      <returns>O pagamento de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retorna um valor que especifica o pagamento principal em um determinado período de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</summary>
      <param name="Rate">Necessário. A taxa de juros por período. Por exemplo, se você conseguir um empréstimo para compra de um carro com uma APR (taxa anual de percentual) de 10% e efetuar pagamentos mensais, a taxa por período será de 0,1/12 ou 0,0083.</param>
      <param name="Per">Necessário. O período de pagamento no intervalo de 1 a <paramref name="NPer" />.</param>
      <param name="NPer">Necessário. O número total de períodos de pagamento na anuidade. Por exemplo, se você efetuar pagamentos mensais em um empréstimo de quatro anos para compra de carro, seu empréstimo terá um total de 4 x 12 (ou 48) períodos de pagamento.</param>
      <param name="PV">Necessário. O valor atual de uma série de pagamentos ou recebimentos futuros. Por exemplo, quando você pede um empréstimo para comprar um carro, o valor do empréstimo é o valor atual para o credor dos pagamentos mensais do carro que serão efetuados.</param>
      <param name="FV">Opcional. O valor futuro ou o saldo à vista que você deseja ter depois de fazer o pagamento final. Por exemplo, o valor futuro de um empréstimo é US$ 0, porque esse é o valor dele após o pagamento final. No entanto, se você deseja guardar US$ 50.000 durante 18 anos para a educação do seu filho, então o valor futuro será de US$ 50.000. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <c>DueDate.EndOfPeriod</c> se os pagamentos vencerem no final do período de pagamento ou <c>DueDate.BegOfPeriod</c> se os pagamentos vencerem no início do período. Se omitido, <c>DueDate.EndOfPeriod</c> será suposto.</param>
      <returns>O pagamento principal em um determinado período de uma anuidade com base em pagamentos fixos periódicos e em uma taxa de juros fixa.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;=0 ou <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retorna um valor que especifica o valor atual de uma anuidade com base em pagamentos fixos periódicos a serem pagos no futuro e em uma taxa de juros fixa.</summary>
      <param name="Rate">Necessário. A taxa de juros por período. Por exemplo, se você conseguir um empréstimo para compra de um carro com uma APR (taxa anual de percentual) de 10% e efetuar pagamentos mensais, a taxa por período será de 0,1/12 ou 0,0083.</param>
      <param name="NPer">Necessário. O número total de períodos de pagamento na anuidade. Por exemplo, se você efetuar pagamentos mensais em um empréstimo de quatro anos para compra de carro, seu empréstimo terá 4 x 12 (ou 48) períodos de pagamento.</param>
      <param name="Pmt">Necessário. O pagamento a ser feito em cada período. Os pagamentos geralmente contêm entidade de segurança e juros que não são alterados durante a vigência da anuidade.</param>
      <param name="FV">Opcional. O valor futuro ou o saldo à vista que você deseja ter depois de fazer o pagamento final. Por exemplo, o valor futuro de um empréstimo é US$ 0, porque esse é o valor dele após o pagamento final. No entanto, se você deseja guardar US$ 50.000 durante 18 anos para a educação do seu filho, então o valor futuro será de US$ 50.000. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <c>DueDate.EndOfPeriod</c> se os pagamentos vencerem no final do período de pagamento ou <c>DueDate.BegOfPeriod</c> se os pagamentos vencerem no início do período. Se omitido, <c>DueDate.EndOfPeriod</c> será suposto.</param>
      <returns>O valor atual de uma anuidade com base em pagamentos fixos periódicos a serem pagos no futuro e em uma taxa de juros fixa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Retorna um valor que especifica a taxa de juros por período de uma anuidade.</summary>
      <param name="NPer">Necessário. O número total de períodos de pagamento na anuidade. Por exemplo, se você efetuar pagamentos mensais de um empréstimo de quatro anos para compra de um carro, esse empréstimo terá um total de 4 * 12 (ou 48) períodos de pagamento.</param>
      <param name="Pmt">Necessário. O pagamento a ser feito em cada período. Os pagamentos geralmente contêm da entidade de segurança e juros que não são alterados durante a vigência da anuidade.</param>
      <param name="PV">Necessário. O valor atual, ou o valor de hoje, de uma série de pagamentos ou recebimentos futuros. Por exemplo, quando você pede um empréstimo para comprar um carro, o valor do empréstimo é o valor atual para o credor dos pagamentos mensais do carro que serão efetuados.</param>
      <param name="FV">Opcional. O valor futuro ou o saldo à vista que você deseja ter depois de fazer o pagamento final. Por exemplo, o valor futuro de um empréstimo é US$ 0, porque esse é o valor dele após o pagamento final. No entanto, se você deseja guardar US$ 50.000 durante 18 anos para a educação do seu filho, então o valor futuro será de US$ 50.000. Se omitida, presume-se que seja 0.</param>
      <param name="Due">Opcional. Objeto do tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que especifica quando os pagamentos vencem. Esse argumento deverá ser <c>DueDate.EndOfPeriod</c> se os pagamentos vencerem no final do período de pagamento ou <c>DueDate.BegOfPeriod</c> se os pagamentos vencerem no início do período. Se omitido, <c>DueDate.EndOfPeriod</c> será suposto.</param>
      <param name="Guess">Opcional. O valor estimado é retornado por <see langword="Rate" />. Se for omitido, <paramref name="Guess" /> será 0,1 (10 por cento).</param>
      <returns>A taxa de juros por período de uma anuidade.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Retorna um valor que especifica a depreciação linear de um ativo em um único período.</summary>
      <param name="Cost">Necessário. O custo inicial do ativo.</param>
      <param name="Salvage">Necessário. O valor do ativo no final da vida útil.</param>
      <param name="Life">Necessário. A duração da vida útil do ativo.</param>
      <returns>A depreciação linear de um ativo em um único período.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Retorna um valor que especifica a depreciação dos dígitos da soma dos anos de um ativo em determinado período.</summary>
      <param name="Cost">Necessário. O custo inicial do ativo.</param>
      <param name="Salvage">Necessário. O valor do ativo no final da vida útil.</param>
      <param name="Life">Necessário. A duração da vida útil do ativo.</param>
      <param name="Period">Necessário. O período no qual a depreciação do ativo é calculada.</param>
      <returns>A depreciação dos dígitos da soma dos anos de um ativo por um período especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> ou <paramref name="Period" /> &lt;=0.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Indica o primeiro dia da semana a ser usado ao chamar funções relacionadas a datas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Sexta-feira Esse membro é equivalente à constante <see langword="vbFriday" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Segunda-feira Esse membro é equivalente à constante <see langword="vbMonday" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Sábado Esse membro é equivalente à constante <see langword="vbSaturday" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Domingo (padrão) Esse membro é equivalente à constante <see langword="vbSunday" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>O primeiro dia da semana conforme especificado nas configurações do sistema. Esse membro é equivalente à constante <see langword="vbUseSystemDayOfWeek" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Quinta-feira Esse membro é equivalente à constante <see langword="vbThursday" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Terça-feira Esse membro é equivalente à constante <see langword="vbTuesday" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Quarta-feira Esse membro é equivalente à constante <see langword="vbWednesday" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Indica a primeira semana do ano a ser usada ao chamar funções relacionadas a datas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>A primeira semana que tem pelo menos quatro dias no ano novo. Esse membro é equivalente à constante <see langword="vbFirstFourDays" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>A primeira semana completa do ano. Esse membro é equivalente à constante <see langword="vbFirstFullWeek" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>A semana na qual 1º de janeiro ocorre (padrão). Esse membro é equivalente à constante <see langword="vbFirstJan1" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>A semana especificada nas configurações do sistema como a primeira semana do ano. Esse membro é equivalente à constante <see langword="vbUseSystem" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>O atributo <see langword="HideModuleNameAttribute" />, quando aplicado a um módulo, permite que os membros de módulo sejam acessados usando somente a qualificação necessária para o módulo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Inicializa uma nova instância do atributo <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>O módulo <see langword="Information" /> contém os procedimentos usados para retornar, testar ou verificar informações.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Contém informações sobre erros de tempo de execução.</summary>
      <returns>Contém informações sobre erros de tempo de execução.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma variável aponta para uma matriz.</summary>
      <param name="VarName">Necessário. Variável <see langword="Object" />.</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma variável aponta para uma matriz.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma expressão representa um valor de <see langword="Date" /> válido.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Object" />.</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma expressão representa um valor de <see langword="Date" /> válido.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma expressão é avaliada como a classe <see cref="T:System.DBNull" />.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Object" />.</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma expressão é avaliada como a classe <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma expressão é um tipo de exceção.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Object" />.</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma expressão é um tipo de exceção.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma expressão representa não tem nenhum objeto atribuído a ela.</summary>
      <param name="Expression">Necessário. Expressão<see langword="Object" /> .</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma expressão representa não tem nenhum objeto atribuído a ela.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma expressão pode ser avaliada como um número.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Object" />.</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma expressão pode ser avaliada como um número.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Retorna um valor <see langword="Boolean" /> que indica se uma expressão avalia para um tipo de referência.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Object" />.</param>
      <returns>Retorna um valor <see langword="Boolean" /> que indica se uma expressão avalia para um tipo de referência.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Retorna o subscrito mais baixo disponível para a dimensão indicada de uma matriz.</summary>
      <param name="Array">Necessário. Matriz de qualquer tipo de dados. A matriz na qual você deseja encontrar o subscrito mais baixo possível de uma dimensão.</param>
      <param name="Rank">Opcional. <see langword="Integer" />. A dimensão para a qual o subscrito mais baixo possível deve ser retornado. Use 1 para a primeira dimensão, 2 para a segunda e assim por diante. Se <paramref name="Rank" /> for omitido, 1 será pressuposto.</param>
      <returns>
        <see langword="Integer" />. O valor mais baixo da subscrição que a dimensão especificada pode conter. <see langword="LBound" /> sempre retorna 0, desde que <paramref name="Array" /> tenha sido inicializado, mesmo se não contiver elementos, como por exemplo, se for uma cadeia de comprimento zero. Se <paramref name="Array" /> for <see langword="Nothing" />, <see langword="LBound" /> gera um <see cref="T:System.ArgumentNullException" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> é menor que 1 ou <paramref name="Rank" /> é maior que a classificação de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Retorna um valor <see langword="Integer" /> que representa o código de cor RGB correspondente ao número de cor especificado.</summary>
      <param name="Color">Necessário. Um número inteiro no intervalo de 0-15.</param>
      <returns>Retorna um valor <see langword="Integer" /> que representa o código de cor RGB correspondente ao número de cor especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" /> está fora do intervalo de 0 a 15, inclusive.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Retorna um valor <see langword="Integer" /> que representa um valor de cor RGB de um conjunto de componentes de cor vermelho, verde e azul.</summary>
      <param name="Red">Necessário. <see langword="Integer" /> no intervalo 0-255, inclusive, que representa a intensidade do componente vermelho da cor.</param>
      <param name="Green">Necessário. <see langword="Integer" /> no intervalo 0-255, inclusive, que representa a intensidade do componente verde da cor.</param>
      <param name="Blue">Necessário. <see langword="Integer" /> no intervalo de 0 a 255 (incluindo este número), que representa a intensidade do componente azul da cor.</param>
      <returns>Retorna um valor <see langword="Integer" /> que representa um valor de cor RGB de um conjunto de componentes de cor vermelho, verde e azul.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" /> ou <paramref name="Red" /> está fora do intervalo de 0 a 255, inclusive.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Retorna um valor <see langword="String" /> que contém o nome do tipo de dados do sistema de uma variável.</summary>
      <param name="VbName">Necessário. Uma variável <see langword="String" /> que contém um nome do tipo Visual Basic.</param>
      <returns>Retorna um valor <see langword="String" /> que contém o nome do tipo de dados do sistema de uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Retorna um valor de <see langword="String" /> que contém informações de tipo de dados sobre uma variável.</summary>
      <param name="VarName">Necessário. Variável <see langword="Object" />. Se <see langword="Option Strict" /> for <see langword="Off" />, você poderá passar uma variável de qualquer tipo de dados, exceto uma estrutura.</param>
      <returns>Retorna um valor de <see langword="String" /> que contém informações de tipo de dados sobre uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Retorna o subscrito mais alto disponível para a dimensão indicada de uma matriz.</summary>
      <param name="Array">Necessário. Matriz de qualquer tipo de dados. A matriz na qual você deseja encontrar o subscrito mais alto possível de uma dimensão.</param>
      <param name="Rank">Opcional. <see langword="Integer" />. A dimensão para a qual o subscrito mais alto possível deve ser retornado. Use 1 para a primeira dimensão, 2 para a segunda e assim por diante. Se <paramref name="Rank" /> for omitido, 1 será pressuposto.</param>
      <returns>
        <see langword="Integer" />. O valor mais alto da subscrição que a dimensão especificada pode conter. Se <paramref name="Array" /> tiver apenas um elemento, <see langword="UBound" /> retornará 0. Se <paramref name="Array" /> não tiver elementos (por exemplo, se for uma cadeia de tamanho zero), <see langword="UBound" /> retornará -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> é menor que 1 ou <paramref name="Rank" /> é maior que a classificação de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Retorna um valor <see langword="Integer" /> que contém a classificação de tipo de dados de uma variável.</summary>
      <param name="VarName">Necessário. Variável <see langword="Object" />. Se <see langword="Option Strict" /> for <see langword="Off" />, você poderá passar uma variável de qualquer tipo de dados, exceto uma estrutura.</param>
      <returns>Retorna um valor <see langword="Integer" /> que contém a classificação de tipo de dados de uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Retorna um valor <see langword="String" /> que contém o nome do tipo de dados do Visual Basic de uma variável.</summary>
      <param name="UrtName">Necessário. Variável <see langword="String" /> que contém um nome de tipo usado pelo Common Language Runtime.</param>
      <returns>Retorna um valor <see langword="String" /> que contém o nome do tipo de dados do Visual Basic de uma variável.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>O módulo <see langword="Interaction" /> contém procedimentos usados para interagir com objetos, aplicativos e sistemas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Emite um sinal sonoro pelo alto-falante do computador.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Executa um método em um objeto ou define ou retorna uma propriedade em um objeto.</summary>
      <param name="ObjectRef">Necessário. <see langword="Object" />. Um ponteiro para o objeto expondo a propriedade ou método.</param>
      <param name="ProcName">Necessário. <see langword="String" />. Uma expressão de cadeia de caracteres que contém o nome da propriedade ou método no objeto.</param>
      <param name="UseCallType">Necessário. Um membro de enumeração do tipo <see cref="T:Microsoft.VisualBasic.CallType" /> representando o tipo de procedimento sendo chamado. O valor de <see langword="CallType" /> pode ser <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</param>
      <param name="Args">Opcional. <see langword="ParamArray" />. Uma matriz de parâmetros que contém os argumentos a serem passados para a propriedade ou método sendo chamado.</param>
      <returns>Executa um método em um objeto ou define ou retorna uma propriedade em um objeto.</returns>
      <exception cref="T:System.ArgumentException">Valor <paramref name="UseCallType" /> inválido, deve ser <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Cria e retorna uma referência a um objeto COM. <see langword="CreateObject" /> não pode ser usado para criar instâncias de classes no Visual Basic, a menos que essas classes sejam explicitamente expostas como componentes COM.</summary>
      <param name="ProgId">Necessário. <see langword="String" />. A ID do programa do objeto a ser criado.</param>
      <param name="ServerName">Opcional. <see langword="String" />. O nome do servidor de rede no qual o objeto será criado. Se <paramref name="ServerName" /> for uma cadeia de caracteres vazia (""), o computador local será usado.</param>
      <returns>Cria e retorna uma referência a um objeto COM. <see langword="CreateObject" /> não pode ser usado para criar instâncias de classes no Visual Basic, a menos que essas classes sejam explicitamente expostas como componentes COM.</returns>
      <exception cref="T:System.Exception">Servidor não disponível</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não existe nenhum objeto do tipo especificado</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Retorna um dos dois objetos, dependendo da avaliação de uma expressão.</summary>
      <param name="Expression">Necessário. <see langword="Boolean" />. A expressão que você deseja avaliar.</param>
      <param name="TruePart">Necessário. <see langword="Object" />. Retornado se <paramref name="Expression" /> for avaliado como <see langword="True" />.</param>
      <param name="FalsePart">Necessário. <see langword="Object" />. Retornado se <paramref name="Expression" /> for avaliado como <see langword="False" />.</param>
      <returns>Retorna um dos dois objetos, dependendo da avaliação de uma expressão.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Indica qual botão foi pressionado em uma caixa de mensagem, retornado pela função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>O botão Anular foi pressionado. Esse membro é equivalente à constante <see langword="vbAbort" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>O botão Cancelar foi pressionado. Esse membro é equivalente à constante <see langword="vbCancel" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>O botão Ignorar foi pressionado. Esse membro é equivalente à constante <see langword="vbIgnore" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>O botão Não foi pressionado. Esse membro é equivalente à constante <see langword="vbNo" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>O botão OK foi pressionado. Esse membro é equivalente à constante <see langword="vbOK" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>O botão Repetir foi pressionado. Esse membro é equivalente à constante <see langword="vbRetry" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>O botão Sim foi pressionado. Esse membro é equivalente à constante <see langword="vbYes" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Indica quais botões exibir quando ao chamar a função <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Botões Anular, Tentar Novamente e Ignorar. Esse membro é equivalente à constante <see langword="vbAbortRetryIgnore" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Caixa de mensagem modal do aplicativo. Esse membro é equivalente à constante <see langword="vbApplicationModal" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Mensagem crítica. Esse membro é equivalente à constante <see langword="vbCritical" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>O primeiro botão é padrão. Esse membro é equivalente à constante <see langword="vbDefaultButton1" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>O segundo botão é padrão. Esse membro é equivalente à constante <see langword="vbDefaultButton2" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>O terceiro botão é padrão. Esse membro é equivalente à constante <see langword="vbDefaultButton3" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Mensagem de aviso. Esse membro é equivalente à constante <see langword="vbExclamation" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Mensagem de informação. Esse membro é equivalente à constante <see langword="vbInformation" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Texto da ajuda. Esse membro é equivalente à constante <see langword="vbMsgBoxHelp" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Texto alinhado à direita. Esse membro é equivalente à constante <see langword="vbMsgBoxRight" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Texto de leitura da direita para esquerda (sistemas em árabe e hebraico). Esse membro é equivalente à constante <see langword="vbMsgBoxRtlReading" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Janela de caixa de mensagem do primeiro plano. Esse membro é equivalente à constante <see langword="vbMsgBoxSetForeground" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>Botões OK e Cancelar. Esse membro é equivalente à constante <see langword="vbOKCancel" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>Apenas o botão OK (padrão). Esse membro é equivalente à constante <see langword="vbOKOnly" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Consulta de aviso. Esse membro é equivalente à constante <see langword="vbQuestion" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Botões Tentar Novamente e Cancelar. Esse membro é equivalente à constante <see langword="vbRetryCancel" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>Caixa de mensagem modal do sistema. Esse membro é equivalente à constante <see langword="vbSystemModal" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Botões Sim e Não. Esse membro é equivalente à constante <see langword="vbYesNo" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Botões Sim, Não e Cancelar. Esse membro é equivalente à constante <see langword="vbYesNoCancel" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>Esse atributo é compatível com <see langword="My.Forms" /> e <see langword="My.WebServices" /> no Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Esse atributo é compatível com <see langword="My.Forms" /> e <see langword="My.WebServices" /> no Visual Basic.</summary>
      <param name="typeToCollect">
        <see langword="String" />. Inicializa a propriedade <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. O compilador gera propriedades de acessador para classes que derivam deste tipo.</param>
      <param name="createInstanceMethodName">
        <see langword="String" />. Inicializa a propriedade <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Especifica o método na classe que cria instâncias do tipo.</param>
      <param name="disposeInstanceMethodName">
        <see langword="String" />. Inicializa a propriedade <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Especifica o método na classe que descarta instâncias do tipo.</param>
      <param name="defaultInstanceAlias">
        <see langword="String" />. Inicializa a propriedade <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Especifica o nome da propriedade que retorna a instância padrão da classe.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>Esta propriedade dá suporte a <see langword="My" /> no Visual Basic.</summary>
      <returns>Especifica o método na classe que cria instâncias do tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>Esta propriedade dá suporte a <see langword="My" /> no Visual Basic.</summary>
      <returns>Especifica o nome da propriedade que retorna a instância padrão da classe.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>Esta propriedade dá suporte a <see langword="My" /> no Visual Basic.</summary>
      <returns>Especifica o método na classe que descarta instâncias do tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>Esta propriedade dá suporte a <see langword="My" /> no Visual Basic.</summary>
      <returns>Especifica o nome do tipo para o qual o compilador gera propriedades de acessador.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Fornece métodos para manipular a Área de Transferência.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Fornece propriedades e métodos para trabalhar com unidades, arquivos e diretórios.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Combina dois caminhos e retorna um caminho formatado corretamente.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Primeiro caminho a ser combinado.</param>
      <param name="relativePath">
        <see langword="String" />. Segundo caminho a ser combinado.</param>
      <returns>A combinação dos caminhos especificados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> são caminhos malformados.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Copia um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o diretório deve ser copiado.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o diretório deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> está definido como <see langword="UIOption.AllDialogs" /> e o usuário cancelou a operação ou um ou mais arquivos no diretório não podem ser copiados.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o diretório deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica o que deverá ser feito, se o usuário clicar em Cancelar durante a operação. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> está definido como <see langword="UIOption.AllDialogs" /> e o usuário cancelou a operação ou um ou mais arquivos no diretório não podem ser copiados.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copia um diretório para outro diretório.</summary>
      <param name="sourceDirectoryName">O diretório a ser copiado.</param>
      <param name="destinationDirectoryName">O local para o qual o diretório deve ser copiado.</param>
      <param name="overwrite">
        <see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de origem não existe.</exception>
      <exception cref="T:System.IO.IOException">O caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de pasta no caminho contém dois pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Um arquivo de destino existe, mas não pode ser acessado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo no diretório de destino com o mesmo nome está sendo usado.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo de destino já existe e <paramref name="overwrite" /> é definido como <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica o que deverá ser feito, se o usuário clicar em Cancelar durante a operação. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo de destino já existe e <paramref name="overwrite" /> é definido como <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> é definido como <see langword="ThrowException" /> e o usuário cancelou a operação ou ocorre um erro de E/S não especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copia um arquivo para um novo local.</summary>
      <param name="sourceFileName">O arquivo a ser copiado.</param>
      <param name="destinationFileName">O local para o qual o arquivo deve ser copiado.</param>
      <param name="overwrite">
        <see langword="True" /> se os arquivos existentes devem ser substituídos; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo de destino já existe e <paramref name="overwrite" /> é definido como <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Cria um diretório.</summary>
      <param name="directory">Nome e local do diretório.</param>
      <exception cref="T:System.ArgumentException">O nome do diretório está malformado. Por exemplo, ele contém caracteres inválidos ou é somente um espaço em branco.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O nome do diretório é muito longo.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório é apenas um dois-pontos (:).</exception>
      <exception cref="T:System.IO.IOException">O diretório pai do diretório a ser criado é somente leitura</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para criar o diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Obtém ou define o diretório atual.</summary>
      <returns>O diretório atual para operações de E/S de arquivo.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho não é válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Exclui um diretório.</summary>
      <param name="directory">O diretório a ser excluído.</param>
      <param name="onDirectoryNotEmpty">Especifica o que deve ser feito quando um diretório que deve ser excluído contém arquivos ou diretórios. O padrão é <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">O caminho é uma cadeia de caracteres de tamanho zero, está malformado, contém somente espaços em branco ou caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe ou é um arquivo.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo do diretório ou subdiretório está em uso.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório contém dois-pontos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação ou o diretório não pode ser excluído.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Exclui um diretório.</summary>
      <param name="directory">O diretório a ser excluído.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">O caminho é uma cadeia de caracteres de tamanho zero, está malformado, contém somente espaços em branco ou caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe ou é um arquivo.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo do diretório ou subdiretório está em uso.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório contém dois-pontos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação ou o diretório não pode ser excluído.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Exclui um diretório.</summary>
      <param name="directory">O diretório a ser excluído.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Especifica se deve gerar uma exceção se o usuário clicar em Cancelar.</param>
      <exception cref="T:System.ArgumentException">O caminho é uma cadeia de caracteres de tamanho zero, está malformado, contém somente espaços em branco ou caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe ou é um arquivo.</exception>
      <exception cref="T:System.IO.IOException">Um arquivo do diretório ou subdiretório está em uso.</exception>
      <exception cref="T:System.NotSupportedException">O nome do diretório contém dois-pontos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação ou o diretório não pode ser excluído.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Exclui um arquivo.</summary>
      <param name="file">O nome e o caminho do arquivo a ser excluído.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de caracteres de tamanho zero, contém somente espaço em branco, contém caracteres inválidos, tem uma barra à direita na qual um arquivo deve ser especificado ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está em uso.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Exclui um arquivo.</summary>
      <param name="file">O nome e o caminho do arquivo a ser excluído.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de caracteres de tamanho zero, contém somente espaço em branco, contém caracteres inválidos, tem uma barra à direita na qual um arquivo deve ser especificado ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está em uso.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Exclui um arquivo.</summary>
      <param name="file">O nome e o caminho do arquivo a ser excluído.</param>
      <param name="showUI">Se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Se o arquivo excluído deve ou não ser enviado para a Lixeira. O padrão é <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Especifica se uma exceção é lançada ou não quando o usuário cancela a operação. O padrão é <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de caracteres de tamanho zero, contém somente espaço em branco, contém caracteres inválidos, tem uma barra à direita na qual um arquivo deve ser especificado ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está em uso.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura.</exception>
      <exception cref="T:System.OperationCanceledException">O usuário cancelou a operação e <paramref name="onUserCancel" /> está definido para <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Retornará <see langword="True" /> se o diretório especificado existir.</summary>
      <param name="directory">O caminho do diretório.</param>
      <returns>
        <see langword="True" /> se o diretório existir; caso contrário, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Retorna uma coleção somente leitura de todos os nomes de unidade disponíveis.</summary>
      <returns>Uma coleção somente leitura de todas as unidades disponíveis como objetos <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Retornará <see langword="True" /> se o arquivo especificado existir.</summary>
      <param name="file">Nome e caminho do arquivo.</param>
      <returns>Retornará <see langword="True" /> se o arquivo existir; caso contrário, esse método retornará <see langword="False" />.</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra invertida (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos que contêm o texto especificado.</summary>
      <param name="directory">O diretório a ser pesquisado.</param>
      <param name="containsText">O texto de pesquisa.</param>
      <param name="ignoreCase">
        <see langword="True" /> se a pesquisa deve diferenciar maiúsculas de minúsculas; Caso contrário, <see langword="False" />. O padrão é <see langword="True" />.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Coleção somente leitura dos nomes de arquivos que contêm o texto especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de comprimento zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">O diretório especificado no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos que contêm o texto especificado.</summary>
      <param name="directory">O diretório a ser pesquisado.</param>
      <param name="containsText">O texto de pesquisa.</param>
      <param name="ignoreCase">
        <see langword="True" /> se a pesquisa deve diferenciar maiúsculas de minúsculas; Caso contrário, <see langword="False" />. O padrão é <see langword="True" />.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Padrão para correspondência.</param>
      <returns>Coleção somente leitura dos nomes de arquivos que contêm o texto especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de comprimento zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">O diretório especificado no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Retorna uma coleção de cadeias de caracteres que representam os nomes dos caminhos dos subdiretórios de um diretório.</summary>
      <param name="directory">Nome e caminho do diretório.</param>
      <returns>Coleção somente leitura dos nomes dos caminhos dos subdiretórios dentro do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retorna uma coleção de cadeias de caracteres que representam os nomes dos caminhos dos subdiretórios de um diretório.</summary>
      <param name="directory">Nome e caminho do diretório.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">O padrão ao qual os nomes serão correspondidos.</param>
      <returns>Coleção somente leitura dos nomes dos caminhos dos subdiretórios dentro do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Um ou mais dos caracteres curinga especificados é <see langword="Nothing" />, uma cadeia de caracteres vazia ou contém somente espaços.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório especificado não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório especificado aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Retorna um objeto <see cref="T:System.IO.DirectoryInfo" /> para o arquivo especificado.</summary>
      <param name="directory">
        <see langword="String" />. Caminho do diretório.</param>
      <returns>Objeto <see cref="T:System.IO.DirectoryInfo" /> do caminho especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">O caminho do diretório contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Retorna um objeto <see cref="T:System.IO.DriveInfo" /> para a unidade especificada.</summary>
      <param name="drive">Unidade a ser examinada.</param>
      <returns>Objeto <see cref="T:System.IO.DriveInfo" /> da unidade especificada.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Retorna um objeto <see cref="T:System.IO.FileInfo" /> para o arquivo especificado.</summary>
      <param name="file">Nome e caminho do arquivo.</param>
      <returns>Objeto <see cref="T:System.IO.FileInfo" /> do arquivo especificado</returns>
      <exception cref="T:System.ArgumentException">O nome do caminho está malformado. Por exemplo, ele contém caracteres inválidos ou é somente um espaço em branco. O nome de arquivo tem uma barra “/” à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.NotSupportedException">O caminho contém dois-pontos no meio da cadeia de caracteres.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho é muito longo.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem acesso à ACL (lista de controle de acesso) do arquivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos de um diretório.</summary>
      <param name="directory">Diretório a ser pesquisado.</param>
      <returns>Coleção somente leitura de nomes de arquivos do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório a ser pesquisado não existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retorna uma coleção somente leitura de cadeias de caracteres que representam os nomes de arquivos de um diretório.</summary>
      <param name="directory">Diretório a ser pesquisado.</param>
      <param name="searchType">Indica se subpastas devem ser incluídas. O padrão é <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Padrão para correspondência.</param>
      <returns>Coleção somente leitura de nomes de arquivos do diretório especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório a ser pesquisado não existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> aponta para um arquivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem as permissões necessárias.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Analisa o nome de arquivo do caminho fornecido.</summary>
      <param name="path">Necessário. Caminho a ser analisado. <see langword="String" />.</param>
      <returns>O nome de arquivo do caminho especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Retorna o caminho pai do caminho fornecido.</summary>
      <param name="path">Caminho a ser examinado.</param>
      <returns>O caminho pai do caminho fornecido.</returns>
      <exception cref="T:System.ArgumentException">O caminho não tem um caminho pai porque é um caminho raiz.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Cria um arquivo temporário de zero byte nomeado exclusivamente no disco e retorna o caminho completo do arquivo.</summary>
      <returns>
        <see langword="String" /> que contém o caminho completo do arquivo temporário.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">A origem é um diretório raiz ou o caminho de origem e o caminho de destino são os mesmos.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório de destino já existe e <paramref name="overwrite" /> está definido como <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica se uma exceção é lançada ou não quando o usuário cancela a operação. O padrão é <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> é definido como <see langword="ThrowException" /> e um subdiretório do arquivo não pode ser copiado.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> é definido como <see langword="ThrowException" /> e o usuário cancela a operação ou a operação não pode ser concluída.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Move um diretório de um local para outro.</summary>
      <param name="sourceDirectoryName">O caminho do diretório a ser movido.</param>
      <param name="destinationDirectoryName">O caminho do diretório para o qual o diretório de origem está sendo movido.</param>
      <param name="overwrite">
        <see langword="True" /> se os diretórios existentes devem ser substituídos; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> é <see langword="Nothing" /> ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">O diretório de destino já existe e <paramref name="overwrite" /> está definido como <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.InvalidOperationException">A operação é cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <param name="showUI">Especifica se o progresso da operação deve ser acompanhado visualmente. O padrão é <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica se uma exceção é lançada ou não quando o usuário cancela a operação. O padrão é <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> é definido como <see langword="ThrowException" /> e o usuário cancelou a operação ou ocorreu um erro de E/S não especificado.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Move um arquivo para um novo local.</summary>
      <param name="sourceFileName">Caminho do arquivo a ser movido.</param>
      <param name="destinationFileName">Caminho do diretório para o qual o arquivo deve ser movido.</param>
      <param name="overwrite">
        <see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo de origem não é válido ou não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>O método <see langword="OpenTextFieldParser" /> permite criar um objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que fornece uma maneira fácil e eficiente de analisar os arquivos de texto estruturados, como logs. O objeto <see langword="TextFieldParser" /> pode ser usado para ler arquivos delimitados e de largura fixa.</summary>
      <param name="file">O arquivo a ser aberto com o <see langword="TextFieldParser" />.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para ler o arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Não é possível analisar uma linha usando o formato especificado. A mensagem de exceção especifica a linha causando a exceção, enquanto a propriedade <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> é atribuída ao texto contido na linha.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>O método <see langword="OpenTextFieldParser" /> permite criar um objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que fornece uma maneira fácil e eficiente de analisar os arquivos de texto estruturados, como logs. O objeto <see langword="TextFieldParser" /> pode ser usado para ler arquivos delimitados e de largura fixa.</summary>
      <param name="file">O arquivo a ser aberto com o <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Larguras dos campos.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para ler o arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Não é possível analisar uma linha usando o formato especificado. A mensagem de exceção especifica a linha causando a exceção, enquanto a propriedade <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> é atribuída ao texto contido na linha.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>O método <see langword="OpenTextFieldParser" /> permite criar um objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que fornece uma maneira fácil e eficiente de analisar os arquivos de texto estruturados, como logs. O objeto <see langword="TextFieldParser" /> pode ser usado para ler arquivos delimitados e de largura fixa.</summary>
      <param name="file">O arquivo a ser aberto com o <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Delimitadores para os campos.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para ler o arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Não é possível analisar uma linha usando o formato especificado. A mensagem de exceção especifica a linha causando a exceção, enquanto a propriedade <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> é atribuída ao texto contido na linha.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Abre um objeto <see cref="T:System.IO.StreamReader" /> para ser lido de um arquivo.</summary>
      <param name="file">O arquivo a ser lido.</param>
      <returns>O objeto <see cref="T:System.IO.StreamReader" /> a ser lido do arquivo</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra invertida (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível localizar o arquivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para ler o arquivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Abre um objeto <see cref="T:System.IO.StreamReader" /> para ser lido de um arquivo.</summary>
      <param name="file">O arquivo a ser lido.</param>
      <param name="encoding">A codificação a ser usada nos conteúdos de arquivo. O padrão é ASCII.</param>
      <returns>O objeto <see cref="T:System.IO.StreamReader" /> a ser lido do arquivo</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra invertida (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível localizar o arquivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para ler o arquivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Abre um objeto <see cref="T:System.IO.StreamWriter" /> no qual o arquivo especificado será gravado.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <returns>Objeto <see cref="T:System.IO.StreamWriter" /> no qual o arquivo especificado será gravado.</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Abre um <see cref="T:System.IO.StreamWriter" /> para gravar no arquivo especificado.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <param name="encoding">Codificação a ser usada na gravação no arquivo. O padrão é ASCII.</param>
      <returns>Objeto <see cref="T:System.IO.StreamWriter" /> no qual o arquivo especificado será gravado.</returns>
      <exception cref="T:System.ArgumentException">O nome do arquivo termina com uma barra.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Retorna o conteúdo de um arquivo como uma matriz de bytes.</summary>
      <param name="file">O arquivo a ser lido.</param>
      <returns>Uma matriz <see langword="Byte" /> que contém o conteúdo do arquivo.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Retorna o conteúdo de um arquivo de texto como um <see langword="String" />.</summary>
      <param name="file">Nome e caminho do arquivo que será lido.</param>
      <returns>
        <see langword="String" /> que contém o conteúdo do arquivo.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Retorna o conteúdo de um arquivo de texto como um <see langword="String" />.</summary>
      <param name="file">Nome e caminho do arquivo que será lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada na leitura do arquivo. O padrão é UTF-8.</param>
      <returns>
        <see langword="String" /> que contém o conteúdo do arquivo.</returns>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Renomeia um diretório.</summary>
      <param name="directory">O caminho e nome do diretório a ser renomeado.</param>
      <param name="newName">Novo nome do diretório.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contém informações de caminho.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> é <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório não existe.</exception>
      <exception cref="T:System.IO.IOException">Há um arquivo ou diretório existente com o nome especificado em <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Renomeia um arquivo.</summary>
      <param name="file">Arquivo a ser renomeado.</param>
      <param name="newName">Novo nome do arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contém informações de caminho ou termina com uma barra invertida (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> é <see langword="Nothing" /> ou é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">Há um arquivo ou diretório existente com o nome especificado em <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Obtém um objeto que fornece propriedades para acessar diretórios comumente referenciados.</summary>
      <returns>Essa propriedade retorna o <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> objeto para o computador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Grava dados em um arquivo binário.</summary>
      <param name="file">O caminho e o nome do arquivo no qual gravar.</param>
      <param name="data">Os dados a serem gravados no arquivo.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo, <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Grava um texto em um arquivo.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="text">O texto a ser gravado no arquivo.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Grava um texto em um arquivo.</summary>
      <param name="file">Arquivo para gravação.</param>
      <param name="text">O texto a ser gravado no arquivo.</param>
      <param name="append">
        <see langword="True" /> para acrescentar ao conteúdo do arquivo; <see langword="False" /> para substituir o conteúdo do arquivo. O padrão é <see langword="False" />.</param>
      <param name="encoding">A codificação a ser utilizada ao gravar um arquivo. O padrão é UTF-8.</param>
      <exception cref="T:System.ArgumentException">O caminho não é válido por um dos seguintes motivos: é uma cadeia de tamanho zero, contém apenas espaços em branco, contém caracteres inválidos ou é um caminho de dispositivo (começa com \\.\); ele termina com uma barra à direita.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> é <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não existe.</exception>
      <exception cref="T:System.IO.IOException">O arquivo está sendo usado por outro processo, ou ocorre um erro de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho excede o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.NotSupportedException">Um nome de arquivo ou de diretório no caminho contém dois-pontos (:) ou está em um formato inválido.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para gravar a cadeia de caracteres no buffer.</exception>
      <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para exibir o caminho.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Fornece propriedades e métodos para manipular o Registro.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Fornece propriedades para acessar diretórios comumente referenciados.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Obtém um nome de caminho apontando para o diretório Dados de Aplicativos para todos os usuários.</summary>
      <returns>O caminho para o diretório de dados do aplicativo para todos os usuários.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Obtém um nome de caminho apontando para o diretório Dados de Aplicativos para o usuário atual.</summary>
      <returns>O caminho para o diretório de dados do aplicativo para o usuário atual.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Obtém um nome de caminho apontando para o diretório da Área de Trabalho.</summary>
      <returns>O caminho para o diretório da Área de Trabalho.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Obtém um nome de caminho apontando para o diretório Meus Documentos.</summary>
      <returns>O caminho para o diretório Meus documentos.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Obtém um nome de caminho apontando para o diretório Músicas.</summary>
      <returns>O caminho para o diretório minhas músicas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Obtém um nome de caminho apontando para o diretório Imagens.</summary>
      <returns>O caminho para o diretório minhas imagens.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Obtém um caminho que aponta para o diretório Arquivos de Programas.</summary>
      <returns>O caminho para o diretório Arquivos de Programas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Obtém um nome de caminho apontando para o diretório Programas.</summary>
      <returns>O caminho para o diretório de programas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Obtém um nome de caminho apontando para o diretório temporário.</summary>
      <returns>O caminho para o diretório temporário.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho está vazio, geralmente por que o sistema operacional não dá suporte ao diretório.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Indica como abrir um arquivo ao chamar funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Permite acesso de leitura e gravação. Esse é o padrão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Permite acesso de leitura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Permite acesso de leitura e gravação.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Permite acesso de gravação.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Indica como abrir um arquivo ao chamar funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>Arquivo aberto para realizar anexação nele. Padrão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>Arquivo aberto para acesso binário.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>Arquivo aberto para acesso de leitura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>Arquivo aberto para acesso de gravação.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>Arquivo aberto para acesso aleatório.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Indica como abrir um arquivo ao chamar funções de acesso a arquivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
        <see langword="LockReadWrite" />. Esse é o padrão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Outros processos não podem ler o arquivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Outros processos não podem ler ou gravar no arquivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Outros processos não podem gravar no arquivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Qualquer processo pode ler ou gravar no arquivo.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>Esta classe dá suporte às funções <see langword="Print" /> e <see langword="PrintLine" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>Este campo dá suporte às funções <see langword="Print" /> e <see langword="PrintLine" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>O módulo <see langword="Strings" /> contém procedimentos usados para executar operações de cadeia de caracteres.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Retorna um valor inteiro representando o código de caractere correspondente a um caractere.</summary>
      <param name="String">Necessário. Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida. Se <paramref name="String" /> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada. Se <paramref name="String" /> for <see langword="Nothing" /> ou não contiver caracteres, um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>O código de caractere que corresponde ao caractere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Retorna um valor inteiro representando o código de caractere correspondente a um caractere.</summary>
      <param name="String">Necessário. Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida. Se <paramref name="String" /> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada. Se <paramref name="String" /> for <see langword="Nothing" /> ou não contiver caracteres, um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>O código de caractere que corresponde ao caractere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Retorna um valor inteiro representando o código de caractere correspondente a um caractere.</summary>
      <param name="String">Necessário. Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida. Se <paramref name="String" /> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada. Se <paramref name="String" /> for <see langword="Nothing" /> ou não contiver caracteres, um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>O código de caractere que corresponde ao caractere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Retorna um valor inteiro representando o código de caractere correspondente a um caractere.</summary>
      <param name="String">Necessário. Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida. Se <paramref name="String" /> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada. Se <paramref name="String" /> for <see langword="Nothing" /> ou não contiver caracteres, um erro <see cref="T:System.ArgumentException" /> ocorrerá.</param>
      <returns>O código de caractere que corresponde ao caractere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Retorna o caractere associado ao código de caractere especificado.</summary>
      <param name="CharCode">Necessário. Uma expressão <see langword="Integer" /> que representa o <c>ponto de código</c> ou código de caractere, do caractere.</param>
      <returns>O caractere associado ao código de caractere especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 ou &gt; 255 para <see langword="Chr" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Retorna o caractere associado ao código de caractere especificado.</summary>
      <param name="CharCode">Necessário. Uma expressão <see langword="Integer" /> que representa o <c>ponto de código</c> ou código de caractere, do caractere.</param>
      <returns>O caractere associado ao código de caractere especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; -32768 ou &gt; 65535 para <see langword="ChrW" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</summary>
      <param name="Source">Necessário. Matriz unidimensional de cadeias de caracteres a ser pesquisada.</param>
      <param name="Match">Necessário. Cadeia de caracteres a ser pesquisada.</param>
      <param name="Include">Opcional. Valor <see langword="Boolean" /> que indica se as subcadeias de caracteres que incluem ou excluem <paramref name="Match" /> devem ser retornadas. Se <paramref name="Include" /> for <see langword="True" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que contém <paramref name="Match" /> como uma subcadeia de caracteres. Se <paramref name="Include" /> for <see langword="False" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que não contém <paramref name="Match" /> como uma subcadeia de caracteres.</param>
      <param name="Compare">Opcional. Valor numérico que indica o tipo de comparação de cadeia de caracteres a ser usado. Consulte “Configurações” para obter os valores.</param>
      <returns>Uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> é <see langword="Nothing" /> ou não é uma matriz unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</summary>
      <param name="Source">Necessário. Matriz unidimensional de cadeias de caracteres a ser pesquisada.</param>
      <param name="Match">Necessário. Cadeia de caracteres a ser pesquisada.</param>
      <param name="Include">Opcional. Valor <see langword="Boolean" /> que indica se as subcadeias de caracteres que incluem ou excluem <paramref name="Match" /> devem ser retornadas. Se <paramref name="Include" /> for <see langword="True" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que contém <paramref name="Match" /> como uma subcadeia de caracteres. Se <paramref name="Include" /> for <see langword="False" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que não contém <paramref name="Match" /> como uma subcadeia de caracteres.</param>
      <param name="Compare">Opcional. Valor numérico que indica o tipo de comparação de cadeia de caracteres a ser usado. Consulte “Configurações” para obter os valores.</param>
      <returns>Uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> é <see langword="Nothing" /> ou não é uma matriz unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Retorna uma cadeia de caracteres formatada de acordo com as instruções contidas em uma expressão <see langword="String" /> de formato.</summary>
      <param name="Expression">Necessário. Qualquer expressão válida.</param>
      <param name="Style">Opcional. Uma expressão válida <see langword="String" /> de formato nomeada ou definida pelo usuário.</param>
      <returns>Uma cadeia de caracteres formatada de acordo com as instruções contidas em uma expressão <see langword="String" /> de formato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Retorna uma expressão formatada como um valor de moeda usando o símbolo da moeda definido no painel de controle do sistema.</summary>
      <param name="Expression">Necessário. Expressão a ser formatada.</param>
      <param name="NumDigitsAfterDecimal">Opcional. Valor numérico indicando quantas casas são exibidas à direita do decimal. O valor padrão é -1, que indica que as configurações regionais do computador são usadas.</param>
      <param name="IncludeLeadingDigit">Opcional. A enumeração <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se um zero à esquerda é exibido ou não para valores fracionários. Consulte "Comentários" para obter os valores.</param>
      <param name="UseParensForNegativeNumbers">Opcional. A enumeração <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se é necessário ou não colocar valores negativos entre parênteses. Consulte "Comentários" para obter os valores.</param>
      <param name="GroupDigits">Opcional. A enumeração <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se os números são agrupados ou não usando o delimitador de grupo especificado nas configurações regionais do computador. Consulte "Comentários" para obter os valores.</param>
      <returns>Uma expressão formatada como um valor de moeda usando o símbolo da moeda definido no painel de controle do sistema.</returns>
      <exception cref="T:System.ArgumentException">O número de dígitos após o ponto decimal é maior que 99.</exception>
      <exception cref="T:System.InvalidCastException">O tipo não é numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Retorna uma expressão de cadeia de caracteres que representa um valor de data/hora.</summary>
      <param name="Expression">Necessário. Expressão <see langword="Date" /> a ser formatada.</param>
      <param name="NamedFormat">Opcional. Valor numérico que indica o formato de data/hora usado. Se omitido, <see langword="DateFormat.GeneralDate" /> será usado.</param>
      <returns>Uma expressão de cadeia de caracteres que representa um valor de data/hora.</returns>
      <exception cref="T:System.ArgumentException">A configuração <paramref name="NamedFormat" /> não é válida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Retorna uma expressão formatada como um número.</summary>
      <param name="Expression">Necessário. Expressão a ser formatada.</param>
      <param name="NumDigitsAfterDecimal">Opcional. Valor numérico indicando quantas casas são exibidas à direita do decimal. O valor padrão é -1, que indica que as configurações regionais do computador são usadas.</param>
      <param name="IncludeLeadingDigit">Opcional. A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se um 0 à esquerda é exibido para valores fracionários. Consulte “Configurações” para obter os valores.</param>
      <param name="UseParensForNegativeNumbers">Opcional. A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se é necessário colocar valores negativos entre parênteses. Consulte “Configurações” para obter os valores.</param>
      <param name="GroupDigits">Opcional. A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se os números são agrupados usando o delimitador de grupo especificado nas configurações de localidade ou não. Consulte “Configurações” para obter os valores.</param>
      <returns>Uma expressão formatada como um número.</returns>
      <exception cref="T:System.InvalidCastException">O tipo não é numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Retorna uma expressão formatada como um percentual (isto é, multiplicada por 100) com um caractere % à direita.</summary>
      <param name="Expression">Necessário. Expressão a ser formatada.</param>
      <param name="NumDigitsAfterDecimal">Opcional. Valor numérico indicando quantas casas são exibidas à direita do decimal. O valor padrão é -1, que indica que as configurações de localidade são usadas.</param>
      <param name="IncludeLeadingDigit">Opcional. A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se um zero à esquerda é exibido ou não para valores fracionários. Consulte “Configurações” para obter os valores.</param>
      <param name="UseParensForNegativeNumbers">Opcional. A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se é necessário ou não colocar valores negativos entre parênteses. Consulte “Configurações” para obter os valores.</param>
      <param name="GroupDigits">Opcional. A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se os números são agrupados usando o delimitador de grupo especificado nas configurações de localidade ou não. Consulte “Configurações” para obter os valores.</param>
      <returns>Uma expressão formatada como um percentual (isto é, multiplicada por 100) com um caractere % à direita.</returns>
      <exception cref="T:System.InvalidCastException">O tipo não é numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Retorna um valor <see langword="Char" /> que representa o caractere de índice especificado na cadeia de caracteres fornecida.</summary>
      <param name="str">Necessário. Qualquer expressão <see langword="String" /> válida.</param>
      <param name="Index">Necessário. Expressão <see langword="Integer" />. O índice do caractere (baseado em 1) no <paramref name="str" /> a ser retornado.</param>
      <returns>O valor <see langword="Char" /> que representa o caractere de índice especificado na cadeia de caracteres fornecida.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> é <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 ou <paramref name="Index" /> é maior que o índice do último caractere de <paramref name="str" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna um inteiro que especifica a posição inicial da primeira ocorrência de uma cadeia de caracteres dentro de outra.</summary>
      <param name="Start">Opcional. Expressão numérica que define a posição inicial de cada pesquisa. Se omitida, a pesquisa começa na posição do primeiro caractere. O índice inicial é de base 1.</param>
      <param name="String1">Necessário. Expressão <see langword="String" /> pesquisada.</param>
      <param name="String2">Necessário. Expressão <see langword="String" /> solicitada.</param>
      <param name="Compare">Opcional. Especifica o tipo de comparação de cadeias de caracteres. Se <paramref name="Compare" /> for omitido, a configuração <see langword="Option Compare" /> determinará o tipo de comparação.</param>
      <returns>If 
  InStr retorna 
 
                <paramref name="String1" /> terá tamanho zero ou <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> terá tamanho zero ou <see langword="Nothing" /><paramref name="start" /><paramref name="String2" /> não for encontrado 
  0 
 
                <paramref name="String2" /> for encontrado em <paramref name="String1" /> Posição em que a correspondência começa 
 
                <paramref name="Start" /> &gt; que o tamanho de <paramref name="String1" /> 0</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna um inteiro que especifica a posição inicial da primeira ocorrência de uma cadeia de caracteres dentro de outra.</summary>
      <param name="String1">Necessário. Expressão <see langword="String" /> pesquisada.</param>
      <param name="String2">Necessário. Expressão <see langword="String" /> solicitada.</param>
      <param name="Compare">Opcional. Especifica o tipo de comparação de cadeias de caracteres. Se <paramref name="Compare" /> for omitido, a configuração <see langword="Option Compare" /> determinará o tipo de comparação.</param>
      <returns>If 
  InStr retorna 
 
                <paramref name="String1" /> terá tamanho zero ou <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> terá tamanho zero ou <see langword="Nothing" /> A posição inicial da pesquisa, cujo padrão é a posição do primeiro caractere.  

 
                <paramref name="String2" /> não for encontrado 
  0 
 
                <paramref name="String2" /> for encontrado em <paramref name="String1" /> Posição em que a correspondência começa</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna a posição da primeira ocorrência de uma cadeia de caracteres em outra, começando do lado direito da cadeia de caracteres.</summary>
      <param name="StringCheck">Necessário. Expressão de cadeia de caracteres pesquisada.</param>
      <param name="StringMatch">Necessário. Expressão de cadeia de caracteres pesquisada.</param>
      <param name="Start">Opcional. Expressão numérica que define a posição inicial baseada em um de cada pesquisa, começando do lado esquerdo da cadeia de caracteres. Se <paramref name="Start" /> for omitido, -1 será usado, o que significa que a pesquisa será iniciada na posição do último caractere. Pesquisa e continua da direita para a esquerda.</param>
      <param name="Compare">Opcional. Valor numérico que indica o tipo de comparação a ser usado ao avaliar subcadeias de caracteres. Se for omitido, será executada uma comparação binária. Consulte Configurações para obter os valores.</param>
      <returns>If 
  Retornos de InStrRev 
 
                <paramref name="StringCheck" /> tem comprimento zero 
  0 
 
                <paramref name="StringMatch" /> tem comprimento zero 
 
                <paramref name="Start" /><paramref name="StringMatch" /> não for encontrado 
  0 
 
                <paramref name="StringMatch" /> for encontrado em <paramref name="StringCheck" /> Posição na qual a primeira correspondência é encontrada, começando com o lado direito da cadeia de caracteres.  

 
                <paramref name="Start" /> é maior que o tamanho de <paramref name="StringMatch" /> 0</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 ou <paramref name="Start" /> &lt; -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</summary>
      <param name="SourceArray">Necessário. Matriz unidimensional que contém subcadeias a serem unidas.</param>
      <param name="Delimiter">Opcional. Qualquer cadeia de caracteres, usada para separar as subcadeias na cadeia de caracteres retornada. Se omitido, o caractere de espaço (" ") será usado. Se <paramref name="Delimiter" /> for uma cadeia de tamanho zero ("") ou <see langword="Nothing" />, todos os itens na lista serão concatenados sem delimitadores.</param>
      <returns>Uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> não é unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</summary>
      <param name="SourceArray">Necessário. Matriz unidimensional que contém subcadeias a serem unidas.</param>
      <param name="Delimiter">Opcional. Qualquer cadeia de caracteres, usada para separar as subcadeias na cadeia de caracteres retornada. Se omitido, o caractere de espaço (" ") será usado. Se <paramref name="Delimiter" /> for uma cadeia de tamanho zero ("") ou <see langword="Nothing" />, todos os itens na lista serão concatenados sem delimitadores.</param>
      <returns>Uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> não é unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</summary>
      <param name="Value">Necessário. Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</param>
      <returns>Uma cadeia de caracteres ou um caractere convertido em minúsculas.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</summary>
      <param name="Value">Necessário. Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</param>
      <returns>Uma cadeia de caracteres ou um caractere convertido em minúsculas.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Retorna uma cadeia de caracteres que contém um número especificado de caracteres do lado esquerdo de uma cadeia de caracteres.</summary>
      <param name="str">Necessário. Expressão <see langword="String" /> da qual os caracteres mais à esquerda são retornados.</param>
      <param name="Length">Necessário. Expressão <see langword="Integer" />. Expressão numérica que indica quantos caracteres serão retornados. Se for 0, uma cadeia de caracteres de tamanho zero ("") será retornada. Se for maior ou igual ao número de caracteres em <paramref name="str" />, a cadeia de caracteres inteira será retornada.</param>
      <returns>Uma cadeia de caracteres que contém um número especificado de caracteres do lado esquerdo de uma cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</summary>
      <param name="Expression">Qualquer expressão <see langword="String" /> válida ou nome variável. Caso <paramref name="Expression" /> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retorna o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</param>
      <returns>Um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Retorna uma cadeia de caracteres alinhada à esquerda que contém a cadeia especificada ajustada no tamanho especificado.</summary>
      <param name="Source">Necessário. Expressão <see langword="String" />. Nome da variável de cadeia de caracteres.</param>
      <param name="Length">Necessário. Expressão <see langword="Integer" />. Tamanho da cadeia de caracteres retornada.</param>
      <returns>Uma cadeia de caracteres alinhada à esquerda que contém a cadeia especificada ajustada no tamanho especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</summary>
      <param name="str">Necessário. Qualquer expressão <see langword="String" /> válida.</param>
      <returns>Uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Retorna uma cadeia de caracteres que consiste em todos os caracteres de uma posição especificada na cadeia de caracteres.</summary>
      <param name="str">Necessário. Expressão <see langword="String" /> da qual os caracteres são retornados.</param>
      <param name="Start">Necessário. Expressão <see langword="Integer" />. Posição inicial dos caracteres a serem retornados. Se <paramref name="Start" /> for maior que o número de caracteres em <paramref name="str" />, a função <see langword="Mid" /> retornará uma cadeia de comprimento zero (""). <paramref name="Start" /> é baseado em um.</param>
      <returns>Uma cadeia de caracteres que consiste em todos os caracteres da posição especificada na cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Retorna uma cadeia de caracteres que contém um número especificado de caracteres a partir de uma posição especificada em uma cadeia de caracteres.</summary>
      <param name="str">Necessário. Expressão <see langword="String" /> da qual os caracteres são retornados.</param>
      <param name="Start">Necessário. Expressão <see langword="Integer" />. Posição inicial dos caracteres a serem retornados. Se <paramref name="Start" /> for maior que o número de caracteres em <paramref name="str" />, a função <see langword="Mid" /> retornará uma cadeia de comprimento zero (""). <paramref name="Start" /> é baseado em um.</param>
      <param name="Length">Opcional. Expressão <see langword="Integer" />. O número de caracteres a serem retornados. Se for omitido ou se houver menos de <paramref name="Length" /> caracteres no texto (incluindo o caractere na posição <paramref name="Start" />), todos os caracteres da posição inicial até o final da cadeia de caracteres serão retornados.</param>
      <returns>Uma cadeia de caracteres que consiste no número especificado de caracteres a partir da posição especificada na cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna uma cadeia de caracteres na qual uma subcadeia de caracteres especificada foi substituída por outra subcadeia de caracteres um número especificado de vezes.</summary>
      <param name="Expression">Necessário. A expressão de cadeia de caracteres que contém a subcadeia de caracteres a ser substituída.</param>
      <param name="Find">Necessário. A subcadeia de caracteres que está sendo pesquisada.</param>
      <param name="Replacement">Necessário. Subcadeia de caracteres de substituição.</param>
      <param name="Start">Opcional. Posicione dentro da <paramref name="Expression" /> que inicia uma subcadeia de caracteres usada para a substituição. O valor retornado de <see langword="Replace" /> é uma cadeia de caracteres que começa em <paramref name="Start" />, com as substituições apropriadas. Caso omitido, 1 é pressuposto.</param>
      <param name="Count">Opcional. Número de substituições de subcadeias de caracteres a ser executado. Caso seja omitido, o valor padrão será -1, o que significa "realizar todas as substituições possíveis".</param>
      <param name="Compare">Opcional. Valor numérico que indica o tipo de comparação a ser usado ao avaliar subcadeias de caracteres. Consulte Configurações para obter os valores.</param>
      <returns>
        <see langword="Replace" /> retorna os seguintes valores.  
  If 
  A substituição retorna 
 <paramref name="Find" /> tem comprimento zero ou <see langword="Nothing" /> Cópia de <paramref name="Expression" /><paramref name="Replace" /> tem comprimento zero 
  Cópia de <paramref name="Expression" /> com nenhuma ocorrência de <paramref name="Find" /><paramref name="Expression" /> tem comprimento zero ou <see langword="Nothing" /> ou <paramref name="Start" /> é maior que o comprimento de <paramref name="Expression" /><see langword="Nothing" /><paramref name="Count" /> é 0 
  Cópia de <paramref name="Expression" /></returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 ou <paramref name="Start" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Retorna uma cadeia de caracteres que contém um número especificado de caracteres do lado direito de uma cadeia de caracteres.</summary>
      <param name="str">Necessário. Expressão <see langword="String" /> da qual os caracteres mais à direita são retornados.</param>
      <param name="Length">Necessário. <see langword="Integer" />. Expressão numérica que indica quantos caracteres serão retornados. Se for 0, uma cadeia de caracteres de tamanho zero ("") será retornada. Se for maior ou igual ao número de caracteres em <paramref name="str" />, a cadeia de caracteres inteira será retornada.</param>
      <returns>Uma cadeia de caracteres que contém um número especificado de caracteres do lado direito de uma cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Retorna uma cadeia de caracteres alinhada à direita que contém a cadeia especificada ajustada no tamanho especificado.</summary>
      <param name="Source">Necessário. Expressão <see langword="String" />. Nome da variável de cadeia de caracteres.</param>
      <param name="Length">Necessário. Expressão <see langword="Integer" />. Tamanho da cadeia de caracteres retornada.</param>
      <returns>Uma cadeia de caracteres alinhada à direita que contém a cadeia especificada ajustada no tamanho especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</summary>
      <param name="str">Necessário. Qualquer expressão <see langword="String" /> válida.</param>
      <returns>Uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Retorna uma cadeia de caracteres que consiste no número especificado de espaços.</summary>
      <param name="Number">Necessário. Expressão <see langword="Integer" />. O número de espaços desejado na cadeia de caracteres.</param>
      <returns>Uma cadeia de caracteres que consiste no número especificado de espaços.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna uma matriz unidimensional baseada em zero que contém um número especificado de subcadeias de caracteres.</summary>
      <param name="Expression">Necessário. Expressão <see langword="String" /> que contém subcadeias de caracteres e delimitadores.</param>
      <param name="Delimiter">Opcional. Qualquer caractere único usado para identificar limites de subcadeia de caracteres. Se <paramref name="Delimiter" /> for omitido, o caractere de espaço (" ") será considerado o delimitador.</param>
      <param name="Limit">Opcional. Número máximo de subcadeias de caracteres no qual a cadeia de caracteres de entrada deve ser dividida. O padrão, -1, indica que a cadeia de caracteres de entrada deve ser dividida em cada ocorrência da cadeia de caracteres <paramref name="Delimiter" />.</param>
      <param name="Compare">Opcional. Valor numérico que indica a comparação a ser usada ao avaliar subcadeias de caracteres. Consulte “Configurações” para obter os valores.</param>
      <returns>Matriz <see langword="String" />. Se <paramref name="Expression" /> for uma cadeia de caracteres de tamanho zero (""), <see langword="Split" /> retornará uma matriz de elemento único que contém uma cadeia de caracteres de tamanho zero. Se <paramref name="Delimiter" /> for uma cadeia de caracteres de tamanho zero ou se ela não for exibida em nenhum lugar em <paramref name="Expression" />, <see langword="Split" /> retornará uma matriz de elemento único que contém toda a cadeia de caracteres <paramref name="Expression" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retorna -1, 0 ou 1, com base no resultado de uma comparação de cadeia de caracteres.</summary>
      <param name="String1">Necessário. Qualquer expressão <see langword="String" /> válida.</param>
      <param name="String2">Necessário. Qualquer expressão <see langword="String" /> válida.</param>
      <param name="Compare">Opcional. Especifica o tipo de comparação de cadeias de caracteres. Se <paramref name="Compare" /> for omitido, a configuração <see langword="Option Compare" /> determinará o tipo de comparação.</param>
      <returns>A função <see langword="StrComp" /> tem os seguintes valores.  
  If 
  StrComp retorna 
 <paramref name="String1" /> classifica à frente de <paramref name="String2" /> -1 
 <paramref name="String1" /> é igual a <paramref name="String2" /> 0 
 <paramref name="String1" /> classifica após <paramref name="String2" /> 1</returns>
      <exception cref="T:System.ArgumentException">O valor <paramref name="Compare" /> não é válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Retorna uma cadeia de caracteres convertida, conforme especificado.</summary>
      <param name="str">Necessário. Expressão <see langword="String" /> a ser convertida.</param>
      <param name="Conversion">Necessário. Membro de <see cref="T:Microsoft.VisualBasic.VbStrConv" />. O valor de enumeração que especifica o tipo de conversão a ser executado.</param>
      <param name="LocaleID">Opcional. O valor <see langword="LocaleID" />, se for diferente do valor <see langword="LocaleID" /> do sistema. (O valor <see langword="LocaleID" /> do sistema é o padrão.)</param>
      <returns>Uma cadeia de caracteres convertida, conforme especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 ou &gt; 2048 sem suporte ou conversão sem suporte para a localidade especificada.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</summary>
      <param name="Number">Necessário. Expressão <see langword="Integer" />. O tamanho da cadeia de caracteres a ser retornado.</param>
      <param name="Character">Necessário. Qualquer expressão <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> válida. Somente o primeiro caractere da expressão será usado. Se Character for do tipo <see langword="Object" />, ele deverá conter um valor <see langword="Char" /> ou <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> é menor que 0 ou o tipo <paramref name="Character" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> é <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</summary>
      <param name="Number">Necessário. Expressão <see langword="Integer" />. O tamanho da cadeia de caracteres a ser retornado.</param>
      <param name="Character">Necessário. Qualquer expressão <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> válida. Somente o primeiro caractere da expressão será usado. Se Character for do tipo <see langword="Object" />, ele deverá conter um valor <see langword="Char" /> ou <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> é menor que 0 ou o tipo <paramref name="Character" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> é <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</summary>
      <param name="Number">Necessário. Expressão <see langword="Integer" />. O tamanho da cadeia de caracteres a ser retornado.</param>
      <param name="Character">Necessário. Qualquer expressão <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> válida. Somente o primeiro caractere da expressão será usado. Se Character for do tipo <see langword="Object" />, ele deverá conter um valor <see langword="Char" /> ou <see langword="String" />.</param>
      <returns>Uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> é menor que 0 ou o tipo <paramref name="Character" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> é <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Retorna uma cadeia de caracteres na qual a ordem dos caracteres de uma cadeia de caracteres especificada é invertida.</summary>
      <param name="Expression">Necessário. Expressão de cadeia de caracteres cujos caracteres serão invertidos. Se <paramref name="Expression" /> é uma cadeia de caracteres de tamanho zero (""), uma cadeia de caracteres de tamanho zero será retornada.</param>
      <returns>Uma cadeia de caracteres na qual a ordem dos caracteres de uma cadeia de caracteres especificada é invertida.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</summary>
      <param name="str">Necessário. Qualquer expressão <see langword="String" /> válida.</param>
      <returns>Uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</summary>
      <param name="Value">Necessário. Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</param>
      <returns>Uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</summary>
      <param name="Value">Necessário. Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</param>
      <returns>Uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>Esta classe dá suporte às funções <see langword="Print" /> e <see langword="PrintLine" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>Este campo dá suporte às funções <see langword="Print" /> e <see langword="PrintLine" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Indica um valor booliano ou se o padrão deve ser usado ao chamar funções de formatação numérica.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>Falso. O valor numérico deste membro é 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>Verdadeiro. O valor numérico deste membro é -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Configuração padrão. O valor numérico deste membro é -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Indica o tipo de um objeto variante, retornado pela função <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Matriz. Esse membro é equivalente à constante <see langword="vbArray" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
        <see langword="Boolean" />. (<see langword="True" /> ou <see langword="False" />.) Esse membro é equivalente à constante <see langword="vbBoolean" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
        <see langword="Byte" />. (0 a 255.) Esse membro é equivalente à constante <see langword="vbByte" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
        <see langword="Char" />. (0 a 65535.) Esse membro é equivalente à constante <see langword="vbChar" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Moeda. Esse membro é equivalente à constante <see langword="vbCurrency" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
        <see langword="Date" />. (0:00:00 em 1º de janeiro de 0001 a 23:59:59 em 31 de dezembro de 9999.) Esse membro é equivalente à constante <see langword="vbDate" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
        <see langword="Decimal" />. (0 a +/-79.228.162.514.264.337.593.543.950.335 sem vírgula decimal, 0 a +/-7,9228162514264337593543950335 com 28 casas à direita do decimal, o menor número diferente de zero é +/-0,0000000000000000000000000001.) Esse membro é equivalente à constante <see langword="vbDecimal" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
        <see langword="Double" />. (-1,79769313486231E+308 a -4,94065645841247E-324 para valores negativos, 4,94065645841247E-324 a 1,79769313486231E+308 para valores positivos.) Esse membro é equivalente à constante <see langword="vbDouble" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Referência nula. Esse membro é equivalente à constante <see langword="vbEmpty" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
        <see langword="Integer" />. (-2.147.483.648 a 2.147.483.647.) Esse membro é equivalente à constante <see langword="vbInteger" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
        <see langword="Long" />. (-9.223.372.036.854.775.808 a 9.223.372.036.854.775.807.) Esse membro é equivalente à constante <see langword="vbLong" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Objeto nulo. Esse membro é equivalente à constante <see langword="vbNull" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>É possível armazenar qualquer tipo em uma variável do tipo <see langword="Object" />. Esse membro é equivalente à constante <see langword="vbObject" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
        <see langword="Short" />. (-32.768 a 32.767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
        <see langword="Single" />. (-3,402823E+38 a -1,401298E-45 para valores negativos, 1,401298E-45 a 3,402823E+38 para valores positivos.) Esse membro é equivalente à constante <see langword="vbSingle" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
        <see langword="String" />. (0 a aproximadamente 2 bilhões de caracteres Unicode.) Esse membro é equivalente à constante <see langword="vbString" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>Tipo definido pelo usuário. Cada membro da estrutura tem um intervalo determinado pelo seu tipo de dados e independente dos intervalos dos outros membros. Esse membro é equivalente à constante <see langword="vbUserDefinedType" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
        <see langword="Variant" />. Esse membro é equivalente à constante <see langword="vbVariant" /> do Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Indica que uma matriz em uma estrutura ou variável não local deve ser tratada como uma matriz de tamanho fixo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Inicializa o valor da propriedade <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Inicializa o valor do campo superior, que representa o tamanho da primeira dimensão da matriz.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa o valor da propriedade <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Inicializa o valor do campo superior, que representa o tamanho da primeira dimensão da matriz.</param>
      <param name="UpperBound2">Inicializa o valor do campo superior, que representa o tamanho da segunda dimensão da matriz.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Retorna os limites de ocorrência da matriz.</summary>
      <returns>Contém uma matriz de inteiros que representa os limites da matriz.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Retorna o tamanho da matriz.</summary>
      <returns>Contém um inteiro que representa o número de elementos na matriz.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Indica que uma cadeia de caracteres deve ser tratada como se fosse de comprimento fixo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Inicializa o valor do campo <see langword="SizeConst" />.</summary>
      <param name="Length">O comprimento da cadeia de caracteres fixa.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Obtém o comprimento da cadeia de caracteres.</summary>
      <returns>O comprimento da cadeia de caracteres.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>O módulo <see langword="VbMath" /> contém procedimentos usados para executar operações matemáticas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Inicializa o gerador de número aleatório.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Inicializa o gerador de número aleatório.</summary>
      <param name="Number">Opcional. Um <see langword="Object" /> ou qualquer expressão numérica válida.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Retorna um número aleatório do tipo <see langword="Single" />.</summary>
      <returns>O próximo número aleatório na sequência.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Retorna um número aleatório do tipo <see langword="Single" />.</summary>
      <param name="Number">Opcional. Um valor <see langword="Single" /> ou uma expressão <see langword="Single" /> válida.</param>
      <returns>Se o número for menor que zero, Rnd sempre gerará o mesmo número, usando <paramref name="Number" /> como a semente. Se o número for maior que zero, Rnd gerará o próximo número aleatório na sequência. Se o número for igual a zero, Rnd gerará o número gerado mais recentemente. Se o número não for fornecido, Rnd gerará o próximo número aleatório na sequência.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Indica qual tipo de conversão executar ao chamar a função <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Converte os caracteres Katakana da cadeira de caracteres em caracteres Hiragana. Aplica-se somente ao Japão. Esse membro é equivalente à constante <see langword="vbHiragana" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Converte os caracteres Hiragana da cadeira de caracteres em caracteres Katakana. Aplica-se somente ao Japão. Esse membro é equivalente à constante <see langword="vbKatakana" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Converte a cadeia de caracteres das regras do sistema de arquivos de maiúsculas e minúsculas em regras linguísticas. Esse membro é equivalente à constante <see langword="vbLinguisticCasing" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Converte a cadeia de caracteres em caracteres minúsculos. Esse membro é equivalente à constante <see langword="vbLowerCase" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Converte os caracteres largos (dois bytes) da cadeia de caracteres em caracteres estreitos (um byte). Aplica-se a localidades asiáticas. Esse membro é equivalente à constante <see langword="vbNarrow" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>Não executa nenhuma conversão.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Converte a primeira letra de cada palavra da cadeia de caracteres em maiúscula. Esse membro é equivalente à constante <see langword="vbProperCase" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Converte a cadeia de caracteres em caracteres do chinês simplificado. Esse membro é equivalente à constante <see langword="vbSimplifiedChinese" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Converte a cadeia de caracteres em caracteres do chinês tradicional. Esse membro é equivalente à constante <see langword="vbTraditionalChinese" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Converte a cadeia de caracteres em caracteres maiúsculos. Esse membro é equivalente à constante <see langword="vbUpperCase" /> do Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Converte os caracteres estreitos (um byte) da cadeia de caracteres em caracteres largos (dois bytes). Aplica-se a localidades asiáticas. Esse membro é equivalente à constante <see langword="vbWide" /> do Visual Basic. A conversão poderá usar o Formulário de Normalização C mesmo se um caractere de entrada já for de largura inteira. Por exemplo, a cadeia de caracteres "は゛" (que já é de largura inteira) é normalizada para "ば". Consulte Formato de normalização Unicode.</summary>
    </member>
  </members>
</doc>