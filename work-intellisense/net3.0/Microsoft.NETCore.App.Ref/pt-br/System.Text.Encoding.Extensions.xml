<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.Encoding.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Text.ASCIIEncoding">
      <summary vsli:raw="Represents an ASCII character encoding of Unicode characters.">Representa uma codificação de caracteres ASCII de caracteres Unicode.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.ASCIIEncoding&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.ASCIIEncoding" />.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula o número de bytes produzidos ao codificar um conjunto de caracteres, começando no ponteiro de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula o número de bytes produzidos codificando um conjunto de caracteres da matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Calcula o número de bytes produzidos codificando o intervalo de caracteres especificado.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">O intervalo que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">O número de bytes produzidos pela codificação do intervalo de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcula o número de bytes produzidos codificando todos os caracteres no <see cref="T:System.String" /> especificado.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica um conjunto de caracteres começando no ponteiro de caractere especificado em uma sequência de bytes armazenados começando no ponteiro de byte especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Um ponteiro para o local no qual a gravação da sequência de bytes resultante deve ser iniciada.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">O número máximo de bytes a serem gravados.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no local indicado por <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" /> é menor que o número de bytes resultante.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica um conjunto de caracteres da matriz de caracteres especificada na matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Codifica o intervalo de caracteres especificado no intervalo de bytes especificado.</summary>
      <param name="chars" vsli:raw="The character span to encode.">O intervalo de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">O intervalo que deve conter o conjunto de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica um conjunto de caracteres do <see cref="T:System.String" /> especificado para a matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes começando no ponteiro de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes da matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Calcula o número de caracteres produzidos pela decodificação do intervalo de bytes especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">O intervalo que contém o conjunto de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">O número de caracteres produzidos pela decodificação do intervalo de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodifica uma sequência de bytes começando no ponteiro de byte especificado em um conjunto de caracteres armazenados começando no ponteiro de caractere especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Um ponteiro para o local no qual a gravação do conjunto de caracteres resultante deve ser iniciada.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">O número máximo de caracteres a serem gravados.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados no local indicado por <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.  

ou - 
<paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" /> é menor que o número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodifica uma sequência de bytes da matriz de bytes especificada na matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">A matriz de caracteres que deve conter o conjunto de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">O índice no qual será iniciada a gravação do conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.  

ou - 
<paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> é menor que zero.  

ou - 
<paramref name="byteindex" /> e <paramref name="byteCount" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> não é um índice válido em <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> não tem capacidade suficiente do <paramref name="charIndex" /> até o final da matriz para acomodar os caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Decodifica o intervalo de bytes especificado no intervalo de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">O intervalo que contém os bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">O intervalo que deve conter o conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Obtém um decodificador que converte uma sequência de bytes ASCII codificada em uma sequência de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Um <see cref="T:System.Text.Decoder" /> que converte uma sequência de bytes ASCII codificada em uma sequência de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Obtém um codificador que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em ASCII.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Um <see cref="T:System.Text.Encoder" /> que converte uma sequência de caracteres Unicode em uma sequência codificada de bytes ASCII.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula o número máximo de bytes produzidos pela codificação do número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">O número máximo de bytes produzidos pela codificação do número de caracteres especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula o número máximo de caracteres produzidos decodificando o número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">O número máximo de caracteres produzidos decodificando o número de bytes especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodifica um intervalo de bytes de uma matriz de bytes em uma cadeia de caracteres.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Um <see cref="T:System.String" /> que contém os resultados da decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Character Encoding in the .NET Framework para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.ASCIIEncoding.IsSingleByte">
      <summary vsli:raw="Gets a value indicating whether the current encoding uses single-byte code points.">Obtém um valor que indica se a codificação atual usa pontos de código de byte único.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;true&quot; /&gt;.">Essa propriedade é sempre <see langword="true" />.</returns>
    </member>
    <member name="T:System.Text.UnicodeEncoding">
      <summary vsli:raw="Represents a UTF-16 encoding of Unicode characters.">Representa uma codificação de caracteres Unicode UTF-16.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.UnicodeEncoding" />.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Inicializa uma nova instância da classe <see cref="T:System.Text.UnicodeEncoding" />. Os parâmetros especificam se é necessário usar a ordem de byte big endian e se o método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> retorna uma marca de ordem de byte Unicode.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar a ordem de byte big endian (byte mais significativo primeiro) ou <see langword="false" /> para usar a ordem de byte little endian (byte menos significativo primeiro).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> retorna uma marca de ordem de byte Unicode, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Inicializa uma nova instância da classe <see cref="T:System.Text.UnicodeEncoding" />. Os parâmetros especificam se é necessário usar a ordem de byte big endian, fornecer uma marca de ordem de byte Unicode e gerar uma exceção quando uma codificação inválida for detectada.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first); &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar a ordem de byte big endian (byte mais significativo primeiro); <see langword="false" /> para usar a ordem de byte little endian (byte menos significativo primeiro).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> retorna uma marca de ordem de byte Unicode, caso contrário, <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que uma exceção deverá ser gerada quando uma codificação inválida for detectada; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="F:System.Text.UnicodeEncoding.CharSize">
      <summary vsli:raw="Represents the Unicode character size in bytes. This field is a constant.">Representa o tamanho do caractere Unicode em bytes. Este campo é uma constante.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Text.UnicodeEncoding" /> atual.</summary>
      <param name="value" vsli:raw="The object to compare with the current object.">O objeto a ser comparado com o objeto atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> for uma instância de <see cref="T:System.Text.UnicodeEncoding" /> e for igual ao objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula o número de bytes produzidos ao codificar um conjunto de caracteres, começando no ponteiro de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula o número de bytes produzidos codificando um conjunto de caracteres da matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified string.">Calcula o número de bytes produzidos codificando os caracteres na cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string that contains the set of characters to encode.">A cadeia de caracteres que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="s" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica um conjunto de caracteres começando no ponteiro de caractere especificado em uma sequência de bytes armazenados começando no ponteiro de byte especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Um ponteiro para o local no qual a gravação da sequência de bytes resultante deve ser iniciada.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">O número máximo de bytes a serem gravados.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">O número real de bytes gravados no local indicado pelo parâmetro <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.  

ou - 
<paramref name="byteCount" /> é menor que o número de bytes resultante.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica um conjunto de caracteres da matriz de caracteres especificada na matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.  

ou - 
O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica um conjunto de caracteres do <see cref="T:System.String" /> especificado para a matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The string containing the set of characters to encode.">A cadeia de caracteres que contém o conjunto de caracteres a ser codificado.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">A detecção de erros está habilitada e <paramref name="s" /> contém uma sequência de caracteres inválida.  

ou - 
O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes começando no ponteiro de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes da matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodifica uma sequência de bytes começando no ponteiro de byte especificado em um conjunto de caracteres armazenados começando no ponteiro de caractere especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Um ponteiro para o local no qual a gravação do conjunto de caracteres resultante deve ser iniciada.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">O número máximo de caracteres a serem gravados.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by the &lt;paramref name=&quot;chars&quot; /&gt; parameter.">O número real de caracteres gravados no local indicado pelo parâmetro <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.  

ou - 
<paramref name="charCount" /> é menor que o número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodifica uma sequência de bytes da matriz de bytes especificada na matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">A matriz de caracteres que deve conter o conjunto de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">O índice no qual será iniciada a gravação do conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> é menor que zero.  

ou - 
<paramref name="byteindex" /> e <paramref name="byteCount" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> não é um índice válido em <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.  

ou - 
<paramref name="chars" /> não tem capacidade suficiente do <paramref name="charIndex" /> até o final da matriz para acomodar os caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Obtém um decodificador que converte uma sequência de bytes UTF-16 codificada em uma sequência de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Um <see cref="T:System.Text.Decoder" /> que converte uma sequência de bytes UTF-16 codificada em uma sequência de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Obtém um codificador que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-16.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Um objeto <see cref="T:System.Text.Encoder" /> que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-16.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Retorna o código hash para a instância atual.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">O código hash do objeto <see cref="T:System.Text.UnicodeEncoding" /> atual.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula o número máximo de bytes produzidos pela codificação do número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">O número máximo de bytes produzidos pela codificação do número de caracteres especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula o número máximo de caracteres produzidos decodificando o número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">O número máximo de caracteres produzidos decodificando o número de bytes especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.">Retorna uma marca de ordem de byte Unicode codificada no formato UTF-16 se o construtor dessa instância solicita uma marca de ordem de byte.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Uma matriz de bytes que contém a marca de ordem de byte Unicode se o objeto <see cref="T:System.Text.UnicodeEncoding" /> é configurado para fornecer uma. Caso contrário, esse método retorna uma matriz de bytes de tamanho zero.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodifica um intervalo de bytes de uma matriz de bytes em uma cadeia de caracteres.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the results of decoding the specified sequence of bytes.">Um objeto <see cref="T:System.String" /> que contém os resultados da decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.UnicodeEncoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-16 format, if this object is configured to supply one.">Obtém uma marca de ordem de byte Unicode codificada no formato UTF-16 caso o objeto de codificação esteja configurado para fornecer uma.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Um intervalo de bytes que contém a marca de ordem de byte Unicode, se esse objeto estiver configurado para fornecer um; caso contrário, o intervalo padrão.</returns>
    </member>
    <member name="T:System.Text.UTF32Encoding">
      <summary vsli:raw="Represents a UTF-32 encoding of Unicode characters.">Representa uma codificação de caracteres Unicode UTF-32.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF32Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UTF32Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF32Encoding" />. Os parâmetros especificam se é necessário usar a ordem de byte big endian e se o método <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> retorna uma marca de ordem de byte Unicode.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar a ordem de byte big endian (byte mais significativo primeiro) ou <see langword="false" /> para usar a ordem de byte little endian (byte menos significativo primeiro).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que uma marca de ordem de byte Unicode é fornecida, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF32Encoding" />. Os parâmetros especificam se é necessário usar a ordem de byte big endian, fornecer uma marca de ordem de byte Unicode e gerar uma exceção quando uma codificação inválida for detectada.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar a ordem de byte big endian (byte mais significativo primeiro) ou <see langword="false" /> para usar a ordem de byte little endian (byte menos significativo primeiro).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que uma marca de ordem de byte Unicode é fornecida, caso contrário, <see langword="false" />.</param>
      <param name="throwOnInvalidCharacters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que uma exceção deverá ser gerada quando uma codificação inválida for detectada; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Text.UTF32Encoding" /> atual.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current object.">O <see cref="T:System.Object" /> a ser comparado com o objeto atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> for uma instância de <see cref="T:System.Text.UTF32Encoding" /> e for igual ao objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula o número de bytes produzidos ao codificar um conjunto de caracteres, começando no ponteiro de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula o número de bytes produzidos codificando um conjunto de caracteres da matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcula o número de bytes produzidos codificando todos os caracteres no <see cref="T:System.String" /> especificado.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="s" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica um conjunto de caracteres começando no ponteiro de caractere especificado em uma sequência de bytes armazenados começando no ponteiro de byte especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Um ponteiro para o local no qual a gravação da sequência de bytes resultante deve ser iniciada.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">O número máximo de bytes a serem gravados.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">O número real de bytes gravados no local indicado pelo parâmetro <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.  

ou - 
<paramref name="byteCount" /> é menor que o número de bytes resultante.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica um conjunto de caracteres da matriz de caracteres especificada na matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.  

ou - 
O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica um conjunto de caracteres do <see cref="T:System.String" /> especificado para a matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">A detecção de erros está habilitada e <paramref name="s" /> contém uma sequência de caracteres inválida.  

ou - 
O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes começando no ponteiro de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes da matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodifica uma sequência de bytes começando no ponteiro de byte especificado em um conjunto de caracteres armazenados começando no ponteiro de caractere especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Um ponteiro para o local no qual a gravação do conjunto de caracteres resultante deve ser iniciada.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">O número máximo de caracteres a serem gravados.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados no local indicado por <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.  

ou - 
<paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.  

ou - 
<paramref name="charCount" /> é menor que o número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodifica uma sequência de bytes da matriz de bytes especificada na matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">A matriz de caracteres que deve conter o conjunto de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">O índice no qual será iniciada a gravação do conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.  

ou - 
<paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> é menor que zero.  

ou - 
<paramref name="byteindex" /> e <paramref name="byteCount" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> não é um índice válido em <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.  

ou - 
<paramref name="chars" /> não tem capacidade suficiente do <paramref name="charIndex" /> até o final da matriz para acomodar os caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Obtém um decodificador que converte uma sequência de bytes codificada em UTF-32 em uma sequência de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Um <see cref="T:System.Text.Decoder" /> que converte uma sequência de bytes codificada em UTF-32 em uma sequência de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Obtém um codificador que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-32.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Um <see cref="T:System.Text.Encoder" /> que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-32.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Retorna o código hash para a instância atual.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">O código hash do objeto <see cref="T:System.Text.UTF32Encoding" /> atual.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula o número máximo de bytes produzidos pela codificação do número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">O número máximo de bytes produzidos pela codificação do número de caracteres especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula o número máximo de caracteres produzidos decodificando o número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">O número máximo de caracteres produzidos decodificando o número de bytes especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-32 format, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one.">Retornará uma marca de ordem de byte Unicode codificada no formato UTF-32, se o objeto de codificação <see cref="T:System.Text.UTF32Encoding" /> for configurado para fornecer uma.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Uma matriz de bytes que contém a marca de ordem de byte Unicode se o objeto <see cref="T:System.Text.UTF32Encoding" /> é configurado para fornecer uma. Caso contrário, esse método retorna uma matriz de bytes de tamanho zero.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodifica um intervalo de bytes de uma matriz de bytes em uma cadeia de caracteres.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="A string that contains the results of decoding the specified sequence of bytes.">Uma cadeia de caracteres que contém os resultados da decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.UTF32Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-32 format, if this object is configured to supply one.">Obtém uma marca de ordem de byte Unicode codificada no formato UTF-32 caso o objeto de codificação esteja configurado para fornecer uma.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, a default span.">Um intervalo de bytes que contém a marca de ordem de byte Unicode, se esse objeto estiver configurado para fornecer um; caso contrário, um Span padrão.</returns>
    </member>
    <member name="T:System.Text.UTF7Encoding">
      <summary vsli:raw="Represents a UTF-7 encoding of Unicode characters.">Representa uma codificação de caracteres Unicode UTF-7.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF7Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class. A parameter specifies whether to allow optional characters.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF7Encoding" />. Um parâmetro especifica se devem ser permitidos caracteres opcionais.</summary>
      <param name="allowOptionals" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that optional characters are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que são permitidos caracteres opcionais, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF7Encoding.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Obtém um valor que indica se o objeto especificado é igual ao objeto <see cref="T:System.Text.UTF7Encoding" /> atual.</summary>
      <param name="value" vsli:raw="An object to compare to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Um objeto a ser comparado com o objeto <see cref="T:System.Text.UTF7Encoding" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is a &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object and is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> for um objeto <see cref="T:System.Text.UTF7Encoding" /> e for igual ao objeto <see cref="T:System.Text.UTF7Encoding" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula o número de bytes produzidos ao codificar um conjunto de caracteres, começando no ponteiro de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic .NET).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" /> no Visual Basic .NET).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> é menor que zero.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula o número de bytes produzidos codificando um conjunto de caracteres da matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Calcula o número de bytes produzidos codificando todos os caracteres no objeto <see cref="T:System.String" /> especificado.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the set of characters to encode.">O objeto <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an int.">Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica um conjunto de caracteres começando no ponteiro de caractere especificado em uma sequência de bytes armazenados começando no ponteiro de byte especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Um ponteiro para o local no qual a gravação da sequência de bytes resultante deve ser iniciada.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">O número máximo de bytes a serem gravados.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no local indicado por <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" /> é menor que o número de bytes resultante.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica um conjunto de caracteres da matriz de caracteres especificada na matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica um conjunto de caracteres do <see cref="T:System.String" /> especificado para a matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes começando no ponteiro de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> é menor que zero.  

ou - 
Número excessivo de caracteres. O número de caracteres resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes da matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
Número excessivo de caracteres. O número de caracteres resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodifica uma sequência de bytes começando no ponteiro de byte especificado em um conjunto de caracteres armazenados começando no ponteiro de caractere especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Um ponteiro para o local no qual a gravação do conjunto de caracteres resultante deve ser iniciada.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">O número máximo de caracteres a serem gravados.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados no local indicado por <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" /> é menor que o número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodifica uma sequência de bytes da matriz de bytes especificada na matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">A matriz de caracteres que deve conter o conjunto de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">O índice no qual será iniciada a gravação do conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> é menor que zero.  

ou - 
<paramref name="byteindex" /> e <paramref name="byteCount" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> não é um índice válido em <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> não tem capacidade suficiente do <paramref name="charIndex" /> até o final da matriz para acomodar os caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Obtém um decodificador que converte uma sequência de bytes codificada em UTF-7 em uma sequência de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Um <see cref="T:System.Text.Decoder" /> que converte uma sequência codificada em UTF-7 de bytes em uma sequência de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Obtém um codificador que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-7.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Um <see cref="T:System.Text.Encoder" /> que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-7.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Retorna o código hash para o objeto <see cref="T:System.Text.UTF7Encoding" /> atual.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula o número máximo de bytes produzidos pela codificação do número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">O número máximo de bytes produzidos pela codificação do número de caracteres especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="charCount" /> é menor que zero.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula o número máximo de caracteres produzidos decodificando o número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">O número máximo de caracteres produzidos decodificando o número de bytes especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="byteCount" /> é menor que zero.  

ou - 
Número excessivo de caracteres. O número de caracteres resultante é maior que o número máximo que pode ser retornado como um int.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodifica um intervalo de bytes de uma matriz de bytes em uma cadeia de caracteres.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Um <see cref="T:System.String" /> que contém os resultados da decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> é <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET Framework para obter uma explicação mais completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="T:System.Text.UTF8Encoding">
      <summary vsli:raw="Represents a UTF-8 encoding of Unicode characters.">Representa uma codificação de caracteres Unicode UTF-8.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF8Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. A parameter specifies whether to provide a Unicode byte order mark.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF8Encoding" />. Um parâmetro especifica se deve ser fornecida uma marca de ordem de byte Unicode.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o método <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> retorna uma marca de ordem de byte Unicode, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.">Inicializa uma nova instância da classe <see cref="T:System.Text.UTF8Encoding" />. Os parâmetros especificam se uma marca de ordem de byte Unicode será fornecida e se uma exceção será gerada quando uma codificação inválida for detectada.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method should return a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o método <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> deve retornar uma marca de ordem de byte Unicode; caso contrário, <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gerar uma exceção quando uma codificação inválida é detectada; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; object.">Determina se o objeto especificado é igual ao objeto <see cref="T:System.Text.UTF8Encoding" /> atual.</summary>
      <param name="value" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> for uma instância de <see cref="T:System.Text.UTF8Encoding" /> e for igual ao objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula o número de bytes produzidos ao codificar um conjunto de caracteres, começando no ponteiro de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula o número de bytes produzidos codificando um conjunto de caracteres da matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="count" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
Número excessivo de caracteres. O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; property is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
A propriedade <see cref="P:System.Text.Encoding.EncoderFallback" /> é definida como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Calcula o número de bytes produzidos codificando o intervalo de caracteres especificado.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">O intervalo que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">O número de bytes produzidos pela codificação do intervalo de caracteres especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcula o número de bytes produzidos codificando todos os caracteres no <see cref="T:System.String" /> especificado.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">O número de bytes produzidos por codificação de caracteres especificados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica um conjunto de caracteres começando no ponteiro de caractere especificado em uma sequência de bytes armazenados começando no ponteiro de byte especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Um ponteiro para o primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Um ponteiro para o local no qual a gravação da sequência de bytes resultante deve ser iniciada.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">O número máximo de bytes a serem gravados.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no local indicado por <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.  

ou - 
<paramref name="byteCount" /> é menor que o número de bytes resultante.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica um conjunto de caracteres da matriz de caracteres especificada na matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">A matriz de caracteres que contém o conjunto de caracteres a serem codificados.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">A detecção de erros está habilitada e <paramref name="chars" /> contém uma sequência de caracteres inválida.  

ou - 
O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Codifica o intervalo de caracteres especificado no intervalo de bytes especificado.</summary>
      <param name="chars" vsli:raw="The character span to encode.">O intervalo de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">O intervalo que deve conter o conjunto de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica um conjunto de caracteres do <see cref="T:System.String" /> especificado para a matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">O <see cref="T:System.String" /> que contém o conjunto de caracteres a ser codificado.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">O índice do primeiro caractere a ser codificado.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">A matriz de bytes que conterá a sequência de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">O índice no qual será iniciada a gravação da sequência de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">O número real de bytes gravados no <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> é <see langword="null" />.  

ou - 
<paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> é menor que zero.  

ou - 
<paramref name="charIndex" /> e <paramref name="charCount" /> não denotam um intervalo válido em <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> não é um índice válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">A detecção de erros está habilitada e <paramref name="s" /> contém uma sequência de caracteres inválida.  

ou - 
O <paramref name="bytes" /> não tem capacidade suficiente do <paramref name="byteIndex" /> ao final da matriz para acomodar os bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes começando no ponteiro de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula o número de caracteres produzidos pela decodificação de uma sequência de bytes da matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">O número de caracteres produzido pela decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Calcula o número de caracteres produzidos pela decodificação do intervalo de bytes especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">O intervalo que contém o conjunto de bytes a serem decodificados.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">O número de caracteres produzidos pela decodificação do intervalo de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodifica uma sequência de bytes começando no ponteiro de byte especificado em um conjunto de caracteres armazenados começando no ponteiro de caractere especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Um ponteiro do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Um ponteiro para o local no qual a gravação do conjunto de caracteres resultante deve ser iniciada.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">O número máximo de caracteres a serem gravados.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados no local indicado por <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.  

ou - 
<paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.  

ou - 
<paramref name="charCount" /> é menor que o número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodifica uma sequência de bytes da matriz de bytes especificada na matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">A matriz de caracteres que deve conter o conjunto de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">O índice no qual será iniciada a gravação do conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.  

ou - 
<paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> é menor que zero.  

ou - 
<paramref name="byteindex" /> e <paramref name="byteCount" /> não denotam um intervalo válido em <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> não é um índice válido em <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.  

ou - 
<paramref name="chars" /> não tem capacidade suficiente do <paramref name="charIndex" /> até o final da matriz para acomodar os caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Decodifica o intervalo de bytes especificado no intervalo de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">O intervalo que contém os bytes a serem decodificados.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">O intervalo que deve conter o conjunto de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">O número real de caracteres gravados em <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Obtém um decodificador que converte uma sequência de bytes codificados em UTF-8 em uma sequência de caracteres Unicode.</summary>
      <returns vsli:raw="A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Um decodificador que converte uma sequência de bytes codificados em UTF-8 em uma sequência de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Obtém um codificador que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-8.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Um <see cref="T:System.Text.Encoder" /> que converte uma sequência de caracteres Unicode em uma sequência de bytes codificada em UTF-8.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Retorna o código hash para a instância atual.</summary>
      <returns vsli:raw="The hash code for the current instance.">O código hash da instância atual.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula o número máximo de bytes produzidos pela codificação do número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">O número de caracteres a ser codificado.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">O número máximo de bytes produzidos pela codificação do número de caracteres especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> é definido como <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula o número máximo de caracteres produzidos decodificando o número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">O número máximo de caracteres produzidos decodificando o número de bytes especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> é menor que zero.  

ou - 
O número de bytes resultante é maior que o número máximo que pode ser retornado como um inteiro.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-8 format, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one.">Retorna uma marca de ordem de byte Unicode codificada no formato UTF-8, se o objeto de codificação <see cref="T:System.Text.UTF8Encoding" /> é configurado para fornecer um.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Uma matriz de bytes que contém a marca de ordem de byte Unicode, se o objeto de codificação <see cref="T:System.Text.UTF8Encoding" /> é configurado para fornecer um. Caso contrário, esse método retorna uma matriz de bytes de tamanho zero.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodifica um intervalo de bytes de uma matriz de bytes em uma cadeia de caracteres.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">A matriz de bytes que contém a sequência de bytes a ser decodificada.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">O índice do primeiro byte a ser decodificado.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">O número de bytes a serem decodificados.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Um <see cref="T:System.String" /> que contém os resultados da decodificação da sequência de bytes especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
<paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">A detecção de erros está habilitada e <paramref name="bytes" /> contém uma sequência de bytes inválida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Ocorreu um fallback (consulte Codificação de caracteres no .NET para obter uma explicação completa) 
-e- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> é definido como <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.UTF8Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-8 format, if this object is configured to supply one.">Obtém uma marca de ordem de byte Unicode codificada no formato UTF-8 caso o objeto de codificação esteja configurado para fornecer uma.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Um intervalo de bytes que contém a marca de ordem de byte Unicode, se esse objeto estiver configurado para fornecer um; caso contrário, o intervalo padrão.</returns>
    </member>
  </members>
</doc>