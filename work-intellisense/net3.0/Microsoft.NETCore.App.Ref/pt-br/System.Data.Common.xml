<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Determina a ação que ocorre quando o método <see cref="M:System.Data.DataSet.AcceptChanges" /> ou <see cref="M:System.Data.DataTable.RejectChanges" /> é invocado em um <see cref="T:System.Data.DataTable" /> com um <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>As alterações são colocadas em cascata na relação.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>Nenhuma ação ocorre (padrão).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Fornece uma descrição dos resultados da consulta e seu efeito sobre o banco de dados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>Quando o comando é executado, o objeto <see langword="Connection" /> associado é fechado quando o objeto <see langword="DataReader" /> associado é fechado.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>A consulta pode retornar vários conjuntos de resultados. A execução da consulta pode afetar o estado do banco de dados. <see langword="Default" /> não define sinalizadores <see cref="T:System.Data.CommandBehavior" /> e, portanto, chamar <see langword="ExecuteReader(CommandBehavior.Default)" /> é funcionalmente equivalente a chamar <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>A consulta retorna informações da coluna e da chave primária. O provedor acrescenta colunas extras ao conjunto de resultados das colunas de chave primária e carimbo de data/hora existentes.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>A consulta retorna somente informações de coluna. Ao usar o <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, o Provedor de Dados .NET Framework para SQL Server precede a instrução executada com SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Fornece uma maneira para que o <see langword="DataReader" /> manipule linhas que contêm colunas com valores binários grandes. Em vez de carregar a linha inteira, <see langword="SequentialAccess" /> permite que o <see langword="DataReader" /> carregue os dados como um fluxo. Use o método <see langword="GetBytes" /> ou <see langword="GetChars" /> para especificar um local de bytes para iniciar a operação de leitura e um tamanho do buffer limitado para os dados retornados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>A consulta retorna um único conjunto de resultados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>A consulta deve retornar uma única linha do primeiro conjunto de resultados. A execução da consulta pode afetar o estado do banco de dados. Alguns provedores de dados .NET Framework podem, mas não precisam, usar essas informações para otimizar o desempenho do comando. Ao especificar <see cref="F:System.Data.CommandBehavior.SingleRow" /> com o método <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> do objeto <see cref="T:System.Data.OleDb.OleDbCommand" />, o Provedor de Dados .NET Framework para OLE DB executará a associação usando a interface <see langword="IRow" /> do OLE DB, se ela estiver disponível. Caso contrário, ele usará a interface <see langword="IRowset" />. Se a instrução SQL dever retornar apenas uma única linha, especificar <see cref="F:System.Data.CommandBehavior.SingleRow" /> também poderá melhorar o desempenho do aplicativo. É possível especificar <see langword="SingleRow" /> ao executar consultas que devem retornar conjuntos de vários resultados.  Nesse caso, em que uma consulta SQL de conjunto de vários resultados e uma única linha são especificadas, o resultado retornado conterá apenas a primeira linha do primeiro conjunto de resultados. Os outros conjuntos de resultados da consulta não serão retornados.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Especifica como uma cadeia de caracteres de comando é interpretada.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>O nome de um procedimento armazenado.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>O nome de uma tabela.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>Um comando de texto SQL. (Padrão.)</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Indica a posição do nome do catálogo num nome de tabela qualificado num comando de texto.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Indica que a posição do nome do catálogo ocorre após a parte do esquema de um nome de tabela totalmente qualificado em um comando de texto. <c>End</c> e <c>Start</c> são mutuamente exclusivos.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Indica que a posição do nome do catálogo ocorre antes da parte do esquema de um nome de tabela totalmente qualificado em um comando de texto. <c>Start</c> e <c>End</c> são mutuamente exclusivos.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Representa um conjunto de comandos SQL e uma conexão de banco de dados que são usados para preencher o <see cref="T:System.Data.DataSet" /> e atualizar a fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataAdapter" /> de um objeto existente do mesmo tipo.</summary>
      <param name="from">Um objeto <see cref="T:System.Data.Common.DataAdapter" /> usado para criar o novo <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Obtém ou define um valor que indica se <see cref="M:System.Data.DataRow.AcceptChanges" /> é chamado em um <see cref="T:System.Data.DataRow" /> após ter sido adicionado ao <see cref="T:System.Data.DataTable" /> durante alguma das operações de Preenchimento.</summary>
      <returns>
        <see langword="true" /> se <see cref="M:System.Data.DataRow.AcceptChanges" /> for chamado no <see cref="T:System.Data.DataRow" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Obtém ou define se <see cref="M:System.Data.DataRow.AcceptChanges" /> é chamado durante um <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see langword="true" /> se <see cref="M:System.Data.DataRow.AcceptChanges" /> é chamado durante um <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Cria uma cópia dessa instância do <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>A instância clonada de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Obtém ou define um valor que especifica se uma exceção deve ser gerada quando for encontrado um erro durante uma atualização de linha.</summary>
      <returns>
        <see langword="true" /> para continuar a atualização sem gerar uma exceção; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Cria um novo <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Uma nova coleção de mapeamento de tabela.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DataAdapter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" /> para correspondência na fonte de dados.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> para preencher com registros.</param>
      <param name="srcTable">Uma cadeia de caracteres que indica o nome da tabela de origem.</param>
      <param name="dataReader">Uma instância de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">O índice baseado em zero do registro inicial.</param>
      <param name="maxRecords">Um inteiro que indica o número máximo de registros.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Adiciona ou atualiza linhas no <see cref="T:System.Data.DataTable" /> para corresponder àquelas na fonte de dados usando o nome <see cref="T:System.Data.DataTable" /> e o <see cref="T:System.Data.IDataReader" /> especificado.</summary>
      <param name="dataTable">Um <see cref="T:System.Data.DataTable" /> para preencher com registros.</param>
      <param name="dataReader">Uma instância de <see cref="T:System.Data.IDataReader" />.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Adiciona ou atualiza as linhas em um intervalo especificado na coleção de objetos <see cref="T:System.Data.DataTable" /> para corresponder àquelas na fonte de dados.</summary>
      <param name="dataTables">Uma coleção de objetos <see cref="T:System.Data.DataTable" /> a serem preenchidos com registros.</param>
      <param name="dataReader">Uma instância de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">O índice baseado em zero do registro inicial.</param>
      <param name="maxRecords">Um inteiro que indica o número máximo de registros.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>É retornado quando ocorre um erro durante uma operação de preenchimento.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Obtém ou define o <see cref="T:System.Data.LoadOption" /> que determina como o adaptador preenche o <see cref="T:System.Data.DataTable" /> do <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Um valor <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder à fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Um objeto <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataTable" /> a ser preenchido do <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <param name="dataReader">O <see cref="T:System.Data.IDataReader" /> a ser usado como a fonte de dados durante o preenchimento de <see cref="T:System.Data.DataTable" />.</param>
      <returns>Uma referência a uma coleção de objetos <see cref="T:System.Data.DataTable" /> que foram adicionados ao <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> a ser preenchido do <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader">O <see cref="T:System.Data.IDataReader" /> a ser usado como a fonte de dados durante o preenchimento de <see cref="T:System.Data.DataTable" />.</param>
      <returns>Um objeto <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contém os parâmetros definidos pelo usuário.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Indica se um <see cref="T:System.Data.Common.DataTableMappingCollection" /> foi criado.</summary>
      <returns>
        <see langword="true" /> se um <see cref="T:System.Data.Common.DataTableMappingCollection" /> tiver sido criado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Determina a ação a ser tomada quando os dados de entrada não têm uma tabela ou coluna correspondente.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.MissingMappingAction" />. O padrão é <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException">O valor definido não é um dos valores <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Determina a ação a ser tomada quando o esquema <see cref="T:System.Data.DataSet" /> existente não coincide com os dados de entrada.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />. O padrão é <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException">O valor definido não é um dos valores <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Chamado quando ocorre um erro durante um <see langword="Fill" />.</summary>
      <param name="value">Um objeto <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Redefine <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> para seu estado padrão e faz com que <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> honre <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Obtém ou define se o método <see langword="Fill" /> deve retornar valores específicos ao provedor ou valores comuns em conformidade com CLS.</summary>
      <returns>
        <see langword="true" /> se o método <see langword="Fill" /> precisar retornar valores específicos ao provedor; caso contrário, <see langword="false" /> para retornar valores comuns em conformidade com CLS.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Determina se a propriedade <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> deve ser persistida.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> for persistida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Determina se a propriedade <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> deve ser persistida.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> for persistida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Determina se um ou mais objetos <see cref="T:System.Data.Common.DataTableMapping" /> existem e se devem ser persistidos.</summary>
      <returns>
        <see langword="true" /> se existirem um ou mais objetos <see cref="T:System.Data.Common.DataTableMapping" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Indica como uma tabela de origem é mapeada para uma tabela de conjunto de dados.</summary>
      <returns>Uma coleção que fornece o mapeamento mestre entre os registros retornados e o <see cref="T:System.Data.DataSet" />. O valor padrão é uma coleção vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Obtém uma coleção que fornece o mapeamento mestre entre uma tabela de origem e um <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Uma coleção que fornece o mapeamento mestre entre os registros retornados e o <see cref="T:System.Data.DataSet" />. O valor padrão é uma coleção vazia.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Chama as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> especificado em um <see cref="T:System.Data.DataTable" /> denominado “Tabela.”</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> usado para atualizar a fonte de dados.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Contém um mapeamento de coluna genérico para um objeto que herda de <see cref="T:System.Data.Common.DataAdapter" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado e o nome de coluna <see cref="T:System.Data.DataSet" /> para o qual mapear.</summary>
      <param name="sourceColumn">O nome da coluna que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetColumn">O nome da coluna, que não diferencia maiúsculas de minúsculas, de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Obtém ou define o nome da coluna dentro de <see cref="T:System.Data.DataSet" /> para o qual mapear.</summary>
      <returns>O nome da coluna dentro do para <see cref="T:System.Data.DataSet" /> o qual mapear. O nome não diferencia maiúsculas de minúsculas.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Obtém um <see cref="T:System.Data.DataColumn" /> do <see cref="T:System.Data.DataTable" /> especificado usando <see cref="T:System.Data.MissingSchemaAction" /> e a propriedade <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> do qual obter a coluna.</param>
      <param name="dataType">O <see cref="T:System.Type" /> da coluna de dados.</param>
      <param name="schemaAction">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Uma coluna de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Uma versão estática do <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> que pode ser chamado sem instanciar um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn">O nome da coluna que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetColumn">O nome da coluna, que não diferencia maiúsculas de minúsculas, de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
      <param name="dataTable">Uma instância de <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">O tipo de dados da coluna que está sendo mapeada.</param>
      <param name="schemaAction">Determina a ação a ser tomada quando o esquema <see cref="T:System.Data.DataSet" /> existente não coincide com os dados de entrada.</param>
      <returns>Um objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Obtém ou define o nome da coluna na fonte de dados da qual mapear. O nome diferencia maiúsculas de minúsculas.</summary>
      <returns>O nome que diferencia maiúsculas de minúsculas da coluna na fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns>Uma cópia do objeto atual.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Converte o nome <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> atual para uma cadeia de caracteres.</summary>
      <returns>O nome <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> atual como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Contém uma coleção de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> .</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Cria um <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vazio.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Adiciona um objeto de <see cref="T:System.Data.Common.DataColumnMapping" /> à coleção.</summary>
      <param name="value">Um objeto <see langword="DataColumnMapping" /> a ser adicionado à coleção.</param>
      <returns>O índice do objeto <see langword="DataColumnMapping" /> que foi adicionado à coleção.</returns>
      <exception cref="T:System.InvalidCastException">O objeto transmitido não era um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Adiciona um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> à coleção quando é atribuído um nome de coluna de origem e um nome da coluna <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn">O nome que diferencia maiúsculas de minúsculas da coluna de origem para a qual mapear.</param>
      <param name="dataSetColumn">O nome, que não diferencia maiúsculas de minúsculas, de uma coluna <see cref="T:System.Data.DataSet" /> para a qual mapear.</param>
      <returns>O objeto <see langword="DataColumnMapping" /> que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Copia os elementos da <see cref="T:System.Array" /> especificada para o fim da coleção.</summary>
      <param name="values">O <see cref="T:System.Array" /> a adicionar à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada para o fim da coleção.</summary>
      <param name="values">A matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Remove todos os objetos <see cref="T:System.Data.Common.DataColumnMapping" /> da coleção.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o <see cref="T:System.Object" /> especificado existe na coleção.</summary>
      <param name="value">Um <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>
        <see langword="true" /> se a coleção contiver o objeto <see cref="T:System.Data.Common.DataColumnMapping" />, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException">O objeto transmitido não era um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com nome de coluna de origem especificado existe na coleção.</summary>
      <param name="value">O nome da coluna de origem que diferencia maiúsculas de minúsculas do objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>
        <see langword="true" /> se a coleção contiver um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos da <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para a matriz especificada.</summary>
      <param name="array">Um <see cref="T:System.Array" /> para o qual copiar elementos <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">O índice inicial da matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Copia os elementos da <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para a matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada.</summary>
      <param name="array">Uma matriz <see cref="T:System.Data.Common.DataColumnMapping" /> para a qual copiar os elementos <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">O índice de base zero na <paramref name="array" /> em que a cópia começa.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Obtém o número de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> na coleção.</summary>
      <returns>Número de itens na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="value">O nome, que não diferencia maiúsculas de minúsculas, de uma coluna <see cref="T:System.Data.DataSet" /> a ser localizada.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Obtém um <see cref="T:System.Data.Common.DataColumnMapping" /> especificado <see cref="T:System.Data.Common.DataColumnMappingCollection" />, nome da coluna de origem e <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings">O <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">O nome da coluna de origem que diferencia maiúsculas de minúsculas a ser localizado.</param>
      <param name="mappingAction">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="mappingAction" /> foi definido como <see langword="Error" /> e nenhum mapeamento foi especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Um método estático que retorna um objeto <see cref="T:System.Data.DataColumn" /> sem instanciar um objeto <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings">O <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">O nome da coluna que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataType">O tipo de dados da coluna que está sendo mapeada.</param>
      <param name="dataTable">Uma instância de <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Determina a ação a ser tomada quando o esquema <see cref="T:System.Data.DataSet" /> existente não coincide com os dados de entrada.</param>
      <returns>Um objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Obtém um enumerador que pode iterar por meio da coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Obtém o local do <see cref="T:System.Object" /> especificado que é um <see cref="T:System.Data.Common.DataColumnMapping" /> na coleção.</summary>
      <param name="value">Um <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataColumnMapping" /> a ser localizado.</param>
      <returns>O local com base em zero do <see cref="T:System.Object" /> especificado que é um <see cref="T:System.Data.Common.DataColumnMapping" /> na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Obtém o local do <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome da coluna de origem especificado.</summary>
      <param name="sourceColumn">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns>O local com base em zero do <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome da coluna de origem especificado que diferencia maiúsculas de minúsculas.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Obtém o local do <see cref="T:System.Data.Common.DataColumnMapping" /> especificado com o nome de coluna <see cref="T:System.Data.DataSet" /> determinado.</summary>
      <param name="dataSetColumn">O nome, que não diferencia maiúsculas de minúsculas, da coluna do conjunto de dados a ser localizada.</param>
      <returns>O local com base em zero do <see cref="T:System.Data.Common.DataColumnMapping" /> especificado com o nome de coluna <see langword="DataSet" /> especificado ou -1 se o objeto <see langword="DataColumnMapping" /> não existir na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Insere um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no <see cref="T:System.Data.Common.DataColumnMappingCollection" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser inserido.</param>
      <param name="value">O objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Insere um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no <see cref="T:System.Data.Common.DataColumnMappingCollection" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser inserido.</param>
      <param name="value">O objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser localizado.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado.</summary>
      <param name="sourceColumn">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns>O <see cref="T:System.Data.Common.DataColumnMapping" /> objeto com o nome de coluna de origem especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Remove o <see cref="T:System.Data.Common.DataColumnMapping" /> especificado da coleção.</summary>
      <param name="value">O <see cref="T:System.Data.Common.DataColumnMapping" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Remove o <see cref="T:System.Object" /> que é um <see cref="T:System.Data.Common.DataColumnMapping" /> da coleção.</summary>
      <param name="value">O <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataColumnMapping" /> a ser removido.</param>
      <exception cref="T:System.InvalidCastException">O objeto especificado não era um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException">O objeto especificado não está na coleção.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o índice especificado da coleção.</summary>
      <param name="index">O índice de base zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser removido.</param>
      <exception cref="T:System.IndexOutOfRangeException">Não há nenhum objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado da coleção.</summary>
      <param name="sourceColumn">O nome da coluna de origem que diferencia maiúsculas de minúsculas.</param>
      <exception cref="T:System.IndexOutOfRangeException">Não há nenhum objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso ao <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Adiciona um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> ao <see cref="T:System.Data.Common.DataColumnMappingCollection" /> usando a coluna de origem e os nomes de coluna <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <param name="dataSetColumnName">O nome da coluna <see cref="T:System.Data.DataSet" />.</param>
      <returns>O objeto ColumnMapping que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tem o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName">O nome, que não diferencia maiúsculas de minúsculas, de uma coluna <see cref="T:System.Data.DataSet" /> a ser localizada.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tem o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.IColumnMapping" /> com o nome <see langword="SourceColumn" /> especificado.</summary>
      <param name="index">Índice do elemento.</param>
      <returns>O <see langword="IColumnMapping" /> objeto com o nome <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Contém uma descrição de uma relação mapeada entre uma tabela de origem e um <see cref="T:System.Data.DataTable" />. Esta classe é usada por um <see cref="T:System.Data.Common.DataAdapter" /> ao preencher um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMapping" /> com uma fonte quando recebe um nome <see cref="T:System.Data.DataTable" /> e um nome de tabela de origem.</summary>
      <param name="sourceTable">O nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetTable">O nome da tabela de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMapping" /> quando recebe um nome de tabela de origem, um nome <see cref="T:System.Data.DataTable" /> e uma matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable">O nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetTable">O nome da tabela de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
      <param name="columnMappings">Uma matriz de objetos de <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Obtém o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Uma coleção de mapeamento da coluna de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Obtém ou define o nome da tabela de um <see cref="T:System.Data.DataSet" />.</summary>
      <returns>O nome da tabela de <see cref="T:System.Data.DataSet" />a.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Obtém um <see cref="T:System.Data.DataColumn" /> do <see cref="T:System.Data.DataTable" /> especificado usando o valor <see cref="T:System.Data.MissingMappingAction" /> e o nome do <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="sourceColumn">O nome do <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Uma coluna de dados.</returns>
      <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="mappingAction" /> foi definido como <see langword="Error" /> e nenhum mapeamento foi especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Retorna um objeto <see cref="T:System.Data.DataColumn" /> para um nome de coluna especificado.</summary>
      <param name="sourceColumn">O nome do <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType">O tipo de dados para <paramref name="sourceColumn" />.</param>
      <param name="dataTable">O nome da tabela de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
      <param name="mappingAction">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Um objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Obtém o <see cref="T:System.Data.DataTable" /> atual para o <see cref="T:System.Data.DataSet" /> especificado usando o valor <see cref="T:System.Data.MissingSchemaAction" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> do qual o <see cref="T:System.Data.DataTable" /> deve ser obtido.</param>
      <param name="schemaAction">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Uma tabela de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Obtém ou define o nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</summary>
      <returns>O nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Obtém o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Uma coleção de mapeamento da coluna de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns>Um novo objeto que é uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Converte o nome <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> atual para uma cadeia de caracteres.</summary>
      <returns>O nome <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> atual como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>Uma coleção de objetos <see cref="T:System.Data.Common.DataTableMapping" /> . Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMappingCollection" />. Essa nova instância está vazia, ou seja, ela ainda não contém nenhum objeto <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Adiciona um <see cref="T:System.Object" /> que é um mapeamento de tabela para a coleção.</summary>
      <param name="value">Um objeto <see langword="DataTableMapping" /> a ser adicionado à coleção.</param>
      <returns>O índice do objeto <see langword="DataTableMapping" /> adicionado à coleção.</returns>
      <exception cref="T:System.InvalidCastException">O objeto transmitido não era um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Adiciona um objeto <see cref="T:System.Data.Common.DataTableMapping" /> à coleção quando é atribuído um nome de tabela de origem e um nome de tabela <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable">O nome que diferencia maiúsculas e minúsculas da tabela de origem do qual mapear.</param>
      <param name="dataSetTable">O nome, que não diferencia maiúsculas de minúsculas, de uma tabela <see cref="T:System.Data.DataSet" /> para a qual mapear.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DataTableMapping" /> que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Copia os elementos da <see cref="T:System.Array" /> especificada para o fim da coleção.</summary>
      <param name="values">Um <see cref="T:System.Array" /> de valores a serem adicionados à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Data.Common.DataTableMapping" /> especificada para o fim da coleção.</summary>
      <param name="values">A matriz de objetos <see cref="T:System.Data.Common.DataTableMapping" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Remove todos os objetos <see cref="T:System.Data.Common.DataTableMapping" /> da coleção.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado existe na coleção.</summary>
      <param name="value">Um <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <see langword="true" /> se essa coleção contiver o <see cref="T:System.Data.Common.DataTableMapping" /> especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado existe na coleção.</summary>
      <param name="value">O nome da tabela de origem que diferencia maiúsculas e minúsculas contendo o objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <see langword="true" /> se a coleção contiver um objeto <see cref="T:System.Data.Common.DataTableMapping" /> com esse nome de tabela de origem, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos da <see cref="T:System.Data.Common.DataTableMappingCollection" /> para a matriz especificada.</summary>
      <param name="array">Uma <see cref="T:System.Array" /> para a qual copiar os elementos <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">O índice inicial da matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Copia os elementos da <see cref="T:System.Data.Common.DataTableMapping" /> para a matriz especificada.</summary>
      <param name="array">Uma <see cref="T:System.Data.Common.DataTableMapping" /> para a qual copiar os elementos <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">O índice inicial da matriz.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Obtém o número de objetos <see cref="T:System.Data.Common.DataTableMapping" /> na coleção.</summary>
      <returns>O número de <see langword="DataTableMapping" /> objetos na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable">O nome, que não diferencia maiúsculas de minúsculas, de uma tabela <see cref="T:System.Data.DataSet" /> a ser localizada.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Obtém um enumerador que pode iterar por meio da coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Obtém um <see cref="T:System.Data.Common.DataColumnMapping" /> objeto com o nome da tabela de origem e o nome da tabela <see cref="T:System.Data.DataSet" /> especificados, usando o <see cref="T:System.Data.MissingMappingAction" /> determinado.</summary>
      <param name="tableMappings">A coleção <see cref="T:System.Data.Common.DataTableMappingCollection" /> a ser pesquisada.</param>
      <param name="sourceTable">O nome que diferencia maiúsculas e minúsculas da tabela de origem mapeada.</param>
      <param name="dataSetTable">O nome, que não diferencia maiúsculas de minúsculas, da tabela <see cref="T:System.Data.DataSet" /> mapeada.</param>
      <param name="mappingAction">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="mappingAction" /> foi definido como <see langword="Error" /> e nenhum mapeamento foi especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Obtém o local do objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado na coleção.</summary>
      <param name="value">Um <see cref="T:System.Object" /> que é o objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser localizado.</param>
      <returns>O local com base em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Obtém o local do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado.</summary>
      <param name="sourceTable">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns>O local com base em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Obtém o local do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable">O nome, que não diferencia maiúsculas de minúsculas, de uma tabela <see langword="DataSet" /> a ser localizada.</param>
      <returns>O local com base em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado ou -1 se o objeto <see cref="T:System.Data.Common.DataTableMapping" /> não existir na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Insere um objeto <see cref="T:System.Data.Common.DataTableMapping" /> no <see cref="T:System.Data.Common.DataTableMappingCollection" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
      <param name="value">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Insere um objeto <see cref="T:System.Data.Common.DataTableMapping" /> no <see cref="T:System.Data.Common.DataTableMappingCollection" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
      <param name="value">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.Common.DataTableMapping" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser retornado.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DataTableMapping" /> no índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado.</summary>
      <param name="sourceTable">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns>O <see cref="T:System.Data.Common.DataTableMapping" /> objeto com o nome de tabela de origem especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado da coleção.</summary>
      <param name="value">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado da coleção.</summary>
      <param name="value">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser removido.</param>
      <exception cref="T:System.InvalidCastException">O objeto especificado não era um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException">O objeto especificado não está na coleção.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> localizado no índice especificado da coleção.</summary>
      <param name="index">O índice de base zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser removido.</param>
      <exception cref="T:System.IndexOutOfRangeException">Um objeto <see cref="T:System.Data.Common.DataTableMapping" /> não existe com o índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado da coleção.</summary>
      <param name="sourceTable">O nome da tabela de origem que diferencia maiúsculas de minúsculas a ser localizado.</param>
      <exception cref="T:System.IndexOutOfRangeException">Um objeto <see cref="T:System.Data.Common.DataTableMapping" /> não existe com o nome da tabela de origem especificado.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtém ou define um item da coleção em um índice especificado.</summary>
      <param name="index">O índice com base em zero do item a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Adiciona um mapeamento de tabela à coleção.</summary>
      <param name="sourceTableName">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <param name="dataSetTableName">O nome da tabela <see cref="T:System.Data.DataSet" />.</param>
      <returns>Uma referência ao objeto <see cref="T:System.Data.ITableMapping" /> recém-mapeado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Obtém o objeto TableMapping com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName">O nome da tabela <see langword="DataSet" /> dentro da coleção.</param>
      <returns>O objeto TableMapping com o nome de tabela <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Obtém ou define a instância de <see cref="T:System.Data.ITableMapping" /> com o nome <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index">O nome <see langword="SourceTable" /> do <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>A instância do <see cref="T:System.Data.ITableMapping" /> com o nome <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary>Representa uma coluna dentro de uma fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary>Obtém um valor booliano anulável que indica se os valores <see langword="DBNull" /> são permitidos nessa coluna ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se os valores <see langword="DBNull" /> são permitidos nessa coluna ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituídos em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se os valores <see langword="DBNull" /> forem permitidos nessa coluna; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary>Obtém o nome do catálogo associado à fonte de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do catálogo ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome do catálogo associado à fonte de dados; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary>Obtém o nome da coluna base; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome da coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome da coluna base; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor está definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary>Obtém o nome do esquema associado à fonte de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do esquema ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome do esquema associado à fonte de dados; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary>Obtém o nome do servidor associado à coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do servidor ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome do servidor associado à coluna; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary>Obtém o nome da tabela no esquema; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome da tabela ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome da tabela no esquema; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary>Obtém o nome da coluna. Pode ser definido como o nome da coluna quando substituído em uma classe derivada.</summary>
      <returns>O nome da coluna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary>Obtém a posição da coluna (ordinal) na linha de fonte de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como um valor <see langword="int32" /> para especificar a posição da coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>Um valor <see langword="int32" /> para ordinal da coluna; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary>Obtém o tamanho da coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como um valor <see langword="int32" /> para especificar o tamanho da coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>Um <see langword="int32" /> valor para o tamanho da coluna; caso contrário, uma<see langword="Nothing" /> referência nula (em Visual Basic) se nenhum valor for definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary>Obtém o tipo de dados armazenados na coluna. Pode ser definido como um objeto <see cref="T:System.Type" /> que representa o tipo de dados na coluna quando substituído em uma classe derivada.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa o tipo de dados que a coluna contém.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary>Obtém o nome do tipo de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do tipo de dados ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome do tipo de dados; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary>Obtém um valor booliano anulável que indica se essa coluna tem um alias ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna tem um alias ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna tiver um alias; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary>Obtém um valor booliano anulável que indica se os valores nesta coluna são automaticamente incrementados ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se os valores nessa coluna são automaticamente incrementados ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituídos em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se os valores nessa coluna forem automaticamente incrementados; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary>Obtém um valor booliano anulável que indica se essa coluna é uma expressão ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é uma expressão ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna for uma expressão; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary>Obtém um valor booliano anulável que indica se essa coluna está oculta ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna está oculta ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna estiver oculta; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary>Obtém um valor booliano anulável que indica se essa coluna é uma identidade ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é uma identidade ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna for uma identidade; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary>Obtém um valor booliano anulável que indica se essa coluna é uma chave ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é uma chave ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna for uma chave; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary>Obtém um valor booliano anulável que indica se essa coluna contém dados Long ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna contém dados Long ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna contiver dados Long; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary>Obtém um valor booliano anulável que indica se essa coluna é somente leitura ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é somente leitura, ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se essa coluna for somente leitura; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary>Obtém um valor booliano anulável que indica se uma restrição única se aplica a essa coluna ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se uma restrição única se aplica a essa coluna ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns>Retornará <see langword="true" /> se uma restrição única se aplicar a essa coluna; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary>Obtém o objeto baseado no nome de propriedade da coluna.</summary>
      <param name="property">O nome de propriedade de coluna.</param>
      <returns>O objeto baseado no nome de propriedade da coluna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary>Obtém a precisão numérica dos dados de coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como um valor <see langword="int32" /> para especificar a precisão numérica dos dados de coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>Um <see langword="int32" /> valor que especifica a precisão dos dados da coluna, se os dados forem numéricos; caso contrário, uma referência<see langword="Nothing" /> nula (em Visual Basic) se nenhum valor for definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary>Obtém um valor <see langword="int32" /> nulo que retorna <see langword="null" /> ou a escala numérica dos dados da coluna. Pode ser definido como <see langword="null" /> ou um valor <see langword="int32" /> para a escala numérica dos dados da coluna quando substituído em uma classe derivada.</summary>
      <returns>Uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido; caso contrário, um valor <see langword="int32" /> que especificará a escala dos dados da coluna, se os dados forem numéricos.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary>Obtém o nome qualificado pelo assembly do objeto <see cref="T:System.Type" /> que representa o tipo de dados na coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome qualificado pelo assembly ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns>O nome qualificado pelo assembly do objeto <see cref="T:System.Type" /> que representa o tipo de dados na coluna; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary>Representa uma instrução SQL ou procedimento armazenado a executar contra uma fonte de dados. Fornece uma classe base para classes específicas de banco de dados que representam comandos. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary>Cria uma instância do objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary>Quando substituído em uma classe derivada, tenta cancelar a execução de um <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary>Quando substituído em uma classe derivada, obtém ou define o comando de texto para ser executado na fonte de dados.</summary>
      <returns>O comando de texto a ser executado. O valor padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary>Quando substituído em uma classe derivada, obtém ou define o tempo de espera antes do término da tentativa de execução de um comando e da geração de um erro.</summary>
      <returns>O tempo de espera, em segundos, para a execução do comando.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary>Quando substituído em uma classe derivada, obtém ou define como a propriedade <see cref="P:System.Data.Common.DbCommand.CommandText" /> é interpretada.</summary>
      <returns>Um dos valores de enumeração que especifica como uma cadeia de caracteres de comando é interpretada. O padrão é <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary>Obtém ou define o <see cref="T:System.Data.Common.DbConnection" /> usado pelo <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>A conexão com a fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary>Quando substituído em uma classe derivada, cria uma nova instância de um objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary>Cria uma nova instância de um objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary>Quando substituído em uma classe derivada, obtém ou define o <see cref="T:System.Data.Common.DbConnection" /> usado por este <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>A conexão com a fonte de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary>Quando substituído em uma classe derivada, obtém a coleção de objetos <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary>Quando substituído em uma classe derivada, obtém ou define o <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dentro do qual este objeto <see cref="T:System.Data.Common.DbCommand" /> é executado.</summary>
      <returns>A transação na qual um objeto de comando de um provedor de dados .NET é executado. O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor indicando se o objeto de comando deve estar visível em um controle de interface personalizado.</summary>
      <returns>
        <see langword="true" />, se o objeto de comando deve estar visível em um controle; caso <see langword="false" />contrário. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary>Descarta de forma assíncrona o objeto de comando.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>Quando substituído em uma classe derivada, executa o texto de comando em relação à conexão.</summary>
      <param name="behavior">Uma instância de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Uma tarefa que representa a operação.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Os provedores devem implementar esse método para fornecer uma implementação não padrão para sobrecargas <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.  
A implementação padrão invoca o método <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada. A implementação padrão retornará uma tarefa cancelada se já tiver passado um token de cancelamento. Exceções geradas por ExecuteReader serão comunicadas por meio da propriedade Exceção de Tarefa retornada.  
Esse método aceita um token de cancelamento que pode ser usado para solicitar a operação a ser cancelada no início. As implementações podem ignorar essa solicitação.</summary>
      <param name="behavior">Opções de recuperação de dados e execução de instrução.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary>Quando substituído em uma classe derivada, executa uma instrução SQL em um objeto de conexão.</summary>
      <returns>O número de linhas afetadas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary>Uma versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, que executa uma instrução SQL em um objeto de conexão.  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Provedores devem substituir com uma implementação apropriada. Opcionalmente, o token de cancelamento pode ser ignorado.  
A implementação padrão invoca o método <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada. A implementação padrão retornará uma tarefa cancelada se já tiver passado um token de cancelamento.  Exceções geradas por <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> serão comunicadas por meio da propriedade Exceção de Tarefa retornada.  
Não invoque outros métodos e propriedades do objeto <see langword="DbCommand" /> até a Tarefa retornada ser concluída.</summary>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary>Executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> no <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> para o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <returns>Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary>Uma versão assíncrona de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> contra o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />.  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>Uma versão assíncrona de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> contra o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />.  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Uma versão assíncrona de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> contra o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />. Esse método propaga a notificação de que as operações devem ser canceladas.  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary>Quando substituído em uma classe derivada, executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Todas as outras colunas e linhas são ignoradas.</summary>
      <returns>A primeira coluna da primeira linha no conjunto de resultados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary>Uma versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, que executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Todas as outras colunas e linhas são ignoradas.  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Provedores devem substituir com uma implementação apropriada. Opcionalmente, o token de cancelamento pode ser ignorado.  
A implementação padrão invoca o método <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada. A implementação padrão retornará uma tarefa cancelada se já tiver passado um token de cancelamento. Exceções geradas por ExecuteScalar serão comunicadas por meio da propriedade Exceção de Tarefa retornada.  
Não invoque outros métodos e propriedades do objeto <see langword="DbCommand" /> até a Tarefa retornada ser concluída.</summary>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary>Obtém a coleção de objetos <see cref="T:System.Data.Common.DbParameter" />. Para obter mais informações sobre parâmetros, consulte Configurando parâmetros e tipos de dados de parâmetro.</summary>
      <returns>Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary>Quando substituído em uma classe derivada, cria uma versão preparada (ou compilada) do comando na fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary>Cria de maneira assíncrona uma versão preparada (ou compilada) do comando na fonte de dados.</summary>
      <param name="cancellationToken" />
      <returns>Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary>Obtém ou define o <see cref="T:System.Data.IDbConnection" /> usado por essa instância do <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>A conexão com a fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary>Cria uma nova instância de um objeto <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns>Um objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> no <see cref="P:System.Data.IDbCommand.Connection" /> e compila um <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> para o <see cref="P:System.Data.IDbCommand.Connection" /> e cria um <see cref="T:System.Data.IDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <returns>Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary>Obtém o <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary>Obtém ou define o <see cref="T:System.Data.Common.DbCommand" /> em que este objeto <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> é executado.</summary>
      <returns>A transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado. O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary>Obtém ou define o <see cref="T:System.Data.Common.DbCommand" /> em que este objeto <see cref="T:System.Data.Common.DbTransaction" /> é executado.</summary>
      <returns>A transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado. O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary>Quando substituído em uma classe derivada, obtém ou define como os resultados do comando são aplicados ao <see cref="T:System.Data.DataRow" /> quando usado pelo método de atualização de um <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Um dos valores de enumeração que indica como os resultados do comando são aplicados. O padrão é <see langword="Both" />, a menos que o comando seja gerado automaticamente. Nesse caso, o padrão é <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary>Gera automaticamente os comandos de tabela única usados para reconciliar as alterações feitas em um <see cref="T:System.Data.DataSet" /> com o banco de dados associado. Isso é uma classe abstrata que só pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary>Inicializa uma nova instância de uma classe que herda da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Permite a implementação de provedor da classe <see cref="T:System.Data.Common.DbCommandBuilder" /> para manipular propriedades de parâmetro adicionais.</summary>
      <param name="parameter">Um <see cref="T:System.Data.Common.DbParameter" /> ao qual as modificações adicionais são aplicadas.</param>
      <param name="row">O <see cref="T:System.Data.DataRow" /> da tabela de esquema fornecida por <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType">O tipo de comando que está sendo gerado, INSERT, UPDATE ou DELETE.</param>
      <param name="whereClause">
        <see langword="true" /> se o parâmetro fizer parte da cláusula WHERE de atualização ou exclusão, <see langword="false" /> se for parte dos valores de atualização ou inserção.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary>Define ou obtém o <see cref="T:System.Data.Common.CatalogLocation" /> para uma instância da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary>Define ou obtém uma cadeia de caracteres usada como o separador de catálogo para uma instância da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Uma cadeia de caracteres que indica o separador de catálogo para <see cref="T:System.Data.Common.DbCommandBuilder" /> uso com uma instância da classe.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary>Especifica qual <see cref="T:System.Data.ConflictOption" /> deve ser usado pelo <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Retorna um dos <see cref="T:System.Data.ConflictOption" /> valores que descrevem o comportamento <see cref="T:System.Data.Common.DbCommandBuilder" />disso.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary>Obtém ou define um objeto <see cref="T:System.Data.Common.DbDataAdapter" /> para o qual as instruções do Transact-SQL são geradas automaticamente.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbCommandBuilder" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar exclusões na fonte de dados.</summary>
      <returns>O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar exclusões.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar exclusões na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</summary>
      <param name="useColumnsForParameterNames">Se <see langword="true" />, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível. Se <see langword="false" />, gerar <c>@p1</c>, <c>@p2</c> e assim por diante.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar exclusões.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar inserções na fonte de dados.</summary>
      <returns>O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar inserções.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar inserções na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</summary>
      <param name="useColumnsForParameterNames">Se <see langword="true" />, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível. Se <see langword="false" />, gerar <c>@p1</c>, <c>@p2</c> e assim por diante.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar inserções.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary>Retorna o nome do parâmetro especificado no formato de <c>@p#</c>. Use quando estiver criando um construtor de comando personalizado.</summary>
      <param name="parameterOrdinal">O número a ser incluído como parte do nome do parâmetro.</param>
      <returns>O nome do parâmetro com o número especificado anexado como parte do nome do parâmetro.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary>Retorna o nome completo do parâmetro, considerando o nome parcial do parâmetro.</summary>
      <param name="parameterName">O nome parcial do parâmetro.</param>
      <returns>O nome completo do parâmetro correspondente ao nome parcial do parâmetro solicitado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>Retorna o espaço reservado para o parâmetro na instrução SQL associada.</summary>
      <param name="parameterOrdinal">O número a ser incluído como parte do nome do parâmetro.</param>
      <returns>O nome do parâmetro com o número especificado anexado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary>Retorna a tabela de esquema para o <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand">O <see cref="T:System.Data.Common.DbCommand" /> para o qual recuperar a tabela de esquema correspondente.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> que representa o esquema para o <see cref="T:System.Data.Common.DbCommand" /> específico.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar atualizações na fonte de dados.</summary>
      <returns>O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar atualizações.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar atualizações na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</summary>
      <param name="useColumnsForParameterNames">Se <see langword="true" />, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível. Se <see langword="false" />, gerar <c>@p1</c>, <c>@p2</c> e assim por diante.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar atualizações.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary>Redefine as propriedades <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> e <see cref="T:System.Data.UpdateRowSource" /> no <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command">O <see cref="T:System.Data.Common.DbCommand" /> a ser usado pelo construtor de comando para o comando de inserção, atualização ou exclusão correspondente.</param>
      <returns>Uma instância <see cref="T:System.Data.Common.DbCommand" /> a ser usada para cada operação de inserção, atualização ou exclusão. Passar um valor nulo permite que o método <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> crie um objeto <see cref="T:System.Data.Common.DbCommand" /> com base no comando Select associado ao <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Dado um identificador sem aspas no caso de catálogo correto, retorna a forma entre aspas correta desse identificador, incluindo o escape apropriado de quaisquer aspas inseridas no identificador.</summary>
      <param name="unquotedIdentifier">O identificador original sem aspas.</param>
      <returns>A versão entre aspas do identificador. As aspas inseridas no identificador são escapadas adequadamente.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary>Obtém ou define o caractere ou caracteres iniciais a serem usados ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou tokens reservados.</summary>
      <returns>O caractere ou os caracteres iniciais a serem usados. O padrão é uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.InvalidOperationException">Essa propriedade não pode ser alterada após um comando de inserção, atualização ou exclusão ter sido gerado.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary>Obtém ou define o caractere ou caracteres finais a serem usados ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou tokens reservados.</summary>
      <returns>O caractere final ou os caracteres a serem usados. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary>Limpa os comandos associados a este <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Adiciona um manipulador de eventos para o evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent">Uma instância de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contém informações sobre o evento.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary>Obtém ou define o caractere a ser usado para o separador entre o identificador do esquema e de quaisquer outros identificadores.</summary>
      <returns>O caractere a ser usado como o separador de esquema.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary>Especifica se todos os valores de coluna em uma declaração de atualização são incluídos ou apenas aqueles alterados.</summary>
      <returns>
        <see langword="true" /> se a declaração de atualização gerada pelo <see cref="T:System.Data.Common.DbCommandBuilder" /> incluir todas as colunas; <see langword="false" /> se ela incluir apenas as colunas alteradas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>Registra o <see cref="T:System.Data.Common.DbCommandBuilder" /> para lidar com o evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> para um <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter">O <see cref="T:System.Data.Common.DbDataAdapter" /> a ser usado para a atualização.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Dado um identificador entre aspas, retorna a forma sem aspas correta desse identificador, incluindo desfazer o escape adequado de quaisquer aspas inseridas no identificador.</summary>
      <param name="quotedIdentifier">O identificador que terá suas aspas inseridas removidas.</param>
      <returns>O identificador sem aspas, com aspas inseridas corretamente sem escape.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Define o comportamento básico das conexões de banco de dados e fornece uma classe base para conexões específicas do banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>Quando substituído em uma classe derivada, inicia uma transação de banco de dados.</summary>
      <param name="isolationLevel">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Inicia de maneira assíncrona uma transação de banco de dados.</summary>
      <param name="isolationLevel">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> é um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Inicia uma transação de banco de dados.</summary>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inicia uma transação de banco de dados com o nível de isolamento especificado.</summary>
      <param name="isolationLevel">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Inicia de maneira assíncrona uma transação de banco de dados.</summary>
      <param name="isolationLevel">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> é um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary>Inicia de maneira assíncrona uma transação de banco de dados.</summary>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> é um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>Quando substituído em uma classe derivada, troca o banco de dados atual por uma conexão aberta.</summary>
      <param name="databaseName">O nome do banco de dados a ser usado pela conexão.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Troca de forma assíncrona o banco de dados atual por uma conexão aberta.</summary>
      <param name="databaseName">O nome do banco de dados a ser usado pela conexão.</param>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>Quando substituído em uma classe derivada, fecha a conexão com o banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary>Fecha de maneira assíncrona a conexão com o banco de dados.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>Quando substituído em uma classe derivada, obtém ou define a cadeia de caracteres usada para abrir a conexão.</summary>
      <returns>A cadeia de conexão usada para estabelecer a conexão inicial. O conteúdo exato da cadeia de conexão depende da fonte de dados específica para esta conexão. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Obtém o tempo de espera durante o estabelecimento da conexão antes que a tentativa seja finalizada e um erro seja gerado.</summary>
      <returns>O tempo (em segundos) de espera para abrir uma conexão. O valor padrão é determinado pelo tipo específico de conexão que você está usando.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary>Cria e retorna um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão atual.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary>Quando substituído em uma classe derivada, cria e retorna um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão atual.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>Quando substituído em uma classe derivada, obtém o nome do banco de dados atual depois que uma conexão for aberta ou o nome do banco de dados especificado na cadeia de conexão antes da conexão ser aberta.</summary>
      <returns>O nome do banco de dados atual ou daquele que será usado após uma conexão ser aberta. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>Quando substituído em uma classe derivada, obtém o nome do servidor de banco de dados ao qual se conectar.</summary>
      <returns>O nome do servidor de banco de dados ao qual se conectar. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Obtém o <see cref="T:System.Data.Common.DbProviderFactory" /> para este <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Um conjunto de métodos para criar instâncias de uma implementação de provedor das classes de fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary>Descarta de forma assíncrona o objeto da conexão.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Inscreve-se na transação especificada.</summary>
      <param name="transaction">Uma referência a um <see cref="T:System.Transactions.Transaction" /> existente no qual se inscrever.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Retorna informações de esquema para a fonte de dados deste <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Retorna informações de esquema para a fonte de dados deste <see cref="T:System.Data.Common.DbConnection" /> usando a cadeia de caracteres especificada para o nome do esquema.</summary>
      <param name="collectionName">Especifica o nome do esquema a retornar.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> é especificado como nulo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Retorna informações de esquema para a fonte de dados desse <see cref="T:System.Data.Common.DbConnection" /> usando a cadeia de caracteres especificada para o nome do esquema e a matriz de cadeia de caracteres especificada para os valores de restrição.</summary>
      <param name="collectionName">Especifica o nome do esquema a retornar.</param>
      <param name="restrictionValues">Especifica um conjunto de valores de restrição do esquema solicitado.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> é especificado como nulo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange">Um <see cref="T:System.Data.StateChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>Quando substituído em uma classe derivada, abre uma conexão de banco de dados com as configurações especificadas pelo <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary>Uma versão assíncrona de <see cref="M:System.Data.Common.DbConnection.Open" />, que abre uma conexão de banco de dados com as configurações especificadas pelo <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Esse método invoca o método virtual <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbConnection.Open" />. Provedores devem substituir com uma implementação apropriada. Opcionalmente, o token de cancelamento pode ser respeitado.  
A implementação padrão invoca a chamada <see cref="M:System.Data.Common.DbConnection.Open" /> síncrona e retorna uma tarefa concluída. A implementação padrão retornará uma tarefa cancelada se já tiver passado um cancellationToken cancelado. Exceções geradas por Open serão comunicadas por meio da propriedade Exceção de Tarefa retornada.  
Não invoque outros métodos e propriedades do objeto <see langword="DbConnection" /> até a Tarefa retornada ser concluída.</summary>
      <param name="cancellationToken">A instrução de cancelamento.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>Quando substituído em uma classe derivada, obtém uma cadeia de caracteres que representa a versão do servidor ao qual o objeto está conectado.</summary>
      <returns>A versão do banco de dados. O formato da cadeia de caracteres retornada depende do tipo específico de conexão que você está usando.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> foi chamado enquanto a tarefa retornada não foi concluída e a conexão não foi aberta após uma chamada para <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Obtém uma cadeia de caracteres que descreve o estado da conexão.</summary>
      <returns>O estado da conexão. O formato da cadeia de caracteres retornada depende do tipo específico de conexão que você está usando.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Ocorre quando o estado do evento é alterado.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Inicia uma transação de banco de dados.</summary>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inicia uma transação de banco de dados com o nível de isolamento especificado.</summary>
      <param name="isolationLevel">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary>Cria e retorna um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão atual.</summary>
      <returns>Um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Fornece uma classe base para construtores de cadeia de conexão fortemente tipados.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, opcionalmente usando regras ODBC para delimitar valores.</summary>
      <param name="useOdbcRules">
        <see langword="true" /> para usar {} para delimitar campos, <see langword="false" /> usar aspas.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Adiciona uma entrada com a chave e o valor especificados ao <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">A chave a adicionar à <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value">O valor para a chave especificada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.  

ou - 
O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Fornece uma maneira eficiente e segura para acrescentar uma chave e um valor a um objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder">O <see cref="T:System.Text.StringBuilder" /> ao qual adicionar o par chave-valor.</param>
      <param name="keyword">A chave a ser adicionada.</param>
      <param name="value">O valor para a chave fornecida.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Fornece uma maneira eficiente e segura para acrescentar uma chave e um valor a um objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder">O <see cref="T:System.Text.StringBuilder" /> ao qual adicionar o par chave-valor.</param>
      <param name="keyword">A chave a ser adicionada.</param>
      <param name="value">O valor para a chave fornecida.</param>
      <param name="useOdbcRules">
        <see langword="true" /> para usar {} para delimitar campos, <see langword="false" /> usar aspas.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Obtém ou define um valor que indica se a propriedade <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> é visível nos designers do Visual Studio.</summary>
      <returns>
        <see langword="true" />se a cadeia de conexão estiver visível nos designers; <see langword="false" /> caso contrário. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Limpa o conteúdo da instância <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Limpa a coleção de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> no <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> associado.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Obtém ou define a cadeia de conexão associada a <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>A cadeia de conexão atual, criada de pares chave-valor contidos dentro de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. O valor padrão é uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.ArgumentException">Um argumento de cadeia de conexão inválido foi fornecido.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determina se a <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contém uma chave específica.</summary>
      <param name="keyword">A chave a ser localizada no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiver uma entrada com a chave, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Obtém o número atual de chaves contidas na propriedade <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns>O número de chaves contidas na cadeia de conexão mantida pela <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instância.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Compara as informações de conexão neste objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> com as informações de conexão no objeto fornecido.</summary>
      <param name="connectionStringBuilder">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> a ser comparado com esse objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> se as informações de conexão em ambos os objetos <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> causarem uma cadeia de conexão equivalente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Preenche um <see cref="T:System.Collections.Hashtable" /> fornecido com informações sobre todas as propriedades deste <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">O <see cref="T:System.Collections.Hashtable" /> a ser preenchido com informações sobre esse <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiver um tamanho fixo; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Obtém ou define o valor associado à chave especificada.</summary>
      <param name="keyword">A chave do item a ser obtida ou definida.</param>
      <returns>O valor associado à chave especificada. Se a chave especificada não for encontrada, a tentativa de obtê-la retornará uma referência nula (<see langword="Nothing" /> no Visual Basic) e a tentativa de defini-la criará um novo elemento usando a chave especificada.  
Passar uma chave nula (<see langword="Nothing" /> no Visual Basic) gera um <see cref="T:System.ArgumentNullException" />. A atribuição de um valor nulo remove o par chave/valor.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">A propriedade está definida e o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.  

ou - 
A propriedade é definida, <paramref name="keyword" /> não existe na coleção e o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Obtém um <see cref="T:System.Collections.ICollection" /> que contém as chaves no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Um <see cref="T:System.Collections.ICollection" /> que contém as chaves <see cref="T:System.Data.Common.DbConnectionStringBuilder" />no.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Remove a entrada com a chave especificada da instância de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">A chave do par chave/valor a ser removido da cadeia de conexão neste <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> se a chave existia na cadeia de conexão e foi removida; <see langword="false" /> se a chave não existia.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> é nulo (<see langword="Nothing" /> no Visual Basic)</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura ou o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Indica se a chave especificada existe nessa instância <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">A chave a ser localizada no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiver uma entrada com a chave, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adiciona um elemento com a chave e o valor fornecidos ao objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">O <see cref="T:System.Object" /> a ser usado como chave do elemento a ser adicionado.</param>
      <param name="value">O <see cref="T:System.Object" /> a ser usado como valor do elemento a ser adicionado.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Collections.IDictionary" /> contém um elemento com a chave especificada.</summary>
      <param name="keyword">A chave a ser localizada no objeto <see cref="T:System.Collections.IDictionary" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> contiver um elemento com a chave; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Retorna um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para o objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para o objeto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Obtém ou define o elemento com a chave especificada.</summary>
      <param name="keyword">A chave do elemento a ser obtida ou adicionada.</param>
      <returns>O elemento com a chave especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Remove o elemento com a chave especificada do objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">A chave do elemento a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera em uma coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Retorna uma coleção de atributos personalizados para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.AttributeCollection" /> que contém os atributos para esse objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Retorna o nome de classe desta instância de um componente.</summary>
      <returns>O nome de classe do objeto ou <see langword="null" /> se a classe não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Retorna o nome desta instância de um componente.</summary>
      <returns>O nome do objeto ou <see langword="null" /> se o objeto não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Retorna um conversor de tipo para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.TypeConverter" /> que é o conversor para esse objeto ou <see langword="null" />, se não houver nenhum <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Retorna o evento padrão para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.EventDescriptor" /> que representa o evento padrão para esse objeto ou <see langword="null" />, se este objeto não tiver eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Retorna a propriedade padrão para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade padrão para esse objeto ou <see langword="null" />, se este objeto não tiver propriedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Retorna um editor do tipo especificado para esta instância de um componente.</summary>
      <param name="editorBaseType">Um <see cref="T:System.Type" /> que representa o editor para esse objeto.</param>
      <returns>Um <see cref="T:System.Object" /> do tipo especificado que é o editor para esse objeto ou <see langword="null" />, se não for possível encontrar o editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Retorna os eventos desta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Retorna os eventos desta instância de um componente usando a matriz de atributos especificada como um filtro.</summary>
      <param name="attributes">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns>Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos filtrados da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Retorna as propriedades desta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Retorna as propriedades desta instância de um componente usando a matriz de atributos como um filtro.</summary>
      <param name="attributes">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades filtradas da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</summary>
      <param name="pd">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade cujo proprietário deve ser encontrado.</param>
      <returns>Um <see cref="T:System.Object" /> que representa o proprietário da propriedade especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Retorna a cadeia de conexão associada a esse <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>A propriedade <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> atual.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Recupera um valor correspondente para a chave fornecida deste <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">A chave do item a ser recuperada.</param>
      <param name="value">O valor correspondente ao <paramref name="keyword" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="keyword" /> foi encontrado na cadeia de conexão, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contém um valor nulo (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Obtém um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Um <see cref="T:System.Collections.ICollection" /> valor que contém os valores <see cref="T:System.Data.Common.DbConnectionStringBuilder" />no.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Ajuda na implementação da interface <see cref="T:System.Data.IDbDataAdapter" />. Os herdeiros de <see cref="T:System.Data.Common.DbDataAdapter" /> implementam um conjunto de funções para fornecer uma tipagem forte, mas herdam a maioria das funcionalidades necessárias para implementar um DataAdapter por completo.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Inicializa uma nova instância de uma classe DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Inicializa uma nova instância da classe <see langword="DataAdapter" /> de um objeto existente do mesmo tipo.</summary>
      <param name="adapter">Um objeto <see langword="DataAdapter" /> usado para criar o novo <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>Adiciona um <see cref="T:System.Data.IDbCommand" /> ao lote atual.</summary>
      <param name="command">O <see cref="T:System.Data.IDbCommand" /> a ser adicionado ao lote.</param>
      <returns>O número de comandos no lote antes de adicionar o <see cref="T:System.Data.IDbCommand" />.</returns>
      <exception cref="T:System.NotSupportedException">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Remove todos os objetos <see cref="T:System.Data.IDbCommand" /> do lote.</summary>
      <exception cref="T:System.NotSupportedException">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">O <see cref="T:System.Data.DataRow" /> usado para atualizar a fonte de dados.</param>
      <param name="command">O <see cref="T:System.Data.IDbCommand" /> executado durante o <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Se o comando é uma instrução UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping">Um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">O <see cref="T:System.Data.DataRow" /> que atualiza a fonte de dados.</param>
      <param name="command">O <see cref="T:System.Data.IDbCommand" /> a ser executado durante o <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Se o comando é uma instrução UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping">Um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>O nome padrão usado pelo objeto <see cref="T:System.Data.Common.DataAdapter" /> para mapeamentos de tabela.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary>Obtém ou define um comando para excluir registros do conjunto de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbDataAdapter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Executa o lote atual.</summary>
      <returns>O valor retornado do último comando no lote.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="startRecord">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords">O número máximo de registros a serem obtidos.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.SystemException">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.  

ou -  

 A conexão é inválida.</exception>
      <exception cref="T:System.InvalidCastException">Não foi possível encontrar a conexão.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="startRecord" /> é menor que 0.  

ou - 
O parâmetro <paramref name="maxRecords" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando o <see cref="T:System.Data.DataSet" /> e nomes da tabela de origem, a cadeia de comando e o comportamento do comando.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="startRecord">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords">O número máximo de registros a serem obtidos.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <param name="command">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="startRecord" /> é menor que 0.  

ou - 
O parâmetro <paramref name="maxRecords" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" /> para corresponder às existentes na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.SystemException">A tabela de origem é inválida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando o nome <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">O nome do <see cref="T:System.Data.DataTable" /> a ser usado para mapeamento de tabela.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Adiciona ou atualiza linhas em um <see cref="T:System.Data.DataTable" /> para corresponder às existentes na fonte de dados usando o <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> e <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable">Um <see cref="T:System.Data.DataTable" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="command">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Os objetos <see cref="T:System.Data.DataTable" /> a preencher da fonte de dados.</param>
      <param name="startRecord">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords">O número máximo de registros a serem obtidos.</param>
      <param name="command">O <see cref="T:System.Data.IDbCommand" /> executado para preencher os objetos <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>O número de linhas adicionadas ao ou atualizadas nas tabelas de dados.</returns>
      <exception cref="T:System.SystemException">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.  

ou -  

 A conexão é inválida.</exception>
      <exception cref="T:System.InvalidCastException">Não foi possível encontrar a conexão.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="startRecord" /> é menor que 0.  

ou - 
O parâmetro <paramref name="maxRecords" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Adiciona ou atualiza linhas em um <see cref="T:System.Data.DataTable" /> para corresponder àquelas na fonte de dados, começando pelo registro especificado e recuperando até o número máximo de registros.</summary>
      <param name="startRecord">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords">O número máximo de registros a serem obtidos.</param>
      <param name="dataTables">Os objetos <see cref="T:System.Data.DataTable" /> a preencher da fonte de dados.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Esse valor não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary>Obtém ou define o comportamento do comando usado para preencher o adaptador de dados.</summary>
      <returns>O <see cref="T:System.Data.CommandBehavior" /> do comando usado para preencher o adaptador de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> com o nome “Tabela” ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder a eles na fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> para inserir o esquema.</param>
      <param name="schemaType">Um do valores <see cref="T:System.Data.SchemaType" /> que especificam como inserir o esquema.</param>
      <returns>Uma referência a uma coleção de objetos <see cref="T:System.Data.DataTable" /> que foram adicionados ao <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder à fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Uma matriz de objetos <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder à fonte de dados com base nos <see cref="T:System.Data.SchemaType" /> e <see cref="T:System.Data.DataTable" /> especificados.</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> para inserir o esquema.</param>
      <param name="schemaType">Um do valores <see cref="T:System.Data.SchemaType" /> que especificam como inserir o esquema.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns>Uma referência a uma coleção de objetos <see cref="T:System.Data.DataTable" /> que foram adicionados ao <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">Uma tabela de origem na qual não possível encontrar o esquema.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Configura o esquema do <see cref="T:System.Data.DataTable" /> especificado com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Configura o esquema do <see cref="T:System.Data.DataTable" /> especificado com base no <see cref="T:System.Data.SchemaType" />, na cadeia de caracteres de comando e nos valores <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Um objeto <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Retorna um <see cref="T:System.Data.IDataParameter" /> de um dos comandos no lote atual.</summary>
      <param name="commandIdentifier">O índice do comando do qual recuperar o parâmetro.</param>
      <param name="parameterIndex">O índice do parâmetro no comando.</param>
      <returns>O <see cref="T:System.Data.IDataParameter" /> especificado.</returns>
      <exception cref="T:System.NotSupportedException">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Retorna informações sobre uma tentativa de atualização individual dentro de uma atualização em lote maior.</summary>
      <param name="commandIdentifier">O ordinal da coluna com base em zero do comando individual dentro do lote.</param>
      <param name="recordsAffected">O número de linhas afetadas no repositório de dados pelo comando especificado no lote.</param>
      <param name="error">Um <see cref="T:System.Exception" /> lançado durante a execução do comando especificado. Retornará <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção for lançada.</param>
      <returns>Informações sobre uma tentativa de atualização individual dentro de uma atualização em lote maior.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contém os parâmetros definidos pelo usuário.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Inicializa o envio em lote para o <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary>Obtém ou define um comando usado para inserir novos registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados das novas linhas no conjunto de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Gera o evento <see langword="RowUpdated" /> de um provedor de dados .NET Framework.</summary>
      <param name="value">Um <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Gera o evento <see langword="RowUpdating" /> de um provedor de dados .NET Framework.</summary>
      <param name="value">Um <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary>Obtém ou define um comando usado para selecionar registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> que é usado durante o <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>Obtém ou define uma instrução SQL para excluir registros do conjunto de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>Obtém ou define uma instrução SQL usada para inserir novos registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados para novas linhas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>Obtém ou define uma instrução SQL usada para selecionar registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> que é usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>Obtém ou define uma instrução SQL usada para atualizar registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados para linhas modificadas no conjunto de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns>Um novo objeto que é uma cópia dessa instância.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Encerra o envio em lote para o <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída na matriz especificada no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Uma matriz de objetos <see cref="T:System.Data.DataRow" /> usada para atualizar a fonte de dados.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.SystemException">Não há nenhum <see cref="T:System.Data.DataRow" /> para atualização.  

ou - 
Não há nenhum <see cref="T:System.Data.DataTable" /> para atualização.  

ou - 
Não há nenhum <see cref="T:System.Data.DataSet" /> para ser usado como uma fonte.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída na matriz de objetos <see cref="T:System.Data.DataSet" /> especificada.</summary>
      <param name="dataRows">Uma matriz de objetos <see cref="T:System.Data.DataRow" /> usada para atualizar a fonte de dados.</param>
      <param name="tableMapping">A coleção <see cref="P:System.Data.IDataAdapter.TableMappings" /> a ser usada.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.SystemException">Não há nenhum <see cref="T:System.Data.DataRow" /> para atualização.  

ou - 
Não há nenhum <see cref="T:System.Data.DataTable" /> para atualização.  

ou - 
Não há nenhum <see cref="T:System.Data.DataSet" /> para ser usado como uma fonte.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> usado para atualizar a fonte de dados.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> com o nome <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> a ser usado para atualizar a fonte de dados.</param>
      <param name="srcTable">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> usado para atualizar a fonte de dados.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">A tabela de origem é inválida.</exception>
      <exception cref="T:System.SystemException">Não há nenhum <see cref="T:System.Data.DataRow" /> para atualização.  

ou - 
Não há nenhum <see cref="T:System.Data.DataTable" /> para atualização.  

ou - 
Não há nenhum <see cref="T:System.Data.DataSet" /> para ser usado como uma fonte.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Obtém ou define um valor que habilita ou desabilita o suporte ao processamento de lote e especifica o número de comandos que podem ser executadas em um lote.</summary>
      <returns>O número de linhas a serem processadas por lote.  
  O valor é 
  Efeito 
  0 
  Não há nenhum limite para o tamanho do lote.  

  1 
  Desabilita a atualização em lote.  

  &gt; 1 
  As alterações são enviadas usando lotes de operações <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> de uma vez.  

   

 Ao definir isso com um valor diferente de 1, todos os comandos <see cref="T:System.Data.Common.DbDataAdapter" /> associados ao devem ter sua <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> propriedade definida como None ou OutputParameters. Caso contrário, uma exceção será gerada.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary>Obtém ou define um comando usado para atualizar registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados para linhas modificadas no conjunto de dados.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Lê um fluxo de linhas apenas de encaminhamento a partir de uma fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Fecha o objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary>Fecha de maneira assíncrona o objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Obtém um valor que indica a profundidade de aninhamento da linha atual.</summary>
      <returns>A profundidade de aninhamento da linha atual.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Libera os recursos gerenciados usados pelo <see cref="T:System.Data.Common.DbDataReader" /> e opcionalmente libera os recursos não gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados, <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary>Libera de forma assíncrona todos os recursos usados pela instância atual da classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>Quando substituído em uma classe derivada, obtém o número de colunas na linha atual.</summary>
      <returns>O número de colunas na linha atual.</returns>
      <exception cref="T:System.NotSupportedException">Não há conexão atual com uma instância do SQL Server.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um booliano.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um byte.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, lê um número de bytes especificado da coluna especificada, começando em um índice especificado, e os grava em um buffer começando em uma posição especificada no buffer.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <param name="dataOffset">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length">O número máximo de caracteres a serem lidos.</param>
      <returns>O número real de bytes lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um caractere único.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, lê um número de caracteres especificado de uma coluna especificada, começando em um índice especificado, e os grava em um buffer começando em uma posição especificada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <param name="dataOffset">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length">O número máximo de caracteres a serem lidos.</param>
      <returns>O número real de caracteres lidos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Retorna um leitor de dados aninhado para a coluna solicitada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Um leitor de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o nome do tipo de dados da coluna especificada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O nome do tipo de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Retorna um objeto <see cref="T:System.Data.Common.DbDataReader" /> para o ordinal da coluna solicitado que pode ser substituído por uma implementação específica do provedor.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>Quando substituído em uma classe derivada, retorna um enumerador que pode ser usado para iterar pelas linhas no leitor de dados.</summary>
      <returns>Um enumerador que pode ser usado para iterar pelas linhas do leitor de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o tipo de dados da coluna especificada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O tipo de dados da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <typeparam name="T">O tipo do valor a ser retornado.</typeparam>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou - 
O leitor de dados estava fechado durante a recuperação de dados.  

ou -


Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).  

ou -

O leitor tentou ler uma coluna lida anteriormente em modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary>Obtém de forma assíncrona o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <typeparam name="T">O tipo do valor a ser retornado.</typeparam>
      <returns>Uma tarefa cujo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados foi fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).

ou -

Tentativa de ler uma coluna lida anteriormente no modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get_*_ executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Obtém de forma assíncrona o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <typeparam name="T">O tipo do valor a ser retornado.</typeparam>
      <returns>Uma tarefa cujo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados foi fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).

ou -

Tentativa de ler uma coluna lida anteriormente no modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get_*_ executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o nome da coluna, dado o ordinal da coluna baseado em zero.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O nome da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o ordinal da coluna dado o nome da coluna.</summary>
      <param name="name">O nome da coluna.</param>
      <returns>O ordinal da coluna baseado em zero.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Obtém o tipo específico do provedor da coluna especificada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Um tipo .NET específico do provedor.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Obtém o valor da coluna especificada como uma instância de um tipo específico do provedor.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Obtém todas as colunas de atributo específicas do provedor na coleção para a linha atual.</summary>
      <param name="values">Uma matriz de <see cref="T:System.Object" /> na qual as colunas de atributo serão copiadas.</param>
      <returns>O número de instâncias de elementos na matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.NotSupportedException">Somente .NET Core: Não há suporte para esse membro.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary>Obtém um fluxo para recuperar dados da coluna especificada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Um fluxo.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não é um tipo binário que dá suporte à leitura com um <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.String" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary>Obtém um leitor de texto para recuperar dados da coluna.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Um leitor de texto.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não é um tipo de texto que dá suporte à leitura com um <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>Quando substituído em uma classe derivada, popula uma matriz de objetos com os valores da coluna da linha atual.</summary>
      <param name="values">Uma matriz de <see cref="T:System.Object" /> na qual as colunas de atributo serão copiadas.</param>
      <returns>O número de instâncias de <see cref="T:System.Object" /> na matriz.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se este <see cref="T:System.Data.Common.DbDataReader" /> contém uma ou mais linhas.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Data.Common.DbDataReader" /> contiver uma ou mais linhas; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Data.Common.DbDataReader" /> estiver fechado; caso contrário <see langword="false" />,.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se a coluna tem valores ausentes ou inexistentes.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>
        <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary>Obtém, de maneira assíncrona, um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="ordinal">A coluna com base em zero a ser recuperada.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" /> ou será <see langword="false" /> se não for.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

Tentando ler uma coluna lida anteriormente no modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Obtém, de maneira assíncrona, um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="ordinal">A coluna com base em zero a ser recuperada.</param>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" /> ou será <see langword="false" /> se não for.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

Tentando ler uma coluna lida anteriormente no modo sequencial.  

ou - 
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Nenhuma coluna com o nome especificado foi encontrada.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>Quando substituído em uma classe derivada, avança o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</summary>
      <returns>
        <see langword="true" /> se houver mais conjuntos de resultados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary>Avança de maneira assíncrona o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</summary>
      <returns>Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais conjuntos de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Avança de maneira assíncrona o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</summary>
      <param name="cancellationToken">A instrução de cancelamento.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais conjuntos de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>Quando substituído em uma classe derivada, avança o leitor para o próximo registro em um conjunto de resultados.</summary>
      <returns>
        <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary>Avança de maneira assíncrona o leitor para o próximo registro em um conjunto de resultados.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais linhas de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Avança de maneira assíncrona o leitor para o próximo registro em um conjunto de resultados.</summary>
      <param name="cancellationToken">A instrução de cancelamento.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais linhas de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>Quando substituído em uma classe derivada, obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</summary>
      <returns>O número de linhas alteradas, inseridas ou excluídas. -1 para instruções SELECT; 0 se nenhuma linha foi afetada ou se a instrução falhou.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Uma instância de <see cref="T:System.Data.IDataReader" /> a ser usada quando o campo aponta para dados mais dados estruturados remotos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Obtém o número de campos em <see cref="T:System.Data.Common.DbDataReader" /> que não estão ocultos.</summary>
      <returns>O número de campos que não estão ocultos.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary>Essa classe contém os métodos de extensão do esquema de colunas para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Obtém um valor que indica se um <see cref="T:System.Data.Common.DbDataReader" /> pode obter um esquema de coluna.</summary>
      <param name="reader">O <see cref="T:System.Data.Common.DbDataReader" /> a ser verificado para suporte de esquema de coluna.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbDataReader" /> puder obter um esquema de coluna; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Obtém o esquema da coluna (coleção <see cref="T:System.Data.Common.DbColumn" />) para um <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader">O <see cref="T:System.Data.Common.DbDataReader" /> para retornar o esquema de coluna.</param>
      <returns>O esquema da coluna (coleção <see cref="T:System.Data.Common.DbColumn" />) para um <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Implementa <see cref="T:System.Data.IDataRecord" /> e <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> e dá suporte para vinculação de dados para <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Indica o número de campos no registro atual. Esta propriedade é somente para leitura.</summary>
      <returns>O número de campos dentro do registro atual.</returns>
      <exception cref="T:System.NotSupportedException">Não conectado a uma fonte de dados da qual ler.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um booliano.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>
        <see langword="true" /> se o valor booliano for <see langword="true" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um byte.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Retorna o valor da coluna especificada como uma matriz bytes.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <param name="dataIndex">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferIndex">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</param>
      <param name="length">O número de bytes a serem lidos.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um caractere.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Retorna o valor da coluna especificada como uma matriz de caracteres.</summary>
      <param name="i">Ordinal da coluna.</param>
      <param name="dataIndex">Buffer para o qual copiar dados.</param>
      <param name="buffer">O tamanho máximo a ser copiado no buffer.</param>
      <param name="bufferIndex">Ponto no qual iniciar dentro do buffer.</param>
      <param name="length">Ponto no qual iniciar dentro dos dados de origem.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>Não há suporte no momento.</summary>
      <param name="i">Não há suporte no momento.</param>
      <returns>Não há suporte no momento.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Retorna o nome do tipo de dados back-end.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O nome do tipo de dados back-end.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Retorna um objeto <see cref="T:System.Data.Common.DbDataReader" /> para o ordinal da coluna solicitado que pode ser substituído por uma implementação específica do provedor.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <returns>Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um objeto <see cref="T:System.Decimal" />.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Retorna o <see cref="T:System.Type" /> que é o tipo de dados do objeto.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O <see cref="T:System.Type" /> que é o tipo de dados do objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Retorna o valor de GUID do campo especificado.</summary>
      <param name="i">O índice do campo a ser retornado.</param>
      <returns>O valor de GUID do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Retorna o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Retorna o nome da coluna especificada.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O nome da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Retorna o ordinal da coluna, de acordo com o nome da coluna.</summary>
      <param name="name">O nome da coluna.</param>
      <returns>O ordinal da coluna.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Retorna o valor da coluna especificada como uma cadeia de caracteres.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Retorna o valor na coluna especificada em seu formato nativo.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor a ser retornado.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Popula uma matriz de objetos com os valores da coluna do registro atual.</summary>
      <param name="values">Uma matriz de <see cref="T:System.Object" /> na qual os campos de atributo serão copiados.</param>
      <returns>O número de instâncias de <see cref="T:System.Object" /> na matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Usado para indicar valores inexistentes.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>
        <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Indica o valor na coluna especificada em seu formato nativo de acordo com o ordinal da coluna. Esta propriedade é somente para leitura.</summary>
      <param name="i">O ordinal da coluna.</param>
      <returns>O valor na coluna especificada em seu formato nativo.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Indica o valor na coluna especificada em seu formato nativo de acordo com o nome da coluna. Esta propriedade é somente para leitura.</summary>
      <param name="name">O nome da coluna.</param>
      <returns>O valor na coluna especificada em seu formato nativo.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Retorna uma coleção de atributos personalizados para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.AttributeCollection" /> que contém os atributos para esse objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Retorna o nome de classe desta instância de um componente.</summary>
      <returns>O nome de classe do objeto ou <see langword="null" /> se a classe não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Retorna o nome desta instância de um componente.</summary>
      <returns>O nome do objeto ou <see langword="null" /> se o objeto não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Retorna um conversor de tipo para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.TypeConverter" /> que é o conversor para esse objeto ou <see langword="null" />, se não houver nenhum <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Retorna o evento padrão para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.EventDescriptor" /> que representa o evento padrão para esse objeto ou <see langword="null" />, se este objeto não tiver eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Retorna a propriedade padrão para esta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade padrão para esse objeto ou <see langword="null" />, se este objeto não tiver propriedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Retorna um editor do tipo especificado para esta instância de um componente.</summary>
      <param name="editorBaseType">Um <see cref="T:System.Type" /> que representa o editor para esse objeto.</param>
      <returns>Um <see cref="T:System.Object" /> do tipo especificado que é o editor para esse objeto ou <see langword="null" />, se não for possível encontrar o editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Retorna os eventos desta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Retorna os eventos desta instância de um componente usando a matriz de atributos especificada como um filtro.</summary>
      <param name="attributes">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns>Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos filtrados da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Retorna as propriedades desta instância de um componente.</summary>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Retorna as propriedades desta instância de um componente usando a matriz de atributos como um filtro.</summary>
      <param name="attributes">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades filtradas da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</summary>
      <param name="pd">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade cujo proprietário deve ser encontrado.</param>
      <returns>Um <see cref="T:System.Object" /> que representa o proprietário da propriedade especificada.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Fornece um mecanismo para enumerar todas as instâncias disponíveis de servidores de banco de dados na rede local.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Recupera um <see cref="T:System.Data.DataTable" /> que contém informações sobre todas as instâncias visíveis do servidor representadas pela instância fortemente tipada dessa classe.</summary>
      <returns>Uma <see cref="T:System.Data.DataTable" /> que contém informações sobre as instâncias visíveis da fonte de dados associada.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Expõe o método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que dá suporte a uma iteração simples em uma coleção por um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> com o leitor de dados fornecido.</summary>
      <param name="reader">O DataReader por meio do qual iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o leitor especificado e indica se deve fechar o leitor automaticamente após a iteração por meio de seus dados.</summary>
      <param name="reader">O DataReader por meio do qual iterar.</param>
      <param name="closeReader">
        <see langword="true" /> para fechar automaticamente o DataReader após iterar por seus dados, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o <see langword="DataReader" /> especificado.</summary>
      <param name="reader">O <see langword="DataReader" /> por meio do qual iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o <see langword="DataReader" /> especificado e indica se deve fechar o <see langword="DataReader" /> automaticamente após a iteração por meio de seus dados.</summary>
      <param name="reader">O <see langword="DataReader" /> por meio do qual iterar.</param>
      <param name="closeReader">
        <see langword="true" /> para fechar automaticamente o <see langword="DataReader" /> após iterar por seus dados, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Obtém o elemento atual na coleção.</summary>
      <returns>O elemento atual na coleção.</returns>
      <exception cref="T:System.InvalidOperationException">O enumerador é posicionado antes do primeiro elemento da coleção ou depois do último elemento.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Avança o enumerador para o próximo elemento da coleção.</summary>
      <returns>
        <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
      <exception cref="T:System.InvalidOperationException">A coleção foi modificada depois da criação do enumerador.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</summary>
      <exception cref="T:System.InvalidOperationException">A coleção foi modificada depois da criação do enumerador.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>A classe base para todas as exceções geradas em nome da fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com o contexto e as informações de serialização especificados.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com a mensagem de erro especificada.</summary>
      <param name="message">A mensagem a ser exibida para essa exceção.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com a mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A cadeia de caracteres da mensagem de erro.</param>
      <param name="innerException">A referência de exceção interna.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com a mensagem de erro e o código de erro especificados.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="errorCode">O código de erro da exceção.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Fornece uma lista de constantes para o conhecido MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords e Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Fornece valores estáticos usados para nomes de coluna nos objetos MetaDataCollection contidos no <see cref="T:System.Data.DataTable" />. O <see cref="T:System.Data.DataTable" /> é criado pelo método GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Usado pelo método GetSchema para criar a coluna CollectionName na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Usado pelo método GetSchema para criar a coluna ColumnSize na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Usado pelo método GetSchema para criar a coluna CompositeIdentifierSeparatorPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Usado pelo método GetSchema para criar a coluna CreateFormat na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Usado pelo método GetSchema para criar a coluna CreateParameters na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Usado pelo método GetSchema para criar a coluna DataSourceProductName na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Usado pelo método GetSchema para criar a coluna DataSourceProductVersion na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Usado pelo método GetSchema para criar a coluna DataSourceProductVersionNormalized na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Usado pelo método GetSchema para criar a coluna DataType na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Usado pelo método GetSchema para criar a coluna GroupByBehavior na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Usado pelo método GetSchema para criar a coluna IdentifierCase na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Usado pelo método GetSchema para criar a coluna IdentifierPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Usado pelo método GetSchema para criar a coluna IsAutoIncrementable na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Usado pelo método GetSchema para criar a coluna IsBestMatch na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Usado pelo método GetSchema para criar a coluna IsCaseSensitive na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Usado pelo método GetSchema para criar a coluna IsConcurrencyType na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Usado pelo método GetSchema para criar a coluna IsFixedLength na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Usado pelo método GetSchema para criar a coluna IsFixedPrecisionScale na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Usado pelo método GetSchema para criar a coluna IsLiteralSupported na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Usado pelo método GetSchema para criar a coluna IsLong na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Usado pelo método GetSchema para criar a coluna IsNullable na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Usado pelo método GetSchema para criar a coluna IsSearchable na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Usado pelo método GetSchema para criar a coluna IsSearchableWithLike na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Usado pelo método GetSchema para criar a coluna IsUnsigned na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Usado pelo método GetSchema para criar a coluna LiteralPrefix na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Usado pelo método GetSchema para criar a coluna LiteralSuffix na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Usado pelo método GetSchema para criar a coluna MaximumScale na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Usado pelo método GetSchema para criar a coluna MinimumScale na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Usado pelo método GetSchema para criar a coluna NumberOfIdentifierParts na coleção MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Usado pelo método GetSchema para criar a coluna NumberOfRestrictions na coleção MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Usado pelo método GetSchema para criar a coluna OrderByColumnsInSelect na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Usado pelo método GetSchema para criar a coluna ParameterMarkerFormat na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Usado pelo método GetSchema para criar a coluna ParameterMarkerPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Usado pelo método GetSchema para criar a coluna ParameterNameMaxLength na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Usado pelo método GetSchema para criar a coluna ParameterNamePattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Usado pelo método GetSchema para criar a coluna ProviderDbType na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Usado pelo método GetSchema para criar a coluna QuotedIdentifierCase na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Usado pelo método GetSchema para criar a coluna QuotedIdentifierPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Usado pelo método GetSchema para criar a coluna ReservedWord na coleção ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Usado pelo método GetSchema para criar a coluna StatementSeparatorPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Usado pelo método GetSchema para criar a coluna StringLiteralPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Usado pelo método GetSchema para criar a coluna SupportedJoinOperators na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Usado pelo método GetSchema para criar a coluna TypeName na coleção DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Representa um parâmetro para um <see cref="T:System.Data.Common.DbCommand" /> e, opcionalmente, o mapeamento para uma coluna <see cref="T:System.Data.DataSet" />. Para obter mais informações sobre parâmetros, consulte Configurando parâmetros e tipos de dados de parâmetro.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Obtém ou define o <see cref="T:System.Data.DbType" /> do parâmetro.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DbType" />. O padrão é <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade não foi definida como um <see cref="T:System.Data.DbType" /> válido.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Obtém ou define um valor que indica se o parâmetro é apenas de entrada, saída, bidirecional ou um parâmetro de valor retornado do procedimento armazenado.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.ParameterDirection" />. O padrão é <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade não está definida como um dos valores <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Obtém ou define um valor que indica se o parâmetro aceita valores nulos.</summary>
      <returns>
        <see langword="true" /> se valores nulos são aceitos; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Obtém ou define o nome de <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>O nome do <see cref="T:System.Data.Common.DbParameter" />. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary>Obtém ou define o número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>O número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Redefine a propriedade DbType às suas configurações originais.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary>Obtém ou define o número de casas decimais para as quais o <see cref="P:System.Data.Common.DbParameter.Value" /> é resolvido.</summary>
      <returns>O número de casas decimais para o qual o <see cref="P:System.Data.Common.DbParameter.Value" /> é resolvido.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Obtém ou define o tamanho máximo, em bytes, dos dados da coluna.</summary>
      <returns>O tamanho máximo, em bytes, dos dados da coluna. O valor padrão é inferido do valor do parâmetro.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Obtém ou define o nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" /> e usada para carregar ou retornar o <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>O nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" />. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Define ou obtém um valor que indica se a coluna de origem permite valor nulo. Isso permite que <see cref="T:System.Data.Common.DbCommandBuilder" /> gere corretamente instruções Update para colunas que permitem valor nulo.</summary>
      <returns>
        <see langword="true" /> se a coluna de origem for nula; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Obtém ou define o <see cref="T:System.Data.DataRowVersion" /> a ser usado ao carregar <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DataRowVersion" />. O padrão é <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade não é definida como um dos valores <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Indica a precisão de parâmetros numéricos.</summary>
      <returns>O número máximo de dígitos usados para representar a <see langword="Value" /> propriedade de um objeto de <see langword="Parameter" /> provedor de dados. O valor padrão é 0, que indica que um provedor de dados define a precisão <see langword="Value" />para.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>O número de casas decimais para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido. O padrão é 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Obtém ou define o valor do parâmetro.</summary>
      <returns>Um <see cref="T:System.Object" /> que é o valor do parâmetro. O valor padrão é null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>A classe base para uma coleção de parâmetros relevantes a um <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Adiciona o objeto especificado <see cref="T:System.Data.Common.DbParameter" /> ao <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value">O <see cref="P:System.Data.Common.DbParameter.Value" /> do <see cref="T:System.Data.Common.DbParameter" /> para adicionar à coleção.</param>
      <returns>O índice do objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Adiciona uma matriz de itens aos valores especificados para o <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values">Uma matriz de valores do tipo <see cref="T:System.Data.Common.DbParameter" /> a serem adicionados à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Remove todos os valores <see cref="T:System.Data.Common.DbParameter" /> do <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Indica se um <see cref="T:System.Data.Common.DbParameter" /> com o <see cref="P:System.Data.Common.DbParameter.Value" /> especificado está contido na coleção.</summary>
      <param name="value">O <see cref="P:System.Data.Common.DbParameter.Value" /> do <see cref="T:System.Data.Common.DbParameter" /> a ser procurado na coleção.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbParameter" /> estiver na coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Indica se um <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado existe na coleção.</summary>
      <param name="value">O nome do <see cref="T:System.Data.Common.DbParameter" /> a ser procurado na coleção.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbParameter" /> estiver na coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia uma matriz de itens para a coleção começando no índice especificado.</summary>
      <param name="array">A matriz de itens a serem copiados para a coleção.</param>
      <param name="index">O índice na coleção para copiar os itens.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Especifica o número de itens na coleção.</summary>
      <returns>Número de itens na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Expõe o método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que dá suporte a uma iteração simples em uma coleção por um provedor de dados .NET Framework.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Retorna o objeto <see cref="T:System.Data.Common.DbParameter" /> no índice especificado na coleção.</summary>
      <param name="index">O índice do <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DbParameter" /> no índice especificado na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Retorna o objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</summary>
      <param name="parameterName">O nome do <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns>O objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Retorna o índice do objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</summary>
      <param name="value">O objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns>O índice do objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Retorna o índice do objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</summary>
      <param name="parameterName">O nome do objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns>O índice do objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Insere o índice especificado do objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado na coleção no índice especificado.</summary>
      <param name="index">O índice no qual inserir o objeto <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">O objeto <see cref="T:System.Data.Common.DbParameter" /> a ser inserido na coleção.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Especifica se a coleção tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" />se a coleção for um tamanho fixo; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Especifica se a coleção é somente leitura.</summary>
      <returns>
        <see langword="true" />se a coleção for somente leitura; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Especifica se a coleção é sincronizada.</summary>
      <returns>
        <see langword="true" />se a coleção for sincronizada; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Obtém ou define o <see cref="T:System.Data.Common.DbParameter" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do parâmetro.</param>
      <returns>O <see cref="T:System.Data.Common.DbParameter" /> no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice especificado não existe.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Obtém ou define o <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</summary>
      <param name="parameterName">O nome do parâmetro.</param>
      <returns>O <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice especificado não existe.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DbParameter" /> especificado da coleção.</summary>
      <param name="value">O objeto <see cref="T:System.Data.Common.DbParameter" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DbParameter" /> no especificado da coleção.</summary>
      <param name="index">O índice em que o <see cref="T:System.Data.Common.DbParameter" /> objeto está localizado.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado da coleção.</summary>
      <param name="parameterName">O nome do objeto <see cref="T:System.Data.Common.DbParameter" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Define o objeto <see cref="T:System.Data.Common.DbParameter" /> no índice especificado para um novo valor.</summary>
      <param name="index">O índice em que o <see cref="T:System.Data.Common.DbParameter" /> objeto está localizado.</param>
      <param name="value">O novo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Define o objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado para um novo valor.</summary>
      <param name="parameterName">O nome do objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <param name="value">O novo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Especifica o <see cref="T:System.Object" /> a ser usado para sincronizar o acesso à coleção.</summary>
      <returns>Um <see cref="T:System.Object" /> a ser usado para sincronizar o <see cref="T:System.Data.Common.DbParameterCollection" />acesso ao.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Obtém ou define o parâmetro no índice especificado.</summary>
      <param name="parameterName">O nome do parâmetro a ser recuperado.</param>
      <returns>Um <see cref="T:System.Object" /> no índice especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Representa um conjunto de métodos estáticos para criar uma ou mais instâncias de classes <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary>Retorna uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection">A conexão usada.</param>
      <returns>Uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" /> para uma conexão especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Retorna uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow">
        <see cref="T:System.Data.DataRow" /> que contém informações de configuração do provedor.</param>
      <returns>Uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" /> para um <see cref="T:System.Data.DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Retorna uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName">Nome invariável de um provedor.</param>
      <returns>Uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" /> para um nome de provedor especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Retorna um <see cref="T:System.Data.DataTable" /> que contém informações sobre todos os provedores instalados que implementam <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>Uma <see cref="T:System.Data.DataTable" /> que contém objetos <see cref="T:System.Data.DataRow" /> que contêm os dados a seguir: 
  Ordinal de coluna 
  Nome da coluna 
  Descrição 
  0 
  Name  
  Nome legível do provedor de dados.  
  1 
  Descrição  
  Descrição legível do provedor de dados.  
  2 
  InvariantName  
  Nome que pode ser usado programaticamente para se referir ao provedor de dados.  
  3 
  AssemblyQualifiedName  
  Nome totalmente qualificado da classe de fábrica, que contém informações suficientes para criar uma instância do objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames" />
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <param name="providerInvariantName" />
      <param name="factory" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <param name="providerInvariantName" />
      <param name="factoryTypeAssemblyQualifiedName" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <param name="providerInvariantName" />
      <param name="providerFactoryClass" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <param name="providerInvariantName" />
      <param name="factory" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <param name="providerInvariantName" />
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Representa um conjunto de métodos para criar instâncias de uma implementação de provedor das classes de fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary>Obtém um valor que indica se esta instância <see cref="T:System.Data.Common.DbProviderFactory" /> é compatível com a classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>
        <see langword="true" />Se essa instância der suporte <see cref="T:System.Data.Common.DbCommandBuilder" /> à classe; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary>Obtém um valor que indica se esta instância <see cref="T:System.Data.Common.DbProviderFactory" /> é compatível com a classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>
        <see langword="true" />se a instância do oferecer <see cref="T:System.Data.Common.DbDataAdapter" /> suporte à classe; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Obtém um valor que indica se esta instância <see cref="T:System.Data.Common.DbProviderFactory" /> é compatível com a classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>
        <see langword="true" />se a instância do oferecer <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> suporte à classe; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Identifica qual propriedade específica do provedor nas classes de parâmetro fortemente tipadas deve ser usada ao configurar um tipo específico do provedor.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty">Especifica se esta propriedade é uma propriedade específica do provedor.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Indica se a propriedade de atributo é um tipo específico de provedor.</summary>
      <returns>
        <see langword="true" />se a propriedade à qual esse atributo é aplicado for uma propriedade de tipo específica do provedor; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>Define o comportamento básico das transações de banco de dados e fornece uma classe base para transações específicas do banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Inicializa um novo objeto <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>Quando substituído em uma classe derivada, confirma a transação de banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary>Confirma de maneira assíncrona a transação de banco de dados.</summary>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Especifica o objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</summary>
      <returns>O objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>Quando substituído em uma classe derivada, obtém o objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</summary>
      <returns>O objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbTransaction" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">Se <see langword="true" />, esse método liberará todos os recursos mantidos por qualquer objeto gerenciado que este <see cref="T:System.Data.Common.DbTransaction" /> referencia.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary>Descarta de forma assíncrona o objeto da transação.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>Quando substituído em uma classe derivada, obtém o nível de isolamento dessa transação.</summary>
      <returns>O nível de isolamento para esta transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>Quando substituído em uma classe derivada, reverte uma transação de um estado pendente.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary>Reverte de maneira assíncrona uma transação de um estado pendente.</summary>
      <param name="cancellationToken">Um token para cancelar a operação assíncrona.</param>
      <returns>Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Obtém o objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação ou uma referência nula, se a transação não for mais válida.</summary>
      <returns>O objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Especifica a relação entre as colunas em uma cláusula GROUP BY e as colunas não agregadas na lista de seleção de uma instrução SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>A cláusula GROUP BY deve conter todas as colunas não agregadas na lista de seleção e não deve conter outras colunas que não estão na lista de seleção.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>A cláusula GROUP BY deve conter todas as colunas não agregadas na lista de seleção e pode conter outras colunas que não estão na lista de seleção.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>Não há suporte para a cláusula GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>O suporte à cláusula GROUP BY é desconhecido.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>Não há relação entre as colunas na cláusula GROUP BY e as colunas não agregadas na lista de SELECT. Você pode agrupar por qualquer coluna.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary>Gera um esquema de colunas.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary>Obtém o esquema de coluna (coleção <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns>O esquema de coluna (coleção <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Especifica como os identificadores são tratados pela fonte de dados ao pesquisar o catálogo do sistema.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>A fonte de dados não diferencia maiúsculas e minúsculas do identificador ao pesquisar o catálogo do sistema. Os identificadores "ab" e "AB" serão correspondentes.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>A fonte de dados diferencia maiúsculas e minúsculas do identificador ao pesquisar o catálogo do sistema. Os identificadores "ab" e "AB" não serão correspondentes.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>A fonte de dados tem regras ambíguas sobre maiúsculas e minúsculas do identificador e não pode discernir essas informações.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Fornece dados para o evento <see langword="RowUpdated" /> de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">O <see cref="T:System.Data.DataRow" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">O <see cref="T:System.Data.IDbCommand" /> executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</param>
      <param name="statementType">O tipo de instrução SQL executada.</param>
      <param name="tableMapping">O <see cref="T:System.Data.Common.DataTableMapping" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>Obtém o <see cref="T:System.Data.IDbCommand" /> executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</summary>
      <returns>O <see cref="T:System.Data.IDbCommand" /> executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Cópia as referências às linhas modificadas para a matriz fornecida.</summary>
      <param name="array">A matriz de <see cref="T:System.Data.DataRow" /> para a qual ser copiada.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Cópia as referências às linhas modificadas para a matriz fornecida.</summary>
      <param name="array">A matriz de <see cref="T:System.Data.DataRow" /> para a qual ser copiada.</param>
      <param name="arrayIndex">O índice na matriz no qual começar a copiar.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Obtém erros gerados pelo provedor de dados .NET Framework quando o <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> foi executado.</summary>
      <returns>Os erros gerados pelo provedor de dados de .NET Framework quando <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> o foi executado.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</summary>
      <returns>O número de linhas alteradas, inseridas ou excluídas, 0 se nenhuma linha tiver sido afetada ou a instrução tiver falhado e -1 para instruções SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Obtém o <see cref="T:System.Data.DataRow" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>O <see cref="T:System.Data.DataRow" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Obtém o número de linhas processadas em um lote de registros atualizados.</summary>
      <returns>
        <see langword="int" />que especifica o número de linhas processadas.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Obtém o tipo de instrução SQL executada.</summary>
      <returns>O tipo de instrução SQL executada.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Obtém o <see cref="T:System.Data.UpdateStatus" /> da propriedade <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.UpdateStatus" />. O padrão é <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Obtém o <see cref="T:System.Data.Common.DataTableMapping" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>O <see cref="T:System.Data.Common.DataTableMapping" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Fornece os dados para o evento RowUpdating de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">O <see cref="T:System.Data.DataRow" /> para <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">O <see cref="T:System.Data.IDbCommand" /> a ser executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</param>
      <param name="statementType">O tipo de instrução SQL a ser executado.</param>
      <param name="tableMapping">O <see cref="T:System.Data.Common.DataTableMapping" /> a ser enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.IDbCommand" /> para uma instância desta classe.</summary>
      <returns>O <see cref="T:System.Data.IDbCommand" /> a ser executado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>Obtém o <see cref="T:System.Data.IDbCommand" /> a ser executado durante a operação <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>O <see cref="T:System.Data.IDbCommand" /> a ser executado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Obtém erros gerados pelo provedor de dados .NET Framework quando o <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> é executado.</summary>
      <returns>Os erros gerados pelo provedor de dados de .NET Framework quando <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> o é executado.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Obtém o <see cref="T:System.Data.DataRow" /> que será enviado ao servidor como parte de uma operação de inserção, atualização ou exclusão.</summary>
      <returns>O <see cref="T:System.Data.DataRow" /> a ser enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Obtém o tipo de instrução SQL a ser executado.</summary>
      <returns>O tipo de instrução SQL a ser executado.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Obtém ou define o <see cref="T:System.Data.UpdateStatus" /> da propriedade <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.UpdateStatus" />. O padrão é <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Obtém o <see cref="T:System.Data.Common.DataTableMapping" /> a ser enviado por meio de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>O <see cref="T:System.Data.Common.DataTableMapping" /> a ser enviado <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />pelo.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Descreve os metadados de coluna do esquema para uma tabela de banco de dados.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Especifica se o valor <see langword="DBNull" /> é permitido.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Especifica o nome da coluna na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Especifica o nome do esquema na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Especifica o nome da tabela na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Especifica o nome da coluna na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Especifica o ordinal da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Especifica o tamanho da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Especifica o tipo de dados na coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Especifica se esta coluna tem alias.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Especifica se esta coluna é uma expressão.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Especifica se esta coluna é uma chave para a tabela.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Especifica se esta coluna contém dados longos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Especifica se uma restrição exclusiva se aplica a esta coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Especifica o tipo de dados específico do provedor sem versão da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Especificará a precisão dos dados de coluna, se os dados forem numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Especificará a escala dos dados de coluna, se os dados forem numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Especifica o tipo de dados da coluna específicos do provedor.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Descreve metadados de coluna opcionais do esquema para uma tabela de banco de dados.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Especifica o valor no qual a série de novas colunas de identidade é atribuído.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Especifica o incremento entre os valores na coluna de identidade.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>O nome do catálogo associado aos resultados da consulta mais recente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>O namespace da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>O nome do servidor da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>O namespace para a tabela que contém a coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Especifica o mapeamento da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>O valor padrão da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>A expressão usada para calcular a coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Especifica se os valores de coluna na coluna são automaticamente incrementados.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Especifica se esta coluna está oculta.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Especifica se esta coluna é somente leitura.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Especifica se esta coluna contém informações de versão da linha.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Especifica o tipo de dados da coluna específicos do provedor.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Especifica quais tipos de instruções de junção Transact-SQL têm suporte da fonte de dados.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>A fonte de dados dá suporte a junções externas completas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>A fonte de dados dá suporte a junções internas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>A fonte de dados dá suporte a junções externas esquerdas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>A fonte de dados não oferece suporte a consultas de junção.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>A fonte de dados dá suporte a junções externas direitas.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Especifica como as alterações conflitantes na fonte de dados serão detectadas e resolvidas.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>As instruções Update e Delete incluirão todas as colunas pesquisáveis da tabela na cláusula WHERE. Isso é equivalente a especificar <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>Se houver colunas Carimbo de Data/Hora na tabela, elas serão usadas na cláusula WHERE de todas as instruções de atualização geradas. Isso é equivalente a especificar <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>Todas as instruções UPDATE e DELETE incluem apenas colunas <see cref="P:System.Data.DataTable.PrimaryKey" /> na cláusula WHERE. Se nenhum <see cref="P:System.Data.DataTable.PrimaryKey" /> for definido, todas as colunas pesquisáveis serão incluídas na cláusula WHERE. Isso é equivalente a <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Descreve o estado atual da conexão com uma fonte de dados.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>A conexão com a fonte de dados foi desfeita. Isso poderá ocorrer somente depois que a conexão foi aberta. Uma conexão nesse estado pode ser fechada e aberta novamente. (Esse valor é reservado para versões futuras do produto.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>A conexão está fechada.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>O objeto de conexão está se conectando à fonte de dados.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>O objeto de conexão está executando um comando. (Esse valor é reservado para versões futuras do produto.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>O objeto de conexão está recuperando os dados. (Esse valor é reservado para versões futuras do produto.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>A conexão está aberta.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Representa uma restrição que pode ser aplicada em um ou mais objetos <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Obtém o <see cref="T:System.Data.DataSet" /> ao qual esta restrição pertence.</summary>
      <returns>O <see cref="T:System.Data.DataSet" /> ao qual a restrição pertence.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Obtém o <see cref="T:System.Data.DataSet" /> ao qual esta restrição pertence.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>O nome de uma restrição no <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns>O nome do <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException">O nome de <see cref="T:System.Data.Constraint" /> é um valor nulo ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.Data.DuplicateNameException">O <see cref="T:System.Data.ConstraintCollection" /> já contém um <see cref="T:System.Data.Constraint" /> com o mesmo nome (a comparação não diferencia maiúsculas de minúsculas.).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Obtém a coleção de propriedades de restrição definidas pelo usuário.</summary>
      <returns>Um <see cref="T:System.Data.PropertyCollection" /> das informações personalizadas.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Define o <see cref="T:System.Data.DataSet" /> da restrição.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> ao qual esta restrição pertencerá.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Obtém o <see cref="T:System.Data.DataTable" /> ao qual a restrição se aplica.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> à qual a restrição se aplica.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Obtém o <see cref="P:System.Data.Constraint.ConstraintName" />, se houver um, como uma cadeia de caracteres.</summary>
      <returns>O valor da cadeia de caracteres do <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Representa uma coleção de restrições para um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Adiciona o objeto <see cref="T:System.Data.Constraint" /> especificado à coleção.</summary>
      <param name="constraint">O <see langword="Constraint" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="constraint" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">A restrição já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma restrição com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Constrói um novo <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, <see cref="T:System.Data.DataColumn" /> e o valor que indica se a coluna é uma chave primária e o adiciona à coleção.</summary>
      <param name="name">O nome do <see langword="UniqueConstraint" />.</param>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> ao qual a restrição se aplica.</param>
      <param name="primaryKey">Especifica se a coluna deve ser a chave primária. Se <see langword="true" />, a coluna será uma coluna de chave primária.</param>
      <returns>Um novo <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException">A restrição já pertence a esta coleção.  
 -Ou-  
 A restrição pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma restrição com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Constrói um novo <see cref="T:System.Data.ForeignKeyConstraint" /> com o nome, coluna pai e coluna filha especificados e adiciona a restrição à coleção.</summary>
      <param name="name">O nome do <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">A chave primária ou pai, <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn">A chave estrangeira ou filha, <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Um novo <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Constrói um novo <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, uma matriz de objetos <see cref="T:System.Data.DataColumn" /> e o valor que indica se a coluna é uma chave primária e o adiciona à coleção.</summary>
      <param name="name">O nome do <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> aos quais uma restrição se aplica.</param>
      <param name="primaryKey">Especifica se a coluna deve ser a chave primária. Se <see langword="true" />, a coluna será uma coluna de chave primária.</param>
      <returns>Um novo <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException">A restrição já pertence a esta coleção.  
 -Ou-  
 A restrição pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma restrição com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Constrói um novo <see cref="T:System.Data.ForeignKeyConstraint" />, com as matrizes especificadas de colunas pai e colunas filha e adiciona a restrição à coleção.</summary>
      <param name="name">O nome do <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que são as colunas de chave primária ou pai.</param>
      <param name="foreignKeyColumns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que são as colunas de chave estrangeira ou filha.</param>
      <returns>Um novo <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Data.ConstraintCollection" /> especificada para o fim da coleção.</summary>
      <param name="constraints">Uma matriz de objetos <see cref="T:System.Data.ConstraintCollection" /> a serem adicionados à coleção.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Indica se um <see cref="T:System.Data.Constraint" /> pode ser removido.</summary>
      <param name="constraint">O <see cref="T:System.Data.Constraint" /> a ser testado para remoção da coleção.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.Constraint" /> puder ser removido da coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Limpa a coleção de todos os objetos <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Ocorre sempre que o <see cref="T:System.Data.ConstraintCollection" /> é alterado devido objetos <see cref="T:System.Data.Constraint" /> que sendo adicionados ou removidos.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Indica se o objeto <see cref="T:System.Data.Constraint" /> especificado pelo nome existe na coleção.</summary>
      <param name="name">O <see cref="P:System.Data.Constraint.ConstraintName" /> da restrição.</param>
      <returns>
        <see langword="true" /> se a coleção contiver a restrição especificada, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Copia os objetos de coleção para uma instância <see cref="T:System.Array" /> unidimensional começando no índice especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
      <param name="index">O índice da matriz na qual iniciar a inserção.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Obtém o índice do <see cref="T:System.Data.Constraint" /> especificado.</summary>
      <param name="constraint">O <see cref="T:System.Data.Constraint" /> a ser pesquisado.</param>
      <returns>O índice baseado em zero do <see cref="T:System.Data.Constraint" /> se estiver na coleção, caso contrário, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Obtém o índice do <see cref="T:System.Data.Constraint" /> especificado por nome.</summary>
      <param name="constraintName">O nome do <see cref="T:System.Data.Constraint" />.</param>
      <returns>O índice do <see cref="T:System.Data.Constraint" /> se estiver na coleção, caso contrário, -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Obtém o <see cref="T:System.Data.Constraint" /> da coleção no índice especificado.</summary>
      <param name="index">O índice da restrição a ser retornado.</param>
      <returns>O <see cref="T:System.Data.Constraint" /> no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Obtém o <see cref="T:System.Data.Constraint" /> da coleção com o nome especificado.</summary>
      <param name="name">O <see cref="P:System.Data.Constraint.ConstraintName" /> da restrição a ser retornado.</param>
      <returns>O <see cref="T:System.Data.Constraint" /> com o nome especificado; caso contrário, um valor nulo <see cref="T:System.Data.Constraint" /> se o não existir.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Remove o <see cref="T:System.Data.Constraint" /> especificado da coleção.</summary>
      <param name="constraint">O <see cref="T:System.Data.Constraint" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="constraint" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A restrição não pertence à coleção.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.Constraint" /> especificado por nome da coleção.</summary>
      <param name="name">O nome do <see cref="T:System.Data.Constraint" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Remove o objeto <see cref="T:System.Data.Constraint" /> no índice especificado da coleção.</summary>
      <param name="index">O índice do <see cref="T:System.Data.Constraint" /> a ser removido.</param>
      <exception cref="T:System.IndexOutOfRangeException">A coleção não tem uma restrição no índice.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Representa a exceção gerada ao tentar uma ação que viola uma restrição.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" />. Esse é o construtor sem parâmetros.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" /> usando o contexto de fluxo e serialização especificadas.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" /> usando a cadeia de caracteres e a exceção interna especificadas.</summary>
      <param name="message">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="innerException">Obtém a instância <see langword="Exception" /> que causou a exceção atual.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Representa o esquema de uma coluna em um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataColumn" /> como uma cadeia de caracteres de tipo.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" />, como cadeia de caracteres de tipo, usando o nome de coluna especificado.</summary>
      <param name="columnName">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando a o nome da coluna e o tipo de dados especificados.</summary>
      <param name="columnName">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
      <param name="dataType">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</param>
      <exception cref="T:System.ArgumentNullException">Nenhum <paramref name="dataType" /> foi especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando o nome do parâmetro, o tipo de dados e a expressão especificados.</summary>
      <param name="columnName">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
      <param name="dataType">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</param>
      <param name="expr">A expressão usada para criar esta coluna. Para obter mais informações, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">Nenhum <paramref name="dataType" /> foi especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando o nome especificado, o tipo de dados, a expressão e o valor que determina se a coluna é um atributo.</summary>
      <param name="columnName">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
      <param name="dataType">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</param>
      <param name="expr">A expressão usada para criar esta coluna. Para obter mais informações, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type">Um dos valores de <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException">Nenhum <paramref name="dataType" /> foi especificado.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Obtém ou define um valor que indica se valores nulos são permitidos nesta coluna para linhas que pertencem à tabela.</summary>
      <returns>
        <see langword="true" />Se forem permitidos valores nulos; caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Obtém ou define um valor que indica se a coluna incrementa automaticamente o valor da coluna para novas linhas adicionadas à tabela.</summary>
      <returns>
        <see langword="true" /> se o valor da coluna for incrementado automaticamente; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">A coluna é uma coluna computada.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Obtém ou define o valor inicial de uma coluna que tem a propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> definida como <see langword="true" />. O padrão é 0.</summary>
      <returns>O valor inicial para o recurso <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Obtém ou define o incremento usado por uma coluna com sua propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> definida como <see langword="true" />.</summary>
      <returns>O número pelo qual o valor da coluna é incrementado automaticamente. O padrão é 1.</returns>
      <exception cref="T:System.ArgumentException">O valor definido é zero.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Obtém ou define a legenda da coluna.</summary>
      <returns>A legenda da coluna. Se não for definido, retornará o valor <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Obtém ou define o <see cref="T:System.Data.MappingType" /> da coluna.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Obtém ou define o nome da coluna no <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>O nome da coluna.</returns>
      <exception cref="T:System.ArgumentException">A propriedade é definida como <see langword="null" /> ou com uma cadeia de caracteres vazia e a coluna pertence a uma coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Uma coluna com o mesmo nome já existe na coleção. A comparação de nomes não diferencia maiúsculas de minúsculas.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Obtém ou define o tipo dos dados armazenados na coluna.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa o tipo de dados da coluna.</returns>
      <exception cref="T:System.ArgumentException">A coluna já tem dados armazenados.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Obtém ou define o <see langword="DateTimeMode" /> da coluna.</summary>
      <returns>O <see cref="T:System.Data.DataSetDateTime" /> da coluna especificada.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Obtém ou define o valor padrão para a coluna ao criar novas linhas.</summary>
      <returns>Um valor apropriado para <see cref="P:System.Data.DataColumn.DataType" /> da coluna.</returns>
      <exception cref="T:System.InvalidCastException">Quando você estiver adicionando uma linha, o valor padrão não será uma instância do tipo de dados da coluna.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Obtém ou define a expressão usada para filtrar linhas, calcular os valores em uma coluna ou criar uma coluna de agregação.</summary>
      <returns>Uma expressão para calcular o valor de uma coluna, ou criar uma coluna agregada. O tipo de retorno de uma expressão é determinado pelo <see cref="P:System.Data.DataColumn.DataType" /> da coluna.</returns>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> ou <see cref="P:System.Data.DataColumn.Unique" /> é definida como <see langword="true" />.</exception>
      <exception cref="T:System.FormatException">Quando você usa a função CONVERT, a expressão é avaliada como uma cadeia de caracteres, mas a cadeia de caracteres não contém uma representação que pode ser convertida para o parâmetro de tipo.</exception>
      <exception cref="T:System.InvalidCastException">Quando você usa a função CONVERT, a conversão solicitada não é possível. Consulte a função Conversão na seção a seguir para obter informações detalhadas sobre as possíveis conversões.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Quando você usa a função SUBSTRING, o argumento de início está fora do intervalo.  
-Ou- 
Quando você usa a função SUBSTRING, o argumento de tamanho está fora do intervalo.</exception>
      <exception cref="T:System.Exception">Quando você usa a função LEN ou TRIM, a expressão não é avaliada como uma cadeia de caracteres. Isso inclui as expressões avaliadas como <see cref="T:System.Char" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Obtém a coleção de informações de usuário personalizadas associadas a um <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>Um <see cref="T:System.Data.PropertyCollection" /> das informações personalizadas.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Obtém ou define o tamanho máximo de uma coluna de texto.</summary>
      <returns>O tamanho máximo da coluna em caracteres. Se a coluna não tiver comprimento máximo, o valor será-1 (padrão).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Obtém ou define o namespace do <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>O namespace do <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException">O namespace já tem dados.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="pcevent">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Obtém a posição (de base zero) da coluna na coleção <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>A posição da coluna. Obterá -1 se a coluna não for membro de uma coleção.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Obtém ou define um prefixo XML que cria o alias do namespace do <see cref="T:System.Data.DataTable" />.</summary>
      <returns>O prefixo XML para o namespace <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="name">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Obtém ou define um valor que indica se a coluna permite alterações assim que uma linha tiver sido adicionada à tabela.</summary>
      <returns>
        <see langword="true" /> se a coluna for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade é definida como <see langword="false" /> em uma coluna computada.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Altera o ordinal ou a posição do <see cref="T:System.Data.DataColumn" /> para o ordinal ou a posição especificada.</summary>
      <param name="ordinal">O ordinal especificado.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Obtém o <see cref="T:System.Data.DataTable" /> ao qual a coluna pertence.</summary>
      <returns>O <see cref="T:System.Data.DataTable" /> ao qual o <see cref="T:System.Data.DataColumn" /> pertence.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Obtém o <see cref="P:System.Data.DataColumn.Expression" /> da coluna, se houver.</summary>
      <returns>O valor <see cref="P:System.Data.DataColumn.Expression" />, se a propriedade estiver definida; caso contrário, a propriedade <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Obtém ou define um valor que indica se os valores em cada linha da coluna devem ser exclusivos.</summary>
      <returns>
        <see langword="true" /> se o valor deve ser exclusivo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">A coluna é uma coluna calculada.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Data.DataTable.ColumnChanging" /> .</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> da coluna com o valor de alteração.</param>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> com o valor de alteração.</param>
      <param name="value">O novo valor.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Obtém o <see cref="T:System.Data.DataColumn" /> com um valor de alteração.</summary>
      <returns>O <see cref="T:System.Data.DataColumn" /> com um valor de alteração.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Obtém ou define o novo valor proposto para a coluna.</summary>
      <returns>O valor proposto, do tipo <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Obtém o <see cref="T:System.Data.DataRow" /> da coluna com um valor de alteração.</summary>
      <returns>O <see cref="T:System.Data.DataRow" /> da coluna com um valor de alteração.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.Data.DataTable.ColumnChanging" /> .</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.Data.DataColumn" /> para um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Cria e adiciona o objeto especificado <see cref="T:System.Data.DataColumn" /> ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A coluna já pertence a essa coleção ou a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">A expressão é inválida. Para obter mais informações sobre como criar expressões, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> que tem o nome especificado ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">O nome da coluna.</param>
      <returns>O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> que tem o nome e tipo especificado ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">O <see cref="P:System.Data.DataColumn.ColumnName" /> a ser usado ao criar a coluna.</param>
      <param name="type">O <see cref="P:System.Data.DataColumn.DataType" /> da nova coluna.</param>
      <returns>O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">A expressão é inválida. Para obter mais informações sobre como criar expressões, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> que tem o nome, tipo e expressão especificados ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">O nome a ser usado ao criar a coluna.</param>
      <param name="type">O <see cref="P:System.Data.DataColumn.DataType" /> da nova coluna.</param>
      <param name="expression">A expressão a ser atribuída à propriedade <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <returns>O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">A expressão é inválida. Para obter mais informações sobre como criar expressões, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Data.DataColumn" /> especificada para o fim da coleção.</summary>
      <param name="columns">A matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Verifica se uma coluna específica pode ser removida da coleção.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" /> na coleção.</param>
      <returns>
        <see langword="true" /> se a coluna puder ser removida. <see langword="false" /> se, 

O parâmetro <paramref name="column" /> é <see langword="null" />.  

A coluna não pertence a esta coleção.  

A coluna é parte de uma relação.  

Expressão de outra coluna depende desta coluna.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="column" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">A coluna não pertence a esta coleção.

ou -

A coluna é parte de uma relação.

ou -

Expressão de outra coluna depende desta coluna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Limpa a coleção de todas as colunas.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Ocorre quando uma coleção de colunas é alterada, seja pela inclusão ou pela remoção de uma coluna.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Verifica se a coleção tem uma coluna com o nome especificado.</summary>
      <param name="name">O <see cref="P:System.Data.DataColumn.ColumnName" /> da coluna a ser pesquisada.</param>
      <returns>
        <see langword="true" /> se existir uma coluna com este nome; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Copia toda a coleção para uma matriz existente, iniciando em um índice especificado na matriz.</summary>
      <param name="array">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> na qual a coleção será copiada.</param>
      <param name="index">O índice a partir do qual iniciar.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Obtém o índice de uma coluna especificada pelo nome.</summary>
      <param name="column">O nome da coluna a ser retornada.</param>
      <returns>O índice da coluna especificado por <paramref name="column" /> se ele for localizado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Obtém o índice da coluna com o nome específico (o nome não diferencia maiúsculas de minúsculas).</summary>
      <param name="columnName">O nome da coluna a ser encontrado.</param>
      <returns>O índice baseado em zero da coluna com o nome especificado ou -1 se a coluna não existir na coleção.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Obtém o <see cref="T:System.Data.DataColumn" /> da coleção no índice especificado.</summary>
      <param name="index">O índice baseado em zero da coluna a ser retornada.</param>
      <returns>O <see cref="T:System.Data.DataColumn" /> no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Obtém o <see cref="T:System.Data.DataColumn" /> da coleção com o nome especificado.</summary>
      <param name="name">O <see cref="P:System.Data.DataColumn.ColumnName" /> da coleção a ser retornado.</param>
      <returns>O <see cref="T:System.Data.DataColumn" /> na coleção com o <see cref="P:System.Data.DataColumn.ColumnName" /> especificado; caso contrário, um valor nulo se o <see cref="T:System.Data.DataColumn" /> não existir.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Remove o objeto <see cref="T:System.Data.DataColumn" /> especificado da coleção.</summary>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A coluna não pertence a esta coleção.  
 -Ou-  
 A coluna é parte de uma relação.  
 -Ou-  
 Expressão de outra coluna depende desta coluna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Remove da coleção o objeto <see cref="T:System.Data.DataColumn" /> que tem o nome especificado.</summary>
      <param name="name">O nome da coluna a ser removida.</param>
      <exception cref="T:System.ArgumentException">A coleção não tem uma coluna com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Remove a coluna no índice especificado da coleção.</summary>
      <param name="index">O índice da coluna a ser removido.</param>
      <exception cref="T:System.ArgumentException">A coleção não tem uma coluna no índice especificado.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Representa a exceção que é gerada quando erros são gerados usando componentes do ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" />. Esse é o construtor sem parâmetros.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" /> com o contexto e as informações de serialização especificados.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" /> com a cadeia de caracteres e a exceção interna especificadas.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="innerException">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary>Fornece métodos de extensão para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um booliano.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um byte.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lê um número de bytes especificado da coluna especificada começando em um índice especificado e os grava em um buffer começando em uma posição especificada no buffer.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <param name="dataOffset">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length">O número máximo de caracteres a serem lidos.</param>
      <returns>O número real de bytes lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um único caractere.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número de caracteres especificado de uma coluna especificada começando em um índice especificado e os grava em um buffer começando em uma posição especificada.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <param name="dataOffset">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length">O número máximo de caracteres a serem lidos.</param>
      <returns>O número real de caracteres lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary>Retorna um leitor de dados aninhado para a coluna solicitada.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>Um leitor de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o nome do tipo de dados da coluna especificada.</summary>
      <param name="reader">O leitor de dados do qual obter o nome do tipo de coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O nome do tipo de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um <see cref="T:System.Decimal" />.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o tipo de dados da coluna especificada.</summary>
      <param name="reader">O leitor de dados do qual obter o tipo de campo.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O tipo de dados da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <typeparam name="T">O tipo do valor a ser retornado.</typeparam>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou - 
O leitor de dados estava fechado durante a recuperação de dados.  

ou -


Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).  

ou -

O leitor tentou ler uma coluna lida anteriormente em modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Obtém de forma assíncrona o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <param name="cancellationToken">Um token opcional para cancelar a operação assíncrona.</param>
      <typeparam name="T">O tipo do valor a ser retornado.</typeparam>
      <returns>Uma tarefa cujo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados foi fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).

ou -

Tentativa de ler uma coluna lida anteriormente no modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get_*_ executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o tipo específico do provedor da coluna especificada.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>Um tipo .NET específico do provedor.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como uma instância de um tipo específico do provedor.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém um fluxo para recuperar dados da coluna especificada.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>Um fluxo.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não é um tipo binário que dá suporte à leitura com um <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como uma instância de <see cref="T:System.String" />.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém um leitor de texto para recuperar dados da coluna.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>Um leitor de texto.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.  

ou -

Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não é um tipo de texto que dá suporte à leitura com um <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtém um valor que indica se a coluna contém valores ausentes ou inexistentes.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <returns>
        <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Obtém, de maneira assíncrona, um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="reader">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name">O nome da coluna.</param>
      <param name="cancellationToken">Um token opcional para cancelar a operação assíncrona.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" /> ou será <see langword="false" /> se não for.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão caiu ou foi fechada durante a recuperação de dados.  

ou -

O leitor de dados é fechado durante a recuperação de dados.  

ou -

Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).  

ou -

Tentando ler uma coluna lida anteriormente no modo sequencial.  

ou - 
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Representa uma relação pai/filho entre dois objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome <see cref="T:System.Data.DataRelation" /> especificado e os objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="relationName">O nome do <see cref="T:System.Data.DataRelation" />. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn">O pai <see cref="T:System.Data.DataColumn" /> na relação.</param>
      <param name="childColumn">O filho <see cref="T:System.Data.DataColumn" /> na relação.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> contêm <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm diferentes tipos de dados 
-Ou- 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome especificado, os objetos <see cref="T:System.Data.DataColumn" /> pai e filho e um valor que indica se é necessário criar restrições.</summary>
      <param name="relationName">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn">O <see cref="T:System.Data.DataColumn" /> pai na relação.</param>
      <param name="childColumn">O <see cref="T:System.Data.DataColumn" /> filho na relação.</param>
      <param name="createConstraints">Um valor que indica se é restrições são ou não criadas. <see langword="true" /> se as restrições são criadas. Caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> contêm <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm diferentes tipos de dados 
-Ou- 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome <see cref="T:System.Data.DataRelation" /> e matrizes correspondentes de objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="relationName">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns">Uma matriz de objetos filho <see cref="T:System.Data.DataColumn" /> .</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> contêm <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Os objetos <see cref="T:System.Data.DataColumn" /> têm diferentes tipos de dados 
-Ou- 
Uma ou ambas as matrizes não são compostas por colunas diferentes da mesma tabela.  
-Ou- 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome especificado, matrizes correspondentes de objetos <see cref="T:System.Data.DataColumn" /> pai e filho e um valor que indica se é necessário criar restrições.</summary>
      <param name="relationName">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns">Uma matriz de objetos filho <see cref="T:System.Data.DataColumn" /> .</param>
      <param name="createConstraints">Um valor que indica se é necessário criar restrições. <see langword="true" /> se as restrições forem criadas. Caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm diferentes tipos de dados 
-Ou- 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio.</summary>
      <param name="relationName">O nome do <see cref="T:System.Data.DataRelation" />. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela pai da relação.</param>
      <param name="parentTableNamespace">O nome do namespace da tabela pai.</param>
      <param name="childTableName">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela filho da relação.</param>
      <param name="childTableNamespace">O nome do namespace da tabela filho.</param>
      <param name="parentColumnNames">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> pai da relação.</param>
      <param name="childColumnNames">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> filho da relação.</param>
      <param name="nested">Um valor que indica se as relações são aninhadas.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio.</summary>
      <param name="relationName">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela pai da relação.</param>
      <param name="childTableName">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela filho da relação.</param>
      <param name="parentColumnNames">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> pai da relação.</param>
      <param name="childColumnNames">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> filho da relação.</param>
      <param name="nested">Um valor que indica se as relações são aninhadas.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>Esse método oferece suporte a infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código.</summary>
      <exception cref="T:System.Data.DataException">As tabelas pai e filho pertencem a diferentes objetos <see cref="T:System.Data.DataSet" />.  
-Ou- 
Um ou mais pares de objetos <see cref="T:System.Data.DataColumn" /> pai e filho têm tipos de dados incompatíveis.  
-Ou- 
Os objetos <see cref="T:System.Data.DataColumn" /> pai e filho são idênticos.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Obtém os objetos <see cref="T:System.Data.DataColumn" /> filho dessa relação.</summary>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Obtém o <see cref="T:System.Data.ForeignKeyConstraint" /> para a relação.</summary>
      <returns>Um <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Obtém a tabela filho dessa relação.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que é a tabela filho da relação.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Obtém o <see cref="T:System.Data.DataSet" /> ao qual o <see cref="T:System.Data.DataRelation" /> pertence.</summary>
      <returns>Um <see cref="T:System.Data.DataSet" /> ao qual o <see cref="T:System.Data.DataRelation" /> pertence.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Obtém a coleção que armazena as propriedades personalizadas.</summary>
      <returns>Um <see cref="T:System.Data.PropertyCollection" /> que contém propriedades personalizadas.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Obtém ou define um valor que indica se os objetos <see cref="T:System.Data.DataRelation" /> são aninhados.</summary>
      <returns>
        <see langword="true" /> se os objetos <see cref="T:System.Data.DataRelation" /> forem aninhados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="pcevent">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Obtém uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que são as colunas pai desse <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Uma matriz de <see cref="T:System.Data.DataColumn" /> objetos que são as colunas pai <see cref="T:System.Data.DataRelation" />deste.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Obtém o <see cref="T:System.Data.UniqueConstraint" /> que garante que os valores na coluna pai de um <see cref="T:System.Data.DataRelation" /> são exclusivos.</summary>
      <returns>Um <see cref="T:System.Data.UniqueConstraint" /> valor que garante que os valores em uma coluna pai sejam exclusivos.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Obtém o pai <see cref="T:System.Data.DataTable" /> desse <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Uma <see cref="T:System.Data.DataTable" /> que é a tabela pai dessa relação.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="name">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Obtém ou define o nome usado para recuperar um <see cref="T:System.Data.DataRelation" /> do <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns>O nome do a <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> ou a cadeia de caracteres vazia ("") foi passada em um <see cref="T:System.Data.DataColumn" /> que é um <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A <see cref="T:System.Data.DataRelation" /> pertence a uma coleção que já contém uma <see cref="T:System.Data.DataRelation" /> com o mesmo nome.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Obtém o <see cref="P:System.Data.DataRelation.RelationName" />, se houver.</summary>
      <returns>O valor da propriedade <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Representa a coleção de objetos <see cref="T:System.Data.DataRelation" /> para este <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Cria um <see cref="T:System.Data.DataRelation" /> com uma coluna pai e filho especificada e a adiciona à coleção.</summary>
      <param name="parentColumn">A coluna pai da relação.</param>
      <param name="childColumn">A coluna filho da relação.</param>
      <returns>A relação criada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Cria um <see cref="T:System.Data.DataRelation" /> com as colunas pai e filho especificadas e as adiciona à coleção.</summary>
      <param name="parentColumns">As colunas pai da relação.</param>
      <param name="childColumns">As colunas filho da relação.</param>
      <returns>A relação criada.</returns>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="relation" /> é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Adiciona um <see cref="T:System.Data.DataRelation" /> ao <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">O <see langword="DataRelation" /> a adicionar à coleção.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="relation" /> é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma relação com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Cria um <see cref="T:System.Data.DataRelation" /> com o nome e as colunas pai e filho especificadas e os adiciona à coleção.</summary>
      <param name="name">O nome da relação.</param>
      <param name="parentColumn">A coluna pai da relação.</param>
      <param name="childColumn">A coluna filho da relação.</param>
      <returns>A relação criada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Cria um <see cref="T:System.Data.DataRelation" /> com o nome especificado e colunas pai e filho, com restrições opcionais de acordo com o valor do parâmetro <paramref name="createConstraints" /> e o adiciona à coleção.</summary>
      <param name="name">O nome da relação.</param>
      <param name="parentColumn">A coluna pai da relação.</param>
      <param name="childColumn">A coluna filho da relação.</param>
      <param name="createConstraints">
        <see langword="true" /> para criar restrições; caso contrário, <see langword="false" />. (O padrão é <see langword="true" />).</param>
      <returns>A relação criada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Cria um <see cref="T:System.Data.DataRelation" /> com o nome e as matrizes de colunas pai e filho especificadas e os adiciona à coleção.</summary>
      <param name="name">O nome do <see langword="DataRelation" /> a ser criado.</param>
      <param name="parentColumns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns">Uma matriz de objetos filho <see langword="DataColumn" /> .</param>
      <returns>O <see langword="DataRelation" /> criado.</returns>
      <exception cref="T:System.ArgumentNullException">O nome da relação é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Cria um <see cref="T:System.Data.DataRelation" /> com o nome especificado, matrizes de colunas pai e filho e um valor que especifica se uma restrição deve ser criada e o adiciona à coleção.</summary>
      <param name="name">O nome do <see langword="DataRelation" /> a ser criado.</param>
      <param name="parentColumns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns">Uma matriz de objetos filho <see langword="DataColumn" /> .</param>
      <param name="createConstraints">
        <see langword="true" /> para criar uma restrição; caso contrário, <see langword="false" />.</param>
      <returns>A relação criada.</returns>
      <exception cref="T:System.ArgumentNullException">O nome da relação é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Executa a verificação na tabela.</summary>
      <param name="relation">A relação a ser verificada.</param>
      <exception cref="T:System.ArgumentNullException">A relação é nula.</exception>
      <exception cref="T:System.ArgumentException">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Data.DataRelation" /> especificada para o fim da coleção.</summary>
      <param name="relations">A matriz de objetos <see cref="T:System.Data.DataRelation" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Verifica se o <see cref="T:System.Data.DataRelation" /> especificado pode ser removido da coleção.</summary>
      <param name="relation">A relação na qual executar a verificação.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.DataRelation" /> puder ser removido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Limpa a coleção de todas as relações.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Ocorre quando a coleção foi alterada.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Verifica se um <see cref="T:System.Data.DataRelation" /> com o nome específico (não diferencia maiúsculas de minúsculas) existe na coleção.</summary>
      <param name="name">O nome da relação a ser localizada.</param>
      <returns>
        <see langword="true" />, se existir uma relação com o nome especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Copia a coleção de objetos <see cref="T:System.Data.DataRelation" /> começando no índice especificado.</summary>
      <param name="array">A matriz de objetos <see cref="T:System.Data.DataRelation" /> para a qual copiar a coleção.</param>
      <param name="index">O índice a partir do qual iniciar.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>Esse método oferece suporte a infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código.</summary>
      <returns>O DataSet referenciado.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Obtém o índice do objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">A relação a ser pesquisada.</param>
      <returns>O índice baseado em 0 da relação ou -1 se a relação não for encontrada na coleção.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Obtém o índice do <see cref="T:System.Data.DataRelation" /> especificado por nome.</summary>
      <param name="relationName">O nome da relação a ser localizada.</param>
      <returns>O índice baseado em zero da relação com o nome especificado ou -1 se a relação não existir na coleção.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Obtém o objeto <see cref="T:System.Data.DataRelation" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero a ser localizado.</param>
      <returns>O <see cref="T:System.Data.DataRelation" />, ou um valor nulo se o especificado <see cref="T:System.Data.DataRelation" /> não existir.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Obtém o objeto <see cref="T:System.Data.DataRelation" /> especificado por nome.</summary>
      <param name="name">O nome da relação a ser localizada.</param>
      <returns>O nome <see cref="T:System.Data.DataRelation" />, ou um valor nulo, se o <see cref="T:System.Data.DataRelation" /> especificado não existir.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Remove a relação especificada da coleção.</summary>
      <param name="relation">A relação a ser removida.</param>
      <exception cref="T:System.ArgumentNullException">A relação é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException">A relação não pertence à coleção.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Remove a relação com o nome especificado da coleção.</summary>
      <param name="name">O nome da relação a ser removida.</param>
      <exception cref="T:System.IndexOutOfRangeException">A coleção não tem uma relação com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Remove a relação no índice especificado da coleção.</summary>
      <param name="index">O índice da relação a ser removida.</param>
      <exception cref="T:System.ArgumentException">A coleção não tem uma relação no índice especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Realiza uma verificação no objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">O objeto <see langword="DataRelation" /> a ser verificado.</param>
      <exception cref="T:System.ArgumentNullException">A coleção não tem uma relação no índice especificado.</exception>
      <exception cref="T:System.ArgumentException">A relação especificada não pertence a essa coleção ou pertence a outra coleção.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Representa uma linha de dados em um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Inicializa uma nova instância do DataRow. Constrói uma linha do construtor. Somente para uso interno.</summary>
      <param name="builder">construtor</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Confirma todas as alterações feitas nessa linha desde a última vez que <see cref="M:System.Data.DataRow.AcceptChanges" /> foi chamado.</summary>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Inicia uma operação de edição em um objeto <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">O método foi chamado dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">O método foi chamado em uma linha excluída.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Cancela a edição atual da linha.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">O método foi chamado dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Limpa os erros da linha. Isso inclui o <see cref="P:System.Data.DataRow.RowError" /> e erros definidos com <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Exclui o <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">O <see cref="T:System.Data.DataRow" /> já foi excluído.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Finaliza a edição que ocorre na linha.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">O método foi chamado dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException">A edição violou uma restrição.</exception>
      <exception cref="T:System.Data.ReadOnlyException">A linha pertence à tabela e a edição tentou alterar o valor de uma coluna somente leitura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">A edição tentou colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Obtém as linhas filho deste <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException">A relação é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem esta versão de dados.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtém as linhas filho de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Obtém as linhas filhas de uma <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">O <see cref="P:System.Data.DataRelation.RelationName" /> da <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Obtém as linhas filho de uma <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">O <see cref="P:System.Data.DataRelation.RelationName" /> da <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Obtém a descrição de erro da <see cref="T:System.Data.DataColumn" /> especificada.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" />.</param>
      <returns>O texto da descrição do erro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Obtém a descrição do erro da coluna especificada pelo índice.</summary>
      <param name="columnIndex">O índice com base em zero da coluna.</param>
      <returns>O texto da descrição do erro.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O argumento <paramref name="columnIndex" /> está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Obtém a descrição do erro da coluna, especificada pelo nome.</summary>
      <param name="columnName">O nome da coluna.</param>
      <returns>O texto da descrição do erro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Obtém uma matriz de colunas que contêm erros.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que contêm erros.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns>O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentNullException">O <paramref name="relation" /> não pertence ao <see cref="T:System.Data.DataTable" />.  

ou -

A linha é <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Essa linha não pertence à tabela filho do objeto <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence a uma tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" />e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos.</param>
      <returns>O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentNullException">A linha é <see langword="null" />.  

ou -

O <paramref name="relation" /> não pertence às relações pai dessa tabela.</exception>
      <exception cref="T:System.Data.DataException">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A tabela filho da relação não é a tabela à qual a linha pertence.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence a uma tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem esta versão de dados.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <returns>O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.Data.DataException">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Um dos valores de <see cref="T:System.Data.DataRowVersion" />.</param>
      <returns>O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Data.DataRelation" /> não pertence ao <see cref="T:System.Data.DataSet" /> dessa linha.</exception>
      <exception cref="T:System.ArgumentNullException">A linha é <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A tabela filho da relação não é a tabela à qual a linha pertence.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence a uma <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando a <see cref="T:System.Data.DataRelation" /> especificada e a <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Data.DataRelation" /> não pertence ao <see cref="T:System.Data.DataSet" /> dessa linha.</exception>
      <exception cref="T:System.ArgumentNullException">A linha é <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">A tabela filho da relação não é a tabela à qual a linha pertence.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence a uma <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de um <see cref="T:System.Data.DataRelation" /> e a <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Obtém um valor que indica se há erros em uma linha.</summary>
      <returns>
        <see langword="true" /> se a linha contiver um erro; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Obtém um valor que indica se existe uma versão especificada.</summary>
      <param name="version">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha.</param>
      <returns>
        <see langword="true" /> se a versão existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataColumn" /> especificado contém um valor null.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataColumn" /> e <see cref="T:System.Data.DataRowVersion" /> especificados contêm um valor nulo.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem o <paramref name="version" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Obtém um valor que indica se a coluna no índice especificado contém um valor nulo.</summary>
      <param name="columnIndex">O índice com base em zero da coluna.</param>
      <returns>
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Nenhuma coluna corresponde ao índice especificado por <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Obtém um valor que indica se a coluna nomeada contém um valor null.</summary>
      <param name="columnName">O nome da coluna.</param>
      <returns>
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Obtém ou define os dados armazenados no <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" /> que contém os dados.</param>
      <returns>Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException">A coluna não pertence a essa tabela.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="column" /> é nulo.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorreu uma tentativa de definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException">Os tipos de dados do valor e a coluna não correspondem.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Obtém a versão especificada de dados armazenados no <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" /> que contém informações sobre a coluna.</param>
      <param name="version">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha que você deseja. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException">A coluna não pertence à tabela.</exception>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="column" /> contém null.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem esta versão de dados.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Obtém ou define os dados armazenados na coluna especificada por índice.</summary>
      <param name="columnIndex">O índice com base em zero da coluna.</param>
      <returns>Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorre quando você tenta definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O argumento <paramref name="columnIndex" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">Ocorre quando você define o valor e o <see cref="T:System.Type" /> do novo valor não corresponde a <see cref="P:System.Data.DataColumn.DataType" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Obtém os dados armazenados na coluna, especificados pelo índice e a versão dos dados a serem recuperados.</summary>
      <param name="columnIndex">O índice com base em zero da coluna.</param>
      <param name="version">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha que você deseja. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O argumento <paramref name="columnIndex" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">Os tipos de dados do valor e a coluna não correspondem.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem esta versão de dados.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorreu uma tentativa de definir um valor em uma linha excluída.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Obtém ou define os dados armazenados na coluna especificada por nome.</summary>
      <param name="columnName">O nome da coluna.</param>
      <returns>Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorre quando você tenta definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException">Ocorre quando você define um valor e seu <see cref="T:System.Type" /> não corresponde a <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Ocorre quando você tentar inserir um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> está definido como <see langword="false" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Obtém a versão especificada de dados armazenados na coluna nomeada.</summary>
      <param name="columnName">O nome da coluna.</param>
      <param name="version">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha que você deseja. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns>Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.InvalidCastException">Os tipos de dados do valor e a coluna não correspondem.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">A linha não tem esta versão de dados.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">A linha foi excluída.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Obtém ou define todos os valores para essa linha por meio de uma matriz.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException">A matriz é maior que o número de colunas na tabela.</exception>
      <exception cref="T:System.InvalidCastException">Um valor na matriz não corresponde ao <see cref="P:System.Data.DataColumn.DataType" /> no <see cref="T:System.Data.DataColumn" /> respectivo.</exception>
      <exception cref="T:System.Data.ConstraintException">Uma edição violou uma restrição.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Uma edição tentou alterar o valor de uma coluna somente leitura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Uma edição tentou colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> do objeto <see cref="T:System.Data.DataColumn" /> é <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">A linha foi excluída.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Rejeita todas as alterações feitas na linha desde que <see cref="M:System.Data.DataRow.AcceptChanges" /> foi chamado pela última vez.</summary>
      <exception cref="T:System.Data.RowNotInTableException">A linha não pertence à tabela.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Obtém ou define a descrição de erro personalizada de uma linha.</summary>
      <returns>O texto que descreve um erro.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Obtém o estado atual da linha no que diz respeito à sua relação com o <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Altera o <see cref="P:System.Data.DataRow.RowState" /> de um <see cref="T:System.Data.DataRow" /> para <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Define a descrição do erro para uma coluna especificada como um <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> para o qual definir a descrição do erro.</param>
      <param name="error">A descrição do erro.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Define a descrição do erro da coluna especificada pelo índice.</summary>
      <param name="columnIndex">O índice com base em zero da coluna.</param>
      <param name="error">A descrição do erro.</param>
      <exception cref="T:System.IndexOutOfRangeException">O argumento <paramref name="columnIndex" /> está fora do intervalo</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Define a descrição do erro da coluna especificada pelo nome.</summary>
      <param name="columnName">O nome da coluna.</param>
      <param name="error">A descrição do erro.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Altera o <see cref="P:System.Data.DataRow.RowState" /> de um <see cref="T:System.Data.DataRow" /> para <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Define o valor do <see cref="T:System.Data.DataColumn" /> especificado para um valor nulo.</summary>
      <param name="column">Um <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Define a linha pai de um <see cref="T:System.Data.DataRow" /> com novo pai especificado <see cref="T:System.Data.DataRow" />.</summary>
      <param name="parentRow">O novo pai <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Define a linha pai de um <see cref="T:System.Data.DataRow" /> com novo pai especificado <see cref="T:System.Data.DataRow" /> e <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow">O novo pai <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation">A relação <see cref="T:System.Data.DataRelation" /> a ser usada.</param>
      <exception cref="T:System.Data.RowNotInTableException">Uma das linhas não pertence a uma tabela</exception>
      <exception cref="T:System.ArgumentNullException">Uma das linhas é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A relação não pertence ao <see cref="T:System.Data.DataRelationCollection" /> do objeto <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">O filho <see cref="T:System.Data.DataTable" /> da relação não é a tabela a qual essa linha pertence.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Obtém o <see cref="T:System.Data.DataTable" /> para o qual essa linha tem um esquema.</summary>
      <returns>O <see cref="T:System.Data.DataTable" /> ao qual essa linha pertence.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Descreve uma ação executada em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>A linha foi adicionada à tabela.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>A linha foi alterada.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>As versões original e atual da linha foram alteradas.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>A versão original da linha foi alterada.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>As alterações na linha foram confirmadas.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>A linha foi excluída da tabela.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>A linha não foi alterada.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>A alteração mais recente na linha foi revertida.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>O tipo <see langword="DataRowBuilder" /> dá suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Fornece dados para os eventos <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> e <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row">A <see cref="T:System.Data.DataRow" /> na qual uma ação está ocorrendo.</param>
      <param name="action">Um dos valores de <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Obtém a ação que ocorreu em uma <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Obtém a linha em que uma ação ocorreu.</summary>
      <returns>O <see cref="T:System.Data.DataRow" /> no qual ocorreu uma ação.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>Representa o método que manipulará os eventos <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> e <see cref="E:System.Data.DataTable.RowDeleted" /> de um <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Representa uma coleção de linhas para um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Adiciona o <see cref="T:System.Data.DataRow" /> especificado ao objeto <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">A linha é nula.</exception>
      <exception cref="T:System.ArgumentException">A linha pertence a outra tabela ou já pertence a esta tabela.</exception>
      <exception cref="T:System.Data.ConstraintException">A adição invalida uma restrição.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">A adição tenta colocar um valor nulo em um <see cref="T:System.Data.DataColumn" /> em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é falso.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Cria uma linha usando os valores especificados e a adiciona ao <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values">Uma matriz de valores usados para criar a nova linha.</param>
      <returns>nenhuma.</returns>
      <exception cref="T:System.ArgumentException">A matriz é maior que o número de colunas na tabela.</exception>
      <exception cref="T:System.InvalidCastException">Um valor não corresponde a seu respectivo tipo de coluna.</exception>
      <exception cref="T:System.Data.ConstraintException">Adicionar a linha invalida uma restrição.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Tentativa de colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é falso.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Limpa a coleção de todas as linhas.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">Uma <see cref="T:System.Data.ForeignKeyConstraint" /> é aplicada no <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Obtém um valor que indica se a chave primária de qualquer linha na coleção contém o valor especificado.</summary>
      <param name="key">O valor da chave primária para a qual testar.</param>
      <returns>
        <see langword="true" /> se a coleção contiver um <see cref="T:System.Data.DataRow" /> com o valor especificado da chave primária; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Obtém um valor que indica se as colunas de chave primária de qualquer linha na coleção contêm os valores especificados na matriz de objetos.</summary>
      <param name="keys">Uma matriz de valores de chave primária para os quais testar.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.DataRowCollection" /> contiver um <see cref="T:System.Data.DataRow" /> com os valores de chave especificados; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos os objetos <see cref="T:System.Data.DataRow" /> da coleção para a matriz fornecida, começando pelo índice da matriz de destino especificado.</summary>
      <param name="ar">A matriz unidimensional que é o destino dos elementos copiados do <see langword="DataRowCollection" />. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice de base zero na matriz em que a cópia começa.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Copia todos os objetos <see cref="T:System.Data.DataRow" /> da coleção para a matriz fornecida, começando pelo índice da matriz de destino especificado.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados do <see langword="DataRowCollection" />. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice de base zero na matriz em que a cópia começa.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Obtém o número total de objetos <see cref="T:System.Data.DataRow" /> nesta coleção.</summary>
      <returns>O número total de objetos <see cref="T:System.Data.DataRow" /> nesta coleção.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Obtém a linha especificada pelo valor da chave primária.</summary>
      <param name="key">O valor da chave primária do <see cref="T:System.Data.DataRow" /> a ser encontrado.</param>
      <returns>Um <see cref="T:System.Data.DataRow" /> que contém o valor de chave primária especificada; caso contrário, um valor nulo, se o valor da chave primária não existir no <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Obtém a linha que contém os valores de chave primária especificados.</summary>
      <param name="keys">Uma matriz de valores de chave primária a serem localizados. O tipo da matriz é <see langword="Object" />.</param>
      <returns>Um objeto <see cref="T:System.Data.DataRow" /> que contém o valor de chave primária especificada; caso contrário, um valor nulo, se o valor da chave primária não existir no <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Nenhuma linha corresponde a esse valor de índice.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Obtém um <see cref="T:System.Collections.IEnumerator" /> para essa coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para essa coleção.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Obtém o índice do objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row">O <see langword="DataRow" /> a ser pesquisado.</param>
      <returns>O índice baseado em zero da linha ou -1, se a linha não for encontrada na coleção.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Insere uma nova linha na coleção na localização especificada.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> a ser adicionado.</param>
      <param name="pos">A localização (baseada em zero) na coleção à qual você deseja adicionar o <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">O <paramref name="pos" /> é menor que 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Obtém a linha no índice especificado.</summary>
      <param name="index">O índice baseado em zero da linha a ser retornada.</param>
      <returns>O <see cref="T:System.Data.DataRow" /> especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Remove o <see cref="T:System.Data.DataRow" /> especificado da coleção.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Remove a linha no índice especificado da coleção.</summary>
      <param name="index">O índice da linha a ser removida.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary>Retorna uma instância singleton da classe <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary>Obtém uma instância singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propriedade é somente para leitura.</summary>
      <returns>Uma instância de um <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary>Compara a equivalência de dois objetos <see cref="T:System.Data.DataRow" /> usando uma comparação baseada em valor.</summary>
      <typeparam name="TRow">O tipo de objetos a serem comparados, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary>Obtém uma instância singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propriedade é somente para leitura.</summary>
      <returns>Uma instância de um <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary>Compara dois objetos <see cref="T:System.Data.DataRow" /> usando uma comparação por coluna baseada em valor.</summary>
      <param name="leftRow">O primeiro objeto <see cref="T:System.Data.DataRow" /> a ser comparado.</param>
      <param name="rightRow">O segundo objeto <see cref="T:System.Data.DataRow" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se os dois objetos <see cref="T:System.Data.DataRow" /> tiverem conjuntos ordenados de valores de coluna iguais, caso contrário,<see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Um ou os dois objetos <see cref="T:System.Data.DataRow" /> de origem são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary>Retorna um código hash para o objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> do qual o código hash será calculado.</param>
      <returns>Um valor <see cref="T:System.Int32" /> que representa o código hash da linha.</returns>
      <exception cref="T:System.ArgumentException">Os objetos <see cref="T:System.Data.DataRow" /> de origem não pertencem a um <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Os objetos <see cref="T:System.Data.DataRow" /> de origem são <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary>Define os métodos de extensão para a classe <see cref="T:System.Data.DataRow" />. Está é uma classe estática.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary>Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> de entrada, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="column">O objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica a coluna cujo valor deverá ser retornado.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns>O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" />.</returns>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">A coluna especificada por <paramref name="column" /> não ocorre no <see cref="T:System.Data.DataTable" /> do qual o <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> de entrada, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="column">O objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica a coluna cujo valor deverá ser retornado.</param>
      <param name="version">Uma enumeração <see cref="T:System.Data.DataRowVersion" /> que especifica a versão do valor da coluna a ser retornada, como a versão <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns>O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" /> e <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">A coluna especificada por <paramref name="column" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary>Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnIndex">O índice da coluna.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns>O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnIndex" />.</returns>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">A coluna especificada por <paramref name="ordinal" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary>Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnIndex">A posição ordinal baseada em zero da coluna da qual retornar o valor.</param>
      <param name="version">Uma enumeração <see cref="T:System.Data.DataRowVersion" /> que especifica a versão do valor da coluna a ser retornada, como a versão <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns>O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="ordinal" /> e <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">A coluna especificada por <paramref name="ordinal" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary>Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnName">O nome da coluna para o qual o valor será retornado.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns>O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" />.</returns>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">A coluna especificada por <paramref name="columnName" /> não ocorre no <see cref="T:System.Data.DataTable" /> do qual o <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException">Um valor <see langword="null" /> foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary>Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnName">O nome da coluna para o qual o valor será retornado.</param>
      <param name="version">Uma enumeração <see cref="T:System.Data.DataRowVersion" /> que especifica a versão do valor da coluna a ser retornada, como a versão <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns>O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" /> e <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">A coluna especificada por <paramref name="columnName" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary>Define um novo valor para a coluna especificada no <see cref="T:System.Data.DataRow" />. O método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="column">A entrada <see cref="T:System.Data.DataColumn" /> especifica qual valor de linha a ser recuperado.</param>
      <param name="value">O novo valor de linha para a coluna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de valor da coluna.</typeparam>
      <exception cref="T:System.ArgumentException">A coluna especificada por <paramref name="column" /> não pode ser encontrada.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="column" /> é nulo.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorre ao tentar definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary>Define um novo valor para a coluna especificada na <see cref="T:System.Data.DataRow" /> em que o método é chamado. O método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnIndex">A posição ordinal baseada em zero da coluna da qual definir o valor.</param>
      <param name="value">O novo valor de linha para a coluna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de valor da coluna.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorre ao tentar definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O argumento <paramref name="ordinal" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary>Define um novo valor para a coluna especificada no <see cref="T:System.Data.DataRow" />. O método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> também dá suporte a tipos que permitem valor nulo.</summary>
      <param name="row">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnName">O nome da coluna para o qual o valor será definido.</param>
      <param name="value">O novo valor de linha para a coluna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T">Um parâmetro genérico que especifica o tipo de valor da coluna.</typeparam>
      <exception cref="T:System.ArgumentException">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Ocorre ao tentar definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Obtém o estado de um objeto <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>A linha foi adicionada a um <see cref="T:System.Data.DataRowCollection" /> e <see cref="M:System.Data.DataRow.AcceptChanges" /> não foi chamado.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>A linha foi excluída usando o método <see cref="M:System.Data.DataRow.Delete" /> do <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>A linha foi criada, mas não faz parte de nenhum <see cref="T:System.Data.DataRowCollection" />. Um <see cref="T:System.Data.DataRow" /> ficará nesse estado imediatamente depois de ser criado e antes de ser adicionado a uma coleção ou se ele tiver sido removido de uma coleção.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>A linha foi modificada e <see cref="M:System.Data.DataRow.AcceptChanges" /> não foi chamado.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>A linha não foi alterada desde a última chamada a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Descreve a versão de um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>A linha contém os valores atuais.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>A versão padrão do <see cref="T:System.Data.DataRowState" />. Para um valor <see langword="DataRowState" /> igual a <see langword="Added" />, <see langword="Modified" /> ou <see langword="Deleted" />, a versão padrão é <see langword="Current" />. Para um valor <see cref="T:System.Data.DataRowState" /> igual a <see langword="Detached" />, a versão é <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>A linha contém os valores originais.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>A linha contém um valor proposto.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Representa uma exibição personalizada de um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Inicia um procedimento de edição.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Cancela um procedimento de edição.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o <see cref="T:System.Data.DataRelation" /> filho especificado.</summary>
      <param name="relation">O objeto <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary>Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o pai e o <see cref="T:System.Data.DataRelation" /> especificados.</summary>
      <param name="relation">O objeto <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">O objeto pai.</param>
      <returns>Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o nome de <see cref="T:System.Data.DataRelation" /> filho especificado.</summary>
      <param name="relationName">Uma cadeia de caracteres contendo o nome <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary>Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o pai e o nome <see cref="T:System.Data.DataRelation" /> especificados.</summary>
      <param name="relationName">Uma cadeia de caracteres contendo o nome <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">
        <see langword="true" /> para manter a exibição filho criada em sincronia com o pai; caso contrário <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Obtém o <see cref="T:System.Data.DataView" /> ao qual essa linha pertence.</summary>
      <returns>O <see langword="DataView" /> ao qual essa linha pertence.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Exclui uma linha.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Confirma as alterações para o <see cref="T:System.Data.DataRow" /> subjacente e encerra a sessão de edição que foi iniciada com <see cref="M:System.Data.DataRowView.BeginEdit" />.  Use <see cref="M:System.Data.DataRowView.CancelEdit" /> para descartar as alterações feitas na <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataRowView" /> atual é idêntico ao objeto especificado.</summary>
      <param name="other">Um <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="object" /> for um <see cref="T:System.Data.DataRowView" /> e retornar a mesma linha que o <see cref="T:System.Data.DataRowView" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Retorna o código hash do objeto <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Um código hash de inteiro com sinal de 32 bits 1, que representa o booliano <see langword="true" /> se o valor dessa instância é diferente de zero, caso contrário, o inteiro zero, que representa o booliano <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Indica se a linha está no modo de edição.</summary>
      <returns>
        <see langword="true" /> se a linha estiver no modo de edição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Indica se um <see cref="T:System.Data.DataRowView" /> é novo.</summary>
      <returns>
        <see langword="true" />se a linha for nova; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Obtém ou define um valor em uma coluna especificada.</summary>
      <param name="ndx">O índice da coluna.</param>
      <returns>O valor da coluna.</returns>
      <exception cref="T:System.Data.DataException">A <see cref="P:System.Data.DataRowView.DataView" /> não permite edições e <see cref="T:System.Data.DataRowView" /> não é nova.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Nenhuma coluna corresponde a esse valor de índice.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Obtém ou define um valor em uma coluna especificada.</summary>
      <param name="property">Cadeia de caracteres que contém a coluna especificada.</param>
      <returns>O valor da coluna.</returns>
      <exception cref="T:System.ArgumentException">Uma coluna com a relação ou o nome especificado não foi encontrada.

ou -

A <see cref="P:System.Data.DataRowView.DataView" /> não permite edições e <see cref="T:System.Data.DataRowView" /> não é nova.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>O evento que é gerado quando uma propriedade <see cref="T:System.Data.DataRowView" /> é alterada.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Obtém o <see cref="T:System.Data.DataRow" /> que está sendo visualizado.</summary>
      <returns>O <see cref="T:System.Data.DataRow" /> que está sendo visualizado pelo <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Obtém a descrição da versão atual do <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DataRowVersion" />. Os valores possíveis para a propriedade <see cref="P:System.Data.DataRowView.RowVersion" /> são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Retorna uma coleção de atributos personalizados para esta instância de um componente.</summary>
      <returns>Um AttributeCollection que contém os atributos para este objeto.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Retorna o nome de classe desta instância de um componente.</summary>
      <returns>O nome de classe desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Retorna o nome desta instância de um componente.</summary>
      <returns>O nome desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Retorna um conversor de tipo para esta instância de um componente.</summary>
      <returns>O conversor de tipo para esta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Retorna o evento padrão para esta instância de um componente.</summary>
      <returns>O evento padrão para esta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Retorna a propriedade padrão para esta instância de um componente.</summary>
      <returns>A propriedade padrão para esta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Retorna um editor do tipo especificado para esta instância de um componente.</summary>
      <param name="editorBaseType">Um <see cref="T:System.Type" /> que representa o editor para esse objeto.</param>
      <returns>Um <see cref="T:System.Object" /> do tipo especificado que é o editor para esse objeto ou <see langword="null" />, se não for possível encontrar o editor.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Retorna os eventos desta instância de um componente.</summary>
      <returns>Os eventos desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Retorna os eventos desta instância de um componente com atributos especificados.</summary>
      <param name="attributes">Os atributos</param>
      <returns>Os eventos desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Retorna as propriedades desta instância de um componente.</summary>
      <returns>As propriedades desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Retorna as propriedades desta instância de um componente com atributos especificados.</summary>
      <param name="attributes">Os atributos.</param>
      <returns>As propriedades desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</summary>
      <param name="pd">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade cujo proprietário deve ser encontrado.</param>
      <returns>Um <see cref="T:System.Object" /> que representa o proprietário da propriedade especificada.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Obtém uma mensagem que descreve todos os erros de validação do objeto.</summary>
      <returns>O erro de validação no objeto.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Obtém a mensagem de erro da propriedade com o nome fornecido.</summary>
      <param name="colName">O nome da propriedade cuja mensagem de erro será obtida.</param>
      <returns>A mensagem de erro da propriedade. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Representa um cache de dados na memória.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataSet" /> que tem as informações de serialização e contexto fornecidas.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema">O valor booliano.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataSet" /> com o nome especificado.</summary>
      <param name="dataSetName">O nome do <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Confirma todas as alterações feitas nesse <see cref="T:System.Data.DataSet" /> desde que foi carregado ou desde a última vez que <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Começa a inicialização de um <see cref="T:System.Data.DataSet" /> usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Obtém ou define um valor que indica se comparações de cadeia de caracteres dentro de objetos <see cref="T:System.Data.DataTable" /> diferenciam maiúsculas de minúsculas.</summary>
      <returns>
        <see langword="true" />se comparações de cadeia de caracteres diferenciarem maiúsculas de minúsculas; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Limpa o <see cref="T:System.Data.DataSet" /> de todos os dados, removendo todas as linhas em todas as tabelas.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Copia a estrutura do <see cref="T:System.Data.DataSet" />, incluindo todos os esquemas, relações e restrições <see cref="T:System.Data.DataTable" />. Não copia todos os dados.</summary>
      <returns>Um novo <see cref="T:System.Data.DataSet" /> com o mesmo esquema que o <see cref="T:System.Data.DataSet" /> atual, mas sem nenhum dado.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Copia a estrutura e os dados para este <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Um novo <see cref="T:System.Data.DataSet" /> com a mesma estrutura (esquemas de tabela, relações e restrições) e dados que esse <see cref="T:System.Data.DataSet" />.  
   
 Se essas classes tiverem sido subclassificadas, a cópia também será das mesmas classes subclasses.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Retorna um <see cref="T:System.Data.DataTableReader" /> com um resultado definido por <see cref="T:System.Data.DataTable" />, na mesma sequência em que as tabelas são exibidas na coleção <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>Um <see cref="T:System.Data.DataTableReader" /> que contém um ou mais conjuntos de resultados, correspondentes às instâncias <see cref="T:System.Data.DataTable" /> contidas no <see cref="T:System.Data.DataSet" /> de origem.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Retorna um <see cref="T:System.Data.DataTableReader" /> com um conjunto de resultados por <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Uma matriz de DataTables que fornece a ordem dos conjuntos de resultado a serem retornados no <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Um <see cref="T:System.Data.DataTableReader" /> que contém um ou mais conjuntos de resultados, correspondentes às instâncias <see cref="T:System.Data.DataTable" /> contidas no <see cref="T:System.Data.DataSet" /> de origem. Os conjuntos de resultados retornados estão na ordem especificada pelo parâmetro <paramref name="dataTables" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Obtém ou define o nome do <see cref="T:System.Data.DataSet" /> atual.</summary>
      <returns>O nome do <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Obtém uma exibição personalizada dos dados contidos no <see cref="T:System.Data.DataSet" /> para permitir a filtragem, a pesquisa e a navegação usando um <see cref="T:System.Data.DataViewManager" /> personalizado.</summary>
      <returns>Um objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Determina o <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o qual o construtor protegido <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> de <see langword="DataSet" /> é invocado durante a desserialização em cenários de comunicação remota.</param>
      <param name="context">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> com o qual o construtor protegido <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> de <see langword="DataSet" /> é invocado durante a desserialização em cenários de comunicação remota.</param>
      <returns>Uma enumeração <see cref="T:System.Data.SchemaSerializationMode" /> que indica se as informações de esquema foram omitidas do conteúdo.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Determina o <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">A instância <see cref="T:System.Xml.XmlReader" /> que é passada durante a desserialização do <see cref="T:System.Data.DataSet" />.</param>
      <returns>Uma enumeração <see cref="T:System.Data.SchemaSerializationMode" /> que indica se as informações de esquema foram omitidas do conteúdo.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Encerra a inicialização de um <see cref="T:System.Data.DataSet" /> que é usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Obtém ou define um valor que indica se as regras de restrição são seguidas ao tentar qualquer operação de atualização.</summary>
      <returns>
        <see langword="true" />Se as regras forem impostas; caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException">Não é possível impor uma ou mais restrições.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Obtém a coleção de informações de usuário personalizadas associadas a um <see langword="DataSet" />.</summary>
      <returns>Um <see cref="T:System.Data.PropertyCollection" /> com todas as informações de usuário personalizadas.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Obtém uma cópia do <see cref="T:System.Data.DataSet" /> que contém todas as alterações feitas nele desde que ele foi carregado ou desde que o <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado pela última vez.</summary>
      <returns>Uma cópia das alterações desse <see cref="T:System.Data.DataSet" /> que pode ter ações realizadas nele e posteriormente ser mesclada novamente usando <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Se não forem encontradas linhas alteradas, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Obtém uma cópia do <see cref="T:System.Data.DataSet" /> que contém todas as alterações feitas desde o último carregamento ou desde que <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Um dos valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Uma cópia filtrada do <see cref="T:System.Data.DataSet" /> que pode ter ações executadas nela e, mais tarde, ser mesclada novamente com o <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Se nenhuma linha do <see cref="T:System.Data.DataRowState" /> desejado for encontrada, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Obtém uma cópia de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> para DataSet.</summary>
      <param name="schemaSet">O conjunto de esquemas especificado.</param>
      <returns>Uma cópia de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um objeto de informações de serialização com os dados necessários para serializar o <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados serializados associados a <see cref="T:System.Data.DataSet" />.</param>
      <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Retorna uma instância <see cref="T:System.Xml.Schema.XmlSchema" /> serializável.</summary>
      <returns>A instância <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Desserializa os dados da tabela do fluxo XML ou binário.</summary>
      <param name="info">A instância <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">O contexto de streaming.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Retorna a representação XML dos dados armazenados no <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Uma cadeia de caracteres que é uma representação dos dados armazenados no <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Retorna o Esquema XML para a representação XML dos dados armazenados no <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Cadeia de caracteres que é o Esquema XML para a representação XML dos dados armazenados no <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataSet" /> tem alterações, incluindo linhas novas, excluídas ou modificadas.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.DataSet" /> tiver alterações; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataSet" /> tem alterações, incluindo linhas novas, excluídas ou modificadas, filtradas por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Um dos valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.DataSet" /> tiver alterações; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Obtém um valor que indica se há erros em qualquer um dos objetos <see cref="T:System.Data.DataTable" /> nesse <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see langword="true" />Se qualquer tabela contiver um erro; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Aplica o esquema XML do <see cref="T:System.IO.Stream" /> especificado ao <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">O <see langword="Stream" /> do qual ler o esquema.</param>
      <param name="nsArray">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Aplica o esquema XML do <see cref="T:System.IO.TextReader" /> especificado ao <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">O <see langword="TextReader" /> do qual ler o esquema.</param>
      <param name="nsArray">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Aplica o esquema XML do arquivo especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">O nome do arquivo (incluindo o caminho) do qual o esquema é lido.</param>
      <param name="nsArray">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Aplica o esquema XML do <see cref="T:System.Xml.XmlReader" /> especificado ao <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">O <see langword="XMLReader" /> do qual ler o esquema.</param>
      <param name="nsArray">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Ocorre após o <see cref="T:System.Data.DataSet" /> ser inicializado.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Desserialize todos os dados de tabelas do DataSet do fluxo XML ou binário.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inspeciona o formato da representação serializada do <see langword="DataSet" />.</summary>
      <param name="info">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado representar um <see langword="DataSet" /> serializado em seu formato binário, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataSet" /> é inicializado.</summary>
      <returns>
        <see langword="true" />para indicar que o componente concluiu a inicialização; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Preenche um <see cref="T:System.Data.DataSet" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" /> fornecido, usando uma matriz de instâncias <see cref="T:System.Data.DataTable" /> para fornecer o esquema e as informações de namespace.</summary>
      <param name="reader">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão nas instâncias <see cref="T:System.Data.DataTable" /> em <see cref="T:System.Data.DataSet" /> serão combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="tables">Uma matriz de instâncias <see cref="T:System.Data.DataTable" />, da qual o método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> recupera informações de nome e namespace. Cada uma dessas tabelas deve ser um membro do <see cref="T:System.Data.DataTableCollection" /> contido por este <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary>Preenche um <see cref="T:System.Data.DataSet" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" /> fornecido, usando uma matriz de instâncias <see cref="T:System.Data.DataTable" /> para fornecer o esquema e as informações de namespace.</summary>
      <param name="reader">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão nas instâncias <see cref="T:System.Data.DataTable" /> em <see cref="T:System.Data.DataSet" /> serão combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="errorHandler">Um delegado <see cref="T:System.Data.FillErrorEventHandler" /> a ser chamado quando ocorrer um erro ao carregar os dados.</param>
      <param name="tables">Uma matriz de instâncias <see cref="T:System.Data.DataTable" />, da qual o método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> recupera informações de nome e namespace.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Preenche um <see cref="T:System.Data.DataSet" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" />, usando uma matriz de cadeias de caracteres para fornecer os nomes das tabelas dentro de <see langword="DataSet" />.</summary>
      <param name="reader">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão nas instâncias <see cref="T:System.Data.DataTable" /> dentro de <see langword="DataSet" /> serão combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="tables">Uma matriz de cadeias de caracteres da qual o <see langword="Load" /> método recupera informações de nome de tabela.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Obtém ou define as informações de localidade usadas para comparar cadeias de caracteres na tabela.</summary>
      <returns>Um <see cref="T:System.Globalization.CultureInfo" /> que contém dados sobre a localidade do computador do usuário. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Mescla uma matriz de objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataSet" /> atual.</summary>
      <param name="rows">A matriz de objetos <see langword="DataRow" /> a serem mesclados no <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Mescla uma matriz de objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataSet" />, preservando ou descartando alterações no <see langword="DataSet" /> atual e manipulando um esquema incompatível de acordo com os argumentos fornecidos.</summary>
      <param name="rows">A matriz de objetos <see cref="T:System.Data.DataRow" /> a serem mesclados no <see langword="DataSet" />.</param>
      <param name="preserveChanges">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" />; caso contrário, <see langword="false" />.</param>
      <param name="missingSchemaAction">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Mescla um <see cref="T:System.Data.DataSet" /> especificado e seu esquema no <see langword="DataSet" /> atual.</summary>
      <param name="dataSet">O <see langword="DataSet" /> cujos dados e esquema serão mesclados.</param>
      <exception cref="T:System.Data.ConstraintException">Não é possível habilitar uma ou mais restrições.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="dataSet" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Mescla um <see cref="T:System.Data.DataSet" /> especificado e seu esquema no <see langword="DataSet" /> atual, preservando ou descartando as alterações neste <see langword="DataSet" /> de acordo com o argumento determinado.</summary>
      <param name="dataSet">O <see langword="DataSet" /> cujos dados e esquema serão mesclados.</param>
      <param name="preserveChanges">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" /> atual; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Mescla um <see cref="T:System.Data.DataSet" /> especificado e seu esquema com o atual <see langword="DataSet" />, preservando ou descartando alterações no <see langword="DataSet" /> atual e manipulando um esquema incompatível de acordo com os argumentos fornecidos.</summary>
      <param name="dataSet">O <see langword="DataSet" /> cujos dados e esquema serão mesclados.</param>
      <param name="preserveChanges">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" /> atual; caso contrário, <see langword="false" />.</param>
      <param name="missingSchemaAction">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="dataSet" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Mescla um <see cref="T:System.Data.DataTable" /> especificado e seu esquema no <see cref="T:System.Data.DataSet" /> atual.</summary>
      <param name="table">O <see cref="T:System.Data.DataTable" /> cujos dados e esquema serão mesclados.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="table" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Mescla um <see cref="T:System.Data.DataTable" /> especificado e seu esquema com o atual <see langword="DataSet" />, preservando ou descartando alterações no <see langword="DataSet" /> e manipulando um esquema incompatível de acordo com os argumentos fornecidos.</summary>
      <param name="table">O <see langword="DataTable" /> cujos dados e esquema serão mesclados.</param>
      <param name="preserveChanges">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="dataSet" /> é <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Ocorre quando uma origem e um destino <see cref="T:System.Data.DataRow" /> têm o mesmo valor de chave primária e <see cref="P:System.Data.DataSet.EnforceConstraints" /> é definido como true.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Obtém ou define o namespace do <see cref="T:System.Data.DataSet" />.</summary>
      <returns>O namespace do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">O namespace já tem dados.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Aciona o evento <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent">Um <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Ocorre quando um objeto <see cref="T:System.Data.DataRelation" /> é removido de um <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation">O <see cref="T:System.Data.DataRelation" /> sendo removido.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Ocorre quando um <see cref="T:System.Data.DataTable" /> é removido de um <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">O <see cref="T:System.Data.DataTable" /> sendo removido.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Obtém ou define um prefixo XML que cria o alias do namespace do <see cref="T:System.Data.DataSet" />.</summary>
      <returns>O prefixo XML para o namespace <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Envia uma notificação de que a propriedade <see cref="T:System.Data.DataSet" /> especificada está prestes a ser alterada.</summary>
      <param name="name">O nome da propriedade que está prestes a ser alterada.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Lê o esquema XML e dados para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Um objeto que deriva de <see cref="T:System.IO.Stream" />.</param>
      <returns>O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Lê o esquema XML e os dados no <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> e <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> do qual ler.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Lê o esquema XML e dados para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader">O <see langword="TextReader" /> do qual ler o esquema e os dados.</param>
      <returns>O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Lê o esquema XML e os dados no <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextReader" /> e <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader">O <see cref="T:System.IO.TextReader" /> do qual ler.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Lê o esquema XML e dados no <see cref="T:System.Data.DataSet" /> usando o arquivo especificado.</summary>
      <param name="fileName">O nome do arquivo (incluindo o caminho) do qual será realizada a leitura.</param>
      <returns>O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Lê dados e o esquema XML no <see cref="T:System.Data.DataSet" /> usando o arquivo especificado e <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName">O nome do arquivo (incluindo o caminho) do qual será realizada a leitura.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Lê o esquema XML e dados para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> do qual ler.</param>
      <returns>O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Lê o esquema XML e os dados no <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.Xml.XmlReader" /> e <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> do qual ler.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Lê o esquema XML do <see cref="T:System.IO.Stream" /> especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> do qual ler.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Lê o esquema XML do <see cref="T:System.IO.TextReader" /> especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">O <see cref="T:System.IO.TextReader" /> do qual ler.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Lê o esquema XML do arquivo especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">O nome de arquivo (incluindo o caminho) do qual será realizada a leitura.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Lê o esquema XML do <see cref="T:System.Xml.XmlReader" /> especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> do qual ler.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Ignora os atributos e retorna um DataSet vazio.</summary>
      <param name="reader">O leitor XML especificado.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Reverte todas as alterações feitas ao <see cref="T:System.Data.DataSet" /> desde que foi criado ou desde a última vez em que o <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Obtém a coleção de relações que vinculam tabelas e permitem a navegação de tabelas principais para tabelas secundárias.</summary>
      <returns>Um <see cref="T:System.Data.DataRelationCollection" /> que contém uma coleção de objetos <see cref="T:System.Data.DataRelation" />. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Obtém ou define um <see cref="T:System.Data.SerializationFormat" /> para o <see cref="T:System.Data.DataSet" /> usado durante a comunicação remota.</summary>
      <returns>Um objeto <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Limpa todas as tabelas e remove todas as relações, restrições externas e tabelas de <see cref="T:System.Data.DataSet" />. As subclasses devem substituir <see cref="M:System.Data.DataSet.Reset" /> para restaurar um <see cref="T:System.Data.DataSet" /> ao seu estado original.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Obtém ou define um <see cref="T:System.Data.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Um <see cref="T:System.Data.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Obtém um valor que indica se a propriedade <see cref="P:System.Data.DataSet.Relations" /> deve ser persistida.</summary>
      <returns>
        <see langword="true" /> se o valor da propriedade tiver sido alterado do padrão, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Obtém um valor que indica se a propriedade <see cref="P:System.Data.DataSet.Tables" /> deve ser persistida.</summary>
      <returns>
        <see langword="true" /> se o valor da propriedade tiver sido alterado do padrão, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Obtém ou define um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Obtém a coleção de tabelas contidas no <see cref="T:System.Data.DataSet" />.</summary>
      <returns>O <see cref="T:System.Data.DataTableCollection" /> contido por este <see cref="T:System.Data.DataSet" />. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Grava os dados atuais para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Um objeto <see cref="T:System.IO.Stream" /> usado para gravar em um arquivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="stream">Um objeto <see cref="T:System.IO.Stream" /> usado para gravar em um arquivo.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Grava os dados atuais para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">O objeto <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer">Um objeto <see cref="T:System.IO.TextWriter" /> usado para gravar o documento.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Grava os dados atuais do <see cref="T:System.Data.DataSet" /> no arquivo especificado.</summary>
      <param name="fileName">O nome do arquivo (incluindo o caminho) no qual gravar.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> no arquivo especificado usando o <see cref="T:System.Data.XmlWriteMode" /> especificado. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="fileName">O nome do arquivo (incluindo o caminho) no qual gravar.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Grava os dados atuais do <see cref="T:System.Data.DataSet" /> no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.Xml.XmlWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> com o qual gravar.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Um objeto <see cref="T:System.IO.Stream" /> usado para gravar em um arquivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O objeto <see cref="T:System.IO.Stream" /> no qual gravar.</param>
      <param name="multipleTargetConverter">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">O objeto <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">O objeto <see cref="T:System.IO.TextWriter" /> no qual gravar.</param>
      <param name="multipleTargetConverter">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML em um arquivo.</summary>
      <param name="fileName">O nome do arquivo (incluindo o caminho) no qual gravar.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML em um arquivo.</summary>
      <param name="fileName">O nome do arquivo no qual gravar.</param>
      <param name="multipleTargetConverter">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML em um objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> no qual ocorrerá a gravação.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">O objeto <see cref="T:System.Xml.XmlWriter" /> no qual gravar.</param>
      <param name="multipleTargetConverter">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Descreve o formato de serialização para colunas <see cref="T:System.DateTime" /> em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>
        <see langword="DateTime" /> sempre é armazenado no Local. Se <see cref="F:System.Data.DataSetDateTime.Utc" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido em Local. A serialização nesse modo sempre é executada no Local. Há um deslocamento durante a serialização.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>
        <see langword="DateTime" /> sempre é armazenado em Não especificado. Se <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido em <see cref="F:System.Data.DataSetDateTime.Unspecified" />. A serialização nesse modo não causa um deslocamento.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>
        <see langword="DateTime" /> é armazenado em Não especificado. Se <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido em <see cref="F:System.Data.DataSetDateTime.Unspecified" />. A serialização nesse modo causa um deslocamento. Esse é o comportamento padrão e é compatível com versões anteriores. Essa opção deve ser vista como sendo Não especificado no armazenamento, mas aplicando um deslocamento que é semelhante a <see cref="F:System.Data.DataSetDateTime.Local" /> durante a serialização.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>
        <see langword="DateTime" /> é armazenado no UTC (Universal Coordinated Time). Se <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido no formato <see langword="Utc" />. A serialização nesse modo sempre é executada em <see langword="Utc" />. não há um deslocamento durante a serialização.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Marca uma propriedade, um evento ou um extensor com uma descrição. Os designers visuais podem exibir essa descrição ao referenciar o membro.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataSysDescriptionAttribute" /> usando a cadeia de caracteres da descrição especificada.</summary>
      <param name="description">A cadeia de caracteres da descrição.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Obtém o texto para a descrição.</summary>
      <returns>A cadeia de caracteres da descrição.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Representa uma tabela de dados na memória.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> sem argumentos.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> com o nome da tabela especificada.</summary>
      <param name="tableName">O nome a ser dado à tabela. Se <paramref name="tableName" /> for <see langword="null" /> ou uma cadeia de caracteres vazia, um nome padrão será fornecido quando ele for adicionado na <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> usando o nome de tabela e o namespace especificados.</summary>
      <param name="tableName">O nome a ser dado à tabela. Se <paramref name="tableName" /> for <see langword="null" /> ou uma cadeia de caracteres vazia, um nome padrão será fornecido quando ele for adicionado na <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace">Obtém o namespace para a representação XML dos dados armazenados no <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Confirma todas as alterações feitas à tabela desde a última vez em que <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Começa a inicialização de um <see cref="T:System.Data.DataTable" /> usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Desativa as notificações, a manutenção de índice e as restrições durante o carregamento de dados.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Indica se a comparação de cadeias de caracteres dentro da tabela diferencia maiúsculas de minúsculas.</summary>
      <returns>
        <see langword="true" /> se a comparação diferencia maiúsculas de minúsculas; caso contrário <see langword="false" />. O padrão é definido como o pai <see cref="T:System.Data.DataSet" /> da propriedade do <see cref="P:System.Data.DataSet.CaseSensitive" /> objeto ou <see langword="false" /> se o <see cref="T:System.Data.DataTable" /> foi criado independentemente de um <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Obtém a coleção das relações filho desta <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Um <see cref="T:System.Data.DataRelationCollection" /> que contém as relações filho da tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Limpa o <see cref="T:System.Data.DataTable" /> de todos os dados.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Clona a estrutura do <see cref="T:System.Data.DataTable" />, incluindo todos os esquemas e restrições de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Um novo <see cref="T:System.Data.DataTable" /> com o mesmo esquema que o <see cref="T:System.Data.DataTable" /> atual.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Ocorre depois que um valor foi alterado para o <see cref="T:System.Data.DataColumn" /> especificado em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Ocorre quando um valor está sendo alterado para o <see cref="T:System.Data.DataColumn" /> especificado em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Obtém a coleção de colunas que pertencem a essa tabela.</summary>
      <returns>Um <see cref="T:System.Data.DataColumnCollection" /> que contém a coleção de objetos <see cref="T:System.Data.DataColumn" /> para a tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Calcula a expressão especificada nas linhas atuais que passam os critérios de filtro.</summary>
      <param name="expression">A expressão a computar.</param>
      <param name="filter">O filtro para limitar as linhas que são avaliadas na expressão.</param>
      <returns>Um <see cref="T:System.Object" />, definido como o resultado do cálculo. Se a expressão for avaliada como nula, o valor retornado será <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Obtém a coleção de restrições mantidas por essa tabela.</summary>
      <returns>Um <see cref="T:System.Data.ConstraintCollection" /> que contém a coleção de objetos <see cref="T:System.Data.Constraint" /> para a tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Copia a estrutura e os dados para este <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Um novo <see cref="T:System.Data.DataTable" /> com a mesma estrutura (esquemas de tabela e restrições) e dados que esse <see cref="T:System.Data.DataTable" />.  
Se essas classes tiverem sido derivadas, a cópia também será das mesmas classes derivadas.  
 <see cref="M:System.Data.DataTable.Copy" /> cria um novo <see cref="T:System.Data.DataTable" /> com a mesma estrutura e dados que o <see cref="T:System.Data.DataTable" /> original. Para copiar a estrutura para um novo <see cref="T:System.Data.DataTable" />, mas não os dados, use <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Retorna um <see cref="T:System.Data.DataTableReader" /> correspondente aos dados nessa <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Um <see cref="T:System.Data.DataTableReader" /> que contém um conjunto de resultados, correspondente à instância <see cref="T:System.Data.DataTable" /> da origem.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Cria uma nova instância de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A nova expressão.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Obtém o <see cref="T:System.Data.DataSet" /> ao qual essa tabela pertence.</summary>
      <returns>O <see cref="T:System.Data.DataSet" /> ao qual essa tabela pertence.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Obtém uma exibição personalizada da tabela que pode incluir uma exibição filtrada ou uma posição do cursor.</summary>
      <returns>O <see cref="T:System.Data.DataView" /> associado ao <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Obtém ou define a expressão que retorna um valor usado para representar essa tabela na interface do usuário. A propriedade <see langword="DisplayExpression" /> permite exibir o nome da tabela em uma interface do usuário.</summary>
      <returns>Uma cadeia de caracteres de exibição.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Encerra a inicialização de um <see cref="T:System.Data.DataTable" /> que é usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Desativa as notificações, a manutenção de índice e as restrições após o carregamento de dados.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Obtém a coleção de informações de usuário personalizadas.</summary>
      <returns>Um <see cref="T:System.Data.PropertyCollection" /> que contém informações de usuário personalizadas.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Verifica se a inicialização está em andamento. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Obtém uma cópia do <see cref="T:System.Data.DataTable" /> que contém todas as alterações feitas nele desde que ele foi carregado ou que o <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado pela última vez.</summary>
      <returns>Uma cópia das alterações neste <see cref="T:System.Data.DataTable" /> ou <see langword="null" /> se nenhuma alteração foi encontrada.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Obtém uma cópia do <see cref="T:System.Data.DataTable" /> que contém todas as alterações feitas desde o último carregamento ou desde que <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Um dos valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Uma cópia filtrada do <see cref="T:System.Data.DataTable" /> que pode ter ações executadas nela e, mais tarde, ser mesclada novamente ao <see cref="T:System.Data.DataTable" /> usando <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Se nenhuma linha do <see cref="T:System.Data.DataRowState" /> desejado for encontrada, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Esse método retorna uma instância <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém a linguagem WSDL que descreve o <see cref="T:System.Data.DataTable" /> para os Serviços Web.</summary>
      <param name="schemaSet">Uma instância <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>A instância <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Obtém uma matriz de objetos <see cref="T:System.Data.DataRow" /> que contêm erros.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Data.DataRow" /> que têm erros.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um objeto de informações de serialização com os dados necessários para serializar o <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados serializados associados a <see cref="T:System.Data.DataTable" />.</param>
      <param name="context">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see langword="Nothing" /> é uma referência nula (<paramref name="info" /> no Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Obtém o tipo de linha.</summary>
      <returns>O tipo do <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Obtém um valor que indica se há erros em alguma das linhas em uma das tabelas de <see cref="T:System.Data.DataSet" /> a que a tabela pertence.</summary>
      <returns>
        <see langword="true" /> se houver erros; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Copia um <see cref="T:System.Data.DataRow" /> em um <see cref="T:System.Data.DataTable" />, preservando quaisquer configurações de propriedade, bem como os valores originais e atuais.</summary>
      <param name="row">O <see cref="T:System.Data.DataRow" /> a ser importado.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Ocorre após o <see cref="T:System.Data.DataTable" /> ser inicializado.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataTable" /> é inicializado.</summary>
      <returns>
        <see langword="true" /> para indicar que o componente concluiu a inicialização; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Preenche um <see cref="T:System.Data.DataTable" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" />fornecido. Se o <see cref="T:System.Data.DataTable" /> já contiver linhas, os dados de entrada da fonte de dados serão mesclados com as linhas existentes.</summary>
      <param name="reader">Um <see cref="T:System.Data.IDataReader" /> que fornece um conjunto de resultados.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Preenche um <see cref="T:System.Data.DataTable" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" />fornecido. Se o <see langword="DataTable" /> já contiver linhas, os dados de entrada da fonte de dados serão mesclados com as linhas existentes de acordo com o valor do parâmetro <paramref name="loadOption" />.</summary>
      <param name="reader">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão no <see cref="T:System.Data.DataTable" /> são combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Preenche um <see cref="T:System.Data.DataTable" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" /> fornecido comum delegado de tratamento de erro.</summary>
      <param name="reader">Um <see cref="T:System.Data.IDataReader" /> que fornece um conjunto de resultados.</param>
      <param name="loadOption">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão no <see cref="T:System.Data.DataTable" /> são combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="errorHandler">Um delegado <see cref="T:System.Data.FillErrorEventHandler" /> a ser chamado quando ocorrer um erro ao carregar os dados.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Localiza e atualiza uma linha específica. Se nenhuma linha correspondente for encontrada, uma nova linha será criada usando os valores fornecidos.</summary>
      <param name="values">Uma matriz de valores usados para criar a nova linha.</param>
      <param name="fAcceptChanges">
        <see langword="true" /> para aceitar alterações; caso contrário, <see langword="false" />.</param>
      <returns>O novo <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException">A matriz é maior que o número de colunas na tabela.</exception>
      <exception cref="T:System.InvalidCastException">Um valor não corresponde a seu respectivo tipo de coluna.</exception>
      <exception cref="T:System.Data.ConstraintException">Adicionar a linha invalida uma restrição.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Tentativa de colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é falso.</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Localiza e atualiza uma linha específica. Se nenhuma linha correspondente for encontrada, uma nova linha será criada usando os valores fornecidos.</summary>
      <param name="values">Uma matriz de valores usados para criar a nova linha.</param>
      <param name="loadOption">Usado para determinar como os valores da matriz são aplicados aos valores correspondentes em uma linha existente.</param>
      <returns>O novo <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Obtém ou define as informações de localidade usadas para comparar cadeias de caracteres na tabela.</summary>
      <returns>Um <see cref="T:System.Globalization.CultureInfo" /> que contém dados sobre a localidade do computador do usuário. O padrão é o <see cref="T:System.Globalization.CultureInfo" /> do objeto <see cref="T:System.Data.DataSet" /> (retornado pela propriedade <see cref="P:System.Data.DataSet.Locale" />) ao qual pertence o <see cref="T:System.Data.DataTable" />; se a tabela não pertencer a um <see cref="T:System.Data.DataSet" />, o padrão será o atual sistema <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Mesclar o <see cref="T:System.Data.DataTable" /> especificado ao <see cref="T:System.Data.DataTable" /> atual.</summary>
      <param name="table">O <see cref="T:System.Data.DataTable" /> a ser mesclado com o <see cref="T:System.Data.DataTable" /> atual.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Mescla o <see cref="T:System.Data.DataTable" /> especificado com o <see langword="DataTable" /> atual, indicando se as alterações no <see langword="DataTable" /> atual devem ser preservadas.</summary>
      <param name="table">O <see langword="DataTable" /> a ser mesclado com o <see langword="DataTable" /> atual.</param>
      <param name="preserveChanges">
        <see langword="true" />, para preservar alterações no <see langword="DataTable" /> atual; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Mescla o <see cref="T:System.Data.DataTable" /> especificado com o <see langword="DataTable" /> atual, indicando se as alterações e a maneira como manipular o esquema ausente no <see langword="DataTable" /> atual devem ser preservadas.</summary>
      <param name="table">O <see cref="T:System.Data.DataTable" /> a ser mesclado com o <see cref="T:System.Data.DataTable" /> atual.</param>
      <param name="preserveChanges">
        <see langword="true" />, para preservar alterações no <see cref="T:System.Data.DataTable" /> atual; caso contrário, <see langword="false" />.</param>
      <param name="missingSchemaAction">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Obtém ou define o tamanho inicial para essa tabela.</summary>
      <returns>O tamanho inicial em linhas dessa tabela. O padrão é 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Obtém ou define o namespace da representação XML dos dados armazenados no <see cref="T:System.Data.DataTable" />.</summary>
      <returns>O namespace do <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Cria um novo <see cref="T:System.Data.DataRow" /> com o mesmo esquema que a tabela.</summary>
      <returns>Um <see cref="T:System.Data.DataRow" /> com o mesmo esquema que o <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Retorna uma matriz de <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size">Um valor <see cref="T:System.Int32" /> que descreve o tamanho da matriz.</param>
      <returns>A nova matriz.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Cria uma nova linha de uma linha existente.</summary>
      <param name="builder">Um objeto <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns>Uma classe derivada <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent">Um <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Notifica o <see cref="T:System.Data.DataTable" /> que um <see cref="T:System.Data.DataColumn" /> está sendo removido.</summary>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> sendo removido.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataTableClearEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataTableClearEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e">Um <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Obtém a coleção de relações de pai desta <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Uma <see cref="T:System.Data.DataRelationCollection" /> que contém as relações de pai da tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Obtém ou define o namespace da representação XML dos dados armazenados no <see cref="T:System.Data.DataTable" />.</summary>
      <returns>O prefixo de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Obtém ou define uma matriz de colunas que funcionam como chaves primárias da tabela de dados.</summary>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DataException">A chave é uma chave estrangeira.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Lê o esquema XML e dados para o <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Um objeto que deriva de <see cref="T:System.IO.Stream" /></param>
      <returns>O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Lê o esquema XML e dados para o <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader">O <see cref="T:System.IO.TextReader" /> que será usado para ler os dados.</param>
      <returns>O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Lê o esquema XML e dados para o <see cref="T:System.Data.DataTable" /> do arquivo especificado.</summary>
      <param name="fileName">O nome do arquivo do qual os dados serão lidos.</param>
      <returns>O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Lê o esquema XML e dados no <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> que será usado para ler os dados.</param>
      <returns>O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> usando o fluxo especificado.</summary>
      <param name="stream">O fluxo usado para ler o esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader">O <see cref="T:System.IO.TextReader" /> usado para ler as informações de esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> do arquivo especificado.</summary>
      <param name="fileName">O nome do arquivo do qual as informações de esquema devem ser lidas.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler as informações de esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Lê de um fluxo XML.</summary>
      <param name="reader">Um objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Reverte todas as alterações feitas na tabela desde que foi carregado ou desde a última vez em que <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Obtém ou define o formato de serialização.</summary>
      <returns>Uma enumeração <see cref="T:System.Data.SerializationFormat" /> que especifica a serialização de <see langword="Binary" /> ou <see langword="Xml" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Redefine o <see cref="T:System.Data.DataTable" /> com o estado original. A redefinição remove todos os dados, índices, relações e colunas da tabela. Se um DataSet incluir uma DataTable, a tabela ainda fará parte do DataSet depois que a tabela for redefinida.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Ocorre após um <see cref="T:System.Data.DataRow" /> ter sido alterado com êxito.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Ocorre quando uma <see cref="T:System.Data.DataRow" /> está sendo alterada.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Ocorre depois que uma linha na tabela é excluída.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Ocorre antes de uma linha na tabela estar prestes a ser excluída.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Obtém a coleção de linhas que pertencem a essa tabela.</summary>
      <returns>Um <see cref="T:System.Data.DataRowCollection" /> que contém objetos <see cref="T:System.Data.DataRow" />; caso contrário, um valor nulo se nenhum objeto <see cref="T:System.Data.DataRow" /> existir.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" /> que correspondem aos critérios de filtro.</summary>
      <param name="filterExpression">Os critérios a serem usados para filtrar as linhas. Para ver exemplos de como filtrar linhas, consulte DataView RowFilter Syntax [C#].</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" /> que correspondem aos critérios de filtro, na ordem de classificação especificada.</summary>
      <param name="filterExpression">Os critérios a serem usados para filtrar as linhas. Para ver exemplos de como filtrar linhas, consulte DataView RowFilter Syntax [C#].</param>
      <param name="sort">Uma cadeia de caracteres que especifica a direção da coluna e da classificação.</param>
      <returns>Uma matriz de objetos <see cref="T:System.Data.DataRow" /> que correspondem à expressão de filtro.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" /> que correspondem ao filtro, na ordem de classificação correspondente ao estado especificado.</summary>
      <param name="filterExpression">Os critérios a serem usados para filtrar as linhas. Para ver exemplos de como filtrar linhas, consulte DataView RowFilter Syntax [C#].</param>
      <param name="sort">Uma cadeia de caracteres que especifica a direção da coluna e da classificação.</param>
      <param name="recordStates">Um dos valores de <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Obtém ou define um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>
        <see langword="true" /> se a coleção for uma coleção de objetos <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Um <see cref="T:System.Collections.IList" /> que pode ser associado a uma fonte de dados de objeto.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Um XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Um XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Ocorre depois que uma <see cref="T:System.Data.DataTable" /> é limpa.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Ocorre quando uma <see cref="T:System.Data.DataTable" /> é limpa.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Obtém ou define o nome de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>O nome do <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> ou uma cadeia de caracteres vazia ("") é passada e essa tabela pertence a uma coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">A tabela pertence a uma coleção que já tem uma tabela com o mesmo nome. (A comparação diferencia maiúsculas de minúsculas).</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Ocorre quando um novo <see cref="T:System.Data.DataRow" /> é inserido.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Obterá o <see cref="P:System.Data.DataTable.TableName" /> e a <see cref="P:System.Data.DataTable.DisplayExpression" />, se houver algum como uma cadeia de caracteres concatenada.</summary>
      <returns>Uma cadeia de caracteres que consiste nos valores de <see cref="P:System.Data.DataTable.TableName" /> e <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O fluxo no qual os dados serão gravados.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.Stream" /> especificado. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="stream">O fluxo no qual os dados serão gravados.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> no arquivo especificado usando o <see cref="T:System.Data.XmlWriteMode" /> especificado. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="stream">O fluxo no qual os dados serão gravados.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> no arquivo especificado usando o <see cref="T:System.Data.XmlWriteMode" /> especificado. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="stream">O fluxo no qual os dados serão gravados.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> com o qual gravar o conteúdo.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.TextWriter" /> especificado. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> com o qual gravar o conteúdo.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Grava o conteúdo atual da <see cref="T:System.Data.DataTable" /> como XML usando o arquivo especificado.</summary>
      <param name="fileName">O arquivo no qual os dados XML devem ser gravados.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Grava o conteúdo atual da <see cref="T:System.Data.DataTable" /> como XML usando o arquivo especificado. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="fileName">O arquivo no qual os dados XML devem ser gravados.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema da <see cref="T:System.Data.DataTable" /> usando o arquivo especificado e o <see cref="T:System.Data.XmlWriteMode" />. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="fileName">O nome do arquivo no qual os dados serão gravados.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema da <see cref="T:System.Data.DataTable" /> usando o arquivo especificado e o <see cref="T:System.Data.XmlWriteMode" />. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="fileName">O nome do arquivo no qual os dados serão gravados.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> com o qual o conteúdo será gravado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> com o qual o conteúdo será gravado.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o fluxo especificado.</summary>
      <param name="stream">O fluxo no qual o esquema XML será gravado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o fluxo especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="stream">O fluxo no qual o esquema XML será gravado.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.IO.TextWriter" /> especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o arquivo especificado.</summary>
      <param name="fileName">O nome do arquivo a ser usado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o arquivo especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="fileName">O nome do arquivo a ser usado.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> a ser usado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento.</param>
      <param name="writeHierarchy">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Fornece dados para o método <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> cujas linhas estão sendo limpas.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Obtém a tabela cujas linhas estão sendo limpas.</summary>
      <returns>O <see cref="T:System.Data.DataTable" /> cujas linhas estão sendo limpas.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Obtém o nome da tabela cujas linhas estão sendo limpas.</summary>
      <returns>Um <see cref="T:System.String" /> que indica o nome da tabela.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Obtém o namespace da tabela cujas linhas estão sendo limpas.</summary>
      <returns>Um <see cref="T:System.String" /> que indica o nome do namespace.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary>Representa o método que manipula o método <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Data.DataTableClearEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Representa a coleção de tabelas para o <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Cria um novo objeto <see cref="T:System.Data.DataTable" /> usando um nome padrão e o adiciona à coleção.</summary>
      <returns>O <see cref="T:System.Data.DataTable" /> recém-criado.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Adiciona o <see langword="DataTable" /> especificado à coleção.</summary>
      <param name="table">O objeto <see langword="DataTable" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">O valor especificado para a tabela é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A tabela já pertence a essa coleção ou a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Uma tabela na coleção tem o mesmo nome. A comparação não diferencia maiúsculas de minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Cria um objeto <see cref="T:System.Data.DataTable" /> usando o nome especificado e o adiciona à coleção.</summary>
      <param name="name">O nome a ser dado a <see cref="T:System.Data.DataTable" /> criada.</param>
      <returns>O <see cref="T:System.Data.DataTable" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Uma tabela na coleção tem o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Cria um objeto <see cref="T:System.Data.DataTable" /> usando o nome especificado e o adiciona à coleção.</summary>
      <param name="name">O nome a ser dado a <see cref="T:System.Data.DataTable" /> criada.</param>
      <param name="tableNamespace">O namespace a ser dado a <see cref="T:System.Data.DataTable" /> criada.</param>
      <returns>O <see cref="T:System.Data.DataTable" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Uma tabela na coleção tem o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Data.DataTable" /> especificada para o fim da coleção.</summary>
      <param name="tables">A matriz de objetos <see cref="T:System.Data.DataTable" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Verifica se o objeto <see cref="T:System.Data.DataTable" /> especificado pode ser removido da coleção.</summary>
      <param name="table">A <see langword="DataTable" /> na coleção na qual executar a verificação.</param>
      <returns>
        <see langword="true" /> se a tabela puder ser removida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Limpa a coleção de todos os objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Ocorre após o <see cref="T:System.Data.DataTableCollection" /> ser alterado devido aos objetos <see cref="T:System.Data.DataTable" /> sendo adicionados ou removidos.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Ocorre enquanto o <see cref="T:System.Data.DataTableCollection" /> está sendo alterado devido aos objetos <see cref="T:System.Data.DataTable" /> sendo adicionados ou removidos.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Data.DataTable" /> com o nome especificado existe na coleção.</summary>
      <param name="name">O nome do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns>
        <see langword="true" /> se a tabela especificada existir. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Data.DataTable" /> com o nome e o namespace de tabela especificados existe na coleção.</summary>
      <param name="name">O nome do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <param name="tableNamespace">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <returns>
        <see langword="true" /> se a tabela especificada existir. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Copia todos os elementos do <see cref="T:System.Data.DataTableCollection" /> atual para um <see cref="T:System.Array" /> unidimensional, começando no índice da matriz de destino especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional para o qual os elementos do objeto <see cref="T:System.Data.DataTableCollection" /> atual serão copiados.</param>
      <param name="index">O índice <see cref="T:System.Array" /> de destino no qual a cópia é iniciada.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Obtém o índice do objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table">O <see langword="DataTable" /> a ser pesquisado.</param>
      <returns>O índice baseado em zero da tabela ou -1 se a tabela não for encontrada na coleção.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Obtém o índice na coleção do objeto <see cref="T:System.Data.DataTable" /> com o nome especificado.</summary>
      <param name="tableName">O nome do objeto <see langword="DataTable" /> a ser pesquisado.</param>
      <returns>O índice baseado em zero da <see langword="DataTable" /> com o nome especificado ou -1 se a tabela não existir na coleção.  
   
 Retorna -1 quando duas ou mais tabelas têm o mesmo nome, mas diferentes namespaces. A chamada não terá êxito se houver qualquer ambiguidade durante a correspondência de um nome de tabela para exatamente uma tabela.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Obtém o índice na coleção do objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="tableName">O nome do objeto <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <param name="tableNamespace">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <returns>O índice baseado em zero da <see cref="T:System.Data.DataTable" /> com o nome especificado ou -1 se a tabela não existir na coleção.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Obtém o objeto <see cref="T:System.Data.DataTable" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> com o índice especificado, caso contrário, <see langword="null" /> se o <see cref="T:System.Data.DataTable" /> não existir.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Obtém o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado.</summary>
      <param name="name">O nome do <see langword="DataTable" /> a ser localizado.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> com o nome especificado; caso contrário, <see langword="null" /> se o <see cref="T:System.Data.DataTable" /> não existir.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Obtém o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado no namespace especificado.</summary>
      <param name="name">O nome do <see langword="DataTable" /> a ser localizado.</param>
      <param name="tableNamespace">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <returns>Um <see cref="T:System.Data.DataTable" /> com o nome especificado; caso contrário, <see langword="null" /> se o <see cref="T:System.Data.DataTable" /> não existir.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Remove o objeto <see cref="T:System.Data.DataTable" /> especificado da coleção.</summary>
      <param name="table">O <see langword="DataTable" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">O valor especificado para a tabela é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A tabela não pertence a esta coleção.  

ou -  

 A tabela é parte de uma relação.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado da coleção.</summary>
      <param name="name">O nome do objeto <see cref="T:System.Data.DataTable" /> a ser removido.</param>
      <exception cref="T:System.ArgumentException">A coleção não tem uma tabela com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado da coleção.</summary>
      <param name="name">O nome do objeto <see cref="T:System.Data.DataTable" /> a ser removido.</param>
      <param name="tableNamespace">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <exception cref="T:System.ArgumentException">A coleção não tem uma tabela com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Remove o objeto <see cref="T:System.Data.DataTable" /> no índice especificado da coleção.</summary>
      <param name="index">O índice do <see langword="DataTable" /> a ser removido.</param>
      <exception cref="T:System.ArgumentException">A coleção não tem uma tabela no índice especificado.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary>Define os métodos de extensão para a classe <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> é uma classe estática.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary>Cria e retorna um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</summary>
      <param name="table">O <see cref="T:System.Data.DataTable" /> de origem com base no qual o <see cref="T:System.Data.DataView" /> habilitado para LINQ é criado.</param>
      <returns>Um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary>Cria e retorna um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ que representa a consulta LINQ to DataSet.</summary>
      <param name="source">A consulta LINQ to DataSet de origem com base na qual o <see cref="T:System.Data.DataView" /> habilitado para LINQ é criado.</param>
      <typeparam name="T">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary>Retorna um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />. Esse objeto pode ser usado em uma expressão LINQ ou um método de consulta.</summary>
      <param name="source">A origem <see cref="T:System.Data.DataTable" /> a ser tornada enumerável.</param>
      <returns>Um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException">A fonte de <see cref="T:System.Data.DataTable" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna um <see cref="T:System.Data.DataTable" /> que contém cópias dos objetos <see cref="T:System.Data.DataRow" />, dado um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Um <see cref="T:System.Data.DataTable" /> que contém a sequência de entrada como o tipo de objetos <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" /> é <see langword="null" /> e não é possível criar uma nova tabela.</exception>
      <exception cref="T:System.InvalidOperationException">Um <see cref="T:System.Data.DataRow" /> na sequência de origem tem um estado de <see cref="F:System.Data.DataRowState.Deleted" />.  
A sequência de origem não contém nenhum objeto <see cref="T:System.Data.DataRow" />.  
Um <see cref="T:System.Data.DataRow" /> na sequência de origem é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary>Copia objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataTable" /> especificado, dado um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table">O <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options">Uma enumeração <see cref="T:System.Data.LoadOption" /> que especifica as opções de carga do <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Os objetos <see cref="T:System.Data.DataRow" /> copiados não se ajustam ao esquema do <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" /> é <see langword="null" /> ou o destino <see cref="T:System.Data.DataTable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um <see cref="T:System.Data.DataRow" /> na sequência de origem tem um estado de <see cref="F:System.Data.DataRowState.Deleted" />.  
A sequência de origem não contém nenhum objeto <see cref="T:System.Data.DataRow" />.  
Um <see cref="T:System.Data.DataRow" /> na sequência de origem é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Copia objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataTable" /> especificado, dado um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table">O <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options">Uma enumeração <see cref="T:System.Data.LoadOption" /> que especifica as opções de carga do <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler">Um delegado <see cref="T:System.Data.FillErrorEventHandler" /> que representa o método que vai manipular um erro.</param>
      <typeparam name="T">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Os objetos <see cref="T:System.Data.DataRow" /> copiados não se ajustam ao esquema do <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" /> é <see langword="null" /> ou o destino <see cref="T:System.Data.DataTable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um <see cref="T:System.Data.DataRow" /> na sequência de origem tem um estado de <see cref="F:System.Data.DataRowState.Deleted" />.  

ou - 
A sequência de origem não contém nenhum objeto <see cref="T:System.Data.DataRow" />.  

ou - 
Um <see cref="T:System.Data.DataRow" /> na sequência de origem é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Fornece dados para o método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">O <see cref="T:System.Data.DataRow" /> sendo adicionado.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Obtém a linha que está sendo adicionada.</summary>
      <returns>O <see cref="T:System.Data.DataRow" /> que está sendo adicionado.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary>Representa o método que manipula o método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>O <see cref="T:System.Data.DataTableReader" /> obtém o conteúdo de um ou mais objetos <see cref="T:System.Data.DataTable" /> na forma de um ou mais conjuntos de resultados somente leitura de somente avanço.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTableReader" /> usando dados do <see cref="T:System.Data.DataTable" /> fornecido.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> do qual o novo <see cref="T:System.Data.DataTableReader" /> obtém seu conjunto de resultados.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataTableReader" /> usando a matriz de objetos <see cref="T:System.Data.DataTable" /> fornecida.</summary>
      <param name="dataTables">A matriz de objetos <see cref="T:System.Data.DataTable" /> que fornece os resultados para o novo objeto <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Fecha o <see cref="T:System.Data.DataTableReader" /> atual.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>A profundidade de aninhamento da linha atual do <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>A profundidade do aninhamento para a linha atual; sempre zero.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Retorna o número de colunas na linha atual.</summary>
      <returns>Quando não posicionado em um conjunto de resultados válido, 0; caso contrário, o número de colunas na linha atual.</returns>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de recuperar a contagem de campos em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um byte.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lê um fluxo de bytes, começando no deslocamento de coluna especificado no buffer como uma matriz iniciada no deslocamento de buffer especificado.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <param name="dataIndex">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferIndex">O índice no buffer no qual será iniciada a colocação dos dados.</param>
      <param name="length">O tamanho máximo a ser copiado no buffer.</param>
      <returns>O número real de bytes lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém uma matriz de bytes.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um caractere.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">O campo especificado não contém um caractere.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Retorna o valor da coluna especificada como uma matriz de caracteres.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <param name="dataIndex">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer">O buffer no qual o fluxo de caracteres deve ser lido.</param>
      <param name="bufferIndex">O índice no buffer no qual será iniciada a colocação dos dados.</param>
      <param name="length">O tamanho máximo a ser copiado no buffer.</param>
      <returns>O número real de caracteres lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém uma matriz de caracteres.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Obtém uma cadeia de caracteres que representa o tipo de dados da coluna especificada.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>Uma cadeia de caracteres que representa o tipo de dados da coluna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um valor de DateTime.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um valor <see langword="Decimal" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Obtém o valor da coluna como um número de ponto flutuante de precisão dupla.</summary>
      <param name="ordinal">O ordinal com base em zero da coluna.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um número de ponto flutuante de precisão dupla.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar na coleção de item.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que representa a coleção de itens.</returns>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Obtém o <see cref="T:System.Type" /> que é o tipo de dados do objeto.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O <see cref="T:System.Type" /> que é o tipo de dados do objeto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um número de ponto flutuante de precisão simples.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um inteiro com sinal de 16 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um valor inteiro com sinal de 32 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém um valor inteiro com sinal de 64 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um <see cref="T:System.String" />.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>O nome da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Obtém a ordinal da coluna, de acordo com o nome da coluna.</summary>
      <param name="name">O nome da coluna.</param>
      <returns>O ordinal da coluna baseado em zero.</returns>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.ArgumentException">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Obtém o tipo da coluna especificada no formato específico do provedor.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O <see cref="T:System.Type" /> que é o tipo de dados do objeto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Obtém o valor da coluna especificada no formato específico do provedor.</summary>
      <param name="ordinal">O número com base em zero da coluna cujo valor é recuperado.</param>
      <returns>O valor da coluna especificada no formato específico do provedor.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Preenche a matriz fornecida com informações de tipo específicas do provedor para todas as colunas no <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values">Uma matriz de objetos a ser preenchida com as informações de tipo para as colunas no <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>O número de valores de coluna copiados para a matriz.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.DataTableReader" /> está fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Obtém o valor da coluna especificada como uma cadeia de caracteres.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException">A coluna especificada não contém uma cadeia de caracteres.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Obtém o valor da coluna especificada em seu formato nativo.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>O valor da coluna especificada. Esse método retorna <see langword="DBNull" /> para colunas nulas.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar colunas em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Popula uma matriz de objetos com os valores da coluna da linha atual.</summary>
      <param name="values">Uma matriz de <see cref="T:System.Object" /> para a qual copiar os valores da coluna de <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>O número de valores de coluna copiados para a matriz.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataTableReader" /> contém uma ou mais linhas.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.DataTableReader" /> contiver uma ou mais linhas; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de recuperar informações sobre um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataTableReader" /> está fechado.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Data.DataTableReader" /> estiver fechado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Obtém um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero</param>
      <returns>
        <see langword="true" /> se o valor da coluna especificada for equivalente a <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Obtém o valor da coluna especificada em seu formato nativo de acordo com o ordinal da coluna.</summary>
      <param name="ordinal">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna especificada em seu formato nativo.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Obtém o valor da coluna especificada em seu formato nativo de acordo com o nome da coluna.</summary>
      <param name="name">O nome da coluna.</param>
      <returns>O valor da coluna especificada em seu formato nativo.</returns>
      <exception cref="T:System.ArgumentException">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Avança o <see cref="T:System.Data.DataTableReader" /> para o próximo conjunto de resultados, se houver.</summary>
      <returns>
        <see langword="true" /> se houver outro conjunto de resultados; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de navegar em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Avança o <see cref="T:System.Data.DataTableReader" /> para o próximo registro.</summary>
      <returns>
        <see langword="true" /> se houver outra linha a ser lida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Obtém o número de linhas inseridas, alteradas ou excluídas pela execução da instrução SQL.</summary>
      <returns>O <see cref="T:System.Data.DataTableReader" /> não dá suporte a essa propriedade e sempre retorna 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Representa uma exibição personalizada sujeita a limite de dados de um <see cref="T:System.Data.DataTable" /> para classificação, filtragem, pesquisa, edição e navegação. O <see cref="T:System.Data.DataView" /> não armazenam dados, mas representa uma exibição conectada do <see cref="T:System.Data.DataTable" /> correspondente. Alterações aos dados do <see cref="T:System.Data.DataView" /> afetarão o <see cref="T:System.Data.DataTable" />. Alterações aos dados do <see cref="T:System.Data.DataTable" /> afetarão todos os <see cref="T:System.Data.DataView" />s associados a ele.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataView" /> com o <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table">Um <see cref="T:System.Data.DataTable" /> para adicionar ao <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataView" /> com o <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> e <see cref="T:System.Data.DataViewRowState" /> especificados.</summary>
      <param name="table">Um <see cref="T:System.Data.DataTable" /> para adicionar ao <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">Um <see cref="P:System.Data.DataView.RowFilter" /> para aplicar ao <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">Um <see cref="P:System.Data.DataView.Sort" /> para aplicar ao <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">Um <see cref="T:System.Data.DataViewRowState" /> para aplicar ao <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Adiciona uma nova linha ao <see cref="T:System.Data.DataView" />.</summary>
      <returns>Um novo objeto <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Define ou obtém um valor que indica se é permitido excluir.</summary>
      <returns>
        <see langword="true" />, se as exclusões forem permitidas; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Obtém ou define um valor que indica se é permitido editar.</summary>
      <returns>
        <see langword="true" />, se for permitido editar; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Obtém ou define um valor que indica se as novas linhas podem ser adicionadas usando o método <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns>
        <see langword="true" />, se novas linhas puderem ser adicionadas; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Obtém ou define um valor que indica se a classificação padrão deve ser usada. A classificação padrão é (crescente) por todas as chaves primárias, conforme especificado por <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns>
        <see langword="true" /> se a classificação padrão for usada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Começa a inicialização de um <see cref="T:System.Data.DataView" /> usado em um formulário ou por outro componente. A inicialização ocorre em tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Fecha o <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Ocorre após um <see cref="T:System.Data.DataColumnCollection" /> ter sido alterado com êxito.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Copia os itens para uma matriz. Somente para Interfaces do Web Forms.</summary>
      <param name="array">a matriz para a qual será copiado.</param>
      <param name="index">o índice no qual será iniciado.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Obtém o número de registros em <see cref="T:System.Data.DataView" /> após <see cref="P:System.Data.DataView.RowFilter" /> e <see cref="P:System.Data.DataView.RowStateFilter" /> terem sido aplicados.</summary>
      <returns>O número de registros em <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Obtém o <see cref="T:System.Data.DataViewManager" /> associado a esta exibição.</summary>
      <returns>O <see langword="DataViewManager" /> que criou esta exibição. Se esse é o <see cref="T:System.Data.DataView" /> padrão para um <see cref="T:System.Data.DataTable" />, a propriedade <see langword="DataViewManager" /> retorna o <see langword="DataViewManager" /> padrão para o <see langword="DataSet" />. Caso contrário, se o <see langword="DataView" /> foi criado sem um <see langword="DataViewManager" />, esta propriedade é <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Exclui uma linha no índice especificado.</summary>
      <param name="index">O índice da linha a ser excluída.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Descarta os recursos (exceto a memória) usados pelo objeto <see cref="T:System.Data.DataView" />.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Encerra a inicialização de um <see cref="T:System.Data.DataView" /> que é usado em um formulário ou por outro componente. A inicialização ocorre em tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Determina se as instâncias <see cref="T:System.Data.DataView" /> especificadas são consideradas iguais.</summary>
      <param name="view">O <see cref="T:System.Data.DataView" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se as duas instâncias <see cref="T:System.Data.DataView" /> forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Localiza uma linha no <see cref="T:System.Data.DataView" /> segundo o valor da chave de classificação especificada.</summary>
      <param name="key">O objeto a ser procurado.</param>
      <returns>O índice da linha no <see cref="T:System.Data.DataView" /> que contém o valor da chave de classificação especificada; caso contrário, -1 se o valor da chave de classificação não existir.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Localiza uma linha no <see cref="T:System.Data.DataView" /> pelos valores de chave de classificação especificados.</summary>
      <param name="key">Uma matriz de valores, digitada como <see cref="T:System.Object" />.</param>
      <returns>O índice da posição da primeira linha no <see cref="T:System.Data.DataView" /> que corresponde aos valores de chave de classificação especificados; caso contrário, -1 se não houver nenhum valor de chave de classificação correspondente.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Retorna uma matriz de objetos <see cref="T:System.Data.DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificado.</summary>
      <param name="key">O valor da coluna, digitado como <see cref="T:System.Object" />, a ser pesquisado.</param>
      <returns>Uma matriz de objetos <see langword="DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificada ou, se nenhuma linha contiver os valores da chave de classificação especificada, uma matriz de <see langword="DataRowView" /> vazia.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Retorna uma matriz de objetos <see cref="T:System.Data.DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificado.</summary>
      <param name="key">Uma matriz de valores de coluna, digitada como <see cref="T:System.Object" />, a ser pesquisada.</param>
      <returns>Uma matriz de objetos <see langword="DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificada ou, se nenhuma linha contiver os valores da chave de classificação especificada, uma matriz de <see langword="DataRowView" /> vazia.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Obtém um enumerador para este <see cref="T:System.Data.DataView" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para navegar pela lista.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Ocorre após um <see cref="T:System.Data.DataView" /> ter sido alterado com êxito.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Ocorrerá quando a inicialização da <see cref="T:System.Data.DataView" /> for concluída.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Obtém um valor que indica se o componente é inicializado.</summary>
      <returns>
        <see langword="true" />para indicar que o componente concluiu a inicialização; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Obtém um valor que indica se a fonte de dados está atualmente aberta e projetando exibições de dados no <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see langword="true" />, se a fonte estiver aberta; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Obtém uma linha de dados de uma tabela especificada.</summary>
      <param name="recordIndex">O índice de um registro no <see cref="T:System.Data.DataTable" />.</param>
      <returns>Um <see cref="T:System.Data.DataRowView" /> da linha que você deseja.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Ocorre quando a lista gerenciada pelo <see cref="T:System.Data.DataView" /> é alterada.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Abre um <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Reservado apenas para uso interno.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Obtém ou define a expressão usada para filtrar quais linhas são exibidas no <see cref="T:System.Data.DataView" />.</summary>
      <returns>Uma cadeia de caracteres que especifica como as linhas devem ser filtradas.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Obtém ou define o filtro de estado de linha usado no <see cref="T:System.Data.DataView" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Obtém ou define a coluna ou as colunas de classificação e a ordem de classificação para o <see cref="T:System.Data.DataView" />.</summary>
      <returns>Uma cadeia de caracteres que contém o nome da coluna seguido por “ASC” (crescente) ou “DESC” (decrescente). As colunas são classificadas em ordem crescente por padrão. Várias colunas podem ser separadas por vírgulas.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Um valor <see cref="T:System.Object" />.</param>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Um valor <see cref="T:System.Object" />.</param>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Um valor <see cref="T:System.Object" />.</param>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Um valor <see cref="T:System.Int32" />.</param>
      <param name="value">Um valor <see cref="T:System.Object" /> a ser inserido.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex">Um valor <see cref="T:System.Int32" />.</param>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Um valor <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">Um valor <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>O item adicionado à lista.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction">Um objeto <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key">Um valor <see cref="T:System.Object" />.</param>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">Um objeto <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> a serem encontrados na coleção como associáveis. Ele pode ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Uma matriz de objetos de <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Obtém ou define o <see cref="T:System.Data.DataTable" /> de origem.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que fornece os dados para esta exibição.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <returns>Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="distinct">Se <see langword="true" />, o <see cref="T:System.Data.DataTable" /> retornado conterá linhas que têm valores distintos para todas as suas colunas. O valor padrão é <see langword="false" />.</param>
      <param name="columnNames">Uma matriz de cadeia de caracteres que contém uma lista de nomes da coluna a serem incluídos no <see cref="T:System.Data.DataTable" /> retornado. O <see cref="T:System.Data.DataTable" /> contém as colunas especificadas na ordem em que aparecem nessa matriz.</param>
      <returns>Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName">O nome do <see cref="T:System.Data.DataTable" /> retornado.</param>
      <returns>Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName">O nome do <see cref="T:System.Data.DataTable" /> retornado.</param>
      <param name="distinct">Se <see langword="true" />, o <see cref="T:System.Data.DataTable" /> retornado conterá linhas que têm valores distintos para todas as suas colunas. O valor padrão é <see langword="false" />.</param>
      <param name="columnNames">Uma matriz de cadeia de caracteres que contém uma lista de nomes da coluna a serem incluídos no <see cref="T:System.Data.DataTable" /> retornado. O <see langword="DataTable" /> contém as colunas especificadas na ordem em que aparecem nessa matriz.</param>
      <returns>Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Reservado apenas para uso interno.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Reservado apenas para uso interno.</summary>
      <param name="force">Reservado apenas para uso interno.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Contém uma <see cref="T:System.Data.DataViewSettingCollection" /> padrão para cada <see cref="T:System.Data.DataTable" /> em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DataViewManager" /> para o <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet">O nome do <see cref="T:System.Data.DataSet" /> a ser usado.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Cria um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table">O nome do <see cref="T:System.Data.DataTable" /> a ser usado no <see cref="T:System.Data.DataView" />.</param>
      <returns>Um objeto <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Obtém ou define o <see cref="T:System.Data.DataSet" /> a ser usado com o <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>O <see cref="T:System.Data.DataSet" /> a ser usado.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Obtém ou define um valor usado para persistência do código.</summary>
      <returns>Um valor que é usado para persistência de código.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Obtém o <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see cref="T:System.Data.DataTable" /> no <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Um <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Ocorre depois que uma linha é adicionada ou excluída de uma <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Gera um evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> quando um <see cref="T:System.Data.DataRelation" /> é adicionado ou removido do <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Adiciona um item ao <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</param>
      <returns>A posição na qual o novo elemento foi inserido.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Determinará se o <see cref="T:System.Collections.IList" /> contiver um valor específico.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> for encontrado no <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina o índice de um item específico em <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</param>
      <returns>O índice de <paramref name="value" /> se encontrado na lista; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insere um item na <see cref="T:System.Collections.IList" /> no índice especificado.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.Object" /> a ser inserido no <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Remove o item <see cref="T:System.Collections.IList" /> no índice especificado.</summary>
      <param name="index">O índice com base em zero do item a ser removido.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Adiciona o <see cref="T:System.ComponentModel.PropertyDescriptor" /> aos índices usados para pesquisa.</summary>
      <param name="property">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> a ser adicionado aos índices usados para pesquisa.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Classifica a lista com base em um <see cref="T:System.ComponentModel.PropertyDescriptor" /> e um <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> pelo qual se classificar.</param>
      <param name="direction">Um dos valores de <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Retorna o índice da linha que tem o <see cref="T:System.ComponentModel.PropertyDescriptor" /> determinado.</summary>
      <param name="property">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> no qual pesquisar.</param>
      <param name="key">O valor do parâmetro da propriedade a ser pesquisado.</param>
      <returns>O índice da linha que tem o <see cref="T:System.ComponentModel.PropertyDescriptor" /> determinado.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Remove o <see cref="T:System.ComponentModel.PropertyDescriptor" /> dos índices usados para pesquisa.</summary>
      <param name="property">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> para remover os índices usados para pesquisa.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Remove qualquer classificação aplicada usando <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Retorna o <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades em cada item usado para associar os dados.</summary>
      <param name="listAccessors">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> a serem encontrados na coleção como associáveis. Ele pode ser <see langword="null" />.</param>
      <returns>O <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades em cada item usado para associar os dados.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Retorna o nome da lista.</summary>
      <param name="listAccessors">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />, para a qual o nome da lista é retornado. Ele pode ser <see langword="null" />.</param>
      <returns>O nome da lista.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Gera um evento <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> quando um <see cref="T:System.Data.DataTable" /> é adicionado ou removido do <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Descreve a versão dos dados em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>Uma nova linha.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Linhas atuais, incluindo inalteradas, novas e modificadas. Por padrão, <see cref="T:System.Data.DataViewRowState" /> é definido como CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>Uma linha excluída.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>A versão atual dos dados originais que foram modificados (consulte <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>A versão original dos dados que foram modificados. (Embora os dados já tenham sido modificados, eles estão disponíveis como <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>nenhuma.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Linhas originais, incluindo linhas inalteradas e excluídas.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>Uma linha inalterada.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Representa as configurações padrão para <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> e <see cref="P:System.Data.DataView.Table" /> para DataViews criadas de <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Obtém ou define um valor que indica se a classificação padrão deve ser usada.</summary>
      <returns>
        <see langword="true" />se a classificação padrão for usada; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Obtém o <see cref="T:System.Data.DataViewManager" /> que contém esse <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Obtém ou define o filtro a ser aplicado no <see cref="T:System.Data.DataView" />. Consulte <see cref="P:System.Data.DataView.RowFilter" /> para obter um exemplo de código usando RowFilter.</summary>
      <returns>Uma cadeia de caracteres que contém o filtro a ser aplicado.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Obtém ou define um valor que indica se deseja exibir as linhas Atuais, Excluídas, Modificadas Atuais, Modificadas Originais, Novas, Originais, Inalteradas ou nenhuma linha no <see cref="T:System.Data.DataView" />.</summary>
      <returns>Um valor que indica quais linhas exibir.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Obtém ou define um valor que indica a classificação a ser aplicada no <see cref="T:System.Data.DataView" />.</summary>
      <returns>A classificação a ser aplicada no <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Obtém o <see cref="T:System.Data.DataTable" /> ao qual as propriedades <see cref="T:System.Data.DataViewSetting" /> se aplicam.</summary>
      <returns>Um objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Contém uma coleção somente leitura de objetos <see cref="T:System.Data.DataViewSetting" /> para cada <see cref="T:System.Data.DataTable" /> em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia os objetos de coleção para uma instância <see cref="T:System.Array" /> unidimensional começando no índice especificado.</summary>
      <param name="ar">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
      <param name="index">O índice da matriz na qual iniciar a inserção.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Copia os objetos de coleção para uma instância <see cref="T:System.Array" /> unidimensional começando no índice especificado.</summary>
      <param name="ar">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
      <param name="index">O índice da matriz na qual iniciar a inserção.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Obtém o número de objetos <see cref="T:System.Data.DataViewSetting" /> no <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>O número de <see cref="T:System.Data.DataViewSetting" /> objetos na coleção.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Obtém um <see cref="T:System.Collections.IEnumerator" /> para a coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.DataViewSettingCollection" /> é somente leitura.</summary>
      <returns>Sempre retorna <see langword="true" /> para indicar que a coleção é somente leitura.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a <see cref="T:System.Data.DataViewSettingCollection" /> é sincronizado (thread-safe).</summary>
      <returns>Essa propriedade é sempre <see langword="false" />, a menos que seja substituída por uma classe derivada.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Obtém os objetos de <see cref="T:System.Data.DataViewSetting" /> do <see cref="T:System.Data.DataTable" /> especificado da coleção.</summary>
      <param name="table">O <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns>Uma coleção de objetos <see cref="T:System.Data.DataViewSetting" /> .</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Obtém os objetos <see cref="T:System.Data.DataViewSetting" /> do <see cref="T:System.Data.DataTable" /> especificado por seu índice.</summary>
      <param name="index">O índice baseado em zero do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns>Uma coleção de objetos <see cref="T:System.Data.DataViewSetting" /> .</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Obtém os <see cref="T:System.Data.DataViewSetting" /> do <see cref="T:System.Data.DataTable" /> especificado por seu nome.</summary>
      <param name="tableName">O nome do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns>Uma coleção de objetos <see cref="T:System.Data.DataViewSetting" /> .</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>A exceção lançada pelo <see cref="T:System.Data.Common.DataAdapter" /> durante uma operação de inserção, atualização ou exclusão se o número de linhas afetadas é igual a zero.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">A cadeia de caracteres de texto que descreve os detalhes da exceção.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">A cadeia de caracteres de texto que descreve os detalhes da exceção.</param>
      <param name="inner">Uma referência a uma exceção interna.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">A mensagem de erro que explica a razão desta exceção.</param>
      <param name="inner">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
      <param name="dataRows">Uma matriz que contém os objetos <see cref="T:System.Data.DataRow" /> cuja falha de atualização gerou essa exceção.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Copia os objetos <see cref="T:System.Data.DataRow" /> cuja falha de atualização gerou essa exceção, para a matriz de objetos <see cref="T:System.Data.DataRow" /> especificada.</summary>
      <param name="array">A matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> na qual copiar os objetos <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copia os objetos <see cref="T:System.Data.DataRow" /> cuja falha de atualização gerou essa exceção, para a matriz de objetos <see cref="T:System.Data.DataRow" /> especificada, começando no índice da matriz de destino especificado.</summary>
      <param name="array">A matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> na qual copiar os objetos <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex">O índice de matriz de destino no qual a cópia é iniciada.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Preenche o objeto de informações de serialização especificado com os dados necessários para serializar o <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">Um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados serializados associados a <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see langword="Nothing" /> é uma referência nula (<paramref name="info" /> no Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Obtém ou define o valor de <see cref="T:System.Data.DataRow" /> que gerou o <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns>O valor de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Obtém o número de linhas cuja atualização falhou, gerando essa exceção.</summary>
      <returns>Um inteiro que contém uma contagem do número de linhas cuja atualização falhou.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Especifica o tipo de dados de um campo, uma propriedade ou um objeto <see langword="Parameter" /> de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>Um fluxo de comprimento variável de caracteres não Unicode que variam entre 1 e 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>Um fluxo de comprimento fixo de caracteres não Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>Um fluxo de comprimento variável de dados binários que variam entre 1 e 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>Um tipo simples que representa valores boolianos de <see langword="true" /> ou <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>Um inteiro sem sinal de 8 bits que varia em valor de 0 a 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>Um valor de moeda variando de -2 63 (ou -922.337.203.685.477,5808) a 2 63 -1 (ou +922.337.203.685.477,5807) com uma precisão de dez milésimos de uma unidade monetária.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>Um tipo que representa um valor de data.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>Um tipo que representa um valor de data e hora.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Dados de data e hora. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Dados de data e hora com reconhecimento de fuso horário. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos. O intervalo de valores de fuso horário é de -14:00 a +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>Um tipo simples que representam valores que variam de 1,0 x 10 -28 a aproximadamente 7,9 x 10 28 com 28-29 dígitos significativos.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>Um tipo de ponto flutuante que representa valores que variam de aproximadamente 5,0 x 10 -324 a 1,7 x 10 308 com uma precisão de 15-16 dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>Um GUID (identificador global exclusivo).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>Um tipo integral que representa inteiros de 16 bits com sinal com valores entre -32768 e 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>Um tipo integral que representa inteiros de 32 bits com sinal com valores entre -2147483648 e 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>Um tipo integral que representa inteiros de 64 bits com sinal com valores entre -9223372036854775808 e 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>Um tipo geral que representa qualquer tipo de valor ou referência não explicitamente representado por outro valor <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>Um tipo integral que representa inteiros de 8 bits com sinal com valores entre -128 e 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>Um tipo de ponto flutuante que representa valores que variam de aproximadamente 1,5 x 10 -45 a 3,4 x 10 38 com uma precisão de sete dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>Um tipo que representa as cadeias de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>Uma cadeia de caracteres de comprimento fixo Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>Um tipo que representa um valor <see langword="DateTime" /> do SQL Server. Se você quiser usar um valor SQL Server <see langword="time" />, use <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>Um tipo integral que representa inteiros de 16 bits sem sinal com valores entre 0 e 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>Um tipo integral que representa inteiros de 32 bits sem sinal com valores entre 0 e 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>Um tipo integral que representa inteiros de 64 bits sem sinal com valores entre 0 e 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>Um valor numérico de comprimento variável.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>Uma representação analisada de um documento ou fragmento XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Representa a exceção gerada quando há uma tentativa de ação em um <see cref="T:System.Data.DataRow" /> que foi excluído.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Representa a exceção gerada quando um nome de objeto de banco de dados duplicado é encontrado durante uma operação de adição em um objeto relacionado ao <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" /> com a cadeia de caracteres e exceção especificadas.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.Data.DataRow" /> retornada por uma consulta LINQ to DataSet. Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador para a coleção de objetos <see cref="T:System.Data.DataRow" />. Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para percorrer a coleção de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary>Representa uma coleção de objetos <see cref="T:System.Data.DataRow" /> retornada por uma consulta.</summary>
      <typeparam name="TRow">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary>Retorna um enumerador para a coleção de objetos de linha contidos.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> fortemente tipado que pode ser usado para percorrer a coleção de objetos <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador para a coleção de objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para percorrer a coleção de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary>Contém os métodos de extensão para as classes de coleção de linha de dados.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary>Converte os elementos de um <see cref="T:System.Data.EnumerableRowCollection" /> para o tipo especificado.</summary>
      <param name="source">O <see cref="T:System.Data.EnumerableRowCollection" /> que contém os elementos a serem convertidos.</param>
      <typeparam name="TResult">O tipo para o qual converter os elementos de origem.</typeparam>
      <returns>Um <see cref="T:System.Data.EnumerableRowCollection" /> que contém cada elemento da sequência de origem convertido para o tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Um elemento na sequência não pode ser convertido para o tipo <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave especificada.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave especificada.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Projeta cada elemento de uma <see cref="T:System.Data.EnumerableRowCollection`1" /> em um novo formulário.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> para os quais invocar uma função de transformação.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S">O tipo que <paramref name="TRow" /> será transformado em.</typeparam>
      <returns>Um <see cref="T:System.Data.EnumerableRowCollection`1" /> cujos elementos são o resultado da invocação da função de transformação em cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave especificada.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave especificada.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary>Filtra uma sequência de linhas com base no predicado especificado.</summary>
      <param name="source">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a filtrar.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Um <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contém linhas da sequência de entrada que atendem à condição.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Representa a exceção que é gerada quando a propriedade <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" /> não pode ser avaliada.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Fornece dados para o evento <see cref="E:System.Data.Common.DataAdapter.FillError" /> de um <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable">O <see cref="T:System.Data.DataTable" /> sendo atualizado.</param>
      <param name="values">Os valores da linha sendo atualizada.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Obtém ou define um valor que indica se deve-se ou não dar continuidade à operação de preenchimento, apesar do erro.</summary>
      <returns>
        <see langword="true" />se a operação de preenchimento deve continuar; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Obtém o <see cref="T:System.Data.DataTable" /> sendo atualizado quando o erro ocorreu.</summary>
      <returns>O <see cref="T:System.Data.DataTable" /> sendo atualizado.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Obtém os erros que estão sendo tratados.</summary>
      <returns>Os erros que estão sendo manipulados.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Obtém os valores da linha sendo atualizada quando o erro ocorreu.</summary>
      <returns>Os valores da linha sendo atualizada.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.Data.Common.DataAdapter.FillError" /> .</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">O <see cref="T:System.Data.FillErrorEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Representa uma restrição de ação imposta em um conjunto de colunas em uma relação de chave estrangeira/chave primária quando um valor ou uma linha é excluída ou atualizada.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com os objetos <see cref="T:System.Data.DataColumn" /> pai e filho especificados.</summary>
      <param name="parentColumn">O <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumn">O <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm tipos de dados diferentes.  

Ou - 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com as matrizes especificadas de objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="parentColumns">Uma matriz de <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumns">Uma matriz de <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm tipos de dados diferentes.  

Ou - 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com o nome especificado e objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="constraintName">O nome da restrição.</param>
      <param name="parentColumn">O <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumn">O <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm tipos de dados diferentes.  

Ou - 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com o nome especificado, bem como matrizes de objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="constraintName">O nome do <see cref="T:System.Data.ForeignKeyConstraint" />. Se for <see langword="null" /> ou uma cadeia de caracteres vazia, um nome padrão será fornecido quando for adicionado à coleção de restrições.</param>
      <param name="parentColumns">Uma matriz de <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumns">Uma matriz de <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm tipos de dados diferentes.  

Ou - 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio. Os objetos <see cref="T:System.Data.ForeignKeyConstraint" /> criados usando este construtor, em seguida, devem ser adicionados à coleção via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tabelas e colunas com os nomes especificados devem existir no momento em que o método é chamado ou se <see cref="M:System.Data.DataTable.BeginInit" /> foi chamado antes de se chamar este construtor, as tabelas e colunas com os nomes especificados devem existir no momento em que <see cref="M:System.Data.DataTable.EndInit" /> é chamado.</summary>
      <param name="constraintName">O nome da restrição.</param>
      <param name="parentTableName">O nome do pai <see cref="T:System.Data.DataTable" /> que contém objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="parentTableNamespace">O nome do <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumnNames">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <param name="acceptRejectRule">Um dos valores de <see cref="T:System.Data.AcceptRejectRule" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" /> e <see langword="Default" />.</param>
      <param name="deleteRule">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é excluída. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <param name="updateRule">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é atualizada. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm tipos de dados diferentes.  

Ou - 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio. Os objetos <see cref="T:System.Data.ForeignKeyConstraint" /> criados usando este construtor, em seguida, devem ser adicionados à coleção via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tabelas e colunas com os nomes especificados devem existir no momento em que o método é chamado ou se <see cref="M:System.Data.DataTable.BeginInit" /> foi chamado antes de se chamar este construtor, as tabelas e colunas com os nomes especificados devem existir no momento em que <see cref="M:System.Data.DataTable.EndInit" /> é chamado.</summary>
      <param name="constraintName">O nome da restrição.</param>
      <param name="parentTableName">O nome do pai <see cref="T:System.Data.DataTable" /> que contém objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="parentColumnNames">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumnNames">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <param name="acceptRejectRule">Um dos valores de <see cref="T:System.Data.AcceptRejectRule" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" /> e <see langword="Default" />.</param>
      <param name="deleteRule">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é excluída. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <param name="updateRule">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é atualizada. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">As colunas têm tipos de dados diferentes.  

Ou - 
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Indica a ação que deve ocorrer por essa restrição quando <see cref="M:System.Data.DataTable.AcceptChanges" /> é invocado.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.AcceptRejectRule" />. Os valores possíveis <see langword="None" />incluem e <see langword="Cascade" />. O padrão é <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Obtém as colunas filho dessa restrição.</summary>
      <returns>Uma matriz de <see cref="T:System.Data.DataColumn" /> objetos que são as colunas filho da restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Obtém ou define a ação que ocorre nessa restrição quando uma linha é excluída.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.Rule" />. O padrão é <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.ForeignKeyConstraint" /> atual é idêntico ao objeto especificado.</summary>
      <param name="key">O objeto ao qual este <see cref="T:System.Data.ForeignKeyConstraint" /> é comparado. Dois <see cref="T:System.Data.ForeignKeyConstraint" /> são iguais se eles restringem as mesmas colunas.</param>
      <returns>
        <see langword="true" /> se os objetos forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Obtém o código hash desta instância do objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>As colunas pai dessa restrição.</summary>
      <returns>Uma matriz de <see cref="T:System.Data.DataColumn" /> objetos que são as colunas pai da restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Obtém a tabela pai dessa restrição.</summary>
      <returns>O pai <see cref="T:System.Data.DataTable" /> desta restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Obtém a tabela filho dessa restrição.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que é a tabela filho na restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Obtém ou define a ação que ocorre nessa restrição quando uma linha é atualizada.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.Rule" />. O padrão é <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Associa uma coluna de fonte de dados a uma coluna <see cref="T:System.Data.DataSet" /> e é implementado pela classe <see cref="T:System.Data.Common.DataColumnMapping" />, que é usada em comum por provedores de dados .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Obtém ou define o nome da coluna dentro de <see cref="T:System.Data.DataSet" /> para o qual mapear.</summary>
      <returns>O nome da coluna dentro do para <see cref="T:System.Data.DataSet" /> o qual mapear. O nome não diferencia maiúsculas de minúsculas.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Obtém ou define o nome da coluna na fonte de dados da qual mapear. O nome diferencia maiúsculas de minúsculas.</summary>
      <returns>O nome que diferencia maiúsculas de minúsculas da coluna na fonte de dados.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Contém uma coleção de objetos DataColumnMapping e é implementado pelo <see cref="T:System.Data.Common.DataColumnMappingCollection" />, que é usado em comum por provedores de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Adiciona um objeto de ColumnMapping à coleção ColumnMapping usando a coluna de origem e nomes de coluna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <param name="dataSetColumnName">O nome da coluna <see cref="T:System.Data.DataSet" />.</param>
      <returns>O objeto ColumnMapping que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contém um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado.</summary>
      <param name="sourceColumnName">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns>
        <see langword="true" /> se um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado existe; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Obtém o objeto ColumnMapping com o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName">O nome da coluna <see cref="T:System.Data.DataSet" /> dentro da coleção.</param>
      <returns>O objeto ColumnMapping com o nome de coluna <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Obtém o local do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome da coluna de origem especificado. O nome diferencia maiúsculas de minúsculas.</summary>
      <param name="sourceColumnName">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns>O local baseado em zero do objeto <see langword="DataColumnMapping" /> com o nome da coluna de origem especificado.</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Obtém ou define o objeto <see cref="T:System.Data.IColumnMapping" /> com o nome <see langword="SourceColumn" /> especificado.</summary>
      <param name="index">O nome <see langword="SourceColumn" /> do objeto <see langword="IColumnMapping" /> a ser localizado.</param>
      <returns>O <see langword="IColumnMapping" /> objeto com o nome <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.IColumnMapping" /> com o nome <see cref="P:System.Data.IColumnMapping.SourceColumn" /> especificado da coleção.</summary>
      <param name="sourceColumnName">O nome <see langword="SourceColumn" /> que diferencia maiúsculas de minúsculas.</param>
      <exception cref="T:System.IndexOutOfRangeException">Um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> não existe com o nome <see langword="SourceColumn" /> especificado.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Permite que um objeto implemente um DataAdapter e representa um conjunto de métodos e propriedades relacionadas à ação de mapeamento que são usadas para preencher e atualizar um <see cref="T:System.Data.DataSet" /> e atualizar uma fonte de dados.  
 Instâncias <see cref="T:System.Data.IDbDataAdapter" /> são para fontes de dados que são (ou se parecem com) bancos de dados relacionais com comandos textuais (como Transact-SQL), enquanto instâncias <see cref="T:System.Data.IDataAdapter" /> podem usar qualquer tipo de fonte de dados.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando o nome <see cref="T:System.Data.DataSet" /> e cria um <see cref="T:System.Data.DataTable" /> chamado "Table".</summary>
      <param name="dataSet">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <returns>O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Adiciona um <see cref="T:System.Data.DataTable" /> com o nome “Tabela” ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder a eles na fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Uma matriz de objetos <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contém os parâmetros definidos pelo usuário.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Indica ou especifica se colunas ou tabelas de origem não mapeadas são passadas com seus nomes de origem para serem filtradas ou para gerarem um erro.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.MissingMappingAction" />. O padrão é <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException">O valor definido não é um dos valores <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Indica ou especifica se as colunas, tabelas de origem ausentes e suas relações são adicionadas ao esquema do conjunto de dados, se são ignoradas ou se causam um erro a ser gerado.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />. O padrão é <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException">O valor definido não é um dos valores <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Indica como uma tabela de origem é mapeada para uma tabela de conjunto de dados.</summary>
      <returns>Uma coleção que fornece o mapeamento mestre entre os registros retornados e o <see cref="T:System.Data.DataSet" />. O valor padrão é uma coleção vazia.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Chama as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> especificado em um <see cref="T:System.Data.DataTable" /> denominado “Tabela”.</summary>
      <param name="dataSet">O <see cref="T:System.Data.DataSet" /> usado para atualizar a fonte de dados.</param>
      <returns>O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.Data.DBConcurrencyException">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Representa um parâmetro a um objeto de Comando e, como opção, seus mapeamentos para colunas <see cref="T:System.Data.DataSet" /> e é implementado por provedores de dados .NET Framework que acessam as fontes de dados.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Obtém ou define o <see cref="T:System.Data.DbType" /> do parâmetro.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DbType" />. O padrão é <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">A propriedade não foi definida como um <see cref="T:System.Data.DbType" /> válido.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Obtém ou define um valor que indica se o parâmetro é apenas de entrada, saída, bidirecional ou um parâmetro de valor retornado do procedimento armazenado.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.ParameterDirection" />. O padrão é <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade não foi definida como um dos valores <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Obtém um valor que indica se o parâmetro aceita valores nulos.</summary>
      <returns>
        <see langword="true" />se valores nulos forem aceitos; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Obtém ou define o nome de <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns>O nome do <see cref="T:System.Data.IDataParameter" />. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Obtém ou define o nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" /> e usada para carregar ou retornar o <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>O nome da coluna de origem que é mapeada para o <see cref="T:System.Data.DataSet" />. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Obtém ou define o <see cref="T:System.Data.DataRowVersion" /> a ser usado ao carregar <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.DataRowVersion" />. O padrão é <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade não foi definida como um dos valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Obtém ou define o valor do parâmetro.</summary>
      <returns>Um <see cref="T:System.Object" /> que é o valor do parâmetro. O valor padrão é null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Coleta todos os parâmetros relevantes a um objeto de Comando e seus mapeamentos para colunas <see cref="T:System.Data.DataSet" /> e é implementado por provedores de dados .NET Framework que acessam as fontes de dados.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se um parâmetro na coleção tem o nome especificado.</summary>
      <param name="parameterName">O nome do parâmetro.</param>
      <returns>
        <see langword="true" /> se a coleção contiver parâmetro, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Obtém o local do <see cref="T:System.Data.IDataParameter" /> dentro da coleção.</summary>
      <param name="parameterName">O nome do parâmetro.</param>
      <returns>O local baseado em zero do <see cref="T:System.Data.IDataParameter" /> dentro da coleção.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Obtém ou define o parâmetro no índice especificado.</summary>
      <param name="parameterName">O nome do parâmetro a ser recuperado.</param>
      <returns>Um <see cref="T:System.Object" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Remove o <see cref="T:System.Data.IDataParameter" /> da coleção.</summary>
      <param name="parameterName">O nome do parâmetro.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Fornece um meio de ler um ou mais fluxos somente encaminhamento de conjuntos de resultados obtidos com a execução de um comando em uma fonte de dados e é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Fecha o objeto <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Obtém um valor que indica a profundidade de aninhamento da linha atual.</summary>
      <returns>O nível de aninhamento.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.IDataReader" /> está fechado.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Obtém um valor que indica se o leitor de dados está fechado.</summary>
      <returns>
        <see langword="true" />Se o leitor de dados estiver fechado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Avança o leitor de dados para o resultado seguinte ao ler os resultados de instruções SQL em lote.</summary>
      <returns>
        <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Avança o <see cref="T:System.Data.IDataReader" /> para o próximo registro.</summary>
      <returns>
        <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</summary>
      <returns>O número de linhas alteradas, inseridas ou excluídas, 0 se nenhuma linha tiver sido afetada ou a instrução tiver falhado e -1 para instruções SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Fornece acesso aos valores de coluna em cada linha para um <see langword="DataReader" /> e é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Obtém o número de colunas na linha atual.</summary>
      <returns>Quando não estiver posicionado em um conjunto de registros válido, 0. Caso contrário, o número de colunas no registro atual. O padrão é -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Obtém o valor da coluna especificada como um booliano.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <returns>O valor da coluna.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Obtém o valor de inteiro sem sinal de 8 bits da coluna especificada.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <returns>O valor de inteiro sem sinal de 8 bits da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lê um fluxo de bytes do deslocamento de coluna especificado no buffer como uma matriz, iniciando no deslocamento de buffer especificado.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <param name="fieldOffset">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferoffset">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</param>
      <param name="length">O número de bytes a serem lidos.</param>
      <returns>O número real de bytes lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Obtém o valor do caractere da coluna especificada.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <returns>O valor do caractere da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Lê um fluxo de caracteres do deslocamento de coluna especificado no buffer como uma matriz iniciada no deslocamento de buffer fornecido.</summary>
      <param name="i">O ordinal da coluna baseado em zero.</param>
      <param name="fieldoffset">O índice dentro da linha da qual iniciar a operação de leitura.</param>
      <param name="buffer">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferoffset">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</param>
      <param name="length">O número de bytes a serem lidos.</param>
      <returns>O número real de caracteres lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Retorna um <see cref="T:System.Data.IDataReader" /> para o ordinal da coluna especificada.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O <see cref="T:System.Data.IDataReader" /> para o ordinal da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Obtém as informações de tipo de dados do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>As informações de tipo de dados do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Obtém o valor de dados de data e hora do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor de dados de data e hora do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Obtém o valor numérico de posição fixa do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor numérico de posição fixa do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Obtém o número de ponto flutuante de precisão dupla do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O número de ponto flutuante de precisão dupla do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Obtém as informações <see cref="T:System.Type" /> que correspondem ao tipo de <see cref="T:System.Object" /> que seria retornado de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>As informações <see cref="T:System.Type" /> que correspondem ao tipo de <see cref="T:System.Object" /> que seria retornado de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Obtém o número de ponto flutuante de precisão simples do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O número de ponto flutuante de precisão simples do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Retorna o valor de GUID do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor de GUID do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Obtém o valor inteiro com sinal de 16 bits do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor inteiro com sinal de 16 bits do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Obtém o valor inteiro com sinal de 32 bits do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor inteiro com sinal de 32 bits do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Obtém o valor inteiro com sinal de 64 bits do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor inteiro com sinal de 64 bits do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Obtém o nome do campo a ser localizado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O nome do campo ou a cadeia de caracteres vazia (""), se não houver valor a ser retornado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Retorna o índice do campo nomeado.</summary>
      <param name="name">O nome do campo a ser localizado.</param>
      <returns>O índice do campo nomeado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Obtém o valor de cadeia de caracteres do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O valor de cadeia de caracteres do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Retorne o valor do campo especificado.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>O <see cref="T:System.Object" /> que conterá o valor do campo após o retorno.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Popula uma matriz de objetos com os valores da coluna do registro atual.</summary>
      <param name="values">Uma matriz de <see cref="T:System.Object" /> na qual os campos de atributo serão copiados.</param>
      <returns>O número de instâncias de <see cref="T:System.Object" /> na matriz.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Retorna se o campo especificado está definido como nulo.</summary>
      <param name="i">O índice do campo a ser localizado.</param>
      <returns>
        <see langword="true" /> se o campo especificado é definido como nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Obtém a coluna localizada no índice especificado.</summary>
      <param name="i">O índice baseado em zero da coluna a obter.</param>
      <returns>A coluna localizado no índice especificado como um <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Obtém a coluna com o nome especificado.</summary>
      <param name="name">O nome da coluna a ser encontrado.</param>
      <returns>A coluna com o nome especificado como um <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Nenhuma coluna com o nome especificado foi encontrada.</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>Representa uma instrução SQL que é executada enquanto está conectada a uma fonte de dados e que é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>Tenta cancelar a execução de um <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>Obtém ou define o comando de texto a ser executado na fonte de dados.</summary>
      <returns>O comando de texto a ser executado. O valor padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>Obtém ou define o tempo de espera antes do término da tentativa de executar um comando e antes de gerar um erro.</summary>
      <returns>O tempo de espera (em segundos) para a execução do comando. O valor padrão é 30 segundos.</returns>
      <exception cref="T:System.ArgumentException">O valor atribuído da propriedade é menor que 0.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>Indica ou especifica como a propriedade <see cref="P:System.Data.IDbCommand.CommandText" /> é interpretada.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.CommandType" />. O padrão é <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>Obtém ou define o <see cref="T:System.Data.IDbConnection" /> usado por essa instância do <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>A conexão com a fonte de dados.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>Cria uma nova instância de um objeto <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns>Um objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>Executa uma instrução SQL no objeto <see langword="Connection" /> de um provedor de dados .NET Framework e retorna o número de linhas afetadas.</summary>
      <returns>O número de linhas afetadas.</returns>
      <exception cref="T:System.InvalidOperationException">A conexão não existe.  

ou -  

 A conexão não está aberta.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> no <see cref="P:System.Data.IDbCommand.Connection" /> e compila um <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> para o <see cref="P:System.Data.IDbCommand.Connection" /> e cria um <see cref="T:System.Data.IDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>Executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Colunas ou linhas extra são ignoradas.</summary>
      <returns>A primeira coluna da primeira linha no conjunto de resultados.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>Obtém o <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>Cria uma versão preparada (ou compilada) do comando na fonte de dados.</summary>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> não foi definido.  

ou - 
O <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> não é <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>Obtém ou define a transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado.</summary>
      <returns>o <see langword="Command" /> objeto de um provedor de dados .NET Framework é executado. O valor padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>Obtém ou define como os resultados do comando são aplicados a <see cref="T:System.Data.DataRow" /> quando usados pelo método <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.UpdateRowSource" />. O padrão é <see langword="Both" />, a menos que o comando seja gerado automaticamente. Nesse caso, o padrão é <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException">O valor inserido não era um dos valores <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Representa uma conexão aberta com uma fonte de dados, e é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Inicia uma transação de banco de dados.</summary>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inicia uma transação de banco de dados com o valor <see cref="T:System.Data.IsolationLevel" /> especificado.</summary>
      <param name="il">Um dos valores de <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns>Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Altera o banco de dados atual para um objeto <see langword="Connection" /> aberto.</summary>
      <param name="databaseName">O nome do banco de dados a ser usado em lugar do banco de dados atual.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Fecha a conexão com o banco de dados.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Obtém ou define a cadeia de caracteres usada para abrir um banco de dados.</summary>
      <returns>Uma cadeia de caracteres que contém as configurações de conexão.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Obtém o tempo de espera durante a tentativa de estabelecimento da conexão antes que a tentativa seja terminada e um erro seja gerado.</summary>
      <returns>O tempo (em segundos) de espera para abrir uma conexão. O valor padrão é 15 segundos.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>Cria e retorna um objeto de comando associado à conexão.</summary>
      <returns>Um objeto de comando associado à conexão.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Obtém o nome do banco de dados atual ou o banco de dados a ser usado após uma conexão ser aberta.</summary>
      <returns>O nome do banco de dados atual ou o nome do banco de dados a ser usado assim que a conexão for aberta. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Abre uma conexão de banco de dados com as configurações especificadas pela propriedade <see langword="ConnectionString" /> do objeto Connection específico do provedor.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Obtém o estado atual da conexão.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Representa um conjunto de propriedades relacionadas ao comando que são usadas para preencher o <see cref="T:System.Data.DataSet" /> e atualizar uma fonte de dados, o qual é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>Obtém ou define uma instrução SQL para excluir registros do conjunto de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>Obtém ou define uma instrução SQL usada para inserir novos registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados para novas linhas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>Obtém ou define uma instrução SQL usada para selecionar registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> que é usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>Obtém ou define uma instrução SQL usada para atualizar registros na fonte de dados.</summary>
      <returns>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados para linhas modificadas no conjunto de dados.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Usada pelos Designers de dados do Visual Basic .NET para representar um parâmetro para um objeto de comando e, opcionalmente, seu mapeamento para colunas <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Indica a precisão de parâmetros numéricos.</summary>
      <returns>O número máximo de dígitos usados para representar a propriedade Value de um objeto de parâmetro de provedor de dados. O valor padrão é 0, que indica que um provedor de dados define a precisão para o valor.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Indica a escala de parâmetros numéricos.</summary>
      <returns>O número de casas decimais para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido. O padrão é 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>O tamanho do parâmetro.</summary>
      <returns>O tamanho máximo, em bytes, dos dados da coluna. O valor padrão é inferido do valor do parâmetro.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Representa uma transação a ser realizada em uma fonte de dados e é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Confirma a transação do banco de dados.</summary>
      <exception cref="T:System.Exception">Ocorreu um erro ao tentar confirmar a transação.</exception>
      <exception cref="T:System.InvalidOperationException">A transação já foi confirmada ou revertida.  

ou -  

 A conexão foi desfeita.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Especifica o objeto Connection a associar à transação.</summary>
      <returns>O objeto de conexão a ser associado à transação.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Especifica o <see cref="T:System.Data.IsolationLevel" /> para essa transação.</summary>
      <returns>O <see cref="T:System.Data.IsolationLevel" /> para essa transação. O padrão é <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Reverte uma transação de um estado pendente.</summary>
      <exception cref="T:System.Exception">Ocorreu um erro ao tentar confirmar a transação.</exception>
      <exception cref="T:System.InvalidOperationException">A transação já foi confirmada ou revertida.  

ou -  

 A conexão foi desfeita.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Representa a exceção gerada ao chamar o método <see cref="M:System.Data.DataRow.EndEdit" /> dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Fornece a funcionalidade básica para a criação de coleções.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos os elementos do <see cref="T:System.Data.InternalDataCollectionBase" /> atual para um <see cref="T:System.Array" /> unidimensional, começando no índice <see cref="T:System.Data.InternalDataCollectionBase" /> especificado.</summary>
      <param name="ar">O <see cref="T:System.Array" /> unidimensional para o qual os elementos do objeto <see cref="T:System.Data.InternalDataCollectionBase" /> atual serão copiados.</param>
      <param name="index">O índice <see cref="T:System.Array" /> de destino no qual a cópia é iniciada.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Obtém o número total de elementos em uma coleção.</summary>
      <returns>O número total de elementos em uma coleção.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Obtém um <see cref="T:System.Collections.IEnumerator" /> para a coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para a coleção.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.InternalDataCollectionBase" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se a coleção for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Obtém um valor que indica se o <see cref="T:System.Data.InternalDataCollectionBase" /> é sincronizado.</summary>
      <returns>
        <see langword="true" />se a coleção for sincronizada; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Obtém os itens da coleção como uma lista.</summary>
      <returns>Um <see cref="T:System.Collections.ArrayList" /> que contém a coleção.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar a coleção.</summary>
      <returns>O <see cref="T:System.Object" /> usado para sincronizar a coleção.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Representa a exceção gerada quando ocorre uma tentativa incorreta de criar ou acessar uma relação.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Representa a exceção gerada ao tentar adicionar uma <see cref="T:System.Data.DataColumn" /> que contém um <see cref="P:System.Data.DataColumn.Expression" /> inválido a um <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Especifica o comportamento de bloqueio de transação para a conexão.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>As alterações pendentes de transações com maior isolamento não podem ser substituídas.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>Bloqueios compartilhados são mantidos durante a leitura dos dados para impedir leituras sujas, mas os dados podem ser alterados antes do término da transação, resultando em leituras não repetíveis ou em dados fantasmas.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>Uma leitura suja é possível, o que significa que nenhum bloqueio compartilhado é emitido e nenhum bloqueio exclusivo é respeitado.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Os bloqueios são colocados em todos os dados usados em uma consulta, impedindo que outros usuários atualizem os dados. Evita leituras não repetíveis, mas linhas fantasma ainda são possíveis.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>Um bloqueio de intervalos é colocado no <see cref="T:System.Data.DataSet" />, impedindo que outros usuários atualizem ou insiram linhas no conjunto de dados até que a transação seja concluída.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Reduz o bloqueio armazenando uma versão dos dados que um aplicativo pode ler enquanto outro está modificando os mesmos dados. Indica que em uma transação não é possível ver as alterações feitas em outras transações, mesmo que a consulta seja repetida.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>Um nível de isolamento diferente daquele especificado está sendo usado, mas não é possível determinar o nível.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Associa uma tabela de origem a uma tabela em um <see cref="T:System.Data.DataSet" /> e é implementado pela classe <see cref="T:System.Data.Common.DataTableMapping" />, que é usada em comum por provedores de dados .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Obtém o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Uma coleção de mapeamentos de coluna de dados.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Obtém ou define o nome que não diferencia maiúsculas e minúsculas da tabela dentro do <see cref="T:System.Data.DataSet" />.</summary>
      <returns>O nome da tabela que não diferencia maiúsculas de minúsculas na <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Obtém ou define o nome que diferencia maiúsculas e minúsculas da tabela de origem.</summary>
      <returns>O nome que diferencia maiúsculas e minúsculas da tabela de origem.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Contém uma coleção de objetos TableMapping e é implementado pelo <see cref="T:System.Data.Common.DataTableMappingCollection" />, que é usado comumente por provedores de dados do .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Adiciona um mapeamento de tabela à coleção.</summary>
      <param name="sourceTableName">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <param name="dataSetTableName">O nome da tabela <see cref="T:System.Data.DataSet" />.</param>
      <returns>Uma referência ao objeto <see cref="T:System.Data.ITableMapping" /> recém-mapeado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se a coleção contém um mapeamento de tabela com o nome da tabela de origem especificado.</summary>
      <param name="sourceTableName">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns>
        <see langword="true" /> se um mapeamento de tabela com o nome da tabela de origem especificado existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Obtém o objeto TableMapping com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName">O nome da tabela <see langword="DataSet" /> dentro da coleção.</param>
      <returns>O objeto TableMapping com o nome de tabela <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Obtém o local do objeto <see cref="T:System.Data.ITableMapping" /> dentro da coleção.</summary>
      <param name="sourceTableName">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns>O local baseado em zero do objeto <see cref="T:System.Data.ITableMapping" /> dentro da coleção.</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Obtém ou define a instância de <see cref="T:System.Data.ITableMapping" /> com o nome <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index">O nome <see langword="SourceTable" /> do <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>A instância do <see cref="T:System.Data.ITableMapping" /> com o nome <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Remove o objeto <see cref="T:System.Data.ITableMapping" /> com o nome <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado da coleção.</summary>
      <param name="sourceTableName">O nome diferencia maiúsculas e minúsculas do <see langword="SourceTable" />.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Identifica uma lista de parâmetros de cadeia de conexão identificados pela propriedade <see langword="KeyRestrictions" /> que são permitidos ou não são permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>Padrão. Identifica os únicos parâmetros da cadeia de conexão adicionais que são permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Identifica os parâmetros de cadeia de conexão adicionais que não são permitidos.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Controla como os valores da fonte de dados serão aplicados às linhas existentes ao usar o método <see cref="Overload:System.Data.DataTable.Load" /> ou <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>Os valores de entrada para essa linha serão gravados nas versões de valor atual e valor original dos dados para cada coluna.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>Os valores de entrada para essa linha serão gravados na versão original do valor de cada coluna. A versão atual dos dados em cada coluna não será alterada.  Esse é o padrão.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>Os valores de entrada para essa linha serão gravados na versão atual de cada coluna. A versão original dos dados de cada coluna não será alterada.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Especifica como uma <see cref="T:System.Data.DataColumn" /> é mapeada.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>A coluna é mapeada para um atributo XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>A coluna é mapeada para um elemento XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>A coluna é mapeada para uma estrutura interna.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>A coluna é mapeada para um nó <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Ocorre quando uma origem e um destino <see langword="DataRow" /> têm o mesmo valor de chave primária e a propriedade <see cref="P:System.Data.DataSet.EnforceConstraints" /> está definida como true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Inicializa uma nova instância de uma classe <see cref="T:System.Data.MergeFailedEventArgs" /> com o <see cref="T:System.Data.DataTable" /> e uma descrição do conflito de mesclagem.</summary>
      <param name="table">O objeto <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict">Uma descrição do conflito de mesclagem.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Retorna uma descrição do conflito de mesclagem.</summary>
      <returns>Uma descrição do conflito de mesclagem.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Retorna o objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>O objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.Data.DataSet.MergeFailed" /> .</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Os dados do evento.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Determina a ação que ocorre quando um mapeamento está faltando em uma tabela de origem ou uma coluna de origem.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>Um <see cref="T:System.InvalidOperationException" /> será gerado se o mapeamento de coluna especificado estiver ausente.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>A coluna ou a tabela que não tiver um mapeamento será ignorada. Retorna <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>A coluna de origem ou a tabela de origem é criada e adicionada ao <see cref="T:System.Data.DataSet" /> usando seu nome original.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Representa a exceção que é lançada ao tentar acessar uma linha em uma tabela que não tem chaves primárias.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Uma descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Especifica a ação a ser tomada ao adicionar dados ao <see cref="T:System.Data.DataSet" /> e o <see cref="T:System.Data.DataTable" /> ou <see cref="T:System.Data.DataColumn" /> necessário está ausente.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Adiciona as colunas necessárias para concluir o esquema.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Adiciona as colunas necessárias e as informações de chave primária para concluir o esquema. Para obter mais informações sobre como as informações de chave primária são adicionadas a um <see cref="T:System.Data.DataTable" />, consulte <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Para que o <see langword="AddWithKey" /> funcione corretamente com o Provedor de Dados .NET Framework para OLE DB, é necessário que o provedor OLE DB nativo obtenha as informações de chave primária necessárias definindo a propriedade DBPROP_UNIQUEROWS e, em seguida, determine quais colunas são colunas de chave primária examinando DBCOLUMN_KEYCOLUMN em IColumnsRowset. Como alternativa, o usuário pode definir explicitamente as restrições de chave primária em cada <see cref="T:System.Data.DataTable" />. Isso garante que os registros de entrada que correspondem aos registros existentes são atualizados em vez de acrescentados. Ao usar <see langword="AddWithKey" />, o Provedor de Dados .NET Framework para SQL Server acrescenta uma cláusula FOR BROWSE à instrução executada. O usuário deve estar ciente de efeitos colaterais potenciais, como interferência no uso de instruções SET FMTONLY ON. Para obter mais informações, confira SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>Um <see cref="T:System.InvalidOperationException" /> será gerado se o mapeamento de coluna especificado estiver ausente.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Ignora as colunas extras.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Representa a exceção gerada quando você tenta inserir um valor null em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é definido como <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary>Representa uma coleção de objetos <see cref="T:System.Data.DataRow" /> ordenados retornados de uma consulta.</summary>
      <typeparam name="TRow">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Especifica o tipo de um parâmetro em uma consulta em relação ao <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>O parâmetro é um parâmetro de entrada.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>O parâmetro pode produzir tanto entrada quanto saída.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>O parâmetro é um parâmetro de saída.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>O parâmetro representa um valor de retorno de uma operação como um procedimento armazenado, uma função interna ou uma função definida pelo usuário.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Representa uma coleção de propriedades que podem ser adicionadas a <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> ou <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary>Cria uma cópia superficial do objeto <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns>Retorna <see cref="T:System.Object" />, uma cópia superficial do objeto <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Representa a exceção acionada quando você tenta alterar o valor de uma coluna somente leitura.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Representa a exceção gerada ao tentar executar uma operação em um <see cref="T:System.Data.DataRow" /> que não está em um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Indica a ação que ocorre quando um <see cref="T:System.Data.ForeignKeyConstraint" /> é imposto.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Excluir ou atualizar linhas relacionadas. Esse é o padrão.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>Nenhuma ação em linhas relacionadas.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Definir valores em linhas relacionadas como o valor contido na propriedade <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Definir valores em linhas relacionadas como <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Indica o modo de serialização de esquema para um <see cref="T:System.Data.DataSet" /> tipado.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Ignora a serialização de esquema para um <see cref="T:System.Data.DataSet" /> tipado.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Inclui a serialização de esquema para um <see cref="T:System.Data.DataSet" /> tipado. O padrão.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Especifica como tratar os mapeamentos de esquema existentes ao realizar uma operação <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Aplicar todos os mapeamento de tabela existentes ao esquema de entrada. Configurar o <see cref="T:System.Data.DataSet" /> com o esquema transformado.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Ignorar os mapeamentos de tabela no DataAdapter. Configurar o <see cref="T:System.Data.DataSet" /> usando o esquema de entrada sem aplicar nenhuma transformação.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Determina o formato de serialização para um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Serialize como conteúdo binário. Disponível somente no ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Serialize como conteúdo XML. O padrão.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Especifica o tipo de dados específico do SQL Server de um campo, propriedade, para uso em um <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />. Um inteiro com sinal de 64 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Um fluxo de comprimento fixo de dados binários que varia entre 1 e 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />. Um valor numérico sem sinal que pode ser 0, 1 ou <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />. Um fluxo de comprimento fixo de caracteres não Unicode que varia entre 1 e 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Dados de data que variam entre valores de 1º de janeiro de 1 AD e 31 de dezembro de 9999 AD.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />. Dados de data e hora que variam entre valores de 1º de janeiro de 1753 e 31 de dezembro de 9999, com uma precisão de 3,33 milissegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Dados de data e hora. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Dados de data e hora com reconhecimento de fuso horário. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos. O intervalo de valores de fuso horário é de -14:00 a +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />. Um valor numérico de escala e precisão fixas entre -10 38 -1 e 10 38 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />. Um número de ponto flutuante dentro do intervalo de -1,79E +308 a 1,79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Um fluxo de comprimento variável de dados binários que variam entre 0 e 2 31 -1 (ou 2.147.483.647) bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />. Um inteiro com sinal de 32 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />. Um valor de moeda que varia de -2 63 (ou -9.223.372.036.854.775.808) a 2 63 -1 (ou +9.223.372.036.854.775.807) com uma precisão de dez milésimos de uma unidade monetária.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />. Um fluxo de comprimento fixo de caracteres Unicode que varia entre 1 e 4.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />. Um fluxo de comprimento variável de dados Unicode com um comprimento máximo de 2 30 -1 (ou 1.073.741.823) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />. Um fluxo de comprimento variável de caracteres Unicode que varia entre 1 e 4.000 caracteres. A conversão implícita falhará se a cadeia de caracteres for maior que 4.000 caracteres. Defina explicitamente o objeto ao trabalhar com cadeias de caracteres com mais de 4.000 caracteres. Use <see cref="F:System.Data.SqlDbType.NVarChar" /> quando a coluna de banco de dados for <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />. Um número de ponto flutuante dentro do intervalo de -3,40E +38 a 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />. Dados de data e hora que variam entre valores de 1º de janeiro de 1900 e 6 de junho de 2079, com uma precisão de um minuto.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />. Um inteiro de 16 bits com sinal.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />. Um valor de moeda que varia de -214.748,3648 a +214.748,3647 com uma precisão de dez milésimos de uma unidade monetária.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>Um tipo de dados especial para especificar os dados estruturados contidos em parâmetros com valor de tabela.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />. Um fluxo de comprimento variável de dados não Unicode com um comprimento máximo de 2 31 -1 (ou 2.147.483.647) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Dados de tempo com base em um relógio de 24 horas. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos. Corresponde a um valor <see langword="time" /> do SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Números binários gerados automaticamente, que têm garantia de serem exclusivos dentro de um banco de dados. <see langword="timestamp" /> normalmente é usado como um mecanismo para o carimbo de versão de linhas de tabela. O tamanho do armazenamento é de 8 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />. Um inteiro de 8 bits sem sinal.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>Um UDT (tipo definido pelo usuário) do SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />. Um GUID (identificador global exclusivo).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Um fluxo de comprimento variável de dados binários que variam entre 1 e 8.000 bytes. A conversão implícita falhará se a matriz de bytes for maior que 8.000 bytes. Defina explicitamente o objeto ao trabalhar com matrizes de byte maiores que 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />. Um fluxo de comprimento variável de caracteres não Unicode que variam entre 1 e 8.000 caracteres. Use <see cref="F:System.Data.SqlDbType.VarChar" /> quando a coluna de banco de dados for <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />. Um tipo de dados especial que pode conter dados numéricos, de cadeia de caracteres ou de data, bem como os valores Empty e Null do SQL Server, que são assumidos caso nenhum outro tipo seja declarado.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>Um valor XML. Obtenha o XML como uma cadeia de caracteres usando o método <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> ou a propriedade <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> ou como um <see cref="T:System.Xml.XmlReader" /> chamando o método <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>Todos os objetos e todas as estruturas <see cref="N:System.Data.SqlTypes" /> implementam a interface <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>Indica se uma estrutura é nula. Esta propriedade é somente para leitura.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" /> se o valor desse objeto for nulo. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary>A classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> não foi planejada para uso como um componente autônomo, mas como uma classe da qual outras classes derivam a funcionalidade padrão.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="e">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>Representa um fluxo de tamanho variável de dados binários a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />, configurando a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de acordo com os conteúdos da matriz de bytes fornecida.</summary>
      <param name="value">A matriz de bytes a ser armazenada ou recuperada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatena dois valores <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificados para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBinary" /> que é o valor concatenado de x e y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>Compara esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> ao objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> a ser comparado a essa estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um número com sinal que indica os valores relativos desta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  O valor desse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é menor do que o objeto.  

  Zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é igual ao objeto.  

  Maior que zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é maior do que o objeto.  

- ou - 
O objeto é uma referência nula.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>Compara esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> ao objeto fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O objeto a ser comparado a essa estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um número com sinal que indica os valores relativos desta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  O valor desse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é menor do que o objeto.  

  Zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é igual ao objeto.  

  Maior que zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é maior do que o objeto.  

- ou - 
O objeto é uma referência nula.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatena duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Os valores concatenados do <paramref name="x" /> e os parâmetros <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlBinary" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlBinary" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>Retorna o código hash para esta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Uma <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> é nula. Esta propriedade é somente para leitura.</summary>
      <returns>
        <see langword="true" /> se <see langword="null" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>Obtém o byte único da propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> localizada na posição indicada pelo parâmetro de inteiro, <paramref name="index" />. Se <paramref name="index" /> indicar uma posição além do final da matriz de bytes, um <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> será gerado. Esta propriedade é somente para leitura.</summary>
      <param name="index">A posição do byte a ser recuperado.</param>
      <returns>O byte localizado na posição indicada pelo parâmetro Integer.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A propriedade é lida quando a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contém <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />  

ou - 
O parâmetro <paramref name="index" /> indica uma posição além do comprimento da matriz de bytes, conforme indicado pela propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>Obtém o tamanho em bytes da propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Esta propriedade é somente para leitura.</summary>
      <returns>O comprimento dos dados binários na <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> propriedade.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> é lida quando a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contém <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatena os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlBinary" /> para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Os valores concatenados do <paramref name="x" /> e os parâmetros <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas são iguais.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> em uma matriz <see cref="T:System.Byte" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> a ser convertida.</param>
      <returns>Uma matriz <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser convertida.</param>
      <returns>A estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser convertida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>Converte uma matriz de bytes em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">A matriz de bytes a ser convertida.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que representa a matriz de bytes convertida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas não são iguais.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Uma instância <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlBinary" /> em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>Converte este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> em uma cadeia de caracteres.</summary>
      <returns>Uma cadeia de caracteres que contém o <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBinary" />. Se <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> for nulo, a cadeia de caracteres conterá “null”.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />. Esta propriedade é somente para leitura.</summary>
      <returns>O valor da <see cref="T:System.Data.SqlTypes.SqlBinary" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> é lida quando a propriedade contém <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>Representa um valor inteiro que é 1 ou 0 a ser armazenado no banco de dados ou recuperado do banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> usando o valor booliano fornecido.</summary>
      <param name="value">O valor para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />; <see langword="true" /> ou <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> usando o valor inteiro especificado.</summary>
      <param name="value">O inteiro cujo valor será usado para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcula a operação AND bit a bit de duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>O resultado da operação AND lógica.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> como um byte.</summary>
      <returns>Um byte que representa o valor da <see cref="T:System.Data.SqlTypes.SqlBoolean" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara esse objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> ao objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">Um objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser comparado ou uma referência nula (<see langword="Nothing" /> no Visual Basic).</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do valor.  
  Valor 
  Descrição 
  Um inteiro negativo 
  Esta instância é menor que <paramref name="value" />.  

  Zero 
  Esta instância é igual a <paramref name="value" />.  

  Um inteiro positivo 
  Esta instância é maior que <paramref name="value" />.  

- ou - 
 <paramref name="value" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>Compara essa estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> com um objeto especificado e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">Um objeto a ser comparado ou uma referência nula (<see langword="Nothing" /> no Visual Basic).</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do valor.  
  Valor 
  Descrição 
  Um inteiro negativo 
  Esta instância é menor que <paramref name="value" />.  

  Zero 
  Esta instância é igual a <paramref name="value" />.  

  Um inteiro positivo 
  Esta instância é maior que <paramref name="value" />.  

- ou - 
 <paramref name="value" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com o <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> e os dois forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>Representa um valor falso que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior que a segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>Indica se o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> atual é <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns>
        <see langword="true" /> se <see langword="Value" /> é <see langword="False" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> é nula.</summary>
      <returns>
        <see langword="true" />se a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> estrutura for nula; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>Obtém um valor que indica se o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> atual é <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns>
        <see langword="true" /> se <see langword="Value" /> é <see langword="true" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara a igualdade de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>Representa um valor um que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Executa uma operação de complemento de um nas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecidas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>O complemento de um do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcula a operação AND bit a bit de duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>O resultado da operação AND lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcula o OR bit a bit de seus dois operandos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Os resultados da operação OR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara a igualdade de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Executa uma operação OR exclusiva (XOR) bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>O resultado da operação XOR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>Converte um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em um booliano.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertido.</param>
      <returns>Um booliano definido como o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>O operador false pode ser usado para testar o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se ele é falso.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser testada.</param>
      <returns>
        <see langword="true" /> se o parâmetro fornecido <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see langword="false" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Um objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior que a segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>Converte o valor de byte fornecido em um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Um valor de byte a ser convertido em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Um valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contém 0 ou 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se elas são diferentes.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>Executa uma operação NOT em um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">O <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em que a operação NOT será executada.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> com o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se o argumento for verdadeiro, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> se o argumento for nulo e <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> caso contrário.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Executa uma operação de complemento de um nas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecidas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>O complemento de um do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>O operador true pode ser usado para testar o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se ele é verdadeiro.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser testada.</param>
      <returns>
        <see langword="true" /> se o parâmetro fornecido <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see langword="true" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Executa uma operação OR bit a bit nas duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo Value é o resultado da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> especificada de um valor lógico para seu <see cref="T:System.Data.SqlTypes.SqlBoolean" /> equivalente.</summary>
      <param name="s">O <see cref="T:System.String" /> a ser convertido.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contém o valor analisado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlByte" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlDecimal" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlDouble" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlInt16" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> será 1. Caso contrário, o novo valor <see langword="SqlInt16" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlInt32" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> será 1. Caso contrário, o novo valor <see langword="SqlInt32" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlInt64" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> será 1. Caso contrário, o novo valor <see langword="SqlInt64" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor do novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> será 1. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="false" />, o valor do novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> será 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> não for 0 nem 1, o novo valor <see cref="T:System.Data.SqlTypes.SqlMoney" /> será <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo valor é 1 ou 0.  
Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a verdadeiro, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> será 1; caso contrário, o novo valor da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlString" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em uma cadeia de caracteres.</summary>
      <returns>Uma cadeia de caracteres que contém o valor do <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Se o valor for nulo, a cadeia de caracteres conterá “null”.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>Representa um valor verdadeiro que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Esta propriedade é somente para leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A propriedade é definida como nula.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>O resultado da operação XOR lógica.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>Representa um inteiro sem sinal de 8 bits, no intervalo de 0 a 255, para ser armazenado no recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> usando o valor de byte especificado.</summary>
      <param name="value">Um valor de byte a ser armazenado na propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see langword="Value" /> contém os resultados da adição.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>Compara essa instância com o objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>Compara essa instância com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divise o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlByte" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>Compara o parâmetro <see cref="T:System.Object" /> fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlByte" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>Obtém um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>Uma constante que representa o maior valor possível de um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>Uma constante que representa o menor valor possível de um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divide dois valores <see cref="T:System.Data.SqlTypes.SqlByte" /> e retorna o resto.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são diferentes.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>O operador de complemento de um executa uma operação de complemento de um bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os complementos do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém a soma dos dois operandos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divise o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">O parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em um byte.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida em um byte.</param>
      <returns>Um byte cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see langword="SqlMoney" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma instância da classe <see langword="SqlString" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao valor numérico representado pelo <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see langword="SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>Converte o valor de byte fornecido em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Um valor de byte a ser convertido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao parâmetro fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são diferentes.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>O operador de complemento de um executa uma operação de complemento de um bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os complementos do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Subtrai o segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> de um número no inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="s">A <see langword="String" /> a ser analisada.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> que contém o número de 8 bits representado pelo parâmetro <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Subtrai o segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Uma estrutura <see langword="SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Uma estrutura <see langword="SqlDouble" /> com o mesmo valor que este <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Uma estrutura <see langword="SqlInt16" /> com o mesmo valor que este <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>Converte este <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Uma estrutura <see langword="SqlInt32" /> com o mesmo valor que este <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Uma estrutura <see langword="SqlInt64" /> com <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Uma estrutura <see langword="SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Uma estrutura <see langword="SqlSingle" /> que tem o mesmo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Um <see langword="SqlString" /> que contém a representação de cadeia de caracteres do <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em um <see cref="T:System.String" />.</summary>
      <returns>Uma cadeia de caracteres que contém o <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do <see cref="T:System.Data.SqlTypes.SqlByte" />. Se o <see langword="Value" /> for nulo, o <see langword="String" /> será uma cadeia de caracteres nula.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />. Esta propriedade é somente leitura</summary>
      <returns>O valor da <see cref="T:System.Data.SqlTypes.SqlByte" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Os resultados da operação XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>Representa um tipo de referência mutável que encapsula um <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> ou <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> com base na matriz de bytes especificada.</summary>
      <param name="buffer">A matriz de bytes sem sinal.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> com base no valor de <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificado.</summary>
      <param name="value">Um valor <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> com base no valor de <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="s">Um <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>Retorna uma referência para o buffer interno.</summary>
      <returns>Uma referência ao buffer interno. Para <see cref="T:System.Data.SqlTypes.SqlBytes" /> instâncias criadas com base em ponteiros não gerenciados, ela retorna uma cópia gerenciada do buffer interno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Uma <see langword="string" /> que indica o XSD do <see langword="XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>Obtém um valor booliano que indica se esta <see cref="T:System.Data.SqlTypes.SqlBytes" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL, <see langword="false" /> caso contrário. <see cref="T:System.Data.SqlTypes.SqlBytes" /></returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>Obtém ou define a instância <see cref="T:System.Data.SqlTypes.SqlBytes" /> no índice especificado.</summary>
      <param name="offset">Um valor <see cref="T:System.Int64" />.</param>
      <returns>Um valor <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>Obtém o comprimento do valor contido na instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Um <see cref="T:System.Int64" /> valor que representa o comprimento do valor que está contido <see cref="T:System.Data.SqlTypes.SqlBytes" /> na instância.  
Retornará-1 se nenhum buffer estiver disponível para a instância ou se o valor for nulo.  
Retorna um <see cref="P:System.IO.Stream.Length" /> para uma instância com encapsulamento de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>Obtém o comprimento máximo do valor do buffer interno deste <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Um longo que representa o comprimento máximo do valor do buffer interno. Retorna-1 para um encapsulamento <see cref="T:System.Data.SqlTypes.SqlBytes" />de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>Obtém uma instância nula deste <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Uma instância cuja <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> propriedade retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">A estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> a ser convertida.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">A estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" /> a ser convertida.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copia bytes desta instância <see cref="T:System.Data.SqlTypes.SqlBytes" /> para o buffer passado e retorna o número de bytes copiados.</summary>
      <param name="offset">Um deslocamento do valor longo <see cref="T:System.Int64" /> para o valor contido na instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">O buffer de matriz de bytes para o qual copiar.</param>
      <param name="offsetInBuffer">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count">Um inteiro <see cref="T:System.Int32" /> que representa o número de bytes a copiar.</param>
      <returns>Um valor longo <see cref="T:System.Int64" /> que representa o número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>Define o comprimento desta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">O valor longo <see cref="T:System.Int64" /> que representa o comprimento.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>Define esta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" /> como nula.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary>Retorna informações sobre o estado de armazenamento desta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Uma enumeração <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>Obtém ou define os dados deste <see cref="T:System.Data.SqlTypes.SqlBytes" /> como um fluxo.</summary>
      <returns>O fluxo que contém os dados SqlBytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtém informações de serialização com todos os dados necessários para reinstanciar esta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info">O objeto a ser populado com informações de serialização.</param>
      <param name="context">O contexto de destino da serialização.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>Cria e retorna um <see cref="T:System.Data.SqlTypes.SqlBinary" /> desta instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBinary" /> dessa instância.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>Retorna uma cópia gerenciada do valor mantido por esse <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>O valor <see cref="T:System.Data.SqlTypes.SqlBytes" /> disso como uma matriz de bytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copia os bytes do buffer transmitido a esta instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset">Um deslocamento do valor longo <see cref="T:System.Int64" /> para o valor contido na instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">O buffer de matriz de bytes para o qual copiar.</param>
      <param name="offsetInBuffer">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count">Um inteiro <see cref="T:System.Int32" /> que representa o número de bytes a copiar.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> é um tipo de referência mutável que encapsula uma matriz <see cref="T:System.Char" /> ou uma instância <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlChars" /> com base na matriz de caracteres especificada.</summary>
      <param name="buffer">Uma matriz <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlChars" /> com base no valor de <see cref="T:System.Data.SqlTypes.SqlString" /> especificado.</summary>
      <param name="value">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>Retorna uma referência para o buffer interno.</summary>
      <returns>Uma referência ao buffer interno. Para <see cref="T:System.Data.SqlTypes.SqlChars" /> instâncias criadas com base em ponteiros não gerenciados, ela retorna uma cópia gerenciada do buffer interno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>Obtém um valor booliano que indica se esta <see cref="T:System.Data.SqlTypes.SqlChars" /> é nula.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Data.SqlTypes.SqlChars" /> for nulo. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>Obtém ou define a instância <see cref="T:System.Data.SqlTypes.SqlChars" /> no índice especificado.</summary>
      <param name="offset">Um valor <see cref="T:System.Int64" />.</param>
      <returns>Um valor <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>Obtém o comprimento do valor contido na instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Um <see cref="T:System.Int64" /> valor que indica o comprimento em caracteres do valor que está contido <see cref="T:System.Data.SqlTypes.SqlChars" /> na instância.  
Retornará-1 se nenhum buffer estiver disponível para a instância ou se o valor for nulo.  
Retorna um <see cref="P:System.IO.Stream.Length" /> para uma instância com encapsulamento de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>Obtém o comprimento máximo em caracteres de dois bytes que pode ser contido pelo buffer interno.</summary>
      <returns>Um <see cref="T:System.Int64" /> valor que representa o comprimento máximo em caracteres de dois bytes do valor do buffer interno.  
Retorna-1 para um encapsulamento <see cref="T:System.Data.SqlTypes.SqlChars" />de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>Retorna uma instância nula deste <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Uma instância cuja <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> propriedade retorna <see langword="true" />. Para obter mais informações, consulte lidando com valores nulos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlChars" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">A estrutura <see cref="T:System.Data.SqlTypes.SqlChars" /> a ser convertida.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">A estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertida.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copia bytes desta instância de <see cref="T:System.Data.SqlTypes.SqlChars" /> para o buffer passado e retorna o número de caracteres copiados.</summary>
      <param name="offset">Um deslocamento de valor <see cref="T:System.Int64" /><see langword="long" /> no valor que está contido na instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">O buffer de matriz de caracteres para o qual copiar.</param>
      <param name="offsetInBuffer">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count">Um valor inteiro <see cref="T:System.Int32" /> que representa o número de caracteres a copiar.</param>
      <returns>Um valor <see cref="T:System.Int64" /><see langword="long" /> que representa o número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>Define o comprimento desta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">O valor <see cref="T:System.Int64" /><see langword="long" /> que representa o comprimento.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>Define esta instância de <see cref="T:System.Data.SqlTypes.SqlChars" /> como nula.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary>Retorna informações sobre o estado de armazenamento desta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Uma enumeração <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtém informações de serialização com todos os dados necessários para reinstanciar esta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info">O objeto a ser populado com informações de serialização.</param>
      <param name="context">O contexto de destino da serialização.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>Converte essa instância de <see cref="T:System.Data.SqlTypes.SqlChars" /> na representação de sua <see cref="T:System.Data.SqlTypes.SqlString" /> equivalente.</summary>
      <returns>Uma representação de <see cref="T:System.Data.SqlTypes.SqlString" /> deste tipo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>Retorna uma cópia gerenciada do valor mantido por esse <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>O valor <see cref="T:System.Data.SqlTypes.SqlChars" /> disso como uma matriz de caracteres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copia caracteres do buffer passado para esta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset">Um deslocamento de valor <see langword="long" /> no valor que está contido na instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">O buffer de matriz de caracteres para o qual copiar.</param>
      <param name="offsetInBuffer">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count">Um inteiro <see cref="T:System.Int32" /> que representa o número de caracteres a copiar.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>Especifica os valores da opção de comparação de uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>Especifica que as classificações devem ser baseadas em um valor numérico de caracteres em vez de seu valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>Executa uma classificação binária.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar maiúsculas e minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar o tipo Kana. O tipo Kana refere-se aos caracteres japoneses Hiragana e Katakana que representam sons fonéticos em japonês. O Hiragana é usado em expressões e palavras japonesas nativas, enquanto o Katakana é usado para palavras emprestadas de outros idiomas, como “computador” ou “Internet”. Um som fonético pode ser expresso em Hiragana e em Katakana. Se esse valor estiver selecionado, o caractere Hiragana de um som será considerado igual ao caractere Katakana do mesmo som.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar caracteres sem espaçamento, como sinais diacríticos. O Padrão Unicode define caracteres sem espaçamento como caracteres que são combinados com caracteres de base para produzir um novo caractere. Caracteres sem espaçamento não usam espaços de caractere por si só quando são renderizados. Para obter mais informações sobre caracteres de combinação sem espaçamento, consulte o padrão Unicode em https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar a largura do caractere. Por exemplo, os caracteres japoneses Katakana podem ser escritos em largura inteira ou meia largura e, se esse valor for selecionado, os caracteres Katakana escritos em largura inteira serão considerados iguais para os mesmos caracteres escritos em meia largura.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>Especifica as configurações de opção padrão para as comparações <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>Representa os dados de data e hora cujos valores variam de 1º de janeiro de 1753 e 31 de dezembro de 9999, com uma precisão de 3,33 milissegundos para armazenamento ou recuperação de um banco de dados. A estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> tem uma estrutura de dados subjacente diferente de seu tipo .NET Framework correspondente, <see cref="T:System.DateTime" />, que pode representar qualquer hora entre 12:00:00 1/1/0001 e 23:59:59 31/12/9999, com precisão de 100 nanossegundos. Na verdade, <see cref="T:System.Data.SqlTypes.SqlDateTime" /> armazena a diferença relativa a 00:00:00 1/1/1900. Portanto, uma conversão de "00:00:00 1/1/1900" para um número inteiro retornará 0.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando o valor <see cref="T:System.DateTime" />.</summary>
      <param name="value">Uma estrutura <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos.</summary>
      <param name="dayTicks">Um valor inteiro que representa a data como tiques.</param>
      <param name="timeTicks">Um valor inteiro que representa a hora como tiques.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês e o dia.</summary>
      <param name="year">Um inteiro que representa o ano do da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Um valor inteiro que representa o número de dias da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês, o dia, a hora, o minuto e o segundo da nova estrutura.</summary>
      <param name="year">Um valor inteiro que representa o ano da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Um valor inteiro que representa o dia do mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Um valor inteiro que representa a hora da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Um valor inteiro que representa o minuto da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Um valor inteiro que representa o segundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês, o dia, a hora, o minuto, o segundo e o milissegundo da nova estrutura.</summary>
      <param name="year">Um valor inteiro que representa o ano da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Um valor inteiro que representa o dia do mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Um valor inteiro que representa a hora da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Um valor inteiro que representa o minuto da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Um valor inteiro que representa o segundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond">Um valor duplo que representa o milissegundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês, o dia, a hora, o minuto, o segundo e o microssegundo da nova estrutura.</summary>
      <param name="year">Um valor inteiro que representa o ano da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Um valor inteiro que representa o dia da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Um valor inteiro que representa a hora da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Um valor inteiro que representa o minuto da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Um valor inteiro que representa o segundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond">Um valor inteiro que representa o microssegundo (milésimos de um milissegundo) da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Adiciona um <see cref="T:System.Data.SqlTypes.SqlDateTime" /> ao <see langword="TimeSpan" /> especificado.</summary>
      <param name="x">Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Um valor <see langword="Timespan" />.</param>
      <returns>Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> com a estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">A estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> a ser comparada.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Zero 
  Essa instância é igual a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Maior que zero 
  Esta instância é maior do que <see cref="T:System.Data.SqlTypes.SqlDateTime" />  

- ou - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>Obtém o número de tiques que representa a data desta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>O número de tiques que representam a data contida na <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> propriedade <see cref="T:System.Data.SqlTypes.SqlDateTime" /> dessa estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A exceção lançada quando a propriedade <see langword="Value" /> de uma estrutura <see cref="N:System.Data.SqlTypes" /> é definida como nula.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto é uma instância de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> e os dois são iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>Obtém o código hash para esta instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>Representa o valor de data válida máxima para uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>Representa o valor de data válida mínima para uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Executa uma comparação lógica de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Adiciona o período indicado pelo parâmetro <see cref="T:System.TimeSpan" /> fornecido, <paramref name="t" />, à estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Uma estrutura <see cref="T:System.TimeSpan" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Se um dos argumentos for <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, o novo <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> será <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em uma estrutura <see cref="T:System.DateTime" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um objeto <see cref="T:System.DateTime" /> cujas propriedades <see cref="P:System.DateTime.Date" /> e <see cref="P:System.DateTime.TimeOfDay" /> contêm os mesmos valores de data e hora que a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> em um <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cujo <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> é igual à data e hora representadas pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />. Se a <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> recém-criada será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>Converte uma estrutura <see cref="T:System.DateTime" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Uma estrutura <see langword="DateTime" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cujo <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> é igual às propriedades <see cref="P:System.DateTime.Date" /> e <see cref="P:System.DateTime.TimeOfDay" /> combinadas da estrutura <see cref="T:System.DateTime" /> fornecida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Executa uma comparação lógica de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Subtrai a estrutura <see cref="T:System.TimeSpan" /> fornecida, <paramref name="t" />, da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Uma estrutura <see cref="T:System.TimeSpan" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que representa os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificada de uma data e hora em sua <see cref="T:System.String" /> equivalente.</summary>
      <param name="s">A <see langword="string" /> a ser analisada.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> igual a data e hora representada pela <see langword="string" /> especificada.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>Uma constante cujo valor é o número de tiques equivalentes a uma hora.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>Uma constante cujo valor é o número de tiques equivalentes a um minuto.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>Uma constante cujo valor é o número de tiques equivalentes a um segundo.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Subtrai o <see langword="Timespan" /> especificado desta instância <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Um valor <see langword="Timespan" />.</param>
      <returns>Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>Obtém o número de tiques que representa a hora desta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>O número de tiques que representam a hora desta <see cref="T:System.Data.SqlTypes.SqlDateTime" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma estrutura <see langword="SqlString" /> cujo valor é uma cadeia de caracteres que representa a data e hora contidas nesta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em um <see cref="T:System.String" />.</summary>
      <returns>Uma <see langword="String" /> que representa a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Esta propriedade é somente para leitura.</summary>
      <returns>O valor dessa <see cref="T:System.Data.SqlTypes.SqlDateTime" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A exceção lançada quando a propriedade <see langword="Value" /> de uma estrutura <see cref="N:System.Data.SqlTypes" /> é definida como nula.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>Representa um valor numérico entre -10^38 +1 e 10^38 - 1, com precisão e escala fixas.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando os parâmetros fornecidos.</summary>
      <param name="bPrecision">O número máximo de dígitos que podem ser usados para representar a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">O número de casas decimais para as quais a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> será resolvida para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Um valor booliano que indica se a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa um número positivo ou negativo.</param>
      <param name="data1">Um inteiro sem sinal de 32 bits que será combinado com data2, data3 e data4 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2">Um inteiro sem sinal de 32 bits que será combinado com data1, data3 e data4 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3">Um inteiro sem sinal de 32 bits que será combinado com data1, data2 e data4 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4">Um inteiro sem sinal de 32 bits que será combinado com data1, data2 e data3 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando os parâmetros fornecidos.</summary>
      <param name="bPrecision">O número máximo de dígitos que podem ser usados para representar a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">O número de casas decimais para as quais a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> será resolvida para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Um valor booliano que indica se a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa um número positivo ou negativo.</param>
      <param name="bits">O inteiro sem sinal de 128 bits que fornece o valor do novo <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o valor de <see cref="T:System.Decimal" /> fornecido.</summary>
      <param name="value">O valor <see cref="T:System.Decimal" /> a ser armazenado como uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o parâmetro duplo fornecido.</summary>
      <param name="dVal">Um duplo que representa o valor para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o valor inteiro fornecido.</summary>
      <param name="value">O valor inteiro fornecido que será usado como o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o valor inteiro longo fornecido.</summary>
      <param name="value">O valor inteiro longo fornecido que será usado como o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>O método Abs obtém o valor absoluto do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o número sem sinal que representa o valor absoluto do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula a soma dos dois operadores <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém a soma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>A escala do operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> será ajustado para o número de dígitos indicado pelo parâmetro de dígitos. Dependendo do valor do parâmetro fRound, o valor será arrendondado para o número adequado de dígitos ou truncado.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser ajustada.</param>
      <param name="digits">O número de dígitos na estrutura ajustada.</param>
      <param name="fRound">Se esse parâmetro for <see langword="true" />, o novo valor será arredondado, se <see langword="false" />, o valor será truncado.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o número ajustado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>Obtém a representação binária do valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> como uma matriz de bytes.</summary>
      <returns>Uma matriz de bytes que contém a representação binária do <see cref="T:System.Data.SqlTypes.SqlDecimal" /> valor da estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>Retorna o menor número inteiro maior ou igual à estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para a qual o valor do limite máximo será calculado.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que representa o menor valor inteiro maior ou igual à estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDecimal" /> com o objeto <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDecimal" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>Ajusta o valor do operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para a precisão e a escala indicadas.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor deverá ser ajustado.</param>
      <param name="precision">A precisão da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale">A escala da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo Value foi ajustado para a precisão e a escala indicadas nos parâmetros.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>Obtém a representação binária desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> como uma matriz de inteiros.</summary>
      <returns>Uma matriz de inteiros que contém a representação binária dessa <see cref="T:System.Data.SqlTypes.SqlDecimal" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>O operador de divisão calcula os resultados de dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o valor do <see langword="SqlDecimal" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>Compara o parâmetro <see cref="T:System.Object" /> fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da instância <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> e os dois forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>Arredonda um número <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificado para o próximo número inteiro menor.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para a qual o valor base deve ser calculado.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém a parte do número inteiro desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> é nula.</summary>
      <returns>
        <see langword="true" />Se essa <see cref="T:System.Data.SqlTypes.SqlDecimal" /> estrutura for nula. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>Indica se o <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> é maior que zero.</summary>
      <returns>
        <see langword="true" />Se o <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> for atribuído a NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>Uma constante que representa o maior valor possível da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>Uma constante que representa o valor máximo da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>Uma constante que representa o valor máximo de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>Uma constante que representa o valor mínimo de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da classe <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula a soma dos dois operadores <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém a soma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>O operador de divisão calcula os resultados de dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Decimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see langword="Decimal" /> cujo valor é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte o parâmetro <see cref="T:System.Double" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Double" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor é igual ao valor do parâmetro <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" /></summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecida em SqlDecimal.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte o operando <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte o valor <see cref="T:System.Decimal" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">O valor <see cref="T:System.Decimal" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao valor do parâmetro <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Converte a estrutura <see cref="T:System.Int64" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Int64" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao valor do parâmetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade Value contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>O operador unário de subtração nega o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser negada.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor contém os resultados da negação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> de um número em seu <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalente.</summary>
      <param name="s">A <see langword="String" /> a ser analisada.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>Gera o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada à potência exponencial especificada.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser elevada a uma potência.</param>
      <param name="exp">Um valor duplo que indica a potência à qual o número deve ser elevado.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém os resultados.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>Obtém o número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>O número máximo de dígitos usados para representar a <see langword="Value" /><see cref="T:System.Data.SqlTypes.SqlDecimal" /> dessa estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Obtém o número mais próximo ao valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada com a precisão especificada.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser arredondada.</param>
      <param name="position">O número de dígitos fracionários significativos (precisão) no valor retornado.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém os resultados da operação de arredondamento.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>Obtém o número de casas decimais para o qual <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é resolvido.</summary>
      <returns>O número de casas decimais para o qual <see langword="Value" /> a propriedade é resolvida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>Obtém um valor que indica o sinal a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo sinal deve ser avaliado.</param>
      <returns>Um número que indica o sinal da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade Value contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>Retorna a um duplo igual ao conteúdo da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> desta instância.</summary>
      <returns>A representação decimal da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Se o Value da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for <see langword="true" />, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. Caso contrário, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é uma cadeia de caracteres que representa o valor contido nesta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.String" />.</summary>
      <returns>Um novo objeto <see cref="T:System.String" /> que contém a representação de cadeia de caracteres da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Trunca o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada para a posição que você deseja.</summary>
      <param name="n">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser truncada.</param>
      <param name="position">A posição decimal na qual o número será truncado.</param>
      <returns>Forneça um valor negativo para o parâmetro <paramref name="position" /> a fim de truncar o valor para a posição correspondente à esquerda da vírgula decimal.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Esta propriedade é somente para leitura.</summary>
      <returns>Um número no intervalo-79228162514264337593543950335 até 79228162514162514264337593543950335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>Representa um número de ponto flutuante no intervalo de -1,79E +308 a 1,79E +308 a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> usando o parâmetro duplo fornecido para definir a propriedade <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value">Um valor duplo cujo valor será usado para o novo <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de adição calcula a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>A soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> de comparação.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de divisão divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Executa uma comparação lógica em duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>Retorna o código hash para esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>Retorna um valor booliano que indica se esta instância <see cref="T:System.Data.SqlTypes.SqlDouble" /> é nula.</summary>
      <returns>
        <see langword="true" />Se <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>Uma constante que representa o valor máximo de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>Uma constante que representa o valor mínimo possível do <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de multiplicação calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>O produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são diferentes.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de adição calcula a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>A soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de divisão divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Executa uma comparação lógica em duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">O <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é 0 ou 1, dependendo da propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Se o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em um duplo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um duplo equivalente ao valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao valor do número representado pelo <see cref="T:System.Data.SqlTypes.SqlString" />. Se o <see cref="T:System.Data.SqlTypes.SqlString" /> for <see cref="F:System.Data.SqlTypes.SqlString.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />. Se o <see cref="T:System.Data.SqlTypes.SqlByte" /> for <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Se o <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />. Se o <see cref="T:System.Data.SqlTypes.SqlInt16" /> for <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />. Se o <see cref="T:System.Data.SqlTypes.SqlInt32" /> for <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />. Se o <see cref="T:System.Data.SqlTypes.SqlInt64" /> for <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />. Se o <see cref="T:System.Data.SqlTypes.SqlMoney" /> for <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />. Se o <see cref="T:System.Data.SqlTypes.SqlSingle" /> for <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>Converte o valor duplo fornecido em um <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">O valor duplo a ser convertido.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o mesmo valor que o parâmetro duplo especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são diferentes.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de multiplicação calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>O produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de subtração o segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Os resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>Retorna o valor negado da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>Converte a representação da <see cref="T:System.String" /> de um número no equivalente do número de ponto flutuante de precisão dupla.</summary>
      <param name="s">A <see langword="String" /> a ser analisada.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém o valor representado pelo <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>O operador de subtração o segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Os resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um esquema XML consumido pelo .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Uma estrutura <see langword="SqlBoolean" /> cujo <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se o <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> for diferente de zero, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se o <see cref="T:System.Data.SqlTypes.SqlDouble" /> for zero e <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> se a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> for <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma estrutura <see langword="SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlDecimal" /> cujo valor convertido é igual ao valor arredondado deste <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see langword="Value" /> é igual à parte inteira do valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see langword="Value" /> é igual à parte inteira do valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see langword="Value" /> é igual à parte inteira do valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma <see langword="SqlString" /> que representa o <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em uma cadeia de caracteres.</summary>
      <returns>Uma cadeia de caracteres que representa o <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />. Esta propriedade é somente para leitura.</summary>
      <returns>O valor da <see cref="T:System.Data.SqlTypes.SqlDouble" /> estrutura.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>Representa um GUID a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o parâmetro de matriz de bytes fornecido.</summary>
      <param name="value">Uma matriz de bytes.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o parâmetro <see cref="T:System.Guid" /> especificado.</summary>
      <param name="g">Um <see cref="T:System.Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o valor especificado.</summary>
      <param name="a">Os primeiros quatro bytes do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b">Os próximos dois bytes do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c">Os próximos dois bytes do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o parâmetro <see cref="T:System.String" /> especificado.</summary>
      <param name="s">Um objeto <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> com o <see cref="T:System.Data.SqlTypes.SqlGuid" /> fornecido e retorna uma indicação de seus valores relativos. Compara mais do que os últimos 6 bytes, mas trata os últimos 6 bytes como os mais significativos nas comparações.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
o objeto é uma referência nula (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> ao objeto fornecido e retorna uma indicação de seus valores relativos. Compara mais do que os últimos 6 bytes, mas trata os últimos 6 bytes como os mais significativos nas comparações.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
o objeto é uma referência nula (<see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlGuid" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlGuid" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>Retorna o código hash desta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>Obtém um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> é nula.</summary>
      <returns>
        <see langword="true" /> se <see langword="null" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBinary" /> em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Um objeto <see langword="SqlBinary" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlGuid" /> fornecido em <see cref="T:System.Guid" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um novo <see cref="T:System.Guid" /> igual ao <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> especificada em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>Converte o parâmetro <see cref="T:System.Guid" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Um <see cref="T:System.Guid" />.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual ao parâmetro <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>Converte a estrutura <see cref="T:System.String" /> especificada em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s">A <see langword="String" /> a ser analisada.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlGuid" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>Converte essa estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em uma matriz de bytes.</summary>
      <returns>Uma matriz de bytes que representa o <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Uma estrutura <see langword="SqlBinary" /> que contém os bytes na estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em um <see cref="T:System.String" />.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a representação de cadeia de caracteres da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />. Esta propriedade é somente para leitura.</summary>
      <returns>Uma estrutura <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>Representa um inteiro com sinal de 16 bits a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> usando o parâmetro inteiro curto fornecido.</summary>
      <param name="value">Um inteiro curto.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula a soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
o objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlInt16" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>Compara o objeto especificado com a propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlInt16" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see cref="T:System.String" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />. Para obter mais informações, consulte lidando com valores nulos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>Uma constante que representa o maior valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>Uma constante que representa o menor valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divide dois valores <see cref="T:System.Data.SqlTypes.SqlInt16" /> e retorna o resto.</summary>
      <param name="x">Um valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Um valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>O operador ~ executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o complemento da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula a soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecida em um inteiro curto.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um inteiro curto cujo valor é o valor do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte o objeto <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao valor representado pelo parâmetro de objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>Converte o inteiro curto fornecido em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Um valor inteiro curto.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o mesmo valor que o inteiro curto especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>O operador ~ executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o complemento da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>O operador de subtração unário nega o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do operando <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> de um número em seu inteiro com sinal de 16 bits equivalente.</summary>
      <param name="s">A <see langword="String" /> a ser analisada.</param>
      <returns>Um inteiro com sinal de 16 bits equivalente ao valor contido que está especificado na <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um esquema XML consumido pelo .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Se o valor do <see cref="T:System.Data.SqlTypes.SqlInt16" /> for menor que 0 ou maior que 255, ocorrerá uma <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma <see cref="T:System.Data.SqlTypes.SqlString" /> que representa o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> desta instância de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.String" />.</summary>
      <returns>Um objeto <see cref="T:System.String" /> que representa o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> desta instância de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>Obtém o valor desta instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Esta propriedade é somente para leitura.</summary>
      <returns>Um inteiro curto que representa o valor dessa <see cref="T:System.Data.SqlTypes.SqlInt16" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contém os resultados da operação XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>Representa um inteiro com sinal de 32 bits a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> usando o valor inteiro fornecido.</summary>
      <param name="value">O inteiro a ser convertido.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém a soma das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o OR bit a bit das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt32" /> com o <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt32" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlInt32" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlInt32" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> é nula.</summary>
      <returns>Essa propriedade será <see langword="true" /> se <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>Uma constante que representa o maior valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>Uma constante que representa o menor valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divide dois valores <see cref="T:System.Data.SqlTypes.SqlInt32" /> e retorna o resto.</summary>
      <param name="x">Um valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Um valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da classe <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma operação de complemento de unidade bit a bit na estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação de complemento de unidade.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém a soma das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o OR bit a bit das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma operação OR exclusiva bit a bit nas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em um inteiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>O valor inteiro convertido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o objeto <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte a propriedade <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>Converte o inteiro fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Um valor inteiro.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade Value é igual ao parâmetro inteiro.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma operação de complemento de unidade bit a bit na estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação de complemento de unidade.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>Nega o <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do operando <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> de um número em seu inteiro com sinal de 32 bits equivalente.</summary>
      <param name="s">A <see cref="T:System.String" /> a ser analisada.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente ao valor contido que está especificado na <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Se o valor do <see langword="SqlInt32" /> for menor que 0 ou maior que 255, ocorrerá uma <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em uma <see cref="T:System.String" />.</summary>
      <returns>Uma estrutura <see cref="T:System.String" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>Obtém o valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Esta propriedade é somente para leitura.</summary>
      <returns>Um inteiro que representa o valor dessa <see cref="T:System.Data.SqlTypes.SqlInt32" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A propriedade contém <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Executa uma operação OR exclusiva bit a bit nas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>Representa um inteiro com sinal de 64 bits a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> usando o inteiro longo fornecido.</summary>
      <param name="value">Um inteiro longo.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt64" /> com o <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt64" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlInt64" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlInt64" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Uma <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>Obtém um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>Uma constante que representa o maior valor possível para uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>Uma constante que representa o menor valor possível para uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divide dois valores <see cref="T:System.Data.SqlTypes.SqlInt64" /> e retorna o resto.</summary>
      <param name="x">Um valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Um valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros SqlInt64 para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao complemento de unidade do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> em longo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um novo valor longo igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém a parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Converte o parâmetro longo em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Um valor inteiro longo.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao valor do parâmetro longo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros SqlInt64 para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao complemento de unidade do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual aos resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>O operador de subtração unário nega o <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> negado do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> de um número em seu inteiro com sinal de 64 bits equivalente.</summary>
      <param name="s">A <see cref="T:System.String" /> a ser analisada.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente ao valor contido que está especificado na <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual aos resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma <see cref="T:System.Data.SqlTypes.SqlString" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.String" />.</summary>
      <returns>Uma <see cref="T:System.String" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>Obtém o valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />. Esta propriedade é somente para leitura.</summary>
      <returns>Um inteiro longo que representa o valor dessa <see cref="T:System.Data.SqlTypes.SqlInt64" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>Representa um valor de moeda que vai de -2 63 (ou -922.337.203.685.477,5808) a 2 63 -1 (ou +922.337.203.685.477,5807), com uma precisão de dez milésimos de uma unidade monetária, que será armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor <see cref="T:System.Decimal" /> especificado.</summary>
      <param name="value">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor duplo especificado.</summary>
      <param name="value">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor inteiro especificado.</summary>
      <param name="value">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor inteiro longo especificado.</summary>
      <param name="value">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>O operador de divisão divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlMoney" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlMoney" /> e os dois forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>Obtém o código hash para esta instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Uma <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>Retorna um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>Representa o valor máximo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>Representa o valor mínimo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>O operador de divisão divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> pelo segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificada em <see cref="T:System.Decimal" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Decimal" /> cujo valor é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Converte o parâmetro <see cref="T:System.Decimal" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">O valor <see cref="T:System.Decimal" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor do parâmetro <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Int64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Int64" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor do parâmetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>O operador de subtração subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>O operador unário de subtração nega o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser negada.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém os resultados da negação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>Converte a representação <see cref="T:System.String" /> de um número em seu <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalente.</summary>
      <param name="s">A <see langword="String" /> a ser analisada.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>O operador de subtração subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> do primeiro.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>Converte o Valor desta instância de <see cref="T:System.Data.SqlTypes.SqlMoney" /> como uma estrutura <see cref="T:System.Decimal" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Decimal" /> cujo valor é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Double" />.</summary>
      <returns>Um duplo com um valor igual a esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Int32" />.</summary>
      <returns>Um inteiro de 32 bits cujo valor é igual à parte inteira desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>Converte o Valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Int64" />.</summary>
      <returns>Um inteiro de 64 bits cujo valor é igual à parte inteira desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> for zero, o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlByte" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é uma cadeia de caracteres que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlMoney" /> em uma cadeia de caracteres.</summary>
      <returns>Uma cadeia de caracteres cujo valor é a representação de cadeia de caracteres do valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>Obtém o valor monetário de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />. Esta propriedade é somente para leitura.</summary>
      <returns>O valor monetário de uma instância da <see cref="T:System.Data.SqlTypes.SqlMoney" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">A propriedade é definida como nula.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>Representa o valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary>A classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> não foi planejada para uso como um componente autônomo, mas como uma classe da qual outras classes derivam a funcionalidade padrão.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="e">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>A exceção lançada quando a propriedade <see langword="Value" /> de uma estrutura <see cref="N:System.Data.SqlTypes" /> é definida como nula.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="e">A exceção que é a causa da exceção atual. Se o parâmetro <c>innerException</c> não for <see langword="null" />, a exceção atual será gerada em um bloco <see langword="catch" /> que tratará a exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>Representa um número de ponto flutuante no intervalo de -3,40E +38 a 3,40E +38 a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> usando o parâmetro duplo fornecido.</summary>
      <param name="value">Um valor duplo que será usado como o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Um número de ponto flutuante que será usado como o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlSingle" /> com o <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlSingle" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Divide a primeira estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> pela segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see langword="SqlInt64" /> que contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlSingle" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto é uma instância de <see cref="T:System.Data.SqlTypes.SqlSingle" /> e os dois são iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>Obtém o código hash para esta instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> é nula.</summary>
      <returns>
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>Representa o valor máximo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>Representa o valor mínimo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula o produto das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Divide a primeira estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> pela segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros SqlSingle para determinar se eles são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>Este operador implícito converte o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">O parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada em um float.</summary>
      <param name="x">O valor <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertido em float.</param>
      <returns>Um float que contém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">O <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertido.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>Converte o valor de ponto flutuante especificado em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">O valor de float a ser convertido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o valor do float especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se eles não são iguais.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula o produto das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Subtrai a segunda estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> da primeira.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>Nega o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>Converte a <see cref="T:System.String" /> especificada em uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s">A <see cref="T:System.String" /> a ser analisada.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlSingle" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Subtrai a segunda estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> da primeira.</summary>
      <param name="x">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Se o Value da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> for <see langword="true" />, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. Caso contrário, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Um novo <see langword="SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Um novo <see langword="SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Um novo <see langword="SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma <see cref="T:System.Data.SqlTypes.SqlString" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.String" />.</summary>
      <returns>Um objeto <see langword="String" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>Obtém o valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Esta propriedade é somente para leitura.</summary>
      <returns>Um valor de ponto flutuante no intervalo-3,40 E + 38 a 3,40 E + 38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>Representa o valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>Representa um fluxo de tamanho variável de caracteres a ser armazenado ou recuperado do banco de dados. <see cref="T:System.Data.SqlTypes.SqlString" /> tem uma estrutura de dados subjacente diferente de seu correspondente do tipo de dados <see cref="T:System.String" /> .NET Framework.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando a identificação de localidade, as opções de comparação e os dados especificados.</summary>
      <param name="lcid">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">A matriz de dados a ser armazenada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">A matriz de dados a ser armazenada.</param>
      <param name="fUnicode">
        <see langword="true" /> se codificado como Unicode. Caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">A matriz de dados a ser armazenada.</param>
      <param name="index">O índice inicial dentro da matriz.</param>
      <param name="count">O número de caracteres do índice a ser copiado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">A matriz de dados a ser armazenada.</param>
      <param name="index">O índice inicial dentro da matriz.</param>
      <param name="count">O número de caracteres do índice a ser copiado.</param>
      <param name="fUnicode">
        <see langword="true" /> se codificado como Unicode. Caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando a cadeia de caracteres especificada.</summary>
      <param name="data">A cadeia de caracteres a ser armazenada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando os valores de cadeia de caracteres e de identificação de localidade especificados.</summary>
      <param name="data">A cadeia de caracteres a ser armazenada.</param>
      <param name="lcid">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando os valores de cadeia de caracteres, identificação de localidade e opções de comparação especificados.</summary>
      <param name="data">A cadeia de caracteres a ser armazenada.</param>
      <param name="lcid">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatena dois valores <see cref="T:System.Data.SqlTypes.SqlString" /> especificados para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlString" /> que é o valor concatenado de <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>Especifica que as classificações devem ser baseadas em um valor numérico de caracteres em vez de seu valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>Especifica que as classificações devem ser baseadas em um valor numérico de caracteres em vez de seu valor alfabético.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>Cria uma cópia deste objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> no qual todos os valores de propriedade são os mesmos que o original.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>Obtém o objeto <see cref="T:System.Globalization.CompareInfo" /> que define como as comparações de cadeia de caracteres devem ser realizadas nesta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Um <see langword="CompareInfo" /> objeto que define a comparação de cadeias de caracteres para esta <see cref="T:System.Data.SqlTypes.SqlString" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Obtém a enumeração <see cref="T:System.Globalization.CompareOptions" /> equivalente do valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> especificado.</summary>
      <param name="compareOptions">Um valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que descreve as opções de comparação para esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um valor <see langword="CompareOptions" /> que corresponde ao <see langword="SqlCompareOptions" /> para esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>Compara esta instância <see cref="T:System.Data.SqlTypes.SqlString" /> com o <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Data.SqlTypes.SqlString" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>Compara este objeto <see cref="T:System.Data.SqlTypes.SqlString" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns>Um número com sinal que indica os valores relativos da instância e do objeto.  
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  

  Zero 
  Esta instância é igual ao objeto.  

  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatena as duas estruturas <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlString" /> que contém o valor recém concatenado que representa o conteúdo dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>Obtém a estrutura <see cref="T:System.Globalization.CultureInfo" /> que representa informações sobre a cultura deste objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Uma <see cref="T:System.Globalization.CultureInfo" /> estrutura que descreve informações sobre a cultura dessa estrutura SqlString, incluindo os nomes da cultura, o sistema de escrita e o calendário usado e também o acesso a objetos específicos de cultura que fornecem métodos para Common operações, como formatação de datas e de classificação de cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são iguais.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlString" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlString.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlString" /> e os dois forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>Obtém o código hash para esta instância.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>Obtém uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato ANSI.</summary>
      <returns>Uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>Obtém uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato Unicode.</summary>
      <returns>Uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato Unicode.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>Especifica que comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar maiúsculas e minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>Especifica que se a comparação de cadeia de caracteres deve ignorar o tipo Kana.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>Especifica que a comparação de cadeia de caracteres deve ignorar caracteres sem espaçamento, como sinais diacríticos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>Especifica que a comparação de cadeia de caracteres deve ignorar a largura do caractere.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> é nula.</summary>
      <returns>
        <see langword="true" />Se <see cref="P:System.Data.SqlTypes.SqlString.Value" /> for <see cref="F:System.Data.SqlTypes.SqlString.Null" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>Especifica a localidade geográfica e o idioma para a estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>A ID de localidade para a cadeia de caracteres <see cref="P:System.Data.SqlTypes.SqlString.Value" /> armazenada na propriedade.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são diferentes.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatena as duas estruturas <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlString" /> que contém o valor recém concatenado que representa o conteúdo dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são iguais.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificada em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> especificada em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns>Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> a ser convertida.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see langword="SqlDecimal" /> a ser convertida.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlGuid" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser convertida.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é a representação de cadeia de caracteres do <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns>Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura SqlInt32 a ser convertida.</param>
      <returns>Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns>Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>Converte um <see cref="T:System.Data.SqlTypes.SqlString" /> em um <see cref="T:System.String" /></summary>
      <param name="x">O <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns>Um <see langword="String" />, cujo conteúdo é o mesmo que a propriedade <see cref="P:System.Data.SqlTypes.SqlString.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>Converte o parâmetro <see cref="T:System.String" /> em um <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">O <see cref="T:System.String" /> a ser convertido.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlString" /> que contém o valor do <see langword="String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são diferentes.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>Uma combinação de um ou mais valores de enumeração <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que representam o modo no qual o <see cref="T:System.Data.SqlTypes.SqlString" /> deve ser comparados às outras estruturas <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Um valor que especifica como <see cref="T:System.Data.SqlTypes.SqlString" /> isso deve ser comparado com <see cref="T:System.Data.SqlTypes.SqlString" /> outras estruturas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns>Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlString.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao número representado por esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Uma nova estrutura <see langword="SqlDateTime" /> que contém o valor de data representado por este <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém o valor deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual o <see langword="Guid" /> representado por esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt16" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt32" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Um novo <see cref="T:System.Data.SqlTypes.SqlSingle" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>Converte um objeto <see cref="T:System.Data.SqlTypes.SqlString" /> em um <see cref="T:System.String" />.</summary>
      <returns>Um <see cref="T:System.String" /> com o mesmo valor que esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>Obtém a cadeia de caracteres armazenada nesta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />. Esta propriedade é somente para leitura.</summary>
      <returns>A cadeia de caracteres armazenada.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">O valor da cadeia de caracteres é <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>A exceção gerada ao definir um valor em uma estrutura <see cref="N:System.Data.SqlTypes" /> truncaria esse valor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> com uma mensagem de erro especificada e uma referência ao <see cref="T:System.Exception" />.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="e">Uma referência a um <see cref="T:System.Exception" /> interno.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>A classe de exceção base de <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> com dados serializados.</summary>
      <param name="si">O objeto que mantém os dados de objeto serializados.</param>
      <param name="sc">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="e">A exceção que é a causa da exceção atual. Se o parâmetro <c>innerException</c> não for <see langword="null" />, a exceção atual será gerada em um bloco <see langword="catch" /> que tratará a exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>Representa dados XML armazenados ou recuperados de um servidor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>Cria uma nova instância <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>Cria uma nova instância <see cref="T:System.Data.SqlTypes.SqlXml" />, fornecendo o valor XML da instância derivada de <see cref="T:System.IO.Stream" /> fornecida.</summary>
      <param name="value">Uma instância derivada de <see cref="T:System.IO.Stream" /> (como <see cref="T:System.IO.FileStream" />) da qual o conteúdo XML da instância <see cref="T:System.Data.SqlTypes.SqlXml" /> é carregado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>Cria uma nova instância de <see cref="T:System.Data.SqlTypes.SqlXml" /> e a associa-a ao conteúdo do <see cref="T:System.Xml.XmlReader" /> fornecido.</summary>
      <param name="value">Uma instância de classe derivada de <see cref="T:System.Xml.XmlReader" /> a ser usada como o valor da nova instância de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>Obtém o valor do conteúdo XML deste <see cref="T:System.Data.SqlTypes.SqlXml" /> como um <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Uma instância derivada de <see cref="T:System.Xml.XmlReader" /> que contém o conteúdo XML. O tipo real pode variar (por exemplo, o valor retornado pode ser <see cref="T:System.Xml.XmlTextReader" />) dependendo de como as informações são representadas internamente no servidor.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Foi feita uma tentativa de acessar essa propriedade em uma instância nula de <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Uma cadeia de caracteres que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>Indica se esta instância representa ou não um valor <see cref="T:System.Data.SqlTypes.SqlXml" /> nulo.</summary>
      <returns>
        <see langword="true" />Se <see langword="Value" /> for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>Representa uma instância nula do tipo <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Uma instância nula do <see cref="T:System.Data.SqlTypes.SqlXml" /> tipo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r">Um XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Um XmlWriter</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>Obtém a representação de cadeia de caracteres do conteúdo XML desta instância <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>A representação de cadeia de caracteres do conteúdo XML.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary>A enumeração <see cref="T:System.Data.SqlTypes.StorageState" /> não foi planejada para uso como um componente autônomo, mas como uma enumeração da qual outras classes derivam a funcionalidade padrão.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary>Tamanho do buffer.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary>Fluxo.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary>Buffer não gerenciado.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Fornece dados para o estado de alteração de evento de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.StateChangeEventArgs" /> quando são fornecidos o estado original e o estado atual do objeto.</summary>
      <param name="originalState">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Obtém o novo estado da conexão. O objeto de conexão já estará no novo estado quando o evento for acionado.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Obtém o estado original da conexão.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.Data.Common.DbConnection.StateChange" /> .</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">O <see cref="T:System.Data.StateChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Fornece informações adicionais para o evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount">Indica o número de linhas afetadas pela instrução que causou a ocorrência do evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Indica o número de linhas afetadas pela instrução que causou a ocorrência do evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns>O número de linhas afetadas.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>O tipo delegado para os manipuladores de eventos do evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Os dados do evento.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Especifica o tipo de consulta SQL a ser usado pela classe <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> ou <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>Uma consulta SQL que é uma instrução em lote.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>Uma consulta SQL que é uma instrução DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>Uma consulta SQL que é uma instrução INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>Uma consulta SQL que é uma instrução SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>Uma consulta SQL que é uma instrução UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>A exceção que é lançada por um <see cref="T:System.Data.DataSet" /> fortemente tipado quando o usuário acessa um valor <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" />, usando as informações de serialização e o contexto de streaming especificados.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Uma estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" /> com a cadeia de caracteres especificada.</summary>
      <param name="message">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" /> com a cadeia de caracteres e a exceção interna especificadas.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="innerException">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Representa a exceção gerada quando a propriedade <see cref="P:System.Data.DataColumn.Expression" /> de um <see cref="T:System.Data.DataColumn" /> contém um erro de sintaxe.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">A origem e destino de um fluxo serializado específico.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary>Esse tipo é usado como uma classe base para a geração de objetos do tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta XSD.exe do .NET Framework e não se destina a ser usado diretamente do código.</summary>
      <typeparam name="T">O tipo de objetos na sequência de origem representados pela tabela, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary>Inicializa um novo <see cref="T:System.Data.TypedTableBase`1" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse tipo não se destina a ser usado diretamente do seu código.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa um novo <see cref="T:System.Data.TypedTableBase`1" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <param name="info">Um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados para construir o objeto.</param>
      <param name="context">O contexto de fluxo do objeto que está sendo desserializado.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary>Converte os elementos de um <see cref="T:System.Data.TypedTableBase`1" /> para o tipo especificado. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <typeparam name="TResult" />
      <returns>Um <see cref="T:System.Data.EnumerableRowCollection" /> que contém cada elemento da sequência de origem convertido para o tipo especificado.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary>Retorna um enumerador para o tipo <see cref="T:System.Data.DataRow" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <returns>Um objeto que implementa a interface do <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador para o tipo <see cref="T:System.Data.DataRow" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <returns>Um objeto que implementa a interface do <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary>Contém os métodos de extensão da classe <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary>Enumera os elementos de linha de dados do <see cref="T:System.Data.TypedTableBase`1" /> e retorna um objeto <see cref="T:System.Data.EnumerableRowCollection`1" />, em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />. Esse objeto pode ser usado em uma expressão LINQ ou um método de consulta.</summary>
      <param name="source">A origem <see cref="T:System.Data.TypedTableBase`1" /> a ser tornada enumerável.</param>
      <typeparam name="TRow">O tipo para converter os elementos da origem em.</typeparam>
      <returns>Um objeto <see cref="T:System.Data.EnumerableRowCollection`1" /> em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary>Retorna o elemento em uma linha especificada em uma sequência ou um valor padrão se a linha estiver fora do intervalo.</summary>
      <param name="source">Um objeto enumerável em que se retorna um elemento.</param>
      <param name="index">O índice baseado em zero do elemento a ser recuperado.</param>
      <typeparam name="TRow">O tipo dos elementos ou da linha.</typeparam>
      <returns>O elemento de uma linha especificada em uma sequência.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem crescente de acordo com a chave especificada.</summary>
      <param name="source">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem crescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem decrescente de acordo com a chave especificada.</summary>
      <param name="source">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem decrescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow">O tipo dos elementos de linha em <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Projeta cada elemento de um <see cref="T:System.Data.TypedTableBase`1" /> em um novo formulário.</summary>
      <param name="source">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> nos quais invocar uma função de transformação.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TRow">O tipo dos elementos de linha no <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" />
      <returns>Um <see cref="T:System.Data.EnumerableRowCollection`1" /> cujos elementos são o resultado da invocação da função de transformação em cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary>Filtra uma sequência de linhas com base no predicado especificado.</summary>
      <param name="source">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem filtrados.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TRow">O tipo dos elementos de linha no <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Um <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contém linhas da sequência de entrada que atendem à condição.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Representa uma restrição em um conjunto de colunas no qual todos os valores devem ser exclusivos.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o <see cref="T:System.Data.DataColumn" /> a ser restringido e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com a matriz determinada de objetos <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns">A matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="columns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome e <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name">O nome da restrição.</param>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, <see cref="T:System.Data.DataColumn" /> a ser restringido e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="name">O nome da restrição.</param>
      <param name="column">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome e a matriz de objetos <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name">O nome da restrição.</param>
      <param name="columns">A matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="name">O nome da restrição.</param>
      <param name="columns">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="name">O nome da restrição.</param>
      <param name="columnNames">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Obtém a matriz de colunas que essa restrição afeta.</summary>
      <returns>Uma matriz de objetos de <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Compara essa restrição a um segundo para determinar se ambos são idênticos.</summary>
      <param name="key2">O objeto ao qual este <see cref="T:System.Data.UniqueConstraint" /> é comparado.</param>
      <returns>
        <see langword="true" /> se as restrições forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Obtém o código hash desta instância do objeto <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Obtém um valor que indica se a restrição está em uma chave primária ou não.</summary>
      <returns>
        <see langword="true" />, se a restrição estiver em uma chave primária; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Obtém uma tabela à qual essa restrição pertence.</summary>
      <returns>O <see cref="T:System.Data.DataTable" /> ao qual a restrição pertence.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Especifica como os resultados do comando de consulta são aplicados à linha que está sendo atualizada.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Os parâmetros de saída e a primeira linha retornada podem ser mapeados para a linha alterada no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>Os dados na primeira linha retornada são mapeados para a linha alterada no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Todos os parâmetros ou linhas retornados são ignorados.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Os parâmetros de saída são mapeados para a linha alterada no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Especifica a ação a ser adotada com relação à linha atual e às restantes durante um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>O <see cref="T:System.Data.Common.DataAdapter" /> é continuar processando as linhas.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>O manipulador de eventos relata que a atualização deve ser tratada como um erro.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>A linha atual e todas as linhas restantes não deverão ser atualizadas.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>A linha atual não deverá ser atualizada.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Representa a exceção lançada quando você tenta retornar uma versão de um <see cref="T:System.Data.DataRow" /> que foi excluído.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" /> com informações de serialização.</summary>
      <param name="info">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Especifica como ler dados XML e um esquema relacional em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>O modo de leitura padrão.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Lê um DiffGram, aplicando alterações de DiffGram ao <see cref="T:System.Data.DataSet" />. A semântica é idêntica às de uma operação de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Assim como acontece com a operação de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, os valores de <see cref="P:System.Data.DataRow.RowState" /> são preservados. A entrada para <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> com DiffGrams deve apenas ser obtida usando a saída do <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />, como um DiffGram.
O <see cref="T:System.Data.DataSet" /> de destino precisa ter o mesmo esquema do <see cref="T:System.Data.DataSet" /> no qual <see cref="Overload:System.Data.DataSet.WriteXml" /> como DiffGram é chamado. Caso contrário, a operação de mesclagem de DiffGram falhará e uma exceção será gerada.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Lê os fragmentos XML, como aqueles gerados por consultas FOR XML, em uma instância do SQL Server em execução. Quando <see cref="T:System.Data.XmlReadMode" /> é definido como <see langword="Fragment" />, o namespace padrão é lido como o esquema embutido.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Ignora qualquer esquema embutido e carrega os dados no esquema <see cref="T:System.Data.DataSet" /> existente. Se os dados não coincidem com o esquema existente, eles serão descartados (incluindo dados de diferentes namespaces definidos para o <see cref="T:System.Data.DataSet" />). Se os dados forem um DiffGram, <see langword="IgnoreSchema" /> tem a funcionalidade que <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Ignora qualquer esquema embutido, infere o esquema dos dados e carrega-os. Se o <see cref="T:System.Data.DataSet" /> já contiver um esquema, o esquema atual será estendido, adicionando colunas às tabelas existentes. Uma exceção será lançada se uma tabela inferida já existir com um namespace diferente ou se qualquer coluna inferida estiver em conflito com colunas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Ignora qualquer esquema embutido, infere o esquema digitado dos dados e carrega-os. Se o tipo não pode ser inferido dos dados, ele é interpretado como dados de cadeia de caracteres. Se o <see cref="T:System.Data.DataSet" /> já contiver um esquema, o esquema atual é estendido, adicionando novas colunas ou adicionando colunas às tabelas existentes. Uma exceção será lançada se uma tabela inferida já existir com um namespace diferente ou se qualquer coluna inferida estiver em conflito com colunas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Lê qualquer esquema embutido e carrega os dados. Se o <see cref="T:System.Data.DataSet" /> já contém o esquema, novas tabelas podem ser adicionadas ao esquema, mas uma exceção é lançada se todas as tabelas no esquema embutido já existirem no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Especifica como gravar dados XML e um esquema relacional de um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Grava todo o <see cref="T:System.Data.DataSet" /> como um DiffGram, incluindo valores originais e atuais. Para gerar um DiffGram que contém apenas valores alterados, chame <see cref="M:System.Data.DataSet.GetChanges" /> e, em seguida, chame <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> como um DiffGram no <see cref="T:System.Data.DataSet" /> retornado.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataSet" /> como dados XML, sem um esquema XSD. Se nenhum dado for carregado no <see cref="T:System.Data.DataSet" />, nada será gravado.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Grava o conteúdo atual do <see cref="T:System.Data.DataSet" /> como dados XML com a estrutura relacional como um esquema XSD embutido. Se o <see cref="T:System.Data.DataSet" /> tiver apenas um esquema sem dados, somente o esquema embutido será gravado. Se o <see cref="T:System.Data.DataSet" /> não tiver um esquema atual, nada será gravado.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>Permite que os dados estruturados sejam armazenados, recuperados e manipulados por meio de um <see cref="T:System.Data.DataSet" /> relacional.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDataDocument" /> com o <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataset">O <see langword="DataSet" /> a ser carregado no <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>Cria uma duplicata do nó atual.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Cria um elemento com <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix">O prefixo do novo elemento. Se String.Empty ou <see langword="null" />, não há nenhum prefixo.</param>
      <param name="localName">O nome local do novo elemento.</param>
      <param name="namespaceURI">O URI (Uniform Resource Identifier) do namespace do novo elemento. Se String.Empty ou <see langword="null" />, não há nenhum namespaceURI.</param>
      <returns>Um novo <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlEntityReference" /> com o nome especificado.</summary>
      <param name="name">O nome da referência da entidade.</param>
      <returns>Um <see cref="T:System.Xml.XmlEntityReference" /> com o nome especificado.</returns>
      <exception cref="T:System.NotSupportedException">Chamar esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Cria um novo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar nesse documento. O <see langword="XPathNavigator" /> é posicionado no nó especificado no parâmetro <paramref name="node" />.</summary>
      <param name="node">O <see cref="T:System.Xml.XmlNode" /> no qual você deseja que o navegador seja inicialmente posicionado.</param>
      <returns>Um <see langword="XPathNavigator" /> usado para navegar pelo documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>Obtém um <see cref="T:System.Data.DataSet" /> que fornece uma representação relacional dos dados no <see langword="XmlDataDocument" />.</summary>
      <returns>Um <see langword="DataSet" /> que pode ser usado para acessar os dados <see langword="XmlDataDocument" /> no usando um modelo relacional.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>Obtém o <see cref="T:System.Xml.XmlElement" /> com a ID especificada. Este método não tem suporte na classe <see cref="T:System.Xml.XmlDataDocument" />. Chamar esse método gerará uma exceção.</summary>
      <param name="elemId">A ID do atributo a ser correspondida.</param>
      <returns>Um <see cref="T:System.Xml.XmlElement" /> com a ID especificada.</returns>
      <exception cref="T:System.NotSupportedException">Chamar esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>Recupera o <see cref="T:System.Xml.XmlElement" /> associado ao <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="r">O <see langword="DataRow" /> cujo <see langword="XmlElement" /> associado você deseja recuperar.</param>
      <returns>O <see langword="XmlElement" /> que contém uma representação do <see langword="DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary>Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name">O nome qualificado para correspondência. Ele é comparado com a propriedade <see cref="P:System.Xml.XmlDocument.Name" /> do nó correspondente. O valor especial “*” corresponde a todas as marcas.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>Recupera o <see cref="T:System.Data.DataRow" /> associado ao <see cref="T:System.Xml.XmlElement" /> especificado.</summary>
      <param name="e">O <see langword="XmlElement" /> cujo <see langword="DataRow" /> associado você deseja recuperar.</param>
      <returns>O <see langword="DataRow" /> que contém uma representação do <see langword="XmlElement" />; <see langword="null" /> se não houver nenhum <see langword="DataRow" /> associado a <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>Carrega o <see langword="XmlDataDocument" /> do fluxo especificado.</summary>
      <param name="inStream">O fluxo que contém o documento XML a ser carregado.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>Carrega o <see langword="XmlDataDocument" /> do <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="txtReader">O <see langword="TextReader" /> usado para alimentar os dados XML no documento.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>Carrega o <see langword="XmlDataDocument" /> usando a URL especificada.</summary>
      <param name="filename">A URL do arquivo que contém o documento XML a ser carregado.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>Carrega o <see langword="XmlDataDocument" /> do <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">O <see langword="XmlReader" /> que contém o documento XML a ser carregado.</param>
      <exception cref="T:System.NotSupportedException">O XML que está sendo carregado contém referências a entidades e o leitor não pode resolver entidades.</exception>
    </member>
  </members>
</doc>