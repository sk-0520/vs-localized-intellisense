<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">Representa uma matriz 3 x 2.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">Cria uma matriz 3x2 dos componentes especificados.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">O valor a atribuir ao primeiro elemento na primeira linha.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">O valor a atribuir ao segundo elemento na primeira linha.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">O valor a atribuir ao primeiro elemento na segunda linha.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">O valor a atribuir ao segundo elemento na segunda linha.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">O valor a atribuir ao primeiro elemento na terceira linha.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">O valor a atribuir ao segundo elemento na terceira linha.</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Adiciona cada elemento em uma matriz com seu elemento correspondente em uma segunda matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">A matriz que contém os valores somados de <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">Cria uma matriz de rotação usando a rotação determinada em radianos.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">A quantidade de rotação, em radianos.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">Cria uma matriz de rotação usando a rotação especificada em radianos e um ponto central.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">A quantidade de rotação, em radianos.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">Cria uma matriz de colocação em escala da escala de vetor especificada.</summary>
      <param name="scales" vsli:raw="The scale to use.">A escala a ser usada.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">Cria uma matriz de colocação em escala da escala de vetor especificada com um deslocamento do ponto central especificado.</summary>
      <param name="scales" vsli:raw="The scale to use.">A escala a ser usada.</param>
      <param name="centerPoint" vsli:raw="The center offset.">O deslocamento do centro.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">Cria uma matriz de colocação em escala que dimensiona uniformemente com a escala fornecida.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">A escala uniforme a usar.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">Cria uma matriz de colocação em escala que dimensiona uniformemente com a escala especificada com um deslocamento do centro da especificado.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">A escala uniforme a usar.</param>
      <param name="centerPoint" vsli:raw="The center offset.">O deslocamento do centro.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">Cria uma matriz de colocação em escala com base nos componentes X e Y especificados.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">O valor pelo qual escalar no eixo X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">O valor pelo qual escalar no eixo Y.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">Cria uma matriz de colocação em escala que tem um deslocamento por um determinado ponto central.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">O valor pelo qual escalar no eixo X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">O valor pelo qual escalar no eixo Y.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">Cria uma matriz de distorção dos ângulos especificados em radianos.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">O ângulo X, em radianos.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">O ângulo Y, em radianos.</param>
      <returns vsli:raw="The skew matrix.">A matriz de distorção.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">Cria uma matriz de distorção dos ângulos especificados em radianos e um ponto central.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">O ângulo X, em radianos.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">O ângulo Y, em radianos.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The skew matrix.">A matriz de distorção.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">Cria uma matriz de translação do vetor bidimensional especificado.</summary>
      <param name="position" vsli:raw="The translation position.">A posição de translação.</param>
      <returns vsli:raw="The translation matrix.">A matriz de translação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">Cria uma matriz de translação dos componentes X e Y especificados.</summary>
      <param name="xPosition" vsli:raw="The X position.">A posição X.</param>
      <param name="yPosition" vsli:raw="The Y position.">A posição Y.</param>
      <returns vsli:raw="The translation matrix.">A matriz de translação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">Retorna um valor que indica se esta instância e outra matriz 3x2 são iguais.</summary>
      <param name="other" vsli:raw="The other matrix.">A outra matriz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as duas matrizes forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">Calcula o determinante para essa matriz.</summary>
      <returns vsli:raw="The determinant.">O determinante.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">Obtém a matriz de identidade multiplicativa.</summary>
      <returns vsli:raw="The multiplicative identify matrix.">A matriz de identificação multiplicativa.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">Inverte a matriz especificada. O valor retornado indica se a operação foi bem-sucedida.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">A matriz a inverter.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">Quando este método retornar, ele conterá a matriz invertida se a operação tiver sido bem-sucedida.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix" /> tiver sido convertido com êxito; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">Indica se a matriz atual é a matriz de identidade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a matriz atual for a matriz de identidade; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">Executa uma interpolação linear de uma matriz para uma segunda matriz com base em um valor que especifica a importância da segunda matriz.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="matrix2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">A importância relativa da <paramref name="matrix2" />.</param>
      <returns vsli:raw="The interpolated matrix.">A matriz interpolada.</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">O primeiro elemento da primeira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">O segundo elemento da primeira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">O primeiro elemento da segunda linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">O segundo elemento da segunda linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">O primeiro elemento da terceira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">O segundo elemento da terceira linha.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Retorna a matriz que resulta da multiplicação de duas matrizes juntas.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The product matrix.">A matriz do produto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Retorna a matriz que resulta da colocação em escala de todos os elementos de uma matriz especificada por um fator escalar.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">A matriz a escalar.</param>
      <param name="value2" vsli:raw="The scaling value to use.">O valor de colocação em escala a ser usado.</param>
      <returns vsli:raw="The scaled matrix.">A matriz escalada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega a matriz especificada multiplicando todos os seus valores por -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">A matriz a negar.</param>
      <returns vsli:raw="The negated matrix.">A matriz negada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Adiciona cada elemento em uma matriz com seu elemento correspondente em uma segunda matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix that contains the summed values.">A matriz que contém os valores somados.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">Retorna um valor que indica se as matrizes especificadas são iguais.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">A primeira matriz a comparar.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">A segunda matriz a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">Retorna um valor que indica se as matrizes especificadas não são iguais.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">A primeira matriz a comparar.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">A segunda matriz a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Retorna a matriz que resulta da multiplicação de duas matrizes juntas.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The product matrix.">A matriz do produto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Retorna a matriz que resulta da colocação em escala de todos os elementos de uma matriz especificada por um fator escalar.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">A matriz a escalar.</param>
      <param name="value2" vsli:raw="The scaling value to use.">O valor de colocação em escala a ser usado.</param>
      <returns vsli:raw="The scaled matrix.">A matriz escalada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrai cada elemento em uma segunda matriz do seu elemento correspondente em uma primeira matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">A matriz que contém os valores resultantes da subtração de cada elemento em <paramref name="value2" /> do elemento correspondente em <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega a matriz especificada multiplicando todos os seus valores por -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">A matriz a negar.</param>
      <returns vsli:raw="The negated matrix.">A matriz negada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrai cada elemento em uma segunda matriz do seu elemento correspondente em uma primeira matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">A matriz que contém os valores resultantes da subtração de cada elemento em <paramref name="value2" /> do elemento correspondente em <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">Retorna uma cadeia de caracteres que representa essa matriz.</summary>
      <returns vsli:raw="The string representation of this matrix.">A representação de cadeia de caracteres dessa matriz.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">Obtém ou define o componente de translação dessa matriz.</summary>
      <returns vsli:raw="The translation component of the current instance.">O componente de tradução da instância atual.</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">Representa uma matriz 4 x 4.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">Cria um objeto <see cref="T:System.Numerics.Matrix4x4" /> de um objeto <see cref="T:System.Numerics.Matrix3x2" />.</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">Uma matriz 3x2.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">Cria uma matriz 4x4 dos componentes especificados.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">O valor a atribuir ao primeiro elemento na primeira linha.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">O valor a atribuir ao segundo elemento na primeira linha.</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">O valor a ser atribuído ao terceiro elemento na terceira linha.</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">O valor a ser atribuído ao quarto elemento na terceira linha.</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">O valor a ser atribuído ao primeiro elemento na quarta linha.</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">O valor a ser atribuído ao segundo elemento na quarta linha.</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">O valor a ser atribuído ao terceiro elemento na quarta linha.</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">O valor a ser atribuído ao quarto elemento na quarta linha.</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">O valor a ser atribuído ao terceiro elemento na primeira linha.</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">O valor a ser atribuído ao quarto elemento da primeira linha.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">O valor a atribuir ao primeiro elemento na segunda linha.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">O valor a atribuir ao segundo elemento na segunda linha.</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">O valor a ser atribuído ao terceiro elemento na segunda linha.</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">O valor a ser atribuído ao terceiro elemento na segunda linha.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">O valor a atribuir ao primeiro elemento na terceira linha.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">O valor a atribuir ao segundo elemento na terceira linha.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Adiciona cada elemento em uma matriz com seu elemento correspondente em uma segunda matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">A matriz que contém os valores somados de <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">Cria uma mensagem de instalação esférica que gira em torno da posição de um objeto especificado.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">A posição do objeto em torno do qual o mural girará.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">A posição da câmera.</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">O vetor de ascensão da câmera.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">O vetor de encaminhamento da câmera.</param>
      <returns vsli:raw="The created billboard.">O mural criado.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">Cria um mural cilíndrico que gira em torno de um eixo especificado.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">A posição do objeto em torno do qual o mural girará.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">A posição da câmera.</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">O eixo em torno do qual girar o mural.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">O vetor de encaminhamento da câmera.</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">O vetor de avanço do objeto.</param>
      <returns vsli:raw="The billboard matrix.">A matriz do mural.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">Cria uma matriz que gira em torno de um vetor arbitrário.</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">O eixo em torno do qual girar.</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">O ângulo de rotação ao redor do <paramref name="axis" />, em radianos.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">Cria uma matriz de rotação com base no valor de rotação do Quaternion especificado.</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">O Quatérnio de origem.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">Cria uma matriz de rotação para a rotação sobre o eixo y, a rotação sobre o eixo x e a rolagem especificadas.</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">O ângulo de rotação, em radianos, ao redor do eixo Y.</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">O ângulo de rotação, em radianos, ao redor do eixo X.</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">O ângulo de rotação, em radianos, ao redor do eixo Z.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">Cria uma matriz de exibição.</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">A posição da câmera.</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">O destino para o qual a câmera está apontando.</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">A direção é "para cima" do ponto de vista da câmera.</param>
      <returns vsli:raw="The view matrix.">A matriz de exibição.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">Cria uma matriz de perspectiva ortográfica com base nas dimensões de volume de exibição determinadas.</summary>
      <param name="width" vsli:raw="The width of the view volume.">A largura do volume de exibição.</param>
      <param name="height" vsli:raw="The height of the view volume.">A altura do volume de exibição.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">O valor Z mínimo do volume de exibição.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">O valor Z máximo do volume de exibição.</param>
      <returns vsli:raw="The orthographic projection matrix.">A matriz de projeção ortográfica.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">Cria uma matriz a projeção ortográfica personalizada.</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">O valor X mínimo do volume de exibição.</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">O valor X máximo do volume de exibição.</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">O valor Y mínimo do volume de exibição.</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">O valor Y máximo do volume de exibição.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">O valor Z mínimo do volume de exibição.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">O valor Z máximo do volume de exibição.</param>
      <returns vsli:raw="The orthographic projection matrix.">A matriz de projeção ortográfica.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">Cria uma matriz de projeção de perspectiva das dimensões de volume de exibição fornecidas.</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">A largura do volume de exibição no plano de exibição próximo.</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">A altura do volume de exibição no plano de exibição próximo.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">A distância ao plano de exibição próximo.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">A distância ao plano de exibição distante.</param>
      <returns vsli:raw="The perspective projection matrix.">A matriz de projeção de perspectiva.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> é menor que ou igual a zero.  

ou - 
<paramref name="farPlaneDistance" /> é menor que ou igual a zero.  

ou - 
<paramref name="nearPlaneDistance" /> é maior ou igual a <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">Cria uma matriz de projeção de perspectiva com base em um campo de visão, taxa de proporção e distâncias do plano de exibição próximo e distante.</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">O campo de visão na direção y, em radianos.</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">A taxa de proporção, definida como a largura do espaço de exibição dividida pela altura.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">A distância ao plano de exibição próximo.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">A distância ao plano de exibição distante.</param>
      <returns vsli:raw="The perspective projection matrix.">A matriz de projeção de perspectiva.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" /> é menor que ou igual a zero.  

ou - 
<paramref name="fieldOfView" /> é maior ou igual a <see cref="F:System.Math.PI" />.  

 <paramref name="nearPlaneDistance" /> é menor que ou igual a zero.  

ou - 
<paramref name="farPlaneDistance" /> é menor que ou igual a zero.  

ou - 
<paramref name="nearPlaneDistance" /> é maior ou igual a <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">Cria uma matriz de projeção de perspectiva personalizada.</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">O valor x mínimo do volume de exibição no plano de exibição próximo.</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">O valor x máximo do volume de exibição no plano de exibição próximo.</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">O valor y mínimo do volume de exibição no plano de exibição próximo.</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">O valor y máximo do volume de exibição no plano de exibição próximo.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">A distância ao plano de exibição próximo.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">A distância ao plano de exibição distante.</param>
      <returns vsli:raw="The perspective projection matrix.">A matriz de projeção de perspectiva.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> é menor que ou igual a zero.  

ou - 
<paramref name="farPlaneDistance" /> é menor que ou igual a zero.  

ou - 
<paramref name="nearPlaneDistance" /> é maior ou igual a <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">Cria uma matriz que reflete o sistema de coordenadas sobre um plano especificado.</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">O plano sobre o qual criar uma reflexão.</param>
      <returns vsli:raw="A new matrix expressing the reflection.">Uma nova matriz que expressa a reflexão.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">Cria uma matriz de pontos rotatórios em torno do eixo X.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">A quantidade, em radianos, pela qual girar em torno do eixo X.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">Cria uma matriz de pontos de rotação ao redor do eixo X de um ponto central.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">A quantidade, em radianos, pela qual girar em torno do eixo X.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">Cria uma matriz de pontos rotatórios em torno do eixo Y.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">A quantidade, em radianos, pela qual girar em torno do eixo Y.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">A quantidade, em radianos, pela qual girar em torno do eixo Y de um ponto central.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">A quantidade, em radianos, pela qual girar em torno do eixo Y.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">Cria uma matriz de pontos rotatórios em torno do eixo Z.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">A quantidade, em radianos, pela qual girar em torno do eixo Z.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">Cria uma matriz de pontos de rotação ao redor do eixo Z de um ponto central.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">A quantidade, em radianos, pela qual girar em torno do eixo Z.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The rotation matrix.">A matriz de rotação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">Cria uma matriz de colocação em escala da escala de vetor especificada.</summary>
      <param name="scales" vsli:raw="The scale to use.">A escala a ser usada.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">Cria uma matriz de colocação em escala com um ponto central.</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">O vetor que contém a quantidade a escalar em cada eixo.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">Cria uma matriz de colocação em escala uniforme que coloca em escala cada eixo igualmente.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">O fator de colocação em escala uniforme.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">Cria uma matriz de colocação em escala uniforme que coloca em escala cada eixo igualmente com um ponto central.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">O fator de colocação em escala uniforme.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">Cria uma matriz de colocação em escala com base nos componentes X, Y e Z especificados.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">O valor pelo qual escalar no eixo X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">O valor pelo qual escalar no eixo Y.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">O valor para colocar em escala no eixo Z.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">Cria uma matriz de colocação em escala que tem um deslocamento por um determinado ponto central.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">O valor pelo qual escalar no eixo X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">O valor pelo qual escalar no eixo Y.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">O valor para colocar em escala no eixo Z.</param>
      <param name="centerPoint" vsli:raw="The center point.">O ponto central.</param>
      <returns vsli:raw="The scaling matrix.">A matriz de colocação em escala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">Cria uma matriz que nivela a geometria em um plano especificado como se projetando uma sombra de uma fonte de luz especificada.</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">A direção da qual a luz que projeta a sombra está vindo.</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">O plano no qual a nova matriz deve nivelar a geometria para projetar uma sombra.</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">Uma nova matriz que pode ser usada para nivelar a geometria no plano especificado da direção especificada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">Cria uma matriz de translação do vetor tridimensional especificado.</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">A quantidade de translação em cada eixo.</param>
      <returns vsli:raw="The translation matrix.">A matriz de translação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">Cria uma matriz de translação dos componentes X, Y e Z especificados.</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">O valor para fazer a translação no eixo X.</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">O valor para fazer a translação no eixo Y.</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">O valor para fazer a translação no eixo Z.</param>
      <returns vsli:raw="The translation matrix.">A matriz de translação.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">Cria uma matriz mundial com os parâmetros especificados.</summary>
      <param name="position" vsli:raw="The position of the object.">A posição do objeto.</param>
      <param name="forward" vsli:raw="The forward direction of the object.">A direção de avanço do objeto.</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">A direção para cima do objeto. Seu valor costuma ser <c>[0, 1, 0]</c>.</param>
      <returns vsli:raw="The world matrix.">A matriz mundial.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">Tenta extrair os componentes de escala, translação e rotação da matriz de escala, rotação ou translação determinada. O valor retornado indica se a operação foi bem-sucedida.</summary>
      <param name="matrix" vsli:raw="The source matrix.">A matriz de origem.</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">Quando este método retorna, conterá o componente de colocação em escala da matriz de transformação se a operação for bem-sucedida.</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">Quando este método retorna, conterá o componente de rotação da matriz de transformação se a operação for bem-sucedida.</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">Quando o método retorna, conterá o componente de translação da matriz de transformação se a operação for bem-sucedida.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix" /> foi decomposto com êxito; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">Retorna um valor que indica se esta instância e outra matriz 4x4 são iguais.</summary>
      <param name="other" vsli:raw="The other matrix.">A outra matriz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as duas matrizes forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">Calcula o determinante da matriz 4x4 atual.</summary>
      <returns vsli:raw="The determinant.">O determinante.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">Obtém a matriz de identidade multiplicativa.</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">Obtém a matriz de identidade multiplicativa.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">Inverte a matriz especificada. O valor retornado indica se a operação foi bem-sucedida.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">A matriz a inverter.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">Quando este método retornar, ele conterá a matriz invertida se a operação tiver sido bem-sucedida.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix" /> tiver sido convertido com êxito; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">Indica se a matriz atual é a matriz de identidade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a matriz atual for a matriz de identidade; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">Executa uma interpolação linear de uma matriz para uma segunda matriz com base em um valor que especifica a importância da segunda matriz.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="matrix2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">A importância relativa da <paramref name="matrix2" />.</param>
      <returns vsli:raw="The interpolated matrix.">A matriz interpolada.</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">O primeiro elemento da primeira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">O segundo elemento da primeira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">O terceiro elemento da primeira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">O quarto elemento da primeira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">O primeiro elemento da segunda linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">O segundo elemento da segunda linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">O terceiro elemento da segunda linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">O quarto elemento da segunda linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">O primeiro elemento da terceira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">O segundo elemento da terceira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">O terceiro elemento da terceira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">O quarto elemento da terceira linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">O primeiro elemento da quarta linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">O segundo elemento da quarta linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">O terceiro elemento da quarta linha.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">O quarto elemento da quarta linha.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Retorna a matriz que resulta da multiplicação de duas matrizes juntas.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The product matrix.">A matriz do produto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Retorna a matriz que resulta da colocação em escala de todos os elementos de uma matriz especificada por um fator escalar.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">A matriz a escalar.</param>
      <param name="value2" vsli:raw="The scaling value to use.">O valor de colocação em escala a ser usado.</param>
      <returns vsli:raw="The scaled matrix.">A matriz escalada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega a matriz especificada multiplicando todos os seus valores por -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">A matriz a negar.</param>
      <returns vsli:raw="The negated matrix.">A matriz negada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Adiciona cada elemento em uma matriz com seu elemento correspondente em uma segunda matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix that contains the summed values.">A matriz que contém os valores somados.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">Retorna um valor que indica se as matrizes especificadas são iguais.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">A primeira matriz a comparar.</param>
      <param name="value2" vsli:raw="The second matrix to care.">A segunda matriz a tratar</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">Retorna um valor que indica se as matrizes especificadas não são iguais.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">A primeira matriz a comparar.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">A segunda matriz a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Retorna a matriz que resulta da multiplicação de duas matrizes juntas.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The product matrix.">A matriz do produto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Retorna a matriz que resulta da colocação em escala de todos os elementos de uma matriz especificada por um fator escalar.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">A matriz a escalar.</param>
      <param name="value2" vsli:raw="The scaling value to use.">O valor de colocação em escala a ser usado.</param>
      <returns vsli:raw="The scaled matrix.">A matriz escalada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrai cada elemento em uma segunda matriz do seu elemento correspondente em uma primeira matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">A matriz que contém os valores resultantes da subtração de cada elemento em <paramref name="value2" /> do elemento correspondente em <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega a matriz especificada multiplicando todos os seus valores por -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">A matriz a negar.</param>
      <returns vsli:raw="The negated matrix.">A matriz negada.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrai cada elemento em uma segunda matriz do seu elemento correspondente em uma primeira matriz.</summary>
      <param name="value1" vsli:raw="The first matrix.">A primeira matriz.</param>
      <param name="value2" vsli:raw="The second matrix.">A segunda matriz.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">A matriz que contém os valores resultantes da subtração de cada elemento em <paramref name="value2" /> do elemento correspondente em <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">Retorna uma cadeia de caracteres que representa essa matriz.</summary>
      <returns vsli:raw="The string representation of this matrix.">A representação de cadeia de caracteres dessa matriz.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">Transforma a matriz especificada aplicando a rotação Quaternion especificada.</summary>
      <param name="value" vsli:raw="The matrix to transform.">A matriz a transformar.</param>
      <param name="rotation" vsli:raw="The rotation t apply.">A rotação a aplicar.</param>
      <returns vsli:raw="The transformed matrix.">A matriz transformada.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">Obtém ou define o componente de translação dessa matriz.</summary>
      <returns vsli:raw="The translation component of the current instance.">O componente de tradução da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">Transpõe as linhas e colunas de uma matriz.</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">A matriz para transpor.</param>
      <returns vsli:raw="The transposed matrix.">A matriz transposta.</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">Representa um plano no espaço tridimensional.</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">Cria um objeto <see cref="T:System.Numerics.Plane" /> de um normal especificado e a distância ao longo de normal da origem.</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">O vetor normal do plano.</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">A distância do plano da origem ao longo dos seus vetores normais.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">Cria um objeto <see cref="T:System.Numerics.Plane" /> usando um vetor de quatro dimensões especificado.</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">Um vetor cujos três primeiros elementos descrevem o vetor normal e cujo <see cref="F:System.Numerics.Vector4.W" /> define a distância ao longo dessa normal da origem.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">Cria um objeto <see cref="T:System.Numerics.Plane" /> dos componentes X, Y e Z da sua normal e sua distância da origem naquela normal.</summary>
      <param name="x" vsli:raw="The X component of the normal.">O componente X da normal.</param>
      <param name="y" vsli:raw="The Y component of the normal.">O componente Y da normal.</param>
      <param name="z" vsli:raw="The Z component of the normal.">O componente Z da normal.</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">A distância do plano ao longo da sua normal da origem.</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">Cria um objeto <see cref="T:System.Numerics.Plane" /> que contém três pontos especificados.</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">O primeiro ponto que define o plano.</param>
      <param name="point2" vsli:raw="The second point defining the plane.">O segundo ponto que define o plano.</param>
      <param name="point3" vsli:raw="The third point defining the plane.">O terceiro ponto que define o plano.</param>
      <returns vsli:raw="The plane containing the three points.">O plano que contém os três pontos.</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">A distância do plano ao longo da sua normal da origem.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">Calcula o produto de ponto de um plano e um vetor de quatro dimensões.</summary>
      <param name="plane" vsli:raw="The plane.">O plano.</param>
      <param name="value" vsli:raw="The four-dimensional vector.">O vetor de quatro dimensões.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">Retorna o produto de ponto de um vetor tridimensional especificado e o vetor normal desse plano mais o valor de distância (<see cref="F:System.Numerics.Plane.D" />) do plano.</summary>
      <param name="plane" vsli:raw="The plane.">O plano.</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">O vetor de três dimensões.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">Retorna o produto de ponto um vetor tridimensional especificado e o vetor <see cref="F:System.Numerics.Plane.Normal" /> desse plano.</summary>
      <param name="plane" vsli:raw="The plane.">O plano.</param>
      <param name="value" vsli:raw="The three-dimensional vector.">O vetor tridimensional.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">Retorna um valor que indica se esta instância e outro objeto de plano são iguais.</summary>
      <param name="other" vsli:raw="The other plane.">O outro plano.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois planos forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">O vetor normal do plano.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">Cria um novo objeto <see cref="T:System.Numerics.Plane" /> cujo vetor normal é o vetor normal do plano de origem normalizado.</summary>
      <param name="value" vsli:raw="The source plane.">O plano de origem.</param>
      <returns vsli:raw="The normalized plane.">O plano normalizado.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">Retorna um valor que indica se dois planos são iguais.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">O primeiro plano a comparar.</param>
      <param name="value2" vsli:raw="The second plane to compare.">Segundo plano a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">Retorna um valor que indica se dois planos não são iguais.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">O primeiro plano a comparar.</param>
      <param name="value2" vsli:raw="The second plane to compare.">Segundo plano a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">Retorna a representação de cadeia de caracteres deste objeto de plano.</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">Uma cadeia de caracteres que representa este objeto <see cref="T:System.Numerics.Plane" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">Transforma um plano normalizado por uma matriz 4x4.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">O plano normalizado a transformar.</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">A matriz de transformação a aplicar ao <paramref name="plane" />.</param>
      <returns vsli:raw="The transformed plane.">O plano transformado.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">Transforma um plano normalizado por uma rotação Quaternion.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">O plano normalizado a transformar.</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">A rotação Quaternion a aplicar ao plano.</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">Um novo plano que resulta da aplicação da rotação Quaternion.</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">Representa um vetor que é usado para codificar rotações físicas tridimensionais.</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">Cria um quatérnio com base nas partes de vetor e de rotação especificadas.</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">A parte de vetor do quatérnio.</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">A parte de rotação do quatérnio.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">Constrói um quatérnio com base nos componentes especificados.</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">O valor a ser atribuído ao componente X do quatérnio.</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">O valor a ser atribuído ao componente Y do quatérnio.</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">O valor a ser atribuído ao componente Z do quatérnio.</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">O valor a ser atribuído ao componente W do quatérnio.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">Adiciona cada elemento em um quatérnio com seu elemento correspondente em um segundo quatérnio.</summary>
      <param name="value1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="value2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">O quatérnio que contém os valores somados de <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">Concatena dois quatérnios.</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">A primeira rotação do quatérnio na série.</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">A segunda rotação do quatérnio na série.</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">Um novo quatérnio que representa a concatenação da rotação <paramref name="value1" /> seguido da rotação <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">Retorna o conjugado do quatérnio especificado.</summary>
      <param name="value" vsli:raw="The quaternion.">O quatérnio.</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">Um novo quatérnio que é o conjugado de <see langword="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">Cria um quatérnion de uma unidade de vetor e um ângulo de rotação ao redor do vetor.</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">O vetor de unidade em torno do qual girar.</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">O ângulo, em radianos, a ser girado em torno do vetor.</param>
      <returns vsli:raw="The newly created quaternion.">O quatérnio recém-criado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">Cria um quatérnio com base na matriz de rotação especificada.</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">A matriz de rotação.</param>
      <returns vsli:raw="The newly created quaternion.">O quatérnio recém-criado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">Cria um novo quatérnio com base no desvio, inclinação e rolagem fornecidos.</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">O ângulo de desvio, em radianos, em torno do eixo Y.</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">O ângulo de inclinação, em radianos, em torno do eixo X.</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">O ângulo de rolagem, em radianos, em torno do eixo Z.</param>
      <returns vsli:raw="The resulting quaternion.">O quatérnio resultante.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">Divide um quatérnio por um segundo quatérnio.</summary>
      <param name="value1" vsli:raw="The dividend.">O dividendo.</param>
      <param name="value2" vsli:raw="The divisor.">O divisor.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">O quatérnio resultante da divisão de <paramref name="value1" /> por <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">Calcula o produto escalar de dois quatérnios.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">Retorna um valor que indica se a instância e outro quatérnio são iguais.</summary>
      <param name="other" vsli:raw="The other quaternion.">O outro quatérnio.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se dois quatérnios forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">Obtém um quatérnio que não representa nenhuma rotação.</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">Um Quaternion cujos valores são <c>(0, 0, 0, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">Retorna o inverso de um quatérnio.</summary>
      <param name="value" vsli:raw="The quaternion.">O quatérnio.</param>
      <returns vsli:raw="The inverted quaternion.">O quatérnio invertido.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">Obtém um valor que indica se a instância atual é o quatérnio de identidade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a instância atual for a identidade Quaternion; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">Calcula o comprimento do quatérnio.</summary>
      <returns vsli:raw="The computed length of the quaternion.">O comprimento calculado do quatérnio.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">Calcula o comprimento ao quadrado do quatérnio.</summary>
      <returns vsli:raw="The length squared of the quaternion.">O comprimento ao quadrado do quatérnio.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">Executa uma interpolação linear entre dois quatérnios com base em um valor que especifica a importância do segundo quatérnio.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">O peso relativo de <paramref name="quaternion2" /> na interpolação.</param>
      <returns vsli:raw="The interpolated quaternion.">O quatérnio interpolado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">Retorna o quatérnio resultante da multiplicação de dois quatérnios juntos.</summary>
      <param name="value1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="value2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The product quaternion.">O quatérnio do produto.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">Retorna o quatérnio resultante da colocação em escala de todos os componentes de um quatérnio especificado por um fator escalar.</summary>
      <param name="value1" vsli:raw="The source quaternion.">O quatérnio de origem.</param>
      <param name="value2" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled quaternion.">O quatérnio dimensionado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">Inverte o sinal de cada componente do quatérnio.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">O quatérnio a ser negado.</param>
      <returns vsli:raw="The negated quaternion.">O quatérnio negado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">Divide cada componente de um <see cref="T:System.Numerics.Quaternion" /> especificado por seu comprimento.</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">O quatérnio a ser normalizado.</param>
      <returns vsli:raw="The normalized quaternion.">O quatérnio normalizado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">Adiciona cada elemento em um quatérnio com seu elemento correspondente em um segundo quatérnio.</summary>
      <param name="value1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="value2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">O quatérnio que contém os valores somados de <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">Divide um quatérnio por um segundo quatérnio.</summary>
      <param name="value1" vsli:raw="The dividend.">O dividendo.</param>
      <param name="value2" vsli:raw="The divisor.">O divisor.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">O quatérnio resultante da divisão de <paramref name="value1" /> por <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">Retorna um valor que indica se dois quatérnios são iguais.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">O primeiro quatérnio a ser comparado.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">O segundo quatérnio a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se dois quatérnios forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">Retorna um valor que indica se dois quatérnios não são iguais.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">O primeiro quatérnio a ser comparado.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">O segundo quatérnio a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">Retorna o quatérnio resultante da multiplicação de dois quatérnios juntos.</summary>
      <param name="value1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="value2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The product quaternion.">O quatérnio do produto.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">Retorna o quatérnio resultante da colocação em escala de todos os componentes de um quatérnio especificado por um fator escalar.</summary>
      <param name="value1" vsli:raw="The source quaternion.">O quatérnio de origem.</param>
      <param name="value2" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled quaternion.">O quatérnio dimensionado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">Subtrai cada elemento em um segundo quatérnio de seu elemento correspondente em um primeiro quatérnio.</summary>
      <param name="value1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="value2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">O quatérnio que contém os valores resultantes da subtração de cada elemento no <paramref name="value2" /> do elemento correspondente no <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">Inverte o sinal de cada componente do quatérnio.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">O quatérnio a ser negado.</param>
      <returns vsli:raw="The negated quaternion.">O quatérnio negado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">Interpola entre dois quatérnios usando interpolação linear esférica.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">O peso relativo do segundo quatérnio na interpolação.</param>
      <returns vsli:raw="The interpolated quaternion.">O quatérnio interpolado.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">Subtrai cada elemento em um segundo quatérnio de seu elemento correspondente em um primeiro quatérnio.</summary>
      <param name="value1" vsli:raw="The first quaternion.">O primeiro quatérnio.</param>
      <param name="value2" vsli:raw="The second quaternion.">O segundo quatérnio.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">O quatérnio que contém os valores resultantes da subtração de cada elemento no <paramref name="value2" /> do elemento correspondente no <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">Retorna uma cadeia de caracteres que representa este quatérnio.</summary>
      <returns vsli:raw="The string representation of this quaternion.">A representação de cadeia de caracteres deste quatérnio.</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">O componente de rotação do quatérnio.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">O valor X do componente de vetor do quatérnio.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">O valor Y do componente de vetor do quatérnio.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">O valor Z do componente de vetor do quatérnio.</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">Fornece uma coleção de métodos de conveniência estática para criar, manipular, combinar e converter vetores genéricos.</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">Retorna um novo vetor cujos elementos são os valores absolutos dos elementos do vetor determinado.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The absolute value vector.">O valor absoluto do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">Retorna um novo vetor cujos valores são a soma de cada par de elementos de dois vetores determinados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit And Not em cada par de elementos correspondentes em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">Reinterpreta os bits de um vetor especificado para os de um vetor de bytes sem sinal.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">Reinterpreta os bits de um vetor especificado para os de um vetor de ponto flutuante de precisão dupla.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">Reinterpreta os bits de um vetor especificado para os de um vetor de inteiros de 16 bits.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">Reinterpreta os bits de um vetor especificado para os de um vetor de inteiros.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">Reinterpreta os bits de um vetor especificado para os de um vetor de inteiros longos.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">Reinterpreta os bits de um vetor especificado para os de um vetor de bytes com sinal.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">Reinterpreta os bits de um vetor especificado para os de um vetor de ponto flutuante de precisão simples.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">Reinterpreta os bits de um vetor especificado para os de um vetor de inteiros de 16 bits sem sinal.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">Reinterpreta os bits de um vetor especificado para os de um vetor de inteiros sem sinal.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">Reinterpreta os bits de um vetor especificado para os de um vetor de inteiros longos sem sinal.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit <see langword="And" /> em cada par de elementos em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit <see langword="Or" /> em cada par de elementos em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">Cria um novo vetor de precisão simples com elementos selecionados entre dois vetores de origem de precisão simples especificados, com base em um vetor de máscara integral.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">O vetor de máscara integral usado para seleção de unidade.</param>
      <param name="left" vsli:raw="The first source vector.">O primeiro vetor de origem.</param>
      <param name="right" vsli:raw="The second source vector.">O segundo vetor de origem.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">O novo vetor com elementos selecionados com base na máscara.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">Cria um novo vetor de precisão dupla com elementos selecionados entre dois vetores de origem de precisão dupla especificados, com base em um vetor de máscara integral.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">O vetor de máscara integral usado para seleção de unidade.</param>
      <param name="left" vsli:raw="The first source vector.">O primeiro vetor de origem.</param>
      <param name="right" vsli:raw="The second source vector.">O segundo vetor de origem.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">O novo vetor com elementos selecionados com base na máscara.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">Cria um novo vetor de um tipo especificado com elementos selecionados entre dois vetores de origem especificados do mesmo tipo, com base em um vetor de máscara integral.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">O vetor de máscara integral usado para seleção de unidade.</param>
      <param name="left" vsli:raw="The first source vector.">O primeiro vetor de origem.</param>
      <param name="right" vsli:raw="The second source vector.">O segundo vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">O novo vetor com elementos selecionados com base na máscara.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.Int64}" /> em uma <see cref="System.Numerics.Vector{System.Double}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.UInt64}" /> em uma <see cref="System.Numerics.Vector{System.Double}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.Single}" /> em uma <see cref="System.Numerics.Vector{System.Int32}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.Double}" /> em uma <see cref="System.Numerics.Vector{System.Int64}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.Int32}" /> em uma <see cref="System.Numerics.Vector{System.Single}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.UInt32}" /> em uma <see cref="System.Numerics.Vector{System.Single}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.Single}" /> em uma <see cref="System.Numerics.Vector{System.UInt32}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">Converte uma <see cref="System.Numerics.Vector{System.Double}" /> em uma <see cref="System.Numerics.Vector{System.UInt64}" />.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The converted vector.">O vetor convertido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">Retorna um novo vetor cujos valores são o resultado da divisão dos elementos do primeiro vetor pelos elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The divided vector.">O vetor dividido.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">Retorna o produto escalar de dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos em dois vetores de precisão dupla especificados são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos em dois vetores integrais especificados são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">Retorna um novo vetor cujos elementos sinalizam se os elementos em dois vetores de inteiro longo especificados são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting long integer vector.">O vetor de inteiro longo resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos em dois vetores de precisão simples especificados são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">Retorna um vetor novo de um tipo especificado cujos elementos sinalizam se os elementos em dois vetores especificados do mesmo tipo são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">Retorna um valor que indica se cada par de elementos nos vetores determinados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se todos os elementos em <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">Retorna um valor que indica se qualquer par único de elementos nos vetores determinados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualquer par de elementos em <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor de ponto flutuante de precisão dupla são maiores que seus elementos correspondentes em um segundo vetor de ponto flutuante de precisão dupla.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor integral são maiores que seus elementos correspondentes em um segundo vetor integral.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">Retorna um novo vetor de inteiro longo cujos elementos sinalizam se os elementos de um vetor de inteiro longo são maiores que seus elementos correspondentes em um segundo vetor de inteiro longo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting long integer vector.">O vetor de inteiro longo resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor de ponto flutuante de precisão simples são maiores que seus elementos correspondentes em um segundo vetor de ponto flutuante de precisão simples.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">Retorna um novo vetor cujos elementos sinalizam se os elementos de um vetor de um tipo especificado são maiores que seus elementos correspondentes em um segundo vetor do mesmo time.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">Retorna um valor que indica se todos os elementos do primeiro vetor são maiores que os elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se todos os elementos de <paramref name="left" /> forem maiores que os elementos correspondentes em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">Retorna um valor que indica se qualquer elemento no primeiro vetor é maior que o elemento correspondente no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualquer elemento em <paramref name="left" /> for maior que o elemento correspondente em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor são maiores ou iguais aos seus elementos correspondentes no segundo vetor de ponto flutuante de precisão dupla.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos em um vetor integral são maiores ou iguais aos seus elementos correspondentes no segundo vetor integral.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">Retorna um novo vetor de inteiro longo cujos elementos sinalizam se os elementos de um vetor de inteiro longo são maiores ou iguais aos seus elementos correspondentes no segundo vetor de inteiro longo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting long integer vector.">O vetor de inteiro longo resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor são maiores ou iguais aos seus elementos correspondentes no segundo vetor de ponto flutuante de precisão simples.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">Retorna um novo vetor cujos elementos sinalizam se os elementos de um vetor de um tipo especificado são maiores ou iguais aos seus elementos correspondentes no segundo vetor do mesmo tipo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">Retorna um valor que indica se todos os elementos do primeiro vetor são maiores ou iguais a todos os elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se todos os elementos em <paramref name="left" /> forem maiores ou iguais aos elementos correspondentes em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">Retorna um valor que indica se qualquer elemento no primeiro vetor é maior ou igual ao elemento correspondente no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualquer elemento em <paramref name="left" /> for maior ou igual ao elemento correspondente em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">Obtém um valor que indica se as operações de vetor estão sujeitas à aceleração de hardware por meio do suporte intrínseco JIT.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se as operações de vetor estiverem sujeitas à aceleração de hardware; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor de ponto flutuante de precisão dupla são menores que seus elementos correspondentes em um segundo vetor de ponto flutuante de precisão dupla.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor integral são menores que seus elementos correspondentes em um segundo vetor integral.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">Retorna um novo vetor de inteiro longo cujos elementos sinalizam se os elementos de um vetor de inteiro longo são menores que seus elementos correspondentes em um segundo vetor de inteiro longo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting long integer vector.">O vetor de inteiro longo resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor de precisão simples são menores que seus elementos correspondentes em um segundo vetor de precisão simples.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">Retorna um novo vetor de um tipo especificado cujos elementos sinalizam se os elementos de um vetor são menores que seus elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">Retorna um valor que indica se todos os elementos do primeiro vetor são menores que seus elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se todos os elementos de <paramref name="left" /> forem menores que os elementos correspondentes em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">Retorna um valor que indica se qualquer elemento no primeiro vetor é menor que o elemento correspondente no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualquer elemento em <paramref name="left" /> for menor que o elemento correspondente em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor de ponto flutuante de precisão dupla são menores ou iguais aos seus elementos correspondentes em um segundo vetor de ponto flutuante de precisão dupla.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor integral são menores ou iguais aos seus elementos correspondentes em um segundo vetor integral.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">Retorna um novo vetor de inteiro longo cujos elementos sinalizam se os elementos de um vetor de inteiro longo são menores ou iguais aos seus elementos correspondentes em um segundo vetor de inteiro longo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting long integer vector.">O vetor de inteiro longo resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">Retorna um novo vetor integral cujos elementos sinalizam se os elementos de um vetor de ponto flutuante de precisão simples são menores ou iguais aos seus elementos correspondentes em um segundo vetor de ponto flutuante de precisão simples.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="The resulting integral vector.">O vetor integral resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">Retorna um novo vetor cujos elementos sinalizam se os elementos de um vetor são menores ou iguais aos seus elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">Retorna um valor que indica se todos os elementos do primeiro vetor são menores ou iguais aos seus elementos correspondentes no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se todos os elementos em <paramref name="left" /> forem menores ou iguais aos elementos correspondentes em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">Retorna um valor que indica se qualquer elemento no primeiro vetor é menor ou igual ao elemento correspondente no segundo vetor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualquer elemento em <paramref name="left" /> for menor ou igual ao elemento correspondente em <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">Retorna um novo vetor cujos elementos são o número máximo de cada par de elementos nos dois vetores determinados.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The maximum vector.">O vetor máximo.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">Retorna um novo vetor cujos elementos são o número mínimo de cada par de elementos nos dois vetores determinados.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The minimum vector.">O vetor mínimo.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">Retorna um novo vetor cujos valores são um valor escalar multiplicado por cada um dos valores de um vetor especificado.</summary>
      <param name="left" vsli:raw="The scalar value.">O valor escalar.</param>
      <param name="right" vsli:raw="The vector.">O vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">Retorna um novo vetor cujos valores são os valores de um vetor especificado, cada um multiplicado por um valor escalar.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.Double}" /> em um <see cref="System.Numerics.Vector{System.Single}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.Single}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.Int16}" /> em um <see cref="System.Numerics.Vector{System.SByte}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.SByte}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.Int32}" /> em um <see cref="System.Numerics.Vector{System.Int16}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.Int16}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.Int64}" /> em um <see cref="System.Numerics.Vector{System.Int32}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.Int32}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.UInt16}" /> em um <see cref="System.Numerics.Vector{System.Byte}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.Byte}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.UInt32}" /> em um <see cref="System.Numerics.Vector{System.UInt16}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.UInt16}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">Restringe duas instâncias <see cref="System.Numerics.Vector{System.UInt64}" /> em um <see cref="System.Numerics.Vector{System.UInt32}" />.</summary>
      <param name="source1">O primeiro vetor de origem, cujos elementos se tornam os elementos de índice inferior do valor retornado.</param>
      <param name="source2">O segundo vetor de origem, cujos elementos se tornam os elementos de índice superior do valor retornado.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Um <see cref="System.Numerics.Vector{System.UInt32}" /> que contém elementos restringidos dos vetores de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">Retorna um novo vetor cujos elementos são a negação do elemento correspondente no vetor especificado.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">Retorna um novo vetor cujos elementos são obtidos retirando o complemento de um dos elementos de um vetor especificado.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">Retorna um novo vetor cujos elementos são as raízes quadradas dos elementos de um vetor especificado.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The square root vector.">O vetor de raiz quadrada.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">Retorna um novo vetor cujos valores são a diferença entre os elementos no segundo vetor e seus elementos correspondentes no primeiro vetor.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The difference vector.">O vetor de diferença.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.Byte}" /> em duas instâncias <see cref="System.Numerics.Vector{System.UInt16}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.Int16}" /> em duas instâncias <see cref="System.Numerics.Vector{System.Int32}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.Int32}" /> em duas instâncias <see cref="System.Numerics.Vector{System.Int64}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.SByte}" /> em duas instâncias <see cref="System.Numerics.Vector{System.Int16}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.Single}" /> em duas instâncias <see cref="System.Numerics.Vector{System.Double}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.UInt16}" /> em duas instâncias <see cref="System.Numerics.Vector{System.UInt32}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">Amplia um <see cref="System.Numerics.Vector{System.UInt32}" /> em duas instâncias <see cref="System.Numerics.Vector{System.UInt64}" />.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">O vetor de origem cujos elementos são ampliados para as saídas.</param>
      <param name="dest1">O primeiro vetor de saída, cujos elementos conterão os elementos ampliados de índices inferiores no vetor de origem.</param>
      <param name="dest2">O segundo vetor de saída, cujos elementos conterão os elementos ampliados de índices superiores no vetor de origem.</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit Or (<see langword="XOr" />) exclusiva em cada par de elementos em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">O vetor resultante.</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">Representa um vetor simples de um tipo numérico especificado que é adequado para a otimização de nível baixo de algoritmos paralelos.</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">O tipo de vetor. <c>T</c> pode ser qualquer tipo numérico primitivo.</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">Cria um vetor cujos componentes são de um tipo especificado.</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">O tipo numérico que define o tipo dos componentes do vetor.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">Cria um vetor de uma matriz especificada.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Uma matriz numérica.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">Cria um vetor de uma matriz especificada, começando em uma posição de índice especificada.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Uma matriz numérica.</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">A posição de índice inicial da qual o vetor será criado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> é menor que zero.  

ou - 
O comprimento de <paramref name="values" /> menos <paramref name="index" /> é menor que <see cref="P:System.Numerics.Vector`1.Count" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">Constrói um vetor com base no <see cref="T:System.ReadOnlySpan`1" /> especificado.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Os valores a serem adicionados ao vetor, como um intervalo somente leitura de objetos do tipo T. O intervalo precisa conter, pelo menos, <see cref="P:System.Numerics.Vector`1.Count" /> elementos.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">Constrói um vetor com base no intervalo de bytes somente leitura especificado.</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Um intervalo somente leitura de bytes que contém os valores a serem adicionados ao vetor. O intervalo precisa conter, pelo menos, <see cref="P:System.Numerics.Vector`1.Count" /> elementos.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Constrói um vetor com base no <see cref="T:System.Span`1" /> especificado.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Os valores a serem adicionados ao vetor, como um intervalo de objetos do tipo T. O intervalo precisa conter, pelo menos, <see cref="P:System.Numerics.Vector`1.Count" /> elementos.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">Copia a instância de vetor para uma matriz de destino especificada.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">A matriz a receber uma cópia dos valores de vetor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">O número de elementos no vector atual é maior que o número de elementos disponíveis na matriz <paramref name="destination" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">Copia a instância de vetor para uma matriz de destino especificada, começando em uma posição de índice especificada.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">A matriz a receber uma cópia dos valores de vetor.</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">O índice inicial no <paramref name="destination" /> em que a operação de cópia será iniciada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">O número de elementos na instância atual é maior do que o número de elementos disponível de <paramref name="startIndex" /> até o final da matriz <paramref name="destination" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" /> é menor que zero ou maior que o último índice em <paramref name="destination" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">Copia o vetor para o intervalo especificado. .</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">O intervalo de destino para o qual os valores são copiados. O intervalo de destino precisa ter, pelo menos, o tamanho <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">O número de elementos no vetor de origem é maior que aqueles disponíveis no intervalo de destino.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Copia o vetor para o <see cref="T:System.Span`1" /> especificado.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">O intervalo de destino para o qual os valores são copiados. O intervalo de destino precisa ter, pelo menos, o tamanho <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">O número de elementos no vetor de origem é maior que aqueles disponíveis no intervalo de destino.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">Retorna o número de elementos armazenados no vetor.</summary>
      <returns vsli:raw="The number of elements stored in the vector.">O número de elementos armazenados no vetor.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">Não há suporte para acesso ao getter de propriedade por meio da reflexão.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">Retorna um valor que indica se essa instância é igual a um vetor especificado.</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">O vetor a ser comparado com essa instância.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="other" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Retorna um valor que indica se essa instância é igual a um objeto especificado.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">O objeto a ser comparado com essa instância.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. O método retornará <see langword="false" /> se <paramref name="obj" /> for nulo ou se <paramref name="obj" /> for um vetor de um tipo diferente da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">Obtém o elemento em um índice especificado.</summary>
      <param name="index" vsli:raw="The index of the element to return.">O índice do elemento a ser retornado.</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">O elemento no índice <paramref name="index" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior ou igual a <see cref="P:System.Numerics.Vector`1.Count" />.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">Retorna um vetor que contém todos os índices.</summary>
      <returns vsli:raw="A vector containing all ones.">Um vetor que contém todos os.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit <see langword="And" /> em cada um dos elementos em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da operação bit a bit <see langword="And" /> de <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit <see langword="Or" /> em cada um dos elementos em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da operação bit a bit <see langword="Or" /> dos elementos em <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da divisão de <paramref name="left" /> por <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">Retorna um valor que indica se cada par de elementos em dois vetores especificados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">Retorna um novo vetor executando uma operação bit a bit <see langword="XOr" /> em cada um dos elementos em dois vetores.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da operação bit a bit <see langword="XOr" /> dos elementos em <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.Byte" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.Int16" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.Int32" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.Int64" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.SByte" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.Single" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.UInt16" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.UInt32" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Reinterpreta os bits do vetor especificado em um vetor do tipo <see cref="T:System.UInt64" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">O vetor a se reinterpretado.</param>
      <returns vsli:raw="The reinterpreted vector.">O vetor reinterpretado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">Retorna um valor que indica se qualquer par único de elementos nos vetores especificados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">
        <see langword="true" /> se quaisquer pares de elemento na esquerda e na direita forem iguais. <see langword="false" /> se nenhum par de elemento for igual.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">Multiplica um vetor por um valor escalar especificado.</summary>
      <param name="factor" vsli:raw="The scalar value.">O valor escalar.</param>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">Multiplica um vetor por um valor escalar especificado.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <param name="factor" vsli:raw="A scalar value.">Um valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">Retorna um novo vetor cujos elementos são obtidos retirando o complemento de um dos elementos de um vetor especificado.</summary>
      <param name="value" vsli:raw="The source vector.">O vetor de origem.</param>
      <returns vsli:raw="The one's complement vector.">O vetor complementar do um.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">O vetor resultante da subtração de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">Nega um vetor determinado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">Retorna a representação de cadeia de caracteres desse vetor usando a formatação padrão.</summary>
      <returns vsli:raw="The string representation of this vector.">A representação de cadeia de caracteres desse vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">Retorna a representação de cadeia de caracteres desse vetor usando a cadeia de caracteres de formato especificada para formatar elementos individuais.</summary>
      <param name="format" vsli:raw="The format of individual elements.">Um  ou  que define o formato de elementos individuais.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Retorna a representação de cadeia de caracteres desse vetor usando a cadeia de caracteres de formato especificada para formatar elementos individuais e o provedor de formato especificado para definir a formatação específica da cultura.</summary>
      <param name="format" vsli:raw="The format of individual elements.">Um  ou  que define o formato de elementos individuais.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Um provedor de formato que fornece informações de formatação específicas da cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Tenta copiar o vetor para o <see cref="T:System.Span`1" /> especificado.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">O intervalo de destino para o qual os valores são copiados. O intervalo de destino precisa ter, pelo menos, o tamanho <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">
        <see langword="true" /> se o vetor de origem foi copiado com êxito para <paramref name="destination" />. <see langword="false" /> se <paramref name="destination" /> não é grande o suficiente para manter o vetor de origem.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">Tenta copiar o vetor para o intervalo de bytes especificado.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">O intervalo de destino para o qual os valores são copiados. O intervalo de destino precisa ter, pelo menos, o tamanho <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">
        <see langword="true" /> se o vetor de origem foi copiado com êxito para <paramref name="destination" />. <see langword="false" /> se <paramref name="destination" /> não é grande o suficiente para manter o vetor de origem.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">Retorna um vetor que contém todos os zeros.</summary>
      <returns vsli:raw="A vector containing all zeroes.">Um vetor que contém todos os zeros.</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">Representa um vetor com dois valores de ponto flutuante de precisão simples.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">Cria um novo objeto <see cref="T:System.Numerics.Vector2" /> cujos dois elementos têm o mesmo valor.</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">O valor a ser atribuído aos dois elementos.</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Cria um vetor cujos elementos têm os valores especificados.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector2.X" />.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector2.Y" />.</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Retorna um vetor cujos elementos são os valores absolutos de cada um dos elementos do vetor especificado.</summary>
      <param name="value" vsli:raw="A vector.">Um vetor.</param>
      <returns vsli:raw="The absolute value vector.">O valor absoluto do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Restringe um vetor entre um valor mínimo e um valor máximo.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">O vetor a ser restringido.</param>
      <param name="min" vsli:raw="The minimum value.">O valor mínimo.</param>
      <param name="max" vsli:raw="The maximum value.">O valor máximo.</param>
      <returns vsli:raw="The restricted vector.">O vetor restringido.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Copia os elementos do vetor para uma matriz especificada.</summary>
      <param name="array" vsli:raw="The destination array.">A matriz de destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">O número de elementos na instância atual é maior que na matriz.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> é multidimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Copia os elementos do vetor para uma matriz especificada, começando em uma posição de índice especificada.</summary>
      <param name="array" vsli:raw="The destination array.">A matriz de destino.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">O índice no qual copiar o primeiro elemento do vetor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">O número de elementos na instância atual é maior que na matriz.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior que ou igual ao comprimento da matriz.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> é multidimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Calcula a distância euclidiana entre os dois pontos determinados.</summary>
      <param name="value1" vsli:raw="The first point.">O primeiro ponto.</param>
      <param name="value2" vsli:raw="The second point.">O segundo ponto.</param>
      <returns vsli:raw="The distance.">A distância.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Retorna a distância euclidiana ao quadrado entre dois pontos especificados.</summary>
      <param name="value1" vsli:raw="The first point.">O primeiro ponto.</param>
      <param name="value2" vsli:raw="The second point.">O segundo ponto.</param>
      <returns vsli:raw="The distance squared.">A distância ao quadrado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector resulting from the division.">O vetor resultante da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide o vetor especificado por um valor escalar especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="divisor" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The vector that results from the division.">O vetor resultante da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">Retorna o produto escalar de dois vetores.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Retorna um valor que indica se essa instância e outro vetor são iguais.</summary>
      <param name="other" vsli:raw="The other vector.">O outro vetor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois vetores forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">Retorna o comprimento do vetor.</summary>
      <returns vsli:raw="The vector's length.">O comprimento do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Retorna o comprimento do vetor ao quadrado.</summary>
      <returns vsli:raw="The vector's length squared.">O comprimento do vetor ao quadrado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Executa uma interpolação linear entre dois vetores com base na importância determinada.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Um valor entre 0 e 1 que indica o peso de <paramref name="value2" />.</param>
      <returns vsli:raw="The interpolated vector.">O vetor interpolado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Retorna um vetor cujos elementos são o número máximo de cada um dos pares de elementos em dois vetores especificados.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The maximized vector.">O vetor maximizado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Retorna um vetor cujos elementos são o número mínimo de cada um dos pares de elementos em dois vetores especificados.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The minimized vector.">O vetor minimizado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Multiplica um vetor por um escalar especificado.</summary>
      <param name="left" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Multiplica um valor escalar por um vetor especificado.</summary>
      <param name="left" vsli:raw="The scaled value.">O valor em escala.</param>
      <param name="right" vsli:raw="The vector.">O vetor.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">Nega um vetor especificado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Retorna um vetor com a mesma direção que o vetor especificado, mas com um comprimento de um.</summary>
      <param name="value" vsli:raw="The vector to normalize.">O vetor a ser normalizado.</param>
      <returns vsli:raw="The normalized vector.">O vetor normalizado.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">Obtém um vetor cujos dois elementos são iguais a um.</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">Um vetor cujos dois elementos são iguais a um (ou seja, retorna o vetor <c>(1, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da divisão de <paramref name="left" /> por <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide o vetor especificado por um valor escalar especificado.</summary>
      <param name="value1" vsli:raw="The vector.">O vetor.</param>
      <param name="value2" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The result of the division.">O resultado da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Retorna um valor que indica se cada par de elementos em dois vetores especificados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Retorna um valor que indica se dois vetores especificados não são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Multiplica o vetor especificado pelo valor escalar especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Multiplica o valor escalar pelo vetor especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">O vetor resultante da subtração de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">Nega o vetor especificado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">Retorna a reflexão de um vetor de uma superfície que tem o normal especificado.</summary>
      <param name="vector" vsli:raw="The source vector.">O vetor de origem.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">O normal da superfície que está sendo refletida.</param>
      <returns vsli:raw="The reflected vector.">O vetor refletido.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Retorna um vetor cujos elementos são a raiz quadrada de cada um dos elementos de um vetor especificado.</summary>
      <param name="value" vsli:raw="A vector.">Um vetor.</param>
      <returns vsli:raw="The square root vector.">O vetor de raiz quadrada.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The difference vector.">O vetor de diferença.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Retorna a representação de cadeia de caracteres da instância atual usando a formatação padrão.</summary>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Retorna a representação de cadeia de caracteres da instância atual usando a cadeia de caracteres de formato especificada para formatar elementos individuais.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Uma cadeia de caracteres de formato numérico personalizado ou padrão que define o formato de elementos individuais.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Retorna a representação de cadeia de caracteres da instância atual usando a cadeia de caracteres de formato especificada para formatar elementos individuais e o provedor de formato especificado para definir a formatação específica da cultura.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Uma cadeia de caracteres de formato numérico personalizado ou padrão que define o formato de elementos individuais.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Um provedor de formato que fornece informações de formatação específicas da cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">Transforma um vetor por uma matriz 3x2 especificada.</summary>
      <param name="position" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">Transforma um vetor por uma matriz 4x4 especificada.</summary>
      <param name="position" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">Transforma um vetor pelo valor de rotação Quaternion especificado.</summary>
      <param name="value" vsli:raw="The vector to rotate.">O vetor a ser girado.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">A rotação a se aplicar.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">Transforma o normal de um vetor pela matriz 3x2 especificada.</summary>
      <param name="normal" vsli:raw="The source vector.">O vetor de origem.</param>
      <param name="matrix" vsli:raw="The matrix.">A matriz.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">Transforma o normal de um vetor pela matriz 4x4 especificada.</summary>
      <param name="normal" vsli:raw="The source vector.">O vetor de origem.</param>
      <param name="matrix" vsli:raw="The matrix.">A matriz.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">Obtém o vetor (1,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">O vetor <c>(1, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">Obtém o vetor (0,1).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">O vetor <c>(0, 1)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">O componente X do vetor.</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">O componente Y do vetor.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">Retorna um vetor cujos dois elementos são iguais a zero.</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">Um vetor cujos dois elementos são iguais a zero (ou seja, retorna o vetor <c>(0, 0)</c>.</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">Representa um vetor com três valores de ponto flutuante de precisão simples.</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">Cria um novo objeto <see cref="T:System.Numerics.Vector3" /> do objeto <see cref="T:System.Numerics.Vector2" /> especificado e o valor especificado.</summary>
      <param name="value" vsli:raw="The vector with two elements.">O vetor com dois elementos.</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">O valor adicional a ser atribuído ao campo <see cref="F:System.Numerics.Vector3.Z" />.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">Cria um novo objeto <see cref="T:System.Numerics.Vector3" /> cujos três elementos têm o mesmo valor.</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">O valor a ser atribuído a todos os três elementos.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Cria um vetor cujos elementos têm os valores especificados.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector3.X" />.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector3.Y" />.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector3.Z" />.</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Retorna um vetor cujos elementos são os valores absolutos de cada um dos elementos do vetor especificado.</summary>
      <param name="value" vsli:raw="A vector.">Um vetor.</param>
      <returns vsli:raw="The absolute value vector.">O valor absoluto do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Restringe um vetor entre um valor mínimo e um valor máximo.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">O vetor a ser restringido.</param>
      <param name="min" vsli:raw="The minimum value.">O valor mínimo.</param>
      <param name="max" vsli:raw="The maximum value.">O valor máximo.</param>
      <returns vsli:raw="The restricted vector.">O vetor restringido.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Copia os elementos do vetor para uma matriz especificada.</summary>
      <param name="array" vsli:raw="The destination array.">A matriz de destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">O número de elementos na instância atual é maior que na matriz.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> é multidimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Copia os elementos do vetor para uma matriz especificada, começando em uma posição de índice especificada.</summary>
      <param name="array" vsli:raw="The destination array.">A matriz de destino.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">O índice no qual copiar o primeiro elemento do vetor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">O número de elementos na instância atual é maior que na matriz.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior que ou igual ao comprimento da matriz.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> é multidimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">Calcula o produto cruzado de dois vetores.</summary>
      <param name="vector1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="vector2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The cross product.">O produto cruzado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Calcula a distância euclidiana entre os dois pontos determinados.</summary>
      <param name="value1" vsli:raw="The first point.">O primeiro ponto.</param>
      <param name="value2" vsli:raw="The second point.">O segundo ponto.</param>
      <returns vsli:raw="The distance.">A distância.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Retorna a distância euclidiana ao quadrado entre dois pontos especificados.</summary>
      <param name="value1" vsli:raw="The first point.">O primeiro ponto.</param>
      <param name="value2" vsli:raw="The second point.">O segundo ponto.</param>
      <returns vsli:raw="The distance squared.">A distância ao quadrado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector resulting from the division.">O vetor resultante da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide o vetor especificado por um valor escalar especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="divisor" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The vector that results from the division.">O vetor resultante da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">Retorna o produto escalar de dois vetores.</summary>
      <param name="vector1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="vector2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Retorna um valor que indica se essa instância e outro vetor são iguais.</summary>
      <param name="other" vsli:raw="The other vector.">O outro vetor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois vetores forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">Retorna o comprimento do objeto de vetor.</summary>
      <returns vsli:raw="The vector's length.">O comprimento do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Retorna o comprimento do vetor ao quadrado.</summary>
      <returns vsli:raw="The vector's length squared.">O comprimento do vetor ao quadrado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Executa uma interpolação linear entre dois vetores com base na importância determinada.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Um valor entre 0 e 1 que indica o peso de <paramref name="value2" />.</param>
      <returns vsli:raw="The interpolated vector.">O vetor interpolado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Retorna um vetor cujos elementos são o número máximo de cada um dos pares de elementos em dois vetores especificados.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The maximized vector.">O vetor maximizado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Retorna um vetor cujos elementos são o número mínimo de cada um dos pares de elementos em dois vetores especificados.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The minimized vector.">O vetor minimizado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Multiplica um vetor por um escalar especificado.</summary>
      <param name="left" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Multiplica um valor escalar por um vetor especificado.</summary>
      <param name="left" vsli:raw="The scaled value.">O valor em escala.</param>
      <param name="right" vsli:raw="The vector.">O vetor.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">Nega um vetor especificado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Retorna um vetor com a mesma direção que o vetor especificado, mas com um comprimento de um.</summary>
      <param name="value" vsli:raw="The vector to normalize.">O vetor a ser normalizado.</param>
      <returns vsli:raw="The normalized vector.">O vetor normalizado.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">Obtém um vetor cujos três elementos são iguais a um.</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">Um vetor cujos três elementos são iguais a um (ou seja, retorna o vetor <c>(1, 1, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da divisão de <paramref name="left" /> por <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide o vetor especificado por um valor escalar especificado.</summary>
      <param name="value1" vsli:raw="The vector.">O vetor.</param>
      <param name="value2" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The result of the division.">O resultado da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Retorna um valor que indica se cada par de elementos em dois vetores especificados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Retorna um valor que indica se dois vetores especificados não são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Multiplica o vetor especificado pelo valor escalar especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Multiplica o valor escalar pelo vetor especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">O vetor resultante da subtração de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">Nega o vetor especificado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">Retorna a reflexão de um vetor de uma superfície que tem o normal especificado.</summary>
      <param name="vector" vsli:raw="The source vector.">O vetor de origem.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">O normal da superfície que está sendo refletida.</param>
      <returns vsli:raw="The reflected vector.">O vetor refletido.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Retorna um vetor cujos elementos são a raiz quadrada de cada um dos elementos de um vetor especificado.</summary>
      <param name="value" vsli:raw="A vector.">Um vetor.</param>
      <returns vsli:raw="The square root vector.">O vetor de raiz quadrada.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The difference vector.">O vetor de diferença.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Retorna a representação de cadeia de caracteres da instância atual usando a formatação padrão.</summary>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Retorna a representação de cadeia de caracteres da instância atual usando a cadeia de caracteres de formato especificada para formatar elementos individuais.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Uma cadeia de caracteres de formato numérico personalizado ou padrão que define o formato de elementos individuais.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Retorna a representação de cadeia de caracteres da instância atual usando a cadeia de caracteres de formato especificada para formatar elementos individuais e o provedor de formato especificado para definir a formatação específica da cultura.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Uma cadeia de caracteres de formato numérico personalizado ou padrão que define o formato de elementos individuais.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Um provedor de formato que fornece informações de formatação específicas da cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">Transforma um vetor por uma matriz 4x4 especificada.</summary>
      <param name="position" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">Transforma um vetor pelo valor de rotação Quaternion especificado.</summary>
      <param name="value" vsli:raw="The vector to rotate.">O vetor a ser girado.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">A rotação a se aplicar.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">Transforma o normal de um vetor pela matriz 4x4 especificada.</summary>
      <param name="normal" vsli:raw="The source vector.">O vetor de origem.</param>
      <param name="matrix" vsli:raw="The matrix.">A matriz.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">Obtém o vetor (1,0,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">O vetor <c>(1, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">Obtém o vetor (0,1,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">O vetor <c>(0, 1, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">Obtém o vetor (0,0,1).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">O vetor <c>(0, 0, 1)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">O componente X do vetor.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">O componente Y do vetor.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">O componente Z do vetor.</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">Obtém um vetor cujos três elementos são iguais a zero.</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">Um vetor cujos três elementos são iguais a zero (ou seja, retorna o vetor <c>(0, 0, 0)</c>.</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">Representa um vetor com quatro valores de ponto flutuante de precisão simples.</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">Cria um novo objeto <see cref="T:System.Numerics.Vector4" /> do objeto <see cref="T:System.Numerics.Vector2" /> especificado e os componentes Z e W.</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">O vetor a ser usado para os componentes X e Y.</param>
      <param name="z" vsli:raw="The Z component.">O componente Z.</param>
      <param name="w" vsli:raw="The W component.">O componente W.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">Constrói um novo objeto <see cref="T:System.Numerics.Vector4" /> do objeto <see cref="T:System.Numerics.Vector3" /> especificado e um componente W.</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">O vetor a ser usado para os componentes X, Y e Z.</param>
      <param name="w" vsli:raw="The W component.">O componente W.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">Cria um novo objeto <see cref="T:System.Numerics.Vector4" /> cujos quatro elementos têm o mesmo valor.</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">O valor a ser atribuído a todos os quatro elementos.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Cria um vetor cujos elementos têm os valores especificados.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector4.X" />.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector4.Y" />.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector4.Z" />.</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">O valor a ser atribuído ao campo <see cref="F:System.Numerics.Vector4.W" />.</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Retorna um vetor cujos elementos são os valores absolutos de cada um dos elementos do vetor especificado.</summary>
      <param name="value" vsli:raw="A vector.">Um vetor.</param>
      <returns vsli:raw="The absolute value vector.">O valor absoluto do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Restringe um vetor entre um valor mínimo e um valor máximo.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">O vetor a ser restringido.</param>
      <param name="min" vsli:raw="The minimum value.">O valor mínimo.</param>
      <param name="max" vsli:raw="The maximum value.">O valor máximo.</param>
      <returns vsli:raw="The restricted vector.">O vetor restringido.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Copia os elementos do vetor para uma matriz especificada.</summary>
      <param name="array" vsli:raw="The destination array.">A matriz de destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">O número de elementos na instância atual é maior que na matriz.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> é multidimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Copia os elementos do vetor para uma matriz especificada, começando em uma posição de índice especificada.</summary>
      <param name="array" vsli:raw="The destination array.">A matriz de destino.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">O índice no qual copiar o primeiro elemento do vetor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">O número de elementos na instância atual é maior que na matriz.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior que ou igual ao comprimento da matriz.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> é multidimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Calcula a distância euclidiana entre os dois pontos determinados.</summary>
      <param name="value1" vsli:raw="The first point.">O primeiro ponto.</param>
      <param name="value2" vsli:raw="The second point.">O segundo ponto.</param>
      <returns vsli:raw="The distance.">A distância.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Retorna a distância euclidiana ao quadrado entre dois pontos especificados.</summary>
      <param name="value1" vsli:raw="The first point.">O primeiro ponto.</param>
      <param name="value2" vsli:raw="The second point.">O segundo ponto.</param>
      <returns vsli:raw="The distance squared.">A distância ao quadrado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector resulting from the division.">O vetor resultante da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide o vetor especificado por um valor escalar especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="divisor" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The vector that results from the division.">O vetor resultante da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">Retorna o produto escalar de dois vetores.</summary>
      <param name="vector1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="vector2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The dot product.">O produto escalar.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Retorna um valor que indica se essa instância e outro vetor são iguais.</summary>
      <param name="other" vsli:raw="The other vector.">O outro vetor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois vetores forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Retorna um valor que indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">O objeto a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="The hash code.">O código hash.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">Retorna o comprimento do objeto de vetor.</summary>
      <returns vsli:raw="The vector's length.">O comprimento do vetor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Retorna o comprimento do vetor ao quadrado.</summary>
      <returns vsli:raw="The vector's length squared.">O comprimento do vetor ao quadrado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Executa uma interpolação linear entre dois vetores com base na importância determinada.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Um valor entre 0 e 1 que indica o peso de <paramref name="value2" />.</param>
      <returns vsli:raw="The interpolated vector.">O vetor interpolado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Retorna um vetor cujos elementos são o número máximo de cada um dos pares de elementos em dois vetores especificados.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The maximized vector.">O vetor maximizado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Retorna um vetor cujos elementos são o número mínimo de cada um dos pares de elementos em dois vetores especificados.</summary>
      <param name="value1" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="value2" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The minimized vector.">O vetor minimizado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Multiplica um vetor por um escalar especificado.</summary>
      <param name="left" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Multiplica um valor escalar por um vetor especificado.</summary>
      <param name="left" vsli:raw="The scaled value.">O valor em escala.</param>
      <param name="right" vsli:raw="The vector.">O vetor.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">Nega um vetor especificado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Retorna um vetor com a mesma direção que o vetor especificado, mas com um comprimento de um.</summary>
      <param name="vector" vsli:raw="The vector to normalize.">O vetor a ser normalizado.</param>
      <returns vsli:raw="The normalized vector.">O vetor normalizado.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">Obtém um vetor cujos quatro elementos são iguais a um.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">Retorna <see cref="T:System.Numerics.Vector4" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">Soma dois vetores.</summary>
      <param name="left" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="right" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The summed vector.">O vetor somado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">Divide o primeiro vetor pelo segundo.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">O vetor resultante da divisão de <paramref name="left" /> por <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide o vetor especificado por um valor escalar especificado.</summary>
      <param name="value1" vsli:raw="The vector.">O vetor.</param>
      <param name="value2" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The result of the division.">O resultado da divisão.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Retorna um valor que indica se cada par de elementos em dois vetores especificados é igual.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Retorna um valor que indica se dois vetores especificados não são iguais.</summary>
      <param name="left" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="right" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Retorna um novo vetor cujos valores são o produto de cada par de elementos em dois vetores especificados.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The element-wise product vector.">O vetor de produto elemento a elemento.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Multiplica o vetor especificado pelo valor escalar especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Multiplica o valor escalar pelo vetor especificado.</summary>
      <param name="left" vsli:raw="The vector.">O vetor.</param>
      <param name="right" vsli:raw="The scalar value.">O valor escalar.</param>
      <returns vsli:raw="The scaled vector.">O vetor em escala.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">O vetor resultante da subtração de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">Nega o vetor especificado.</summary>
      <param name="value" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="The negated vector.">O vetor negado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Retorna um vetor cujos elementos são a raiz quadrada de cada um dos elementos de um vetor especificado.</summary>
      <param name="value" vsli:raw="A vector.">Um vetor.</param>
      <returns vsli:raw="The square root vector.">O vetor de raiz quadrada.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrai o segundo vetor da primeiro.</summary>
      <param name="left" vsli:raw="The first vector.">O primeiro vetor.</param>
      <param name="right" vsli:raw="The second vector.">O segundo vetor.</param>
      <returns vsli:raw="The difference vector.">O vetor de diferença.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Retorna a representação de cadeia de caracteres da instância atual usando a formatação padrão.</summary>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Retorna a representação de cadeia de caracteres da instância atual usando a cadeia de caracteres de formato especificada para formatar elementos individuais.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Uma cadeia de caracteres de formato numérico personalizado ou padrão que define o formato de elementos individuais.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Retorna a representação de cadeia de caracteres da instância atual usando a cadeia de caracteres de formato especificada para formatar elementos individuais e o provedor de formato especificado para definir a formatação específica da cultura.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Uma cadeia de caracteres de formato numérico personalizado ou padrão que define o formato de elementos individuais.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Um provedor de formato que fornece informações de formatação específicas da cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">A representação de cadeia de caracteres da instância atual.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">Transforma um vetor bidimensional pela matriz 4x4 especificada.</summary>
      <param name="position" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">Transforma um vetor bidimensional pelo valor de rotação Quaternion especificado.</summary>
      <param name="value" vsli:raw="The vector to rotate.">O vetor a ser girado.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">A rotação a se aplicar.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">Transforma um vetor tridimensional pela matriz 4x4 especificada.</summary>
      <param name="position" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">Transforma um vetor tridimensional pelo valor de rotação Quaternion especificado.</summary>
      <param name="value" vsli:raw="The vector to rotate.">O vetor a ser girado.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">A rotação a se aplicar.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">Transforma um vetor quadridimensional pela matriz 4x4 especificada.</summary>
      <param name="vector" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">Transforma um vetor quadridimensional pelo valor de rotação Quaternion especificado.</summary>
      <param name="value" vsli:raw="The vector to rotate.">O vetor a ser girado.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">A rotação a se aplicar.</param>
      <returns vsli:raw="The transformed vector.">O vetor transformado.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">Obtém o vetor (0,0,0,1).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">O vetor <c>(0, 0, 0, 1)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">Obtém o vetor (1,0,0,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">O vetor <c>(1, 0, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">Obtém o vetor (0,1,0,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">O vetor <c>(0, 1, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">Obtém o vetor (0,0,1,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">O vetor <c>(0, 0, 1, 0)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">O componente W do vetor.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">O componente X do vetor.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">O componente Y do vetor.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">O componente Z do vetor.</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">Obtém um vetor cujos quatro elementos são iguais a zero.</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">Um vetor cujos quatro elementos são iguais a zero (ou seja, retorna o vetor <c>(0, 0, 0, 0)</c>.</returns>
    </member>
  </members>
</doc>