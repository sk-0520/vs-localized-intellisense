<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary vsli:raw="Specifies date-time format options.">Especifica as opções de formato de data e hora.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> usando a cadeia de caracteres de formato.</summary>
      <param name="formatString" vsli:raw="The format string.">A cadeia de caracteres de formato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string and format provider.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> usando a cadeia de caracteres de formato e o provedor de formato.</summary>
      <param name="formatString" vsli:raw="The format sting.">A cadeia de caracteres de formato.</param>
      <param name="formatProvider" vsli:raw="The format provider.">O provedor de formato.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary vsli:raw="Gets or sets the formatting options that customize string parsing for some date and time parsing methods.">Obtém ou define as opções de formatação que personalizam a análise para de cadeia de caracteres de alguns métodos de data e hora.</summary>
      <returns vsli:raw="The formatting options that customize string parsing for some date and time parsing methods.">As opções de formatação que personalizam a análise de cadeia de caracteres para alguns métodos de análise de data e hora.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary vsli:raw="Gets an object that controls formatting.">Obtém um objeto que controla a formatação.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary vsli:raw="Gets the format strings to control the formatting produced when a date or time is represented as a string.">Obtém as cadeias de caracteres de formato para controlar que a formatação produzida quando uma data ou hora é representada como uma cadeia de caracteres.</summary>
      <returns vsli:raw="The format strings to control the formatting produced when a date or time is represented as a string.">As cadeias de caracteres de formato para controlar a formatação produzida quando uma data ou hora é representada como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary vsli:raw="Specifies how often to emit type information.">Especifica a frequência de emissão das informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary vsli:raw="Always to emit type information.">Sempre para emitir informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary vsli:raw="As needed emit type information.">Conforme necessário para emitir informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary vsli:raw="Never to emit type information.">Nunca para emitir informações de tipo.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary vsli:raw="Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.">Serializa objetos para o objeto JSON (JavaScript Object Notation) e desserializa os dados JSON em objetos. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto do tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">O tipo das instâncias que é serializado ou desserializado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto do tipo especifico, com uma coleção de tipos conhecidos que podem existir no grafo do objeto.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and serializer settings.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto do tipo e das configurações do serializador especificadas.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="settings" vsli:raw="The serializer settings for the JSON serializer.">As configurações de serializador para o serializador JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro, com uma coleção de tipos conhecidos que pode estar presente no grafo do objeto.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize. The default is &quot;root&quot;.">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar. O padrão é "root".</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro do tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, with a collection of known types that may be present in the object graph.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro de tipo <see cref="T:System.Xml.XmlDictionaryString" />, com uma coleção de tipos conhecidos que pode estar presente no grafo do objeto.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary vsli:raw="Gets the format of the date and time type items in object graph.">Obtém o formato dos itens do tipo data e hora no grafo do objeto.</summary>
      <returns vsli:raw="The format of the date and time type items in object graph.">O formato dos itens do tipo data e hora no grafo do objeto.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Obtém ou define as configurações do serializador JSON do contrato de dados para emitir informações de tipo.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">As configurações do serializador JSON do contrato de dados para emitir informações de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether unknown data is ignored on deserialization and whether the &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt; interface is ignored on serialization.">Obtém um valor que especifica se os dados desconhecidos serão ignorados na desserialização e se a interface <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> é ignorada na serialização.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore unknown data and &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para ignorar dados desconhecidos e <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; caso contrário,. <see langword="false" /></returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that represents an object the serializer can deserialize from.">Obtém um valor que especifica se o <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado sobre um elemento XML que representa um objeto do qual o serializador pode desserializar.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream mapped from JSON.">O <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML mapeado para JSON.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor estiver posicionado corretamente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina se o <see cref="T:System.Xml.XmlReader" /> está posicionado em um objeto que pode ser desserializado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor estiver posicionado corretamente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt;.">Obtém uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; constructor.">Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os tipos esperados passados como tipos conhecidos para o construtor <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.">Obtém o número máximo de itens em um grafo de objeto que o serializador serializa ou desserializa em uma chamada de leitura ou gravação.</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize.">O número máximo de itens a serem serializados ou desserializados.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">O número de itens excede o valor máximo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.">Lê um fluxo de documento no formato JSON (JavaScript Object Notation) e retorna o objeto desserializado.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to be read.">O <see cref="T:System.IO.Stream" /> a ser lido.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Lê o documento XML mapeado do JSON (JavaScript Object Notation) com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Lê o documento XML mapeado do JSON com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado. Ele também permite que você especifique se o serializador deve verificar se ele está posicionado em um elemento apropriado antes de tentar desserializar.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace esperados, caso contrário, <see langword="false" /> para ignorar a verificação. O padrão é <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lê o documento XML mapeado do JSON (JavaScript Object Notation) com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads an XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Lê um documento XML mapeado do JSON com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado. Ele também permite que você especifique se o serializador deve verificar se ele está posicionado em um elemento apropriado antes de tentar desserializar.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;, which skips the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace esperados, caso contrário, <see langword="false" />, que ignora a verificação. O padrão é <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para serializar tipos somente leitura; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets a value that specifies whether to use a simple dictionary format.">Obtém um valor que especifica se um formato de dicionário simples deve ser usado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para usar um formato de dicionário simples; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Grava o elemento XML de fechamento em um documento XML, usando um <see cref="T:System.Xml.XmlDictionaryWriter" />, que pode ser mapeado para o JSON (JavaScript Object Notation).</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document to map to JSON.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML para mapear para o JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Grava o elemento XML de fechamento em um documento XML, usando um <see cref="T:System.Xml.XmlWriter" />, que pode ser mapeado para o JSON (JavaScript Object Notation).</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document mapped to JSON.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML mapeado para JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.">Serializa um objeto especificado em dados JSON (JavaScript Object Notation) e grava o JSON resultante em um fluxo.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that is written to.">O <see cref="T:System.IO.Stream" /> para gravação.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">O objeto que contém os dados a serem gravados no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Serializa um objeto para XML que pode ser mapeado para o JSON (JavaScript Object Notation). Grava todos os dados de objeto, incluindo o elemento XML inicial, o conteúdo e o elemento de fechamento com um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream to map to JSON.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML ou fluxo para mapear para o JSON.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">O objeto que contém os dados a serem gravados.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializa um objeto para XML que pode ser mapeado para o JSON (JavaScript Object Notation). Grava todos os dados de objeto, incluindo o elemento XML inicial, o conteúdo e o elemento de fechamento com um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document to map to JSON.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML para mapear para o JSON.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">O objeto que contém os dados a serem gravados.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o conteúdo XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; to write to.">O <see cref="T:System.Xml.XmlDictionaryWriter" /> no qual ocorrerá a gravação.</param>
      <param name="graph" vsli:raw="The object to write.">O objeto a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o conteúdo XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write to.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar.</param>
      <param name="graph" vsli:raw="The object to write.">O objeto a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph" vsli:raw="The object to write.">O objeto a ser gravado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph" vsli:raw="The object to write.">O objeto a ser gravado.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary vsli:raw="Specifies &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; settings.">Especifica as configurações de <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary vsli:raw="Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">Obtém ou define um DateTimeFormat que define o formato culturalmente apropriado de exibição de datas e horas.</summary>
      <returns vsli:raw="The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">O DateTimeFormat que define o formato culturalmente apropriado de exibição de datas e horas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Obtém ou define as configurações do serializador JSON do contrato de dados para emitir informações de tipo.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">As configurações do serializador JSON do contrato de dados para emitir informações de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtém ou define um valor que especifica se deve ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Obtém ou define uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância, DataContractJsonSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância, DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Obtém ou define o número máximo de itens em um grafo de objeto a serem serializados ou desserializados.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">O número máximo de itens em um grafo de objeto para serializar ou desserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Obtém ou define o nome raiz do objeto selecionado.</summary>
      <returns vsli:raw="The root name of the selected object.">O nome raiz do objeto selecionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para serializar tipos somente leitura; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets or sets a value that specifies whether to use a simple dictionary format.">Obtém ou define um valor que especifica se deve usar um formato de dicionário simples.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para usar um formato de dicionário simples; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.">Especifica a interface para inicializar um leitor de JSON (JavaScript Object Notation) ao reutilizá-la para ler de um fluxo ou buffer específico.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.">Reinicializa um leitor habilitado para JSON (JavaScript Object Notation) para um buffer especificado que contém dados codificados em JSON.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">O <see cref="T:System.Text.Encoding" /> usado pelo leitor.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.">Reinicializa um leitor habilitado para JSON (JavaScript Object Notation) para um fluxo especificado que contém dados codificados em JSON.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">O <see cref="T:System.Text.Encoding" /> usado pelo leitor.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">O delegado a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.">Especifica a interface para inicializar um gravador JSON (JavaScript Object Notation) ao reutilizá-los para gravar em um fluxo de saída específico.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.">Inicializa (ou reinicializa) um gravador JSON (JavaScript Object Notation) em um fluxo de saída especificado com a codificação de caractere especificada.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to which the writer writes.">A saída <see cref="T:System.IO.Stream" /> na qual o gravador grava.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding of the output stream.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caractere do fluxo de saída.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary vsli:raw="Produces instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that can map an XML Infoset to JSON and write JSON-encoded data to a stream.">Produz instâncias de <see cref="T:System.Xml.XmlDictionaryReader" /> que podem ler dados codificados com JSON (JavaScript Object Notation) de um fluxo ou um buffer e faz o mapeamento em um XML Infoset e em instâncias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que mapeiam um XML Infoset para JSON e grava dados codificados por JSON em um fluxo.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation), com um tamanho, deslocamento e codificação de caracteres especificados, para um Infoset XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo leitor. Se <see langword="null" /> for especificado como o valor, o leitor tentará detectar automaticamente a codificação.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed. The default value is &lt;see langword=&quot;null&quot; /&gt;.">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado. O valor padrão é <see langword="null" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation), de um tamanho e deslocamento especificados, para um XML Infoset.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation) para um XML Infoset.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can process JavaScript Object Notation (JSON) data.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode processar dados JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Cria um <see cref="T:System.Xml.XmlDictionaryReader" />, que pode mapear fluxos codificados com JSON (JavaScript Object Notation), de um tamanho e deslocamento especificados, para um Infoset XML.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo leitor. Se <see langword="null" /> for especificado como o valor, o leitor tentará detectar automaticamente a codificação.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear fluxos codificados com JSON (JavaScript Object Notation) para um XML Infoset.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream.">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com uma codificação de caracteres especificada.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com uma codificação de caracteres especificada.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com um caractere especificado.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, a saída usará o formato de várias linhas, cada nível de recuo corretamente; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com um caractere especificado.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, a saída usará o formato de várias linhas, cada nível de recuo corretamente; caso contrário, <see langword="false" />.</param>
      <param name="indentChars" vsli:raw="The string used to indent each level.">A cadeia de caracteres usada recuar cada nível.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
  </members>
</doc>