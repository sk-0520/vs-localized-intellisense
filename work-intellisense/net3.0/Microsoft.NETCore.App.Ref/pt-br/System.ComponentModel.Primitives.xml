<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary vsli:raw="Specifies whether a property or event should be displayed in a Properties window.">Especifica se uma propriedade ou evento deve ser exibido em uma janela Propriedades.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property or event can be modified at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se uma propriedade ou um evento puder ser modificada no tempo de design, caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</param>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary vsli:raw="Gets a value indicating whether an object is browsable.">Obtém um valor que indica se um objeto é navegável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is browsable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for navegável; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.BrowsableAttribute.Yes&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão para o <see cref="T:System.ComponentModel.BrowsableAttribute" />, que é <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Outro objeto com o qual ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for igual a essa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary vsli:raw="Specifies that a property or event cannot be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica se uma propriedade ou um evento não pode ser modificado no tempo de design. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary vsli:raw="Specifies that a property or event can be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica se uma propriedade ou um evento pode ser modificado no tempo de design. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary vsli:raw="Specifies the name of the category in which to group the property or event when displayed in a &lt;see cref=&quot;T:System.Windows.Forms.PropertyGrid&quot; /&gt; control set to Categorized mode.">Especifica o nome da categoria na qual agrupar a propriedade ou evento quando exibido no controle <see cref="T:System.Windows.Forms.PropertyGrid" /> definido para o modo Categorizado.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the category name Default.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CategoryAttribute" /> usando o nome da categoria Padrão.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the specified category name.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CategoryAttribute" /> usando o nome da categoria especificado.</summary>
      <param name="category" vsli:raw="The name of the category.">O nome da categoria.</param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Action category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Ação.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the action category.">Uma <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de ação.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Appearance category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Aparência.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the appearance category.">A <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de aparência.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Asynchronous category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria Assíncrona.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the asynchronous category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria assíncrona.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Behavior category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Comportamento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the behavior category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de comportamento.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category for the property or event that this attribute is applied to.">Obtém o nome da categoria para a propriedade ou evento aos quais esse atributo é aplicado.</summary>
      <returns vsli:raw="The name of the category for the property or event that this attribute is applied to.">O nome da categoria para a propriedade ou evento aos quais esse atributo é aplicado.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Data category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the data category.">A <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Default category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria Padrão.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the default category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria padrão.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Design category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Design.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the design category.">A <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de design.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the DragDrop category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria DragDrop.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the drag-and-drop category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de arrastar e soltar.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Retorna se o valor do objeto especificado é igual ao <see cref="T:System.ComponentModel.CategoryAttribute" /> atual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">O objeto cuja igualdade de valor deve ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor do objeto especificado for igual do atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Focus category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Foco.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the focus category.">A <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de foco.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Format category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Formato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the format category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de formato.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute.">Retorna o código hash para esse atributo.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary vsli:raw="Looks up the localized name of the specified category.">Pesquisa o nome localizado da categoria especificada.</summary>
      <param name="value" vsli:raw="The identifer for the category to look up.">O identificador da categoria a ser pesquisada.</param>
      <returns vsli:raw="The localized name of the category, or &lt;see langword=&quot;null&quot; /&gt; if a localized name does not exist.">O nome localizado da categoria ou <see langword="null" />, se não existir um nome localizado.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Key category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Chave.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the key category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de chave.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Layout category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Layout.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the layout category.">A <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de layout.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Mouse category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria de Mouse.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the mouse category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de mouse.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the WindowStyle category.">Obtém um <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa a categoria WindowStyle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the window style category.">Um <see cref="T:System.ComponentModel.CategoryAttribute" /> para a categoria de estilo de janela.</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary vsli:raw="Provides the base implementation for the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; interface and enables object sharing between applications.">Fornece a implementação de base para a interface <see cref="T:System.ComponentModel.IComponent" /> e permite o compartilhamento de objetos entre aplicativos.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary vsli:raw="Gets a value indicating whether the component can raise an event.">Obtém um valor que indica se o componente pode acionar um evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can raise events; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se o componente pode gerar eventos; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtém o <see cref="T:System.ComponentModel.IContainer" /> que contém o <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">O <see cref="T:System.ComponentModel.IContainer" /> que contém o <see cref="T:System.ComponentModel.Component" />, se houver, ou <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> não estiver encapsulado em um <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is currently in design mode.">Obtém um valor que indica se o <see cref="T:System.ComponentModel.Component" /> está no modo de design no momento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.ComponentModel.Component" /> estiver no modo de design; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Libera todos os recursos usados pelo <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Component" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary vsli:raw="Occurs when the component is disposed by a call to the &lt;see cref=&quot;M:System.ComponentModel.Component.Dispose&quot; /&gt; method.">Ocorre quando o componente é disposto por uma chamada para o método <see cref="M:System.ComponentModel.Component.Dispose" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary vsli:raw="Gets the list of event handlers that are attached to this &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtém a lista de manipuladores de eventos que estão anexados a este <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; that provides the delegates for this component.">Um <see cref="T:System.ComponentModel.EventHandlerList" /> que fornece os delegados para este componente.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is reclaimed by garbage collection.">Libera recursos não gerenciados e executa outras operações de limpeza antes que <see cref="T:System.ComponentModel.Component" /> seja recuperado pela coleta de lixo.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; or by its &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt;.">Retorna um objeto que representa um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" /> ou pelo seu <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="service" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">Um <see cref="T:System.Object" /> que representa um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" /> ou <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> não oferecer o serviço especificado.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtém ou define o <see cref="T:System.ComponentModel.ISite" /> do <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;, the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not have an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with it, or the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is removed from its &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">O <see cref="T:System.ComponentModel.ISite" /> associado a <see cref="T:System.ComponentModel.Component" /> ou, <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> não estiver encapsulado em um <see cref="T:System.ComponentModel.IContainer" />, o <see cref="T:System.ComponentModel.Component" /> não terá um <see cref="T:System.ComponentModel.ISite" /> associado a ele ou o <see cref="T:System.ComponentModel.Component" /> será removido do seu <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any. This method should not be overridden.">Retorna um <see cref="T:System.String" /> que contém o nome do <see cref="T:System.ComponentModel.Component" />, se houver. Esse método não deve ser substituído.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is unnamed.">Um <see cref="T:System.String" /> contendo o nome do <see cref="T:System.ComponentModel.Component" />, se houver, ou <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> estiver sem nome.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary vsli:raw="Provides a read-only container for a collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Fornece um contêiner somente leitura para uma coleção de objetos <see cref="T:System.ComponentModel.IComponent" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ComponentCollection&quot; /&gt; class using the specified array of components.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ComponentCollection" /> usando a matriz de componentes especificada.</summary>
      <param name="components" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects to initialize the collection with.">Uma matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> com os quais inicializar a coleção.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to an array, starting writing at the specified array index.">Copia toda a coleção para uma matriz, começando a gravar no índice de matriz especificado.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; array to copy the objects in the collection to.">Uma matriz <see cref="T:System.ComponentModel.IComponent" /> para a qual copiar os objetos na coleção.</param>
      <param name="index" vsli:raw="The index of the &lt;paramref name=&quot;array&quot; /&gt; at which copying to should begin.">O índice da <paramref name="array" /> no qual a cópia deve ser iniciada.</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; in the collection at the specified collection index.">Obtém o <see cref="T:System.ComponentModel.Component" /> na coleção no índice de coleção especificado.</summary>
      <param name="index" vsli:raw="The collection index of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; to get.">O índice da coleção do <see cref="T:System.ComponentModel.Component" /> a ser obtido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; at the specified index.">O <see cref="T:System.ComponentModel.IComponent" /> no índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="If the specified index is not within the index range of the collection.">Se o índice especificado não estiver dentro do intervalo de índice da coleção.</exception>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary vsli:raw="Gets any component in the collection matching the specified name.">Obtém qualquer componente na coleção que corresponde ao nome especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to get.">O nome do <see cref="T:System.ComponentModel.IComponent" /> a obter.</param>
      <returns vsli:raw="A component with a name matching the name specified by the &lt;paramref name=&quot;name&quot; /&gt; parameter, or &lt;see langword=&quot;null&quot; /&gt; if the named component cannot be found in the collection.">Um componente com um nome correspondente ao nome especificado pelo <paramref name="name" /> parâmetro ou <see langword="null" /> se o componente nomeado não puder ser encontrado na coleção.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary vsli:raw="Specifies a description for a property or event.">Especifica uma descrição de uma propriedade ou evento.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with no parameters.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> sem nenhum parâmetro.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with a description.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> com uma descrição.</summary>
      <param name="description" vsli:raw="The description text.">O texto da descrição.</param>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, which is an empty string (&quot;&quot;). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão para o <see cref="T:System.ComponentModel.DescriptionAttribute" />, que é uma cadeia de caracteres vazia (""). Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary vsli:raw="Gets the description stored in this attribute.">Obtém a descrição armazenada nesse atributo.</summary>
      <returns vsli:raw="The description stored in this attribute.">A descrição armazenada nesse atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary vsli:raw="Gets or sets the string stored as the description.">Obtém ou define a cadeia de caracteres armazenada como a descrição.</summary>
      <returns vsli:raw="The string stored as the description. The default value is an empty string (&quot;&quot;).">A cadeia de caracteres armazenada como a descrição. O valor padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Retorna se o valor do objeto especificado é igual ao <see cref="T:System.ComponentModel.DescriptionAttribute" /> atual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">O objeto cuja igualdade de valor deve ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor do objeto especificado for igual do atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary vsli:raw="Returns a value indicating whether this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance.">Retorna um valor que indica se esta é a instância de <see cref="T:System.ComponentModel.DescriptionAttribute" /> padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se essa é a instância de <see cref="T:System.ComponentModel.DescriptionAttribute" /> padrão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary vsli:raw="Specifies that the designer for a class belongs to a certain category.">Especifica que o designer de uma classe pertence a uma determinada categoria.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with an empty string (&quot;&quot;).">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> com uma cadeia de caracteres vazia.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with the given category name.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> com o nome de categoria fornecido.</summary>
      <param name="category" vsli:raw="The name of the category.">O nome da categoria.</param>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category.">Obtém o nome da categoria.</summary>
      <returns vsli:raw="The name of the category.">O nome da categoria.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary vsli:raw="Specifies that a component marked with this category use a component designer. This field is read-only.">Especifica que um componente marcado com essa categoria use um designer de componente. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary vsli:raw="Specifies that a component marked with this category cannot use a visual designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um componente marcado com essa categoria não pode usar um designer de componente. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Retorna se o valor do objeto especificado é igual ao <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> atual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">O objeto cuja igualdade de valor deve ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor do objeto especificado for igual do atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary vsli:raw="Specifies that a component marked with this category use a form designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um componente marcado com essa categoria use um designer de formulários. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary vsli:raw="Specifies that a component marked with this category use a generic designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um componente marcado com essa categoria use um designer genérico. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Obtém um identificador exclusivo para este atributo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a unique identifier for the attribute.">Um <see cref="T:System.Object" /> que é um identificador exclusivo do atributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary vsli:raw="Specifies the visibility a property has to the design-time serializer.">Especifica a visibilidade que uma propriedade tem em relação ao serializador de tempo de design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary vsli:raw="The code generator produces code for the contents of the object, rather than for the object itself.">O gerador de código produz código para o conteúdo do objeto, em vez do objeto propriamente dito.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary vsli:raw="The code generator does not produce code for the object.">O gerador de código não produz código para o objeto.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary vsli:raw="The code generator produces code for the object.">O gerador de código produz código para o objeto.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary vsli:raw="Specifies the type of persistence to use when serializing a property on a component at design time.">Especifica o tipo de persistência a ser usada ao serializar uma propriedade em um componente no momento do design.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibilityAttribute&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />, usando o valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> especificado.</summary>
      <param name="visibility" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values.">Um dos valores de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</param>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary vsli:raw="Specifies that a serializer should serialize the contents of the property, rather than the property itself. This field is read-only.">Especifica que um serializador deve serializar o conteúdo da propriedade, em vez da propriedade propriamente dita. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&quot; /&gt;, that is, a visual designer uses default rules to generate the value of a property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão, que é <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />, ou seja, um designer visual usa as regras padrão para gerar o valor de uma propriedade. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Outro objeto com o qual ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for igual a essa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retorna o código hash para esse objeto.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary vsli:raw="Specifies that a serializer should not serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um serializador não deve serializar o valor da propriedade. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtém um valor que indica se o valor atual do atributo é o valor padrão do atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is set to the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo está definido para o valor padrão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary vsli:raw="Gets a value indicating the basic serialization mode a serializer should use when determining whether and how to persist the value of a property.">Obtém um valor que indica o modo de serialização básica que um serializador deve usar ao determinar se e como persistir o valor de uma propriedade.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Um dos valores de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. O padrão é <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary vsli:raw="Specifies that a serializer should be allowed to serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um serializador deve receber permissão para serializar o valor da propriedade. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary vsli:raw="Specifies whether a property can only be set at design time.">Especifica se uma propriedade só pode ser definida no tempo de design.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="isDesignOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the property can be set at design time and at run time.">
        <see langword="true" /> se uma propriedade pode ser definida apenas em tempo de design; <see langword="false" /> se a propriedade pode ser definida em tempo de design e em tempo de execução.</param>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.DesignOnlyAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão para o <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, que é <see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Retorna se o valor do objeto especificado é igual ao <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> atual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">O objeto cuja igualdade de valor deve ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor do objeto especificado for igual do atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary vsli:raw="Gets a value indicating whether a property can be set only at design time.">Obtém um valor que indica se uma propriedade pode ser definida apenas em tempo de design.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se uma propriedade puder ser definida somente em tempo de design; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary vsli:raw="Specifies that a property can be set at design time or at run time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que uma propriedade pode ser definida em tempo de design ou em tempo de execução. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be set only at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que uma propriedade pode ser definida somente em tempo de design. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary vsli:raw="Specifies the display name for a property, event, or public void method which takes no arguments.">Especifica o nome de exibição de uma propriedade, um evento ou um método público nulo que não usa argumentos.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class using the display name.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DisplayNameAttribute" /> usando o nome de exibição.</summary>
      <param name="displayName" vsli:raw="The display name.">O nome de exibição.</param>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;. This field is read-only.">Especifica o valor padrão para o <see cref="T:System.ComponentModel.DisplayNameAttribute" />. Este campo é somente leitura.</summary>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary vsli:raw="Gets the display name for a property, event, or public void method that takes no arguments stored in this attribute.">Obtém o nome de exibição de uma propriedade, um evento ou um método público nulo que não tem argumentos armazenados nesse atributo.</summary>
      <returns vsli:raw="The display name.">O nome de exibição.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary vsli:raw="Gets or sets the display name.">Obtém ou define o nome de exibição.</summary>
      <returns vsli:raw="The display name.">O nome de exibição.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; instances are equal.">Determina se duas instâncias <see cref="T:System.ComponentModel.DisplayNameAttribute" /> são iguais.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; to test the value equality of.">O <see cref="T:System.ComponentModel.DisplayNameAttribute" /> do qual testar a igualdade de valor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor do objeto especificado for igual do objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;.">Um código hash do <see cref="T:System.ComponentModel.DisplayNameAttribute" /> atual.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary vsli:raw="Provides a simple list of delegates. This class cannot be inherited.">Fornece uma lista simples de delegados. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.EventHandlerList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the list.">Adiciona um delegado à lista.</summary>
      <param name="key" vsli:raw="The object that owns the event.">O objeto que possui o evento.</param>
      <param name="value" vsli:raw="The delegate to add to the list.">O delegado a ser adicionado à lista.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary vsli:raw="Adds a list of delegates to the current list.">Adiciona uma lista de delegados à lista atual.</summary>
      <param name="listToAddFrom" vsli:raw="The list to add.">A lista a ser adicionada.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary vsli:raw="Disposes the delegate list.">Descarta a lista de delegados.</summary>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the delegate for the specified object.">Obtém ou define o delegado para o objeto especificado.</summary>
      <param name="key" vsli:raw="An object to find in the list.">Um objeto a ser encontrado na lista.</param>
      <returns vsli:raw="The delegate for the specified key, or &lt;see langword=&quot;null&quot; /&gt; if a delegate does not exist.">O delegado da chave especificada ou <see langword="null" />, se não houver nenhum delegado.</returns>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the list.">Remove um delegado da lista.</summary>
      <param name="key" vsli:raw="The object that owns the event.">O objeto que possui o evento.</param>
      <param name="value" vsli:raw="The delegate to remove from the list.">O delegado a ser removido da lista.</param>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary vsli:raw="Provides functionality required by all components.">Fornece a funcionalidade requerida por todos os componentes.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.ComponentModel.IComponent.Disposed&quot; /&gt; event of a component.">Representa o método que manipula o evento <see cref="E:System.ComponentModel.IComponent.Disposed" /> de um componente.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;.">Obtém ou define o <see cref="T:System.ComponentModel.ISite" /> associado ao <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; object associated with the component; or &lt;see langword=&quot;null&quot; /&gt;, if the component does not have a site.">O objeto <see cref="T:System.ComponentModel.ISite" /> associado ao componente; ou <see langword="null" />, se o componente não tiver um site.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary vsli:raw="Provides functionality for containers. Containers are objects that logically contain zero or more components.">Fornece a funcionalidade para contêineres. Contêineres são objetos que, logicamente, contêm zero ou mais componentes.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list.">Adiciona o <see cref="T:System.ComponentModel.IComponent" /> especificado ao <see cref="T:System.ComponentModel.IContainer" /> no final da lista.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">O <see cref="T:System.ComponentModel.IComponent" /> a ser adicionado.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list, and assigns a name to the component.">Adiciona o <see cref="T:System.ComponentModel.IComponent" /> especificado ao <see cref="T:System.ComponentModel.IContainer" /> no final da lista e atribui um nome para o componente.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">O <see cref="T:System.ComponentModel.IComponent" /> a ser adicionado.</param>
      <param name="name" vsli:raw="The unique, case-insensitive name to assign to the component.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; that leaves the component unnamed.">O nome exclusivo que não diferencia maiúsculas de minúsculas a ser atribuído ao componente.  

ou - 
<see langword="null" /> que deixa o componente sem nome.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary vsli:raw="Gets all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Obtém todos os componentes do <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects that represents all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Uma coleção de objetos <see cref="T:System.ComponentModel.IComponent" /> que representa todos os componentes do <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes a component from the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Remove um componente do <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove.">O <see cref="T:System.ComponentModel.IComponent" /> a ser removido.</param>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary vsli:raw="Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.">Especifica que um objeto não tem subpropriedades editáveis. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
      <param name="immutable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for imutável; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary vsli:raw="Represents the default value for &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">Representa o valor padrão para <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Retorna um valor que indica se essa instância é igual a um objeto especificado.</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with this instance or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Um <see cref="T:System.Object" /> a ser comparado a esta instância ou a uma referência nula (<see langword="Nothing" /> no Visual Basic).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; equals the type and value of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for igual ao tipo e ao valor dessa instância, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">Um código hash do <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> atual.</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary vsli:raw="Gets whether the object is immutable.">Obtém se o objeto é imutável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for imutável; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary vsli:raw="Indicates whether the value of this instance is the default value.">Indica se o valor desta instância é o valor padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is the default attribute for the class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a instância for o atributo padrão para a classe; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary vsli:raw="Specifies that an object has at least one editable subproperty. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um objeto tem pelo menos uma subpropriedade editável. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary vsli:raw="Specifies that an object has no subproperties that can be edited. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que um objeto não tem subpropriedades que podem ser editadas. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary vsli:raw="Specifies which event is raised on initialization. This class cannot be inherited.">Especifica qual evento que é gerado na inicialização. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InitializationEventAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InitializationEventAttribute" />.</summary>
      <param name="eventName" vsli:raw="The name of the initialization event.">O nome do evento de inicialização.</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary vsli:raw="Gets the name of the initialization event.">Obtém o nome do evento de inicialização.</summary>
      <returns vsli:raw="The name of the initialization event.">O nome do evento de inicialização.</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary vsli:raw="Thrown when a thread on which an operation should execute no longer exists or has no message loop.">Acionada quando um thread no qual uma operação que deva ser executada não existe mais ou não tem nenhum loop de mensagem.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecidos.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser usado para desserialização.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">O destino a ser usado para desserialização.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> com a descrição detalhada especificada.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Uma descrição detalhada do erro.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description and the specified exception.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> com a descrição detalhada e a exceção especificadas.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Uma descrição detalhada do erro.</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">Uma referência à exceção interna que é a causa dessa exceção.</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary vsli:raw="The exception that is thrown when an invalid enumeration value is used.">A exceção gerada ao usar argumentos inválidos que são enumeradores.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class without a message.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> sem uma mensagem.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class using the specified serialization data and context.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> usando o contexto e os dados de serialização especificados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser usado para desserialização.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">O destino a ser usado para desserialização.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified message.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> com a mensagem especificada.</summary>
      <param name="message" vsli:raw="The message to display with this exception.">A mensagem a ser exibida com esta exceção.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified detailed description and the specified exception.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> com a descrição detalhada e a exceção especificadas.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Uma descrição detalhada do erro.</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">Uma referência à exceção interna que é a causa dessa exceção.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with a message generated from the argument, the invalid value, and an enumeration class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> com uma mensagem gerada com base no argumento, no valor inválido e em uma classe de enumeração.</summary>
      <param name="argumentName" vsli:raw="The name of the argument that caused the exception.">O nome do argumento que causou a exceção.</param>
      <param name="invalidValue" vsli:raw="The value of the argument that failed.">O valor do argumento que falhou.</param>
      <param name="enumClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the enumeration class with the valid values.">Um <see cref="T:System.Type" /> que representa a classe de enumeração com os valores válidos.</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary vsli:raw="Provides functionality required by sites.">Fornece a funcionalidade requerida por sites.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary vsli:raw="Gets the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtém o componente associado a <see cref="T:System.ComponentModel.ISite" /> quando implementado por uma classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">A <see cref="T:System.ComponentModel.IComponent" /> instância associada <see cref="T:System.ComponentModel.ISite" />ao.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtém o <see cref="T:System.ComponentModel.IContainer" /> associado a <see cref="T:System.ComponentModel.ISite" /> quando implementado por uma classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">A <see cref="T:System.ComponentModel.IContainer" /> instância associada <see cref="T:System.ComponentModel.ISite" />ao.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary vsli:raw="Determines whether the component is in design mode when implemented by a class.">Determina se o componente está no modo de design quando é implementado por uma classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o componente estiver em modo de design; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary vsli:raw="Gets or sets the name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtém ou define o nome do componente associado a <see cref="T:System.ComponentModel.ISite" /> quando implementado por uma classe.</summary>
      <returns vsli:raw="The name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if no name is assigned to the component.">O nome do componente associado <see cref="T:System.ComponentModel.ISite" />ao; ou <see langword="null" />, se nenhum nome for atribuído ao componente.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary vsli:raw="Specifies that this object supports a simple, transacted notification for batch initialization.">Especifica que esse objeto dá suporte a uma notificação transacionada simples para inicialização em lote.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary vsli:raw="Signals the object that initialization is starting.">Sinaliza o objeto de que a inicialização está sendo iniciada.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary vsli:raw="Signals the object that initialization is complete.">Sinaliza o objeto de que a inicialização está sendo concluída.</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary vsli:raw="Provides a way to synchronously or asynchronously execute a delegate.">Fornece uma maneira executar um delegado de forma síncrona ou assíncrona.</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Asynchronously executes the delegate on the thread that created this object.">Executa o delegado de modo assíncrono no thread que criou esse objeto.</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; to a method that takes parameters of the same number and type that are contained in &lt;paramref name=&quot;args&quot; /&gt;.">Um <see cref="T:System.Delegate" /> para um método que usa parâmetros do mesmo número e tipo que aqueles contidos em <paramref name="args" />.</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; to pass as arguments to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Uma matriz de tipo <see cref="T:System.Object" /> a passar como argumentos para o método em determinado. Pode ser <see langword="null" />, caso nenhum argumento seja necessário.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling this method.">Uma interface <see cref="T:System.IAsyncResult" /> que representa a operação assíncrona foi iniciada chamando esse método.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary vsli:raw="Waits until the process started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt; completes, and then returns the value generated by the process.">Aguarda até que o processo iniciado ao chamar <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> seja concluído e, em seguida, retorna o valor gerado pelo processo.</summary>
      <param name="result" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt;.">Uma interface <see cref="T:System.IAsyncResult" /> que representa a operação assíncrona que foi iniciada ao chamar <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value generated by the asynchronous operation.">Um <see cref="T:System.Object" /> que representa o valor retornado gerado pela operação assíncrona.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.">Executa o delegado de forma síncrona no thread que criou esse objeto e realiza marshaling na chamada para o thread de criação.</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; that contains a method to call, in the context of the thread for the control.">Um <see cref="T:System.Delegate" /> que contém um método para chamar, no contexto do thread para o controle.</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the arguments to pass to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Uma matriz do tipo <see cref="T:System.Object" /> que representa os argumentos para passar para o método fornecido. Pode ser <see langword="null" />, caso nenhum argumento seja necessário.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value from the delegate being invoked, or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Um <see cref="T:System.Object" /> que representa o valor retornado do delegado que está sendo invocado ou <see langword="null" /> se o delegado não tiver um valor retornado.</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary vsli:raw="Gets a value indicating whether the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt; when calling an object that implements this interface.">Obtém um valor que indica se o chamador deve chamar <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> ao chamar um objeto que implementa essa interface.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o chamador deve chamar <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary vsli:raw="Specifies whether a property or parameter should be localized. This class cannot be inherited.">Especifica se uma propriedade deve ser localizada. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="isLocalizable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma propriedade precisar ser localizada; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.LocalizableAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão, que é <see cref="F:System.ComponentModel.LocalizableAttribute.No" />. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Retorna se o valor do objeto especificado é igual ao <see cref="T:System.ComponentModel.LocalizableAttribute" /> atual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">O objeto cuja igualdade de valor deve ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor do objeto especificado for igual do atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Um código hash do <see cref="T:System.ComponentModel.LocalizableAttribute" /> atual.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether a property should be localized.">Obtém um valor que indica se uma propriedade deve ser localizada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma propriedade precisar ser localizada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary vsli:raw="Specifies that a property should not be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que uma propriedade não deve ser localizada. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary vsli:raw="Specifies that a property should be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que uma propriedade deve ser localizada. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary vsli:raw="Specifies that this property can be combined with properties belonging to other objects in a Properties window.">Especifica que esta propriedade pode ser combinada com propriedades que pertencem a outros objetos em uma janela Propriedades.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</summary>
      <param name="allowMerge" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esta propriedade puder ser combinada com propriedades que pertençam a outros objetos em uma janela Propriedades; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary vsli:raw="Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.">Obtém um valor que indica se essa propriedade pode ser combinada às propriedades que pertencem a outros objetos em uma janela Propriedades.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esta propriedade puder ser combinada com propriedades que pertençam a outros objetos em uma janela Propriedades; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.MergablePropertyAttribute.Yes&quot; /&gt;, that is a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão, que é <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />, que é uma propriedade que pode ser combinada a propriedades que pertencem a outros objetos em uma janela Propriedades. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Outro objeto com o qual ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for igual a essa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt;.">Um código hash do <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> atual.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary vsli:raw="Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que uma propriedade não pode ser combinada com propriedades que pertencem a outros objetos em uma janela Propriedades. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que uma propriedade pode ser combinada com propriedades que pertencem a outros objetos em uma janela Propriedades. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary vsli:raw="Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.">Indica que a propriedade pai é notificada quando o valor da propriedade à qual esse atributo é aplicado é modificado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.NotifyParentPropertyAttribute&quot; /&gt; class, using the specified value to determine whether the parent property is notified of changes to the value of the property.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> usando o valor especificado para determinar se a propriedade pai é notificada sobre alterações ao valor da propriedade.</summary>
      <param name="notifyParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o pai precisar ser notificado de alterações; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary vsli:raw="Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.">Indica o estado de atributo padrão, em que a propriedade não deve notificar a propriedade pai de alterações ao seu valor. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is the same as the current object.">Obtém um valor que indica se o objeto especificado é igual ao objeto atual.</summary>
      <param name="obj" vsli:raw="The object to test for equality.">O objeto a ser testado quanto à igualdade.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is the same as this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for igual a este objeto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">Obtém o código hash deste objeto.</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">O código hash do objeto ao qual o atributo pertence.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtém um valor que indica se o valor atual do atributo é o valor padrão do atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor atual do atributo for o valor padrão do atributo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary vsli:raw="Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.">Indica que a propriedade pai não é notificada das alterações ao valor da propriedade. Este campo é somente leitura.</summary>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary vsli:raw="Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.">Obtém ou define um valor que indica se a propriedade pai deve ser notificada de alterações ao valor da propriedade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent property should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade Parent deve ser notificada de alterações; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary vsli:raw="Indicates that the parent property is notified of changes to the value of the property. This field is read-only.">Indica que a propriedade pai é notificada das alterações ao valor da propriedade. Este campo é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary vsli:raw="Indicates whether the name of the associated property is displayed with parentheses in the Properties window. This class cannot be inherited.">Indica se o nome da propriedade associada é exibido entre parênteses na janela Propriedades. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class that indicates that the associated property should not be shown with parentheses.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> que indica que a propriedade associada não deve ser mostrada com parênteses.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class, using the specified value to indicate whether the attribute is displayed with parentheses.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> usando o valor especificado para indicar se o atributo é exibido entre parênteses.</summary>
      <param name="needParenthesis" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name should be enclosed in parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o nome precisa ser colocado entre parênteses; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class with a default value that indicates that the associated property should not be shown with parentheses. This field is read-only.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> com um valor padrão que indica que a propriedade associada não deve ser mostrada com parênteses. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to this object and tests for equality.">Compara o objeto especificado com este objeto e testa a igualdade.</summary>
      <param name="o">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se for igual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">Obtém o código hash deste objeto.</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">O código hash do objeto ao qual o atributo pertence.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtém um valor que indica se o valor atual do atributo é o valor padrão do atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor atual do atributo for o valor padrão do atributo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary vsli:raw="Gets a value indicating whether the Properties window displays the name of the property in parentheses in the Properties window.">Obtém um valor que indica se a janela Propriedades exibe o nome da propriedade entre parênteses na janela Propriedades.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is displayed with parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade for exibida com parênteses; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary vsli:raw="Specifies whether the property this attribute is bound to is read-only or read/write. This class cannot be inherited.">Especifica se a propriedade a que esse atributo está associado é somente leitura ou leitura/gravação. Essa classe não pode ser herdada</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to show that the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; to show that the property is read/write.">
        <see langword="true" /> para mostrar que a propriedade à qual esse atributo é associado é somente leitura; <see langword="false" /> para mostrar que a propriedade é leitura/gravação.</param>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.ReadOnlyAttribute.No&quot; /&gt; (that is, the property this attribute is bound to is read/write). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica o valor padrão para o <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, que é <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (ou seja, a propriedade à qual esse atributo é associado é leitura/gravação). Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica se essa instância e um objeto especificado são iguais.</summary>
      <param name="value" vsli:raw="Another object to compare to.">Outro objeto com o qual ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> for igual a essa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;.">Um código hash do <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> atual.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina se este atributo é o padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo for o valor padrão para essa classe de atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the property this attribute is bound to is read-only.">Obtém um valor que indica se a propriedade a que esse atributo está associado é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; if the property is read/write.">
        <see langword="true" />se a propriedade a qual este atributo está associado for somente leitura; <see langword="false" /> se a propriedade for de leitura/gravação.</returns>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read/write and can be modified. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que a propriedade a que esse atributo está associado é leitura/gravação e pode ser modificada. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que a propriedade a que esse atributo está associado é somente leitura e não pode ser modificada no Gerenciador de Servidores. Esse campo <see langword="static" /> é somente leitura.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary vsli:raw="Defines identifiers that indicate the type of a refresh of the Properties window.">Define identificadores que indicam o tipo de atualização da janela Propriedades.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary vsli:raw="The properties should be requeried and the view should be refreshed.">As propriedades devem ser consultadas novamente e a exibição deve ser atualizada.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary vsli:raw="No refresh is necessary.">Nenhuma atualização é necessária.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary vsli:raw="The view should be refreshed.">A exibição deve ser atualizada.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary vsli:raw="Indicates that the property grid should refresh when the associated property value changes. This class cannot be inherited.">Indica que a grade de propriedades deve ser atualizada quando o valor da propriedade associada é alterado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RefreshPropertiesAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" />.</summary>
      <param name="refresh" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; value indicating the nature of the refresh.">Um valor <see cref="T:System.ComponentModel.RefreshProperties" /> que indica a natureza da atualização.</param>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary vsli:raw="Indicates that all properties are queried again and refreshed if the property value is changed. This field is read-only.">Indica que todas as propriedades são consultadas novamente e atualizadas se o valor da propriedade é alterado. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary vsli:raw="Indicates that no other properties are refreshed if the property value is changed. This field is read-only.">Indica que nenhuma outra propriedade é atualizada se o valor da propriedade é alterado. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary vsli:raw="Overrides the object's &lt;see cref=&quot;Overload:System.Object.Equals&quot; /&gt; method.">Substitui o método <see cref="Overload:System.Object.Equals" /> do objeto.</summary>
      <param name="value">O objeto a ser testado quanto à igualdade.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto especificado é o mesmo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retorna o código hash para esse objeto.</summary>
      <returns vsli:raw="The hash code for the object that the attribute belongs to.">O código hash do objeto ao qual o atributo pertence.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtém um valor que indica se o valor atual do atributo é o valor padrão do atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor atual do atributo é o padrão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary vsli:raw="Gets the refresh properties for the member.">Obtém as propriedades de atualização do membro.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; that indicates the current refresh properties for the member.">Um <see cref="T:System.ComponentModel.RefreshProperties" /> que indica as propriedades de atualização atuais do membro.</returns>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary vsli:raw="Indicates that all properties are repainted if the property value is changed. This field is read-only.">Indica que todas as propriedades são redesenhadas se o valor da propriedade é alterado. Este campo é somente leitura.</summary>
    </member>
  </members>
</doc>