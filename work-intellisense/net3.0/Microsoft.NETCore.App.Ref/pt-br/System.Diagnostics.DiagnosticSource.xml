<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary vsli:raw="Represents an operation with context to be used for logging.">Representa uma operação com contexto a ser usada para registro em log.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName" vsli:raw="The name of the operation.">O nome da operação.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary vsli:raw="Gets or sets the flags (defined by the W3C ID specification) associated with the activity.">Obtém os sinalizadores (definidos pela especificação de ID W3C) associados à atividade.</summary>
      <returns vsli:raw="the flags associated with the activity.">os sinalizadores associados à atividade.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new baggage item with the specified key and value.">Atualiza <see cref="T:System.Diagnostics.Activity" /> para ter um novo item de bagagem com a chave e o valor especificados.</summary>
      <param name="key" vsli:raw="The baggage key.">A chave de bagagem.</param>
      <param name="value" vsli:raw="The baggage value.">O valor da bagagem.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new tag with the provided &lt;paramref name=&quot;key&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt;.">Atualiza <see cref="T:System.Diagnostics.Activity" /> para ter uma nova marcação com os <paramref name="key" /> e <paramref name="value" /> fornecidos. .</summary>
      <param name="key" vsli:raw="The tag key.">A chave de marcação.</param>
      <param name="value" vsli:raw="The tag value.">O valor da marcação.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary vsli:raw="Gets a collection of key/value pairs that represents information that is passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtém uma coleção de pares chave/valor que representa as informações que são passadas para os filhos deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns vsli:raw="Information that's passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Uma enumeração de pares chave-valor da cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary vsli:raw="Gets or sets the current operation (&lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;) for the current thread. This flows across async calls.">Obtém ou define a operação atual (<see cref="T:System.Diagnostics.Activity" />) do thread atual.  Isso flui entre as chamadas assíncronas.</summary>
      <returns vsli:raw="The current operation for the current thread.">A operação atual para o thread atual.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary vsli:raw="Gets or sets the default ID format for the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtém ou define o formato da ID padrão para o <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary vsli:raw="Gets the duration of the operation.">Obtém a duração da operação.</summary>
      <returns vsli:raw="The delta between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the end time if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has ended (&lt;see cref=&quot;M:System.Diagnostics.Activity.Stop&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was called), or &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has not ended and &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was not called.">O Delta entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e a hora de término, <see cref="T:System.Diagnostics.Activity" /> se o tiver<see cref="M:System.Diagnostics.Activity.Stop" /> terminado <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> (ou se foi chamado <see cref="F:System.TimeSpan.Zero" /> ), <see cref="T:System.Diagnostics.Activity" /> ou se o não <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> foi concluído e não foi chamado.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary vsli:raw="Gets or sets a value that detrmines if the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt; is always used to define the default ID format.">Obtém ou define um valor que determina se o <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> sempre é usado para definir o formato da ID padrão.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always use the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para sempre usar o <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary vsli:raw="Returns the value of a key-value pair added to the activity with &lt;see cref=&quot;M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)&quot; /&gt;.">Retorna o valor de um par chave-valor adicionado para a atividade com <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key" vsli:raw="The baggage key.">A chave de bagagem.</param>
      <returns vsli:raw="The value of the key-value-pair item if it exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not exist.">O valor do item par chave-valor, se ele existir, ou <see langword="null" />, se ele não existir.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary vsli:raw="Gets an identifier that is specific to a particular request.">Obtém um identificador que é específico para uma determinada solicitação.</summary>
      <returns vsli:raw="The activity ID.">A ID da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary vsli:raw="Gets the format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtém o formato do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">O formato para o <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary vsli:raw="Gets the operation name.">Obtém o nome da operação.</summary>
      <returns vsli:raw="The name of the operation.">O nome da operação.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; that created this activity.">Obtém o <see cref="T:System.Diagnostics.Activity" /> pai que criou essa atividade.</summary>
      <returns vsli:raw="The parent of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, if it is from the same process, or &lt;see langword=&quot;null&quot; /&gt; if this instance has no parent (it is a root activity) or if the parent is from outside the process.">O pai <see cref="T:System.Diagnostics.Activity" />disso, se for do mesmo processo, ou <see langword="null" /> se essa instância não tiver um pai (é uma atividade raiz) ou se o pai estiver fora do processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary vsli:raw="Gets the ID of this activity's parent.">Obtém a ID do pai dessa atividade.</summary>
      <returns vsli:raw="The parent ID, if one exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not.">A ID pai, se houver, ou <see langword="null" /> se não tiver.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary vsli:raw="Gets the parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">Obtém o <see cref="P:System.Diagnostics.Activity.SpanId" /> do pai.</summary>
      <returns vsli:raw="The parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.SpanId" />O.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary vsli:raw="Gets a value that indicates whether the W3CIdFlags.Recorded flag is set.">Obtém um valor que indica se o sinalizador W3CIdFlags.Recorded foi definido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the W3CIdFlags.Recorded flag is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o sinalizador W3CIdFlags. grave for definido; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary vsli:raw="Gets the root ID of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtém a ID de raiz deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns vsli:raw="The root ID, or &lt;see langword=&quot;null&quot; /&gt; if the current instance has either a &lt;see cref=&quot;P:System.Diagnostics.Activity.ParentId&quot; /&gt; or an &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">A ID raiz ou <see langword="null" /> se a instância atual tiver um <see cref="P:System.Diagnostics.Activity.ParentId" /> ou um <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to set its &lt;see cref=&quot;P:System.Diagnostics.Activity.Duration&quot; /&gt; as the difference between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the specified stop time.">Atualiza <see cref="T:System.Diagnostics.Activity" /> para definir <see cref="P:System.Diagnostics.Activity.Duration" /> como a diferença entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e a hora de término especificada.</summary>
      <param name="endTimeUtc" vsli:raw="The UTC stop time.">A hora de término do UTC.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary vsli:raw="Sets the ID format on this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; before it is started.">Define o formato da ID neste <see cref="T:System.Diagnostics.Activity" /> antes que seja iniciado.</summary>
      <param name="format" vsli:raw="One of the enumeration values that specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">Um dos valores de enumeração que especifica o formato da propriedade <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary vsli:raw="Sets the parent ID using the W3C convention of a TraceId and a SpanId.">Define a ID pai usando a convenção W3C de um TraceId e um SpanId.</summary>
      <param name="traceId" vsli:raw="The parent activity's TraceId.">O TraceId da atividade pai.</param>
      <param name="spanId" vsli:raw="The parent activity's SpanId.">O SpanId da atividade pai.</param>
      <param name="activityTraceFlags" vsli:raw="One of the enumeration values that specifies flags defined by the W3C standard that are associated with an activity.">Um dos valores de enumeração que especifica sinalizadores definidos pelo padrão W3C associados a uma atividade.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary vsli:raw="Updates this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; with an ID of &lt;paramref name=&quot;parentId&quot; /&gt; caused this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Atualiza este <see cref="T:System.Diagnostics.Activity" /> para indicar que o <see cref="T:System.Diagnostics.Activity" /> com uma ID <paramref name="parentId" /> causou este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId" vsli:raw="The ID of the parent operation.">A ID da operação pai.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary vsli:raw="Sets the start time of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Define a hora de início deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; start time in UTC.">A hora de início de <see cref="T:System.Diagnostics.Activity" /> em UTC.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary vsli:raw="Gets the SPAN part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtém a parte SPAN do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The ID for the SPAN part of &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has the W3C format; otherwise, a zero &lt;see langword=&quot;SpanId&quot; /&gt;.">A ID da parte span de <see cref="P:System.Diagnostics.Activity.Id" />, se o <see cref="T:System.Diagnostics.Activity" /> tiver o formato W3C; caso contrário, um zero <see langword="SpanId" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary vsli:raw="Starts the activity.">Inicia a atividade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary vsli:raw="Gets the time when the operation started.">Obtém a hora de quando a operação foi iniciada.</summary>
      <returns vsli:raw="The UTC time that the operation started.">A hora UTC em que a operação foi iniciada.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary vsli:raw="Stops the activity.">Interrompe a atividade.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary vsli:raw="Gets a collection of key/value pairs that represent information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">Obtém uma coleção de pares chave/valor que representam informações que serão registradas com o <see cref="T:System.Diagnostics.Activity" /> no sistema de registro em log.</summary>
      <returns vsli:raw="Information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">Uma enumeração de String-String-Value-pairs.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary vsli:raw="Gets the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtém a parte TraceId do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The ID for the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the ID has the W3C format; otherwise, a zero TraceId.">A ID da parte TraceID do <see cref="P:System.Diagnostics.Activity.Id" />, se a ID tiver o formato W3C; caso contrário, um TraceID zero.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary vsli:raw="Gets or sets the W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">Obtém o cabeçalho <see langword="tracestate" /> W3C.</summary>
      <returns vsli:raw="The W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">O cabeçalho <see langword="tracestate" /> W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary vsli:raw="Specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">Especifica o formato da propriedade <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary vsli:raw="The hierarchical format.">O formato hierárquico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary vsli:raw="An unknown format.">Um formato desconhecido.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary vsli:raw="The W3C format.">O formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt; formatted based on a W3C standard.">Representa um <see cref="P:System.Diagnostics.Activity.SpanId" /> formatado com base em um padrão W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 8 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; to a specified span.">Copia os 8 bytes do <see cref="T:System.Diagnostics.ActivitySpanId" /> atual para um intervalo especificado.</summary>
      <param name="destination" vsli:raw="The span to which the 8 bytes of the SpanID are to be copied.">O intervalo para o qual os 8 bytes da SpanID devem ser copiados.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of eight bytes.">Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de 8 bytes.</summary>
      <param name="idData" vsli:raw="A read-only span of eight bytes.">Um intervalo somente leitura de oito bytes.</param>
      <returns vsli:raw="The new span ID.">A nova ID do intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> não contém oito bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of 16 hexadecimal characters.">Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de 16 caracteres hexadecimais.</summary>
      <param name="idData" vsli:raw="A span that contains 16 hexadecimal characters.">Um intervalo que contém 16 caracteres hexadecimais.</param>
      <returns vsli:raw="The new span ID.">A nova ID do intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;          &#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> não contém 16 caracteres hexadecimais.

ou - 
Os caracteres em <paramref name="idData" /> não são todos caracteres hexadecimais em minúsculas ou todos zeros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de bytes codificados por UTF8.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">Um intervalo somente leitura de bytes codificados por UTF8.</param>
      <returns vsli:raw="The new span ID.">A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; based on a random number (that is very likely to be unique).">Cria um <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um número aleatório (que muito provavelmente seja exclusivo).</summary>
      <returns vsli:raw="The new span ID.">A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether this instance and the specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance have the same value.">Determina se essa instância e a instância de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificada têm o mesmo valor.</summary>
      <param name="spanId" vsli:raw="The instance to compare.">A instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;spanId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="spanId" /> tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary vsli:raw="the current instance and a specified object, which also must be an &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance, have the same value.">A instância atual e um objeto especificado, que também deve ser uma instância de <see cref="T:System.Diagnostics.ActivitySpanId" />, têm o mesmo valor.</summary>
      <param name="obj" vsli:raw="The object to compare.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see cref="T:System.Diagnostics.ActivitySpanId" /> e tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the SpanId.">Retorna o código hash do SpanId.</summary>
      <returns vsli:raw="The hash code of the SpanId.">O código hash do SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have the same value.">Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas têm o mesmo valor.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is the same as the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o SpanId de <paramref name="spanId1" /> for o mesmo que o SpanId de <paramref name="spandId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determine whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have unequal values.">Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas têm valores diferentes.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is different from the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o SpanId de <paramref name="spanId1" /> for diferente do SpanId de <paramref name="spandId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">A representação da cadeia de 16 caracteres hexadecimais dessa ID de intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">A representação da cadeia de 16 caracteres hexadecimais dessa ID de intervalo.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary vsli:raw="Specifies flags defined by the W3C standard that are associated with an activity.">Especifica sinalizadores definidos pelo padrão W3C associados a uma atividade.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary vsli:raw="The activity has not been marked.">A atividade não foi marcada.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary vsli:raw="The activity (or more likely its parents) has been marked as useful to record.">A atividade (ou, mais provavelmente, suas atividades pai) foi marcada como útil para ser registrada.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.TraceId&quot; /&gt; whose format is based on a W3C standard.">Representa um <see cref="P:System.Diagnostics.Activity.TraceId" /> cujo formato se baseia em um padrão W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 16 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; to a specified span.">Copia os 16 bytes do <see cref="T:System.Diagnostics.ActivityTraceId" /> atual para um intervalo especificado.</summary>
      <param name="destination" vsli:raw="The span to which the 16 bytes of the trace ID are to be copied.">O intervalo para o qual os 16 bytes da ID do rastreamento devem ser copiados.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 16 bytes.">Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de 16 bytes.</summary>
      <param name="idData" vsli:raw="A read-only span of 16 bytes.">Um intervalo somente leitura de 16 bytes.</param>
      <returns vsli:raw="The new trace ID.">A nova ID de rastreamento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> não contém oito bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 32 hexadecimal characters.">Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de 32 caracteres hexadecimais.</summary>
      <param name="idData" vsli:raw="A span that contains 32 hexadecimal characters.">Um intervalo que contém 32 caracteres hexadecimais.</param>
      <returns vsli:raw="The new trace ID.">A nova ID de rastreamento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;&#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> não contém 16 caracteres hexadecimais.

ou -

Os caracteres em <paramref name="idData" /> não são todos caracteres hexadecimais em minúsculas ou todos zeros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de bytes codificados por UTF8.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">Um intervalo somente leitura de bytes codificados por UTF8.</param>
      <returns vsli:raw="The new trace ID.">A nova ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; based on a random number (that is very likely to be unique).">Cria um <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um número aleatório (que muito provavelmente seja exclusivo).</summary>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt;.">A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether the current instance and a specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; are equal.">Determina se a instância atual e um <see cref="T:System.Diagnostics.ActivityTraceId" /> especificado são iguais.</summary>
      <param name="traceId" vsli:raw="The instance to compare.">A instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;traceId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="traceId" /> tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance and a specified object, which must also be an &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instance, have the same value.">Determina se essa instância e um objeto especificado, que também deve ser uma instância de <see cref="T:System.Diagnostics.ActivityTraceId" />, têm o mesmo valor.</summary>
      <param name="obj" vsli:raw="The object to compare.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see cref="T:System.Diagnostics.ActivityTraceId" /> e tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the TraceId.">Retorna o código hash do TraceId.</summary>
      <returns vsli:raw="The hash code of the TraceId.">O código hash do TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas têm o mesmo valor.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is the same as the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o TraceId de <paramref name="traceId1" /> for o mesmo que o TraceId de <paramref name="traceId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas têm o mesmo valor.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is different from the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o TraceId de <paramref name="traceId1" /> for diferente do TraceId de <paramref name="traceId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this span ID.">Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">A representação de cadeia de caracteres hexadecimal de 32 caracteres dessa ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this trace ID.">Retorna uma cadeia de caracteres hexadecimal de 32 caracteres que representa essa ID de rastreamento.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">A representação de cadeia hexadecimal de 32 caracteres dessa ID de rastreamento.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary vsli:raw="Provides an implementation of the abstract &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class that represents a named place to which a source sends its information (events).">Fornece uma implementação da classe <see cref="T:System.Diagnostics.DiagnosticSource" /> abstrata que representa um local nomeado para o qual uma fonte envia suas informações (eventos).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Cria um novo <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name" vsli:raw="The name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">O nome deste <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary vsli:raw="Gets the collection of listeners for this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Obtém a coleção de ouvintes para este <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary vsli:raw="Disposes the NotificationListeners.">Descarta o NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary vsli:raw="Determines whether there are any registered subscribers.">Determina se há algum assinante registrado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any registered subscribers, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, se não houver assinante registrado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary vsli:raw="Checks whether the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt; is enabled.">Verifica se o <see cref="T:System.Diagnostics.DiagnosticListener" /> está habilitado.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se as notificações estiverem habilitadas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Checks if any subscriber to the diagnostic events is interested in receiving events with this name. Subscribers indicate their interest using a delegate provided in &lt;see cref=&quot;Overload:System.Diagnostics.DiagnosticListener.Subscribe&quot; /&gt;.">Verifica se DiagnosticListener está habilitado.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <param name="arg1" vsli:raw="The object that represents a context." />
      <param name="arg2" vsli:raw="The object that represents a context." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, se ele estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Obtém o nome deste <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">O nome do <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityExport method of all the subscribers.">Invoca o método OnActivityExport de todos os assinantes.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">A atividade afetada por um evento externo.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">Um objeto que representa a solicitação de saída.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityImport method of all the subscribers.">Invoca o método OnActivityImport de todos os assinantes.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">A atividade afetada por um evento externo.</param>
      <param name="payload" vsli:raw="An object that represents the incoming request.">Um objeto que representa a solicitação de entrada.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary vsli:raw="Adds a subscriber.">Adiciona um assinante.</summary>
      <param name="observer" vsli:raw="A subscriber.">Um assinante.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name and up to two context objects.">Adiciona um assinante e opcionalmente filtra eventos com base em seu nome e até dois objetos de contexto.</summary>
      <param name="observer" vsli:raw="A subscriber.">Um assinante.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; to if an event filter is not desirable.">Um delegado que filtra eventos com base em seu nome e até dois objetos de contexto (que podem ser <see langword="null" />) ou <see langword="null" /> se um filtro de evento não for desejável.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary vsli:raw="Adds a subscriber, optionally filters events based on their name and up to two context objects, and specifies methods to call when providers import or export activites from outside the process.">Adiciona um assinante, opcionalmente, filtra eventos com base em seu nome e até dois objetos de contexto e especifica os métodos a serem chamados quando os provedores importam ou exportam atividades de fora do processo.</summary>
      <param name="observer" vsli:raw="A subscriber.">Um assinante.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; if an event filter is not desirable.">Um delegado que filtra eventos com base em seu nome e até dois objetos de contexto (que podem ser <see langword="null" />) ou, se um filtro de evento não for desejável, <see langword="null" />.</param>
      <param name="onActivityImport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the incoming request.">Um delegado de ação que recebe a atividade afetada por um evento externo e um objeto que representa a solicitação de entrada.</param>
      <param name="onActivityExport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the outgoing request.">Um delegado de ação que recebe a atividade afetada por um evento externo e um objeto que representa a solicitação de saída.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name.">Adiciona um assinante e, opcionalmente, filtra eventos com base em seu nome.</summary>
      <param name="observer" vsli:raw="A subscriber.">Um assinante.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name (&lt;see cref=&quot;T:System.String&quot; /&gt;). The delegate should return &lt;see langword=&quot;true&quot; /&gt; if the event is enabled.">Um delegado que filtra eventos com base em seu nome (<see cref="T:System.String" />). O delegado deverá retornar <see langword="true" /> se o evento estiver habilitado.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary vsli:raw="Returns a string with the name of this DiagnosticListener.">Retorna uma cadeia de caracteres com o nome deste DiagnosticListener.</summary>
      <returns vsli:raw="The name of this DiagnosticListener.">O nome deste DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary vsli:raw="Logs a notification.">Registra uma notificação.</summary>
      <param name="name" vsli:raw="The name of the event to log.">O nome do evento a ser registrado.</param>
      <param name="value" vsli:raw="An object that represents the payload for the event.">Um objeto que representa o conteúdo do evento.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary vsli:raw="An abstract class that allows code to be instrumented for production-time logging of rich data payloads for consumption within the process that was instrumented.">Uma classe abstrata que permite que o código seja instrumentado para registro em log de tempo de produção dos conteúdos de dados avançados para consumo dentro do processo que foi instrumentado.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary vsli:raw="Verifies if the notification event is enabled.">Verifica se o evento de notificação está habilitado.</summary>
      <param name="name" vsli:raw="The name of the event being written.">O nome do evento que está sendo gravado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, se o evento de notificação estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Verifies it the notification event is enabled.">Verifica se o evento de notificação está habilitado.</summary>
      <param name="name" vsli:raw="The name of the event being written.">O nome do evento que está sendo gravado.</param>
      <param name="arg1" vsli:raw="An object that represents the additional context for IsEnabled. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) to check if consumer wants to get notifications for such events at all. Based on that, producer may call IsEnabled(string, object, object) again with non-&lt;see langword=&quot;null&quot; /&gt; context.">Um objeto que representa o contexto adicional para IsEnabled. Os consumidores devem esperar receber <see langword="null" />, que pode indicar que o produtor chamou o IsEnabled(string) puro para verificar se o consumidor deseja receber notificações para tais eventos. Com base nisso, o produtor pode chamar IsEnabled(string, object, object) novamente com um contexto não relacionado a <see langword="null" />.</param>
      <param name="arg2" vsli:raw="Optional. An object that represents the additional context for IsEnabled. &lt;see langword=&quot;null&quot; /&gt; by default. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) or producer passed all necessary context in &lt;paramref name=&quot;arg1&quot; /&gt;.">Opcional. Um objeto que representa o contexto adicional para IsEnabled. <see langword="null" /> por padrão. Os consumidores devem esperar receber <see langword="null" />, que pode indicar que o produtor chamou o IsEnabled(string) puro ou produtor passou o contexto necessário no <paramref name="arg1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, se o evento de notificação estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state from an activity to some event or operation, such as an outgoing HTTP request, that will occur outside the process.">Transfere um estado de uma atividade para algum evento ou operação, como uma solicitação HTTP de saída, que ocorrerá fora do processo.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">A atividade afetada por um evento externo.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">Um objeto que representa a solicitação de saída.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state to an activity from some event or operation, such as an incoming request, that occurred outside the process.">Transfere um estado para uma atividade de algum evento ou operação, como uma solicitação de entrada, que ocorreu fora do processo.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">A atividade afetada por um evento externo.</param>
      <param name="payload" vsli:raw="A payload that represents the incoming request.">Um conteúdo que representa a solicitação de entrada.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Starts an &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; and writes a start event.">Inicia um <see cref="T:System.Diagnostics.Activity" /> e grava um evento de início.</summary>
      <param name="activity" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to be started.">O <see cref="T:System.Diagnostics.Activity" /> a ser iniciado.</param>
      <param name="args" vsli:raw="An object that represent the value being passed as a payload for the event.">Um objeto que representa o valor sendo passado como um conteúdo para o evento.</param>
      <returns vsli:raw="The started activity for convenient chaining.">A atividade iniciada para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Stops the given &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, maintains the global &lt;see cref=&quot;P:System.Diagnostics.Activity.Current&quot; /&gt; activity, and notifies consumers that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; was stopped.">Interrompe o <see cref="T:System.Diagnostics.Activity" /> determinado, mantém a atividade <see cref="P:System.Diagnostics.Activity.Current" /> global e notifica os consumidores que o <see cref="T:System.Diagnostics.Activity" /> foi interrompido.</summary>
      <param name="activity" vsli:raw="The activity to be stopped.">A atividade a ser interrompida.</param>
      <param name="args" vsli:raw="An object that represents the value passed as a payload for the event.">Um objeto que representa o valor passado como um conteúdo para o evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary vsli:raw="Provides a generic way of logging complex payloads.">Fornece uma maneira genérica de registro em log de conteúdos complexos.</summary>
      <param name="name" vsli:raw="The name of the event being written.">O nome do evento que está sendo gravado.</param>
      <param name="value" vsli:raw="An object that represents the value being passed as a payload for the event. This is often an anonymous type which contains several sub-values.">Um objeto que representa o valor sendo passado como um conteúdo para o evento. Isso geralmente é um tipo anônimo que contém vários valores inferiores.</param>
    </member>
  </members>
</doc>