<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">Fornece um mecanismo para mapear dinamicamente os tipos de e para representações de <see langword="xsi:type" /> durante a serialização e desserialização.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">Substituir este método para mapear o nome <see langword="xsi:type" /> mapeado e o namespace para um tipo de contrato de dados durante a desserialização.</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">O nome <see langword="xsi:type" /> a ser mapeado.</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">O namespace <see langword="xsi:type" /> a ser mapeado.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">O tipo declarado no contrato de dados.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">O resolvedor de tipo conhecido.</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">O tipo para o qual o namespace e nome <see langword="xsi:type" /> é mapeado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">Substitua este método para mapear um tipo de contrato de dados para um nome e namespace <see langword="xsi:type" /> durante a serialização.</summary>
      <param name="type" vsli:raw="The type to map.">O tipo a ser mapeado.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">O tipo declarado no contrato de dados.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">O resolvedor de tipo conhecido.</param>
      <param name="typeName" vsli:raw="The xsi:type name.">O nome xsi:type.</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">O namespace xsi:type.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o mapeamento tiver sido bem sucedido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">Serializa e desserializa uma instância de um tipo em um fluxo XML ou em um documento usando um contrato de dados fornecido. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especifico e uma coleção de tipos conhecidos que podem existir no grafo do objeto.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo e das configurações especificadas.</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">O tipo da instância a ser serializada ou desserializada.</param>
      <param name="settings" vsli:raw="The serializer settings.">As configurações do serializador.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado usando o namespace e o elemento raiz XML fornecidos.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">O namespace do elemento XML que inclui o conteúdo a ser serializado ou desserializado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado. Esse método também especifica o elemento XML raiz e o namespace em dois parâmetros de cadeia de caracteres, bem como uma lista de tipos conhecidos que podem estar presentes no grafo do objeto.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName" vsli:raw="The root element name of the content.">O nome do elemento raiz do conteúdo.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">O namespace do elemento raiz.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado usando o namespace e o elemento raiz XML por meio de parâmetros do tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o namespace do elemento raiz.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado. Esse método também especifica o elemento XML raiz e o namespace em dois parâmetros <see cref="T:System.Xml.XmlDictionaryString" />, bem como uma lista de tipos conhecidos que podem estar presentes no grafo do objeto.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o namespace do elemento raiz.</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos conhecidos que podem estar presentes no grafo de objeto.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">Obtém o componente usado para mapear dinamicamente declarações <see langword="xsi:type" /> de tipos de contrato conhecidos.</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Uma implementação da <see cref="T:System.Runtime.Serialization.DataContractResolver" /> classe.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtém um valor que especifica se deve ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para omitir os dados de extensão; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina se o <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado em um objeto que pode ser desserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor estiver no elemento de início do fluxo a ser lido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina se o <see cref="T:System.Xml.XmlReader" /> está posicionado em um objeto que pode ser desserializado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor estiver no elemento de início do fluxo a ser lido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Obtém uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os tipos esperados passados como tipos conhecidos para o construtor <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">Obtém o número máximo de itens em um grafo de objeto a serem serializados ou desserializados.</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">O número máximo de itens a serem serializados ou desserializados. O padrão é <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">O número de itens excede o valor máximo.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Obtém um valor que especifica se constructos XML não padrão devem ser usados para preservar os dados de referência de objeto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para manter as referências; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Lê o fluxo XML com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado e também especifica se uma verificação é feita para verificar o nome do objeto antes de ler seu valor.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">O <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para verificar se o nome do objeto corresponde ao valor de nome raiz fornecido no construtor, caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">O parâmetro <paramref name="verifyObjectName" /> é definido como <see langword="true" /> e o nome do elemento e o namespace não correspondem aos valores definidos no construtor.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Lê um documento ou fluxo de documentos XML e retorna o objeto desserializado.  O método inclui um parâmetro para especificar se o nome do objeto é verificado e validado e um resolvedor para mapear declarações <see langword="xsi:type" /> em tempo de execução.</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">O leitor XML usado para ler o conteúdo.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para verificar o nome do objeto, caso contrário, <see langword="false" />.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">Uma implementação de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> para mapear declarações <see langword="xsi:type" /> para tipos de contrato de dados.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lê o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Lê o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado e também especifica se uma verificação é feita para verificar o nome do objeto antes de ler seu valor.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para verificar se o nome do objeto corresponde ao valor de nome raiz fornecido no construtor, caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">O parâmetro <paramref name="verifyObjectName" /> é definido como <see langword="true" /> e o nome do elemento e o namespace não correspondem aos valores definidos no construtor.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">Obtém um valor que especifica se tipos de somente leitura são serializados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">
        <see langword="true" />se tipos somente leitura forem serializados; <see langword="false" /> se todos os tipos forem serializados.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o elemento XML de fechamento usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o elemento XML de fechamento usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Grava todos os dados de objeto (elemento XML inicial, conteúdo e elemento XML de fechamento) para um documento ou fluxo XML usando o XmlDictionaryWriter especificado. O método inclui um resolvedor para mapear declarações <see langword="xsi:type" /> em tempo de execução.</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">Um XmlDictionaryWriter usado para gravar o conteúdo do documento ou fluxo XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">O objeto que contém o conteúdo a ser gravado.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">Uma implementação de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> usada para mapear declarações <see langword="xsi:type" /> para contrato de dados conhecidos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava todos os dados de objeto (elemento XML de abertura, conteúdo e elemento XML de fechamento) em um documento ou fluxo XML com um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o fluxo ou o documento XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">O objeto que contém os dados a serem gravados no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o conteúdo de XML usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o fluxo.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">O objeto a ser gravado no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o conteúdo de XML usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o fluxo.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">O objeto a ser gravado no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o elemento XML de abertura usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph" vsli:raw="The object to write.">O objeto a ser gravado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o elemento XML de abertura usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph" vsli:raw="The object to write.">O objeto a ser gravado.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">Estende a classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> fornecendo métodos para definir e obter um <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">Retorna o provedor de serialização alternativo para esse serializador.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">O serializador que está sendo substituído.</param>
      <returns vsli:raw="The surrogate serializer.">O serializador alternativo.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Especifica um provedor de serialização alternativo para esse <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">O serializador que está sendo substituído.</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">O provedor de serialização alternativo.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">Especifica as configurações do serializador de contrato de dados.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">Obtém ou define o componente usado para mapear dinamicamente declarações xsi:type de tipos de contrato conhecidos.</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">O componente usado para mapear dinamicamente declarações xsi: Type para tipos de contrato conhecidos.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtém ou define um valor que especifica se deve ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Obtém ou define uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância de DataContractSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Obtém ou define o número máximo de itens em um grafo de objeto a serem serializados ou desserializados.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">O número máximo de itens em um grafo de objeto para serializar ou desserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Obtém ou define um valor que especifica se constructos XML não padrão devem ser usados para preservar os dados de referência de objeto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para usar constructos XML não padrão para preservar os dados de referência de objeto, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Obtém ou define o nome raiz do objeto selecionado.</summary>
      <returns vsli:raw="The root name of the selected object.">O nome raiz do objeto selecionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">Obtém ou define o namespace raiz para o objeto especificado.</summary>
      <returns vsli:raw="The root namespace for the specified object.">O namespace raiz do objeto especificado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para serializar tipos somente leitura; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Representa as opções que podem ser definidas para um <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">Obtém a coleção de tipos que podem ser encontrados durante a serialização ou a desserialização.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Uma <see langword="KnownTypes" /> coleção que contém tipos que podem ser encontrados durante a serialização ou desserialização. As representações de esquema XML são exportadas para todos os tipos especificados nesta coleção <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />pelo.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">Armazena dados de um contrato de dados com controle de versão que foi estendido adicionando novos membros.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">Fornece uma estrutura de dados para armazenar dados extra encontrados pelo <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> durante a desserialização de um tipo marcado com o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">Obtém ou define a estrutura que contém dados extras.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">Um <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> que contém dados que não são reconhecidos como pertencentes ao contrato de dados.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">Fornece a classe base usada para serializar objetos como documentos ou fluxos XML. Esta classe é abstrata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">Obtém um valor que especifica se o <see cref="T:System.Xml.XmlDictionaryReader" /> é posicionado sobre um elemento XML que pode ser lido.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo ou o documento XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor pode ler os dados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">Obtém um valor que especifica se o <see cref="T:System.Xml.XmlReader" /> é posicionado sobre um elemento XML que pode ser lido.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo ou o documento XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor estiver posicionado sobre o elemento inicial; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">Lê o fluxo XML ou o documento com um <see cref="T:System.IO.Stream" /> e retorna o objeto desserializado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">Um <see cref="T:System.IO.Stream" /> usado para ler o fluxo ou o documento XML.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Lê o documento ou o fluxo XML com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Lê o fluxo ou o documento XML com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado; ele também permite que você especifique se o serializador pode ler os dados antes de tentar lê-los.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" /> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace raiz; caso contrário, <see langword="false" /> para ignorar a verificação.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lê o documento ou o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo ou o documento XML.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Lê o documento ou o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado; ele também permite que você especifique se o serializador pode ler os dados antes de tentar lê-los.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o documento ou o fluxo XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" /> para verificar se o nome do elemento XML e o namespace delimitador correspondem ao nome e namespace raiz; <see langword="false" /> para ignorar a verificação.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o final dos dados de objeto como um elemento XML de fechamento no documento ou fluxo XML com um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o final dos dados de objeto como um elemento XML de fechamento no documento ou fluxo XML com um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> .</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.IO.Stream" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">O objeto que contém os dados a serem gravados no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o conteúdo do documento ou fluxo XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava apenas o conteúdo do objeto no documento ou fluxo XML usando o <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava apenas o conteúdo do objeto no documento ou fluxo XML com o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Grava o início dos dados do objeto como um elemento XML de abertura usando o <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">O objeto a ser serializado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o início dos dados do objeto como um elemento XML de abertura usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">O objeto a ser serializado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">Contém métodos para leitura e gravação de XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">Gera um tipo de esquema padrão considerando o nome do tipo especificado e o adiciona ao conjunto de esquema especificado.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ao qual o tipo do esquema gerado será adicionado.</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome do tipo ao qual o esquema será atribuído.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="schemas" /> ou <paramref name="typeQName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">Lê um conjunto de nós XML do leitor especificado e retorna o resultado.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">Um <see cref="T:System.Xml.XmlReader" /> usado para leitura.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Uma matriz do tipo <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="xmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">Um nó <see langword="null" /> foi encontrado durante a leitura.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">Grava os nós fornecidos usando o gravador especificado.</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravação.</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">Uma matriz do tipo <see cref="T:System.Xml.XmlNode" /> para gravação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="xmlWriter" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">Quando recebe uma classe que representa um contrato de dados e metadados que representam um membro do contrato, produz uma consulta XPath para o membro.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">Cria um XPath de um contrato de dados usando o tipo de dados de contrato, a matriz de elementos de metadados, o elemento de nível superior e os namespaces especificados.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">O tipo que representa um contrato de dados.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Os metadados gerados usando o método <see cref="Overload:System.Type.GetMember" /> da classe <see cref="T:System.Type" />, que aponta para o membro de dados específico usado para gerar a consulta.</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">O elemento de nível superior no xpath.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Os namespaces de XML e seus prefixos encontrados no contrato de dados.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  

O XPath gerado com base nos dados de tipo e de membro.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">Cria um XPath de um contrato de dados usando o tipo de contrato de dados, a matriz de elementos de metadados e os namespaces especificados.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">O tipo que representa um contrato de dados.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Os metadados gerados usando o método <see cref="Overload:System.Type.GetMember" /> da classe <see cref="T:System.Type" />, que aponta para o membro de dados específico usado para gerar a consulta.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Os namespaces de XML e seus prefixos encontrados no contrato de dados.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  

O XPath gerado com base nos dados de tipo e de membro.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">Possibilita a transformação de um conjunto de tipos do .NET Framework que são usadas em contratos de dados em um arquivo de esquema XML (.xsd).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> com o conjunto de esquemas especificado.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas a serem exportados.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">Obtém um valor que indica se o conjunto de tipos CLR (Common Language Runtime) contidos em um conjunto de assemblies pode ser exportado.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">Um <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contém os assemblies com os tipos para exportação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os tipos puderem ser exportados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">Obtém um valor que indica se o conjunto de tipos CLR (Common Language Runtime) contidos em um <see cref="T:System.Collections.Generic.ICollection`1" /> pode ser exportado.</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">Um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém os tipos especificados para exportação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os tipos puderem ser exportados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">Obtém um valor que indica se o tipo CLR (Common Language Runtime) especificado pode ser exportado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">O <see cref="T:System.Type" /> a ser exportado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo puder ser exportado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">Transforma os tipos contidos na coleção especificada de assemblies.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">Um <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) que contém os tipos para exportação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="assemblies" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Reflection.Assembly" /> na coleção é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">Transforma os tipos contidos no <see cref="T:System.Collections.Generic.ICollection`1" /> passado para este método.</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">Um <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Type" />) que contém os tipos para exportação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="types" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Um tipo na coleção é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">Transforma o tipo .NET Framework especificado em um esquema XSD (linguagem de definição de esquema XML).</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">O <see cref="T:System.Type" /> a ser transformado em um esquema XML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Retorna o nome e namespace de nível superior para o <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">O <see cref="T:System.Type" /> a ser consultado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome de nível superior e o namespace para este <see cref="T:System.Type" />, que é gravado no fluxo durante a gravação desse objeto.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">Retorna o tipo de esquema XML para o tipo especificado.</summary>
      <param name="type" vsli:raw="The type to return a schema for.">O tipo para o qual retornar um esquema.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">Um <see cref="T:System.Xml.Schema.XmlSchemaType" /> que contém o esquema XML.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Retorna o nome e o namespace do contrato para o <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">O <see cref="T:System.Type" /> que foi exportado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome do contrato do tipo e seu namespace.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">Obtém ou define um <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contém opções que podem ser definidas para a operação de exportação.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">Um <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contém opções usadas para personalizar como os tipos são exportados para esquemas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">Obtém a coleção de esquemas XML exportados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas transformados do conjunto de Common Language Runtime (CLR) tipos depois de chamar <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> o método.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">Contém propriedades e métodos que, quando implementados por um <see cref="T:System.Xml.XmlDictionaryWriter" />, permitem o processamento de fragmentos XML.</summary>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">Obtém um valor que indica se este <see cref="T:System.Xml.XmlDictionaryWriter" /> pode processar fragmentos XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se isso <see cref="T:System.Xml.XmlDictionaryWriter" /> puder processar fragmentos XML; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">Termina o processamento de um fragmento XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">Inicia o processamento de um fragmento XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">Se <see langword="true" />, todos os namespaces declarados fora do fragmento são declarados novamente se usados dentro dele; se <see langword="false" />, os namespaces não são declarados novamente.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">Grava um fragmento XML para o fluxo subjacente do gravador.</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">O buffer para o qual gravar.</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual gravar no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes a serem gravados no <paramref name="buffer" />.</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">Representa uma interface que pode ser implementada pelas classes que fornecem fluxos.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">Obtém um fluxo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Um objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">Libera um fluxo para a saída.</summary>
      <param name="stream" vsli:raw="The stream being released.">O fluxo que está sendo liberado.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">Fornece métodos para reinicializar um leitor binário para ler um documento novo.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">Reinicializa o leitor binário usando o buffer de entrada fornecido.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">O delegado a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">Reinicializa o leitor binário usando o fluxo de entrada fornecido.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">O delegado a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">Especifica os requisitos de implementação para gravadores binários XML que derivam desta interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">Especifica os requisitos de inicialização para os gravadores binário XML que implementam esse método.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlBinaryWriterSession" /> a ser usado.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">Um <see langword="interface" /> que define o contrato que um dicionário XML deve implementar para ser usado por implementações <see cref="T:System.Xml.XmlDictionaryReader" /> e <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Tenta pesquisar uma entrada no dicionário.</summary>
      <param name="key" vsli:raw="Key to look up.">Chave a ser procurada.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Se <paramref name="key" /> for definida, o <see cref="T:System.Xml.XmlDictionaryString" /> mapeado para a chave; caso contrário <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a chave estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Verifica o dicionário em busca de um valor de cadeia de caracteres especificado.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valor da cadeia de caracteres que está sendo verificada.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Verifica o dicionário para um <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">O <see cref="T:System.Xml.XmlDictionaryString" /> que está sendo verificado.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryString" /> estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">Especifica os requisitos de implementação para leitores de texto XML que derivam desta interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">Especifica os requisitos de inicialização para os leitores de texto XML que leem um buffer.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">A codificação de caracteres do fluxo.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">Especifica os requisitos de inicialização para os leitores de texto XML que lê um fluxo.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">A codificação de caracteres do fluxo.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">Especifica os requisitos de implementação para gravadores de texto XML que derivam desta interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">Especifica os requisitos de inicialização para criadores de texto XML que implementam este método.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">A codificação de caracteres do fluxo.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">
        <see langword="delegate" /> para um método de retorno de chamada ao fechar o leitor.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">O <see cref="T:System.Xml.XmlDictionaryReader" /> que dispara o evento <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">Um identificador exclusivo otimizado para Guids.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">Cria uma nova instância dessa classe com um Guid novo e exclusivo.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Cria uma nova instância dessa classe usando uma matriz de bytes que representa um <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Uma matriz de bytes que representa um <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> fornece menos que 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Cria uma nova instância dessa classe começando em um deslocamento dentro de uma matriz <see langword="byte" /> que representa um <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Um matriz <see langword="byte" /> que representa um <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Posição de deslocamento dentro da matriz <see langword="byte" /> que representa um <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">Cria uma nova instância dessa classe começando em um deslocamento dentro de uma <see langword="char" /> usando um número especificado de entradas.</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Um matriz <see langword="char" /> que representa um <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Posição de deslocamento dentro da matriz <see langword="char" /> que representa um <see cref="T:System.Guid" />.</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">Número de entradas de matriz a ser usado começando em <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.

ou -

<paramref name="count" /> menor que zero ou maior que o comprimento da matriz menos <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> igual a zero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Cria uma nova instância dessa classe usando um <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Um <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">Cria uma nova instância dessa classe usando uma cadeia de caracteres.</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Uma cadeia de caracteres usada para gerar o <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">O tamanho de <paramref name="value" /> é zero.</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Obtém o comprimento da representação de cadeia de caracteres de <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">O comprimento da representação de cadeia de caracteres <see cref="T:System.Xml.UniqueId" />do.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Testa se um objeto é igual a esse <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj" vsli:raw="The object to compare.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for igual a esse <see cref="T:System.Xml.UniqueId" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Cria uma representação de código hash desse <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Uma representação, em inteiro, do código hash desse <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Indica se o <see cref="T:System.Xml.UniqueId" /> é um <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se <see cref="T:System.Xml.UniqueId" /><see langword="false" />for a; caso contrário,. <see cref="T:System.Guid" /></returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Substitui o operador de igualdade para testar a igualdade de dois <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">O primeiro <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">O segundo <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="true" /> se os dois <see cref="T:System.Xml.UniqueId" />s forem iguais ou forem <see langword="null" />; <see langword="false" /> se eles não forem iguais ou se somente um deles for <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Substitui o operador de igualdade para testar a desigualdade de dois <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">O primeiro <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">O segundo <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o operador de igualdade substituído retornar <see langword="false" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">Coloca o valor <see cref="T:System.Xml.UniqueId" /> em uma matriz <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">A matriz <see langword="char" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Posição na matriz <see langword="char" /> em que se começar a inserir o valor <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Número de entradas na matriz <see langword="char" /> preenchidas pelo valor <see cref="T:System.Xml.UniqueId" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">Exibe o valor <see cref="T:System.Xml.UniqueId" /> no formato de cadeia de caracteres.</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Uma representação de cadeia de caracteres do valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">Tenta obter o valor de <see cref="T:System.Xml.UniqueId" /> como um <see cref="T:System.Guid" /> e armazená-lo na matriz de bytes determinada no deslocamento especificado.</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matriz <see langword="byte" /> que conterá o <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Posição na matriz <see langword="byte" /> em que se começar a inserir o valor <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor armazenado nessa instância do <see cref="T:System.Xml.UniqueId" /> for um <see cref="T:System.Guid" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tenta obter o valor de <see cref="T:System.Xml.UniqueId" /> como um <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">O <see cref="T:System.Guid" /> se bem-sucedido; caso contrário <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o UniqueId representar um <see cref="T:System.Guid" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">Permite que cadeias de caracteres otimizadas sejam gerenciadas de uma forma dinâmica.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">Cria um <see cref="T:System.Xml.XmlDictionaryString" /> com base nos parâmetros de entrada e o adiciona a uma coleção interna.</summary>
      <param name="id" vsli:raw="The key value.">O valor da chave.</param>
      <param name="value" vsli:raw="The value.">O valor.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">O <see cref="T:System.Xml.XmlDictionaryString" /> recém-criado que é adicionado a uma coleção interna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">Já existe uma entrada com a chave = <paramref name="id" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">Limpa a coleção interna de todo o conteúdo.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">Verifica se a coleção interna contém uma entrada correspondente a uma chave.</summary>
      <param name="key" vsli:raw="The key to search on.">A chave de pesquisa.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retornar, ele conterá uma cadeia de caracteres se uma entrada for encontrada; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada correspondente a <paramref name="key" /> foi encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Verifica se a coleção interna contém uma entrada correspondente a um valor.</summary>
      <param name="value" vsli:raw="The value to search for.">O valor a ser procurado.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retornar, ele conterá uma cadeia de caracteres se uma entrada for encontrada; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada correspondente a <paramref name="value" /> foi encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Verifica se a coleção interna contém uma entrada correspondente a um valor.</summary>
      <param name="value" vsli:raw="The value to search for.">O valor a ser procurado.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retornar, ele conterá uma cadeia de caracteres se uma entrada for encontrada; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada correspondente a <paramref name="value" /> foi encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">Permite usar um dicionário dinâmico para compactar cadeias de caracteres comuns que aparecem em uma mensagem e manter o estado.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">Cria uma instância dessa classe.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">Limpa as coleções internas.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">Tenta adicionar um <see cref="T:System.Xml.XmlDictionaryString" /> à coleção interna.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">O <see cref="T:System.Xml.XmlDictionaryString" /> a ser adicionado.</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">A chave do <see cref="T:System.Xml.XmlDictionaryString" /> que foi adicionado com êxito.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se foi possível adicionar a cadeia de caracteres; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">Já existe uma entrada com a chave = <paramref name="key" />.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Implementa um dicionário usado para otimizar as implementações do leitor/gravador de XML do WCF (Windows Communication Foundation).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Cria um <see cref="T:System.Xml.XmlDictionary" /> vazio.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">Cria um <see cref="T:System.Xml.XmlDictionary" /> com uma capacidade inicial.</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">O tamanho inicial do dicionário.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Adiciona uma cadeia de caracteres ao <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">Cadeia de caracteres a ser adicionada ao dicionário.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">O <see cref="T:System.Xml.XmlDictionaryString" /> que foi adicionado.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Obtém um <see langword="static" /> vazio <see cref="T:System.Xml.IXmlDictionary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Um <see langword="static" /> vazio <see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Tenta pesquisar uma entrada no dicionário.</summary>
      <param name="key" vsli:raw="Key to look up.">Chave a ser procurada.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Se <paramref name="key" /> for definida, o <see cref="T:System.Xml.XmlDictionaryString" /> mapeado para a chave; caso contrário <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a chave estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Verifica o dicionário em busca de um valor de cadeia de caracteres especificado.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valor da cadeia de caracteres que está sendo verificada.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor estiver no dicionário; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Verifica o dicionário para um <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">O <see cref="T:System.Xml.XmlDictionaryString" /> que está sendo verificado.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryString" /> estiver no dicionário; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">Uma classe <see langword="abstract" /> que o WCF (Windows Communication Foundation) deriva do <see cref="T:System.Xml.XmlReader" /> para realizar serialização e desserialização.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">Cria uma instância dessa classe.  Invocado apenas por suas classes derivadas.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Essa propriedade sempre retorna <see langword="false" />. Suas classes derivadas podem substituir para retornar <see langword="true" /> se elas dão suporte à canonização.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">Retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">As cotas que se aplicam a essa operação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> é <see langword="null" />.

ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.

ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.

ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">As cotas que se aplicam a essa operação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.

ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">As cotas que se aplicam a essa operação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">As cotas que se aplicam a essa operação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="quotas" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">As cotas que se aplicam a essa operação.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">As cotas que se aplicam a essa operação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> com base em um <see cref="T:System.Xml.XmlReader" /> existente.</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">A possível codificação de caracteres da entrada.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">As cotas a serem aplicadas a este leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">As possíveis codificações de caracteres da entrada.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">As cotas a serem aplicadas a este leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">As possíveis codificações de caracteres da entrada.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado ao leitor.</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">O tamanho máximo permitido do buffer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">As possíveis codificações de caracteres da entrada.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">As cotas a serem aplicadas a este leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">A possível codificação de caracteres do fluxo.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">As cotas a serem aplicadas a este leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">As possíveis codificações de caracteres do fluxo.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">As cotas a serem aplicadas a este leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">As possíveis codificações de caracteres do fluxo.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">O tipo MIME da mensagem.</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado ao leitor.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">As possíveis codificações de caracteres do fluxo.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">As cotas a serem aplicadas a este leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">O objeto <see cref="T:System.Text.Encoding" /> que especifica as propriedades de codificação a serem aplicadas.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">As cotas aplicadas ao leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">As cotas aplicadas ao leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">O objeto <see cref="T:System.Text.Encoding" /> que especifica as propriedades de codificação a serem aplicadas.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">As cotas aplicadas ao leitor.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">Este método ainda não foi implementado.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Sempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">Quando substituído em uma classe derivada, obtém o valor de um atributo.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o nome local do atributo.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o namespace do atributo.</param>
      <returns vsli:raw="The value of the attribute.">O valor do atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">Obtém nomes não atomizado.</summary>
      <param name="localName" vsli:raw="The local name.">O nome local.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">O namespace para o <paramref name="localName" /> local.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Obtém o índice do nome local do nó atual dentro de uma matriz de nomes.</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">A matriz de cadeia de caracteres de nomes locais a serem pesquisados.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">O namespace do nó atual.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">O índice do nome local do nó atual dentro de uma matriz de nomes.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> ou um dos nomes na matriz é <see langword="null" />.

ou -

<paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Obtém o índice do nome local do nó atual dentro de uma matriz de nomes.</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">A matriz <see cref="T:System.Xml.XmlDictionaryString" /> de nomes locais a ser pesquisada.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">O namespace do nó atual.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">O índice do nome local do nó atual dentro de uma matriz de nomes.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> ou um dos nomes na matriz é <see langword="null" />.

ou -

<paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Verifica se o parâmetro <paramref name="localName" /> é o nome local do nó atual.</summary>
      <param name="localName" vsli:raw="The local name of the current node.">O nome local do nó atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="localName" /> corresponder ao nome local do nó atual; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Verifica se o parâmetro <paramref name="localName" /> é o nome local do nó atual.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o nome local do nó atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="localName" /> corresponder ao nome local do nó atual; caso contrário <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Verifica se o parâmetro <paramref name="namespaceUri" /> é o namespace do nó atual.</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">O namespace do nó atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="namespaceUri" /> corresponder ao namespace do nó atual; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Verifica se o parâmetro <paramref name="namespaceUri" /> é o namespace do nó atual.</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">Namespace do nó atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="namespaceUri" /> corresponder ao namespace do nó atual; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">Verifica se o leitor está posicionado no início de uma matriz. Essa classe retorna <see langword="false" />, mas as classes derivadas que tem o conceito de matrizes podem retornar <see langword="true" />.</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">O tipo de nó, se for um nó válido; caso contrário, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o leitor estiver posicionado no início de um nó da matriz; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">Testa se a primeira marca é uma marca de início ou marca de elemento vazio, e se o nome local e o URI de namespace correspondem àqueles do nó atual.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o nome local do atributo.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o namespace do atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a primeira marca na matriz é uma marca de início ou marca de elemento vazio e corresponde a <paramref name="localName" /> e <paramref name="namespaceUri" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">Testa se o nó atual é um nó de texto.</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">O tipo do nó que está sendo testado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo de nó for <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" /> ou <see cref="F:System.Xml.XmlNodeType.Attribute" />; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio, e se a propriedade <see cref="P:System.Xml.XmlReader.Name" /> do elemento corresponde ao argumento fornecido.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">A propriedade <see cref="P:System.Xml.XmlReader.Name" /> do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio, e se as propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento correspondem ao argumento fornecido.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio, e se as propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento correspondem ao argumento fornecido.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">Obtém os valores de cota que se aplicam à instância atual dessa classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se aplica à instância atual desta classe.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.DateTime" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Decimal" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Double" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Guid" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Lê ocorrências repetidas de inteiros <see langword="short" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">A matriz na qual os inteiros são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">O número de inteiros a ser colocado na matriz.</param>
      <returns vsli:raw="The number of integers put in the array.">O número de inteiros colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Lê ocorrências repetidas de inteiros em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">A matriz na qual os inteiros são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">O número de inteiros a ser colocado na matriz.</param>
      <returns vsli:raw="The number of integers put in the array.">O número de inteiros colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Lê ocorrências repetidas de inteiros <see langword="long" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">A matriz na qual os inteiros são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">O número de inteiros a ser colocado na matriz.</param>
      <returns vsli:raw="The number of integers put in the array.">O número de inteiros colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Lê ocorrências repetidas de números <see langword="float" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">A matriz na qual os números de ponto flutuante são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">O número de números de ponto flutuante a serem colocados na matriz.</param>
      <returns vsli:raw="The umber of float numbers put in the array.">O número de números de ponto flutuante colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.TimeSpan" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.DateTime" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Decimal" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">Lê ocorrências repetidas do tipo de nós <see cref="T:System.Double" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Guid" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Lê ocorrências repetidas de inteiros <see langword="short" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">A matriz na qual os inteiros são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">O número de inteiros a ser colocado na matriz.</param>
      <returns vsli:raw="The number of integers put in the array.">O número de inteiros colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Lê ocorrências repetidas de inteiros em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">A matriz na qual os inteiros são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">O número de inteiros a ser colocado na matriz.</param>
      <returns vsli:raw="The number of integers put in the array.">O número de inteiros colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Lê ocorrências repetidas de inteiros <see langword="long" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">A matriz na qual os inteiros são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">O número de inteiros a ser colocado na matriz.</param>
      <returns vsli:raw="The number of integers put in the array.">O número de inteiros colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Lê ocorrências repetidas de números <see langword="float" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">A matriz na qual os números de ponto flutuante são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">O número de números de ponto flutuante a serem colocados na matriz.</param>
      <returns vsli:raw="The number of float numbers put in the array.">O número de números flutuantes colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.TimeSpan" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">A matriz na qual os nós são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">O número de nós a ser colocado na matriz.</param>
      <returns vsli:raw="The number of nodes put in the array.">O número de nós colocados na matriz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Uma matriz <see cref="T:System.Boolean" /> dos nós <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Uma matriz <see cref="T:System.Boolean" /> dos nós <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">Converte o conteúdo de um nó em um tipo especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">O <see cref="T:System.Type" /> do valor a ser retornado.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo. Por exemplo, ele pode ser usado ao converter um objeto <see cref="T:System.Xml.XmlQualifiedName" /> em um <c>xs:string</c>. Esse valor pode ser uma referência nula.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">O valor de atributo ou conteúdo de texto concatenado convertido para o tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lê o conteúdo e retorna os bytes binários decodificados de Base64.</summary>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Uma matriz de bytes que contém os bytes binários de Base64 decodificados.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">O tamanho da matriz é maior que a cota de MaxArrayLength para este leitor.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Uma matriz de bytes que contém os bytes binários decodificados <see langword="BinHex" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">O tamanho da matriz é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">O tamanho máximo da matriz.</param>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Uma matriz de bytes que contém os bytes binários decodificados <see langword="BinHex" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">O tamanho da matriz é maior que <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">Lê o conteúdo em uma matriz <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">A matriz na qual os caracteres são colocados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">O número de caracteres a serem colocados na matriz.</param>
      <returns vsli:raw="Number of characters read.">Número de caracteres lidos.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">Converte o conteúdo de um nó em <see langword="decimal" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">A representação <see langword="decimal" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">Converte o conteúdo de um nó em <see langword="float" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">A representação <see langword="float" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">Converte o conteúdo de um nó em <see langword="guid" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">A representação <see langword="guid" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">Converte o conteúdo de um nó em uma representação de nome qualificado.</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">A parte <see cref="P:System.Xml.XmlReader.LocalName" /> do nome qualificado (parâmetro <see langword="out" />).</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">A parte <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do nome qualificado (parâmetro <see langword="out" />).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <returns vsli:raw="The node content in a string representation.">O conteúdo do nó em uma representação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">O tamanho máximo da cadeia de caracteres.</param>
      <returns vsli:raw="Node content in string representation.">O conteúdo do nó na representação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">A matriz de cadeias de caracteres à qual o conteúdo deverá corresponder.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">O índice da entrada em <paramref name="strings" /> que correspondem ao conteúdo.</param>
      <returns vsli:raw="The node content in a string representation.">O conteúdo do nó em uma representação de cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> é <see langword="null" />.

ou -

Uma entrada em <paramref name="strings" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">A matriz de objetos <see cref="T:System.Xml.XmlDictionaryString" /> à qual o conteúdo deverá corresponder.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">O índice da entrada em <paramref name="strings" /> que correspondem ao conteúdo.</param>
      <returns vsli:raw="The node content in a string representation.">O conteúdo do nó em uma representação de cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> é <see langword="null" />.

ou -

Uma entrada em <paramref name="strings" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Converte o conteúdo de um nó em <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">A representação <see cref="T:System.TimeSpan" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">Converte o conteúdo de um nó em um identificador exclusivo.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">O conteúdo do nó representado como um identificador exclusivo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Converte o conteúdo de um nó a uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">O conteúdo do nó representado como uma matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Converte o conteúdo de um nó a uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">O conteúdo do nó representado como uma matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Converte o conteúdo de um nó a uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">O conteúdo do nó representado como uma matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Converte o conteúdo de um nó a uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">O conteúdo do nó representado como uma matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Converte o conteúdo de um nó a uma matriz <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">O conteúdo do nó representado como uma matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Converte o conteúdo de um nó a uma matriz <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">O conteúdo do nó representado como uma matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">Converte o conteúdo de um nó em uma matriz de bytes de Base64.</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">O conteúdo do nó representado como uma matriz de bytes de Base64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Converte o conteúdo de um nó em uma matriz de <see langword="BinHex" /> bytes.</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">O conteúdo do nó representado como uma matriz de <see langword="BinHex" /> bytes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">O elemento não está em um formato válido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">O elemento não está em um formato válido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Converte o conteúdo de um elemento em um número de ponto flutuante (<see cref="T:System.Single" />).</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">O conteúdo do nó representado como um número de ponto flutuante (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">O elemento não está em um formato válido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">O elemento não está em um formato válido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Converte o conteúdo de um elemento em um inteiro (<see cref="T:System.Int32" />).</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">O conteúdo do nó representado como um inteiro (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Converte o conteúdo de um elemento em um inteiro longo (<see cref="T:System.Int64" />).</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">O conteúdo do nó representado como um inteiro longo (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Converte o conteúdo de um elemento em um <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">O conteúdo do nó é representado como um <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">Converte o conteúdo de um elemento em um identificador exclusivo.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">O conteúdo do nó representado como um identificador exclusivo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">O elemento não está em um formato válido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">O elemento não está em um formato válido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">Verifica se o nó atual é um elemento e avança o leitor para o próximo nó.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">Verifica se o nó atual é um elemento com o <paramref name="name" /> determinado e avança o leitor para o próximo nó.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">O nome qualificado do elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Verifica se o nó atual é um elemento com o <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados e avança o leitor para o próximo nó.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Verifica se o nó atual é um elemento com o <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados e avança o leitor para o próximo nó.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Uma matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Uma matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de inteiros (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Uma matriz de inteiros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de inteiros (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Uma matriz de inteiros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Verifica se o nó atual é um elemento com o <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados e avança o leitor para o próximo nó.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">Lê o conteúdo do nó atual em uma cadeia de caracteres.</summary>
      <returns vsli:raw="A string that contains the contents of the current node.">Uma cadeia de caracteres que tem o conteúdo do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Não é possível ler o conteúdo do nó atual.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">O tamanho máximo permitido da cadeia de caracteres foi excedido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">Lê o conteúdo do nó atual em uma cadeia de caracteres com tamanho máximo especificado.</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">Tamanho máximo permitido de cadeia de caracteres.</param>
      <returns vsli:raw="A string that contains the contents of the current node.">Uma cadeia de caracteres que tem o conteúdo do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Não é possível ler o conteúdo do nó atual.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">O tamanho máximo permitido da cadeia de caracteres foi excedido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Uma matriz <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Uma matriz <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">Não implementado.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">O buffer do qual ler.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <returns vsli:raw="Not implemented.">Não implementado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Sempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">Este método ainda não foi implementado.</summary>
      <param name="stream" vsli:raw="The stream to read from.">O fluxo a ser lido.</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">Determina se os comentários são incluídos.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Os prefixos a serem incluídos.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Sempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">Retorna 0, a menos que seja substituído em uma classe derivada.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">Retorna 0, a menos que seja substituído em uma classe derivada.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">Retorna <see langword="null" />, a menos que seja substituído em uma classe derivada. .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Retorna <see langword="null" />, a menos que seja substituído em uma classe derivada.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Retorna <see langword="null" />, a menos que seja substituído em uma classe derivada.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">Contém valores de cota configuráveis para XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">Cria uma nova instância dessa classe.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">Define as propriedades em uma instância de cotas transmitida, com base nos valores nesta instância.</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">A instância <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> para qual os valores serão copiados.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para a instância transmitida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O destino transmitido <paramref name="quotas" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">Obtém uma instância dessa classe com todas as propriedades definidas com valores máximos.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> com as propriedades definidas como <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">Obtém ou define a extensão máxima permitida da matriz.</summary>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">A extensão máxima permitida da matriz. O padrão é 16384.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentando <see langword="set" /> o valor para menor que zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">Obtém ou define o máximo permitido de bytes retornados para cada leitura.</summary>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">O máximo de bytes permitidos retornados para cada leitura. O padrão é 4096.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentando <see langword="set" /> o valor para menor que zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">Obtém ou define a profundidade máxima do nó aninhado.</summary>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">A profundidade máxima do nó aninhado. O padrão é 32;</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">Tentando o valor <see langword="set" /> e os valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">Tentando <see langword="set" /> o valor é menor que zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">Obtém ou define o máximo de caracteres permitido em um nome de tabela.</summary>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">O máximo de caracteres permitidos no nome da tabela. O padrão é 16384.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentando <see langword="set" /> o valor para menor que zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">Obtém ou define o tamanho máximo da cadeia de caracteres retornada pelo leitor.</summary>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">O tamanho máximo da cadeia de caracteres retornado pelo leitor. O padrão é 8192.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentando <see langword="set" /> o valor para menor que zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Obtém as cotas modificadas para o <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">As cotas modificadas para <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />o.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">Enumera os valores de cota configuráveis para XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">Especifica a tamanho máximo permitido da matriz.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">Especifica o máximo permitido de bytes retornados para cada leitura.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">Especifica a profundidade máxima do nó aninhado.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">Especifica o máximo de caracteres permitido em um nome de tabela.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">Especifica o tamanho máximo da cadeia de caracteres retornada pelo leitor.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Representa uma entrada armazenada em um <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">Cria uma instância dessa classe.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">O <see cref="T:System.Xml.IXmlDictionary" /> que contém essa instância.</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">A cadeia de caracteres que é o valor da entrada do dicionário.</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">O inteiro que é a chave da entrada do dicionário.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> é menor que 0 ou maior que <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Representa o <see cref="T:System.Xml.IXmlDictionary" /> transmitido ao construtor desta instância de <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">O <see cref="T:System.Xml.IXmlDictionary" /> para esta entrada de dicionário.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Obtém um <see cref="T:System.Xml.XmlDictionaryString" /> que representa a cadeia de caracteres vazia.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa a cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">Obtém a chave de inteiro para esta instância da classe.</summary>
      <returns vsli:raw="The integer key for this instance of the class.">A chave de inteiro para esta instância da classe.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">Exibe uma representação de texto do objeto.</summary>
      <returns vsli:raw="The string value for this instance of the class.">O valor de cadeia de caracteres para esta instância da classe.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">Obtém o valor de cadeia de caracteres para esta instância da classe.</summary>
      <returns vsli:raw="The string value for this instance of the class.">O valor de cadeia de caracteres para esta instância da classe.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">Representa uma classe abstrata que o WCF (Windows Communication Foundation) deriva de <see cref="T:System.Xml.XmlWriter" /> para realizar serialização e desserialização.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Essa propriedade sempre retorna <see langword="false" />. Suas classes derivadas podem substituir para retornar <see langword="true" /> se elas dão suporte à canonização.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado como o dicionário compartilhado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado como o dicionário compartilhado.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlBinaryWriterSession" /> a ser usado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">O fluxo do qual ler.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado como o dicionário compartilhado.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlBinaryWriterSession" /> a ser usado.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" /> com base em um <see cref="T:System.Xml.XmlWriter" /> existente.</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava XML no formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">A codificação de caracteres do fluxo.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">O número máximo de bytes armazenados em buffer no gravador.</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">Um atributo no cabeçalho SOAP ContentType.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Cria uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava XML no formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">A codificação de caracteres do fluxo.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">O número máximo de bytes armazenados em buffer no gravador.</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">O tipo de conteúdo da parte MIME que contém o Infoset.</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">O limite MIME na mensagem.</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">O URI da id de conteúdo da parte MIME que contém o Infoset.</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">
        <see langword="true" /> para gravar cabeçalhos de mensagem.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o XML do texto.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o XML do texto.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">A codificação de caracteres da saída.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o XML do texto.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">A codificação de caracteres do fluxo.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">Quando implementado por uma classe derivada, ele interrompe a canonicalização iniciada pela chamada <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> correspondente.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">O método ainda não foi implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">Quando implementado por uma classe derivada, ele inicia a canonicalização.</summary>
      <param name="stream" vsli:raw="The stream to write to.">O fluxo para gravação.</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para incluir comentários; caso contrário, <see langword="false" />.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Os prefixos a serem incluídos.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">O método ainda não foi implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the data.">A matriz que contém os dados.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of values to write from the array.">O número de valores a serem gravados da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Grava nós de uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">A matriz que contém os nós.</param>
      <param name="offset" vsli:raw="The starting index in the array.">O índice inicial na matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Grava um nome qualificado e valor do atributo.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">O prefixo do atributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">O nome local do atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">O URI do namespace do atributo.</param>
      <param name="value" vsli:raw="The attribute.">O atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Grava um nome qualificado e valor do atributo.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">O nome local do atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">O URI do namespace do atributo.</param>
      <param name="value" vsli:raw="The attribute.">O atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Codifica de forma assíncrona os bytes binários especificados como Base64 e grava o texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes a ser codificada.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count" vsli:raw="The number of bytes to write.">O número de bytes a serem gravados.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Uma tarefa que representa a operação <see langword="WriteBase64" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Um método <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Grava um elemento com um conteúdo de texto.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">O prefixo do elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="value" vsli:raw="The element content.">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Grava um elemento com um conteúdo de texto.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <param name="value" vsli:raw="The element content.">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Grava o nó XML atual de um <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">O <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para copiar os atributos padrão do <see langword="XmlReader" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Grava o nó XML atual de um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">O <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para copiar os atributos padrão do <see cref="T:System.Xml.XmlReader" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Grava o nome qualificado do namespace. Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">O nome local do nome qualificado.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">O URI do namespace do nome qualificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">Grava o início de um atributo com o prefixo especificado, o nome local e o URI do namespace.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">O prefixo de namespace.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">O nome local do atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">O URI do namespace do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">Grava o início de um atributo com o nome local especificado e o URI do namespace.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">O nome local do atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">O URI do namespace do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Grava a marca de início especificada e a associa ao prefixo e ao namespace determinados.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">O prefixo do elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">O gravador está fechado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">Grava a marca de início especificada e a associa ao namespace fornecido.</summary>
      <param name="localName" vsli:raw="The local name of the element.">O nome local do elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">O URI do namespace do elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">O gravador está fechado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">Grava o conteúdo de texto especificado.</summary>
      <param name="value" vsli:raw="The text to write.">O texto a gravação.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">Grava o nó de texto no qual um <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado no momento.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">O <see cref="T:System.Xml.XmlDictionaryReader" /> do qual obter o valor de texto.</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o leitor está posicionado em um valor de atributo ou conteúdo de elemento; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Grava um valor <see cref="T:System.Guid" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">O valor <see cref="T:System.Guid" /> a ser gravado.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Grava um valor <see cref="T:System.TimeSpan" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">O valor <see cref="T:System.TimeSpan" /> a ser gravado.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Grava um valor de um <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">O valor <see cref="T:System.Xml.IStreamProvider" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> retorna um objeto de fluxo <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Um método <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">Grava um valor de Id exclusiva.</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">O valor de Id exclusiva para gravação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Grava um valor <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">O valor <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Grava de maneira assíncrona um valor de um <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">O valor <see cref="T:System.Xml.IStreamProvider" /> a ser gravado.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">Uma tarefa que representa a operação <see langword="WriteValue" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Um método <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">Grava um atributo XML padrão no nó atual.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">O nome local do atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">O valor do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">Grava um atributo XML no nó atual.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">O nome local do atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">O valor do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Grava um atributo de declaração de namespace.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">O prefixo associado ao namespace fornecido.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">O namespace ao qual o prefixo está associado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Grava um atributo de declaração de namespace.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">O prefixo associado ao namespace fornecido.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">O namespace ao qual o prefixo está associado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
  </members>
</doc>