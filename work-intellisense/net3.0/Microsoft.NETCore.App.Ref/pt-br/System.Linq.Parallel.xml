<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary>Representa uma sequência paralela e classificada.</summary>
      <typeparam name="TSource">O tipo dos elementos na coleção de origem.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary>Retorna um enumerador que itera pela sequência.</summary>
      <returns>Um enumerador que itera pela sequência.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary>Fornece um conjunto de métodos de consulta de objetos que implementam ParallelQuery {TSource}. Este é o equivalente paralelo de <see cref="T:System.Linq.Enumerable" />.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary>Aplica em paralelo uma função acumuladora em uma sequência.</summary>
      <param name="source">Uma sequência a ser agregada.</param>
      <param name="func">Uma função de acumulador a ser invocada em cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor final do acumulador.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="func" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary>Aplica em paralelo uma função acumuladora em uma sequência. O valor de semente especificado é usado como o valor inicial do acumulador.</summary>
      <param name="source">Uma sequência a ser agregada.</param>
      <param name="seed">O valor inicial do acumulador.</param>
      <param name="func">Uma função de acumulador a ser invocada em cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">O tipo do valor do acumulador.</typeparam>
      <returns>O valor final do acumulador.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="func" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary>Aplica em paralelo uma função acumuladora em uma sequência. Essa sobrecarga não está disponível na implementação sequencial.</summary>
      <param name="source">Uma sequência a ser agregada.</param>
      <param name="seed">O valor inicial do acumulador.</param>
      <param name="updateAccumulatorFunc">Uma função de acumulador a ser invocada em cada elemento em uma partição.</param>
      <param name="combineAccumulatorsFunc">Uma função de acumulador a ser invocada produziu resultado do acumulador de cada partição.</param>
      <param name="resultSelector">Uma função para transformar o valor final do acumulador no valor de resultado.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">O tipo do valor do acumulador.</typeparam>
      <typeparam name="TResult">O tipo do valor resultante.</typeparam>
      <returns>O valor final do acumulador transformado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="updateAccumulatorFunc" /> ou <paramref name="combineAccumulatorsFunc" /> ou <paramref name="resultSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary>Aplica em paralelo uma função acumuladora em uma sequência. O valor de semente especificado é usado como o valor inicial do acumulador e a função especificada é usada para selecionar o valor do resultado.</summary>
      <param name="source">Uma sequência a ser agregada.</param>
      <param name="seed">O valor inicial do acumulador.</param>
      <param name="func">Uma função de acumulador a ser invocada em cada elemento.</param>
      <param name="resultSelector">Uma função para transformar o valor final do acumulador no valor de resultado.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">O tipo do valor do acumulador.</typeparam>
      <typeparam name="TResult">O tipo do valor resultante.</typeparam>
      <returns>O valor final do acumulador transformado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="func" /> ou <paramref name="resultSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary>Aplica em paralelo uma função acumuladora em uma sequência. Essa sobrecarga não está disponível na implementação sequencial.</summary>
      <param name="source">Uma sequência a ser agregada.</param>
      <param name="seedFactory">Uma função que retorna o valor inicial do acumulador.</param>
      <param name="updateAccumulatorFunc">Uma função de acumulador a ser invocada em cada elemento em uma partição.</param>
      <param name="combineAccumulatorsFunc">Uma função de acumulador a ser invocada produziu resultado do acumulador de cada partição.</param>
      <param name="resultSelector">Uma função para transformar o valor final do acumulador no valor de resultado.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">O tipo do valor do acumulador.</typeparam>
      <typeparam name="TResult">O tipo do valor resultante.</typeparam>
      <returns>O valor final do acumulador transformado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="seedFactory" /> ou <paramref name="updateAccumulatorFunc" /> ou <paramref name="combineAccumulatorsFunc" /> ou <paramref name="resultSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Determina em paralelo se todos os elementos de uma sequência atendem a uma condição.</summary>
      <param name="source">A sequência a cujos elementos aplicar o predicado.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>true se todos os elementos da sequência de origem passarem no teste no predicado especificado ou se a sequência estiver vazia; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary>Determina se uma sequência paralela contém algum elemento.</summary>
      <param name="source">A sequência para verificar se está vazia.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>true se a sequência de origem contiver elementos; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Determina em paralelo se algum elemento de uma sequência atende a uma condição.</summary>
      <param name="source">Uma sequência a cujos elementos o predicado será aplicado.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>true se algum elemento na sequência de origem for aprovado no teste do predicado especificado; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary>Converte uma <see cref="T:System.Linq.ParallelQuery`1" /> em uma <see cref="T:System.Collections.Generic.IEnumerable`1" /> para forçar a avaliação sequencial da consulta.</summary>
      <param name="source">A sequência a ser convertida como <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A sequência de entrada digitada como <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary>Permite o tratamento de uma fonte de dados como se estivesse ordenada, substituindo o padrão de fora de ordem. AsOrdered pode ser invocado somente em sequências não genéricas retornadas por AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</summary>
      <param name="source">A sequência de entrada.</param>
      <returns>A sequência de origem que manterá a ordem original nos operadores de consulta subsequentes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">lançado se <paramref name="source" /> não contiver elementos 

ou - 
se AsOrdered for chamado durante uma consulta. Ele tem permissão para ser chamado imediatamente após <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> ou <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary>Permite o tratamento de uma fonte de dados como se estivesse ordenada, substituindo o padrão de fora de ordem. AsOrdered pode ser invocado somente em sequências genéricas retornadas por AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</summary>
      <param name="source">A sequência de entrada.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A sequência de origem que manterá a ordem original nos operadores de consulta subsequentes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Gerado se <paramref name="source" /> não contiver elementos 

ou - 
se <paramref name="source" /> não for um dos AsParallel, ParallelEnumerable.Range ou ParallelEnumerable.Repeat.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary>Habilita a paralelização de uma consulta.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> a ser convertido em um <see cref="T:System.Linq.ParallelQuery" />.</param>
      <returns>A origem como um ParallelQuery a ser associada a métodos de extensão ParallelEnumerable.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary>Possibilita a paralelização de uma consulta, conforme originada por um particionador personalizado que é responsável pela divisão da sequência de entrada em partições.</summary>
      <param name="source">Um particionador da sequência de entrada.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O <paramref name="source" /> como um ParallelQuery a ser associado a métodos de extensão ParallelEnumerable.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Habilita a paralelização de uma consulta.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> a ser convertido em um <see cref="T:System.Linq.ParallelQuery`1" />.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A fonte como um <see cref="T:System.Linq.ParallelQuery`1" /> para associar a métodos de extensão ParallelEnumerable.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary>Converte uma <see cref="T:System.Linq.ParallelQuery`1" /> em uma <see cref="T:System.Collections.Generic.IEnumerable`1" /> para forçar a avaliação sequencial da consulta.</summary>
      <param name="source">Uma <see cref="T:System.Linq.ParallelQuery`1" /> a ser convertida em uma <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A fonte como uma <see cref="T:System.Collections.Generic.IEnumerable`1" /> para associar a métodos de extensão sequenciais.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary>Permite que uma consulta intermediária seja tratada como se nenhuma ordem estivesse implícita entre os elementos.</summary>
      <param name="source">A sequência de entrada.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A sequência de origem com ordem arbitrária.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">A sequência de origem.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">Uma sequência de valores que são usados para calcular uma média. A média da sequência de valores.<paramref name="source" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary>Calcula em paralelo a média de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma ou a contagem de elementos na sequência é maior do que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores usados para calcular uma média.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A média da sequência de valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
      <exception cref="T:System.OverflowException">(Gerada como a exceção interna em um <see cref="T:System.AggregateException" />). A função <paramref name="selector" /> retorna um valor superior a MaxValue para o tipo de elemento.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary>Converte os elementos de uma ParallelQuery para o tipo especificado.</summary>
      <param name="source">A sequência que contém os elementos a serem convertidos.</param>
      <typeparam name="TResult">O tipo para o qual os elementos de <paramref name="source" /> deverão ser convertidos.</typeparam>
      <returns>Uma sequência que contém cada elemento da sequência de origem é convertido para o tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.InvalidCastException">O tipo da sequência de origem não pôde ser convertido em <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Essa sobrecarga Concat nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Concatena duas sequências paralelas.</summary>
      <param name="first">A primeira sequência a ser concatenada.</param>
      <param name="second">A sequência a ser concatenada com a primeira sequência.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém os elementos concatenados das duas sequências de entrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary>Em paralelo, determina se uma sequência contém um elemento especificado usando o comparador de igualdade padrão.</summary>
      <param name="source">Uma sequência na qual um valor será localizado.</param>
      <param name="value">O valor a ser localizado na sequência.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>true se a sequência de origem contiver um elemento que tem o valor especificado; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Determina em paralelo se uma sequência contém um elemento especificado usando um <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <param name="source">Uma sequência na qual um valor será localizado.</param>
      <param name="value">O valor a ser localizado na sequência.</param>
      <param name="comparer">Um comparador de igualdade para comparar valores.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>true se a sequência de origem contiver um elemento que tem o valor especificado; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o número de elementos em uma sequência paralela.</summary>
      <param name="source">Uma sequência que contém os elementos a serem contados.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O número de elementos na sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">O número de elementos na origem é maior do que <see cref="F:System.Int32.MaxValue" />. (Nesse caso, é InnerException <see cref="T:System.OverflowException" />) -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna um número que representa quantos elementos na sequência paralela especificada satisfazem uma condição.</summary>
      <param name="source">Uma sequência que contém os elementos a serem contados.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Um número que representa quantos elementos na sequência atendem à condição na função de predicado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">O número de elementos na origem é maior do que <see cref="F:System.Int32.MaxValue" />. (Nesse caso, é InnerException <see cref="T:System.OverflowException" />) -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna os elementos da sequência paralela especificada ou o valor padrão do parâmetro de tipo em uma coleção de singleton se a sequência estiver vazia.</summary>
      <param name="source">A sequência para a qual será retornado um valor padrão se ela estiver vazia.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém default(TSource) se <paramref name="source" /> estiver vazio; caso contrário, <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary>Retorna os elementos da sequência paralela especificada ou o valor especificado em uma coleção de singleton, se a sequência estiver vazia.</summary>
      <param name="source">A sequência para a qual será retornado o valor especificado se ela estiver vazia.</param>
      <param name="defaultValue">O valor a ser retornado se a sequência estiver vazia.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém defaultValue se <paramref name="source" /> estiver vazio; caso contrário, <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna elementos distintos de uma sequência paralela usando o comparador de igualdade padrão para comparar valores.</summary>
      <param name="source">A sequência da qual os elementos duplicados serão removidos.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém elementos distintos de sequência de origem.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Retorna os elementos distintos de uma sequência paralela usando um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</summary>
      <param name="source">A sequência da qual os elementos duplicados serão removidos.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém elementos distintos de sequência de origem.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Retorna o elemento em um índice especificado em uma sequência paralela.</summary>
      <param name="source">Uma sequência da qual retornar um elemento.</param>
      <param name="index">O índice baseado em zero do elemento a ser recuperado.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O elemento na posição especificada na sequência de origem.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que 0 ou maior ou igual ao número de elementos em <paramref name="source" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Retorna o elemento em um índice especificado em uma sequência ou um valor padrão paralelo se o índice estiver fora do intervalo.</summary>
      <param name="source">Uma sequência da qual retornar um elemento.</param>
      <param name="index">O índice baseado em zero do elemento a ser recuperado.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>default(TSource) se o índice estiver fora dos limites da sequência de origem; caso contrário, o elemento na posição especificada na sequência de origem.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary>Retorna uma ParallelQuery{TResult} vazia com o argumento do tipo especificado.</summary>
      <typeparam name="TResult">O tipo a ser atribuído ao parâmetro de tipo da sequência genérica retornada.</typeparam>
      <returns>Uma sequência vazia cujo argumento de tipo é <paramref name="TResult" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Essa sobrecarga Except nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Essa sobrecarga Except nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <param name="comparer">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Produz a diferença de conjunto de duas sequências paralelas usando o comparador de igualdade padrão para comparar os valores.</summary>
      <param name="first">Uma sequência cujos elementos que não estão também em <paramref name="second" /> será retornada.</param>
      <param name="second">Uma sequência cujos elementos que também ocorrem na primeira sequência fará com que esses elementos sejam removido da sequência retornada.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém a diferença de conjunto dos elementos das duas sequências.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Produz a diferença de conjunto de duas sequências paralelas usando o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar os valores.</summary>
      <param name="first">Uma sequência cujos elementos que não estão também em <paramref name="second" /> será retornada.</param>
      <param name="second">Uma sequência cujos elementos que também ocorrem na primeira sequência fará com que esses elementos sejam removido da sequência retornada.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém a diferença de conjunto dos elementos das duas sequências.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o primeiro elemento de uma sequência paralela.</summary>
      <param name="source">A sequência da qual retornar o primeiro elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O primeiro elemento na sequência especificada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna o primeiro elemento em uma sequência paralela que satisfaz uma condição especificada.</summary>
      <param name="source">A sequência da qual retornar um elemento.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O primeiro elemento na sequência que passa o teste na função de predicado especificada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">Nenhum elemento de <paramref name="source" /> satisfaz a condição em <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>Retornará o primeiro elemento de uma sequência paralela ou um valor padrão, se a sequência não contiver elementos.</summary>
      <param name="source">A sequência da qual retornar o primeiro elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>default(TSource) se <paramref name="source" /> estiver vazio; caso contrário, o primeiro elemento em <paramref name="source" />.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna o primeiro elemento da sequência paralela que satisfaz a uma condição ou um valor padrão, caso esse elemento não seja encontrado.</summary>
      <param name="source">A sequência da qual retornar um elemento.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>default(TSource) se <paramref name="source" /> estiver vazio ou se nenhum elemento for aprovado no teste especificado pelo predicado; caso contrário, o primeiro elemento em <paramref name="source" /> que for aprovado no teste especificado pelo predicado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary>Invoca a ação especificada em paralelo para cada elemento no <paramref name="source" />.</summary>
      <param name="source">O <see cref="T:System.Linq.ParallelQuery`1" /> cujos elementos serão processados pelo <paramref name="action" />.</param>
      <param name="action">Uma Ação que será invocada em cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com uma função de seletor de chave especificada.</summary>
      <param name="source">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma sequência de grupos que são classificados em ordem decrescente de acordo com <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e compara as chaves usando um <see cref="T:System.Collections.Generic.IComparer`1" /> especificado.</summary>
      <param name="source">Um <see cref="T:System.Linq.OrderedParallelQuery`1" /> que contém elementos a ser classificados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />. &gt;</typeparam>
      <returns>Uma sequência de grupos que são classificados em ordem decrescente de acordo com <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com a função de seletor de chave especificada e projeta os elementos de cada grupo usando uma função especificada.</summary>
      <param name="source">Um <see cref="T:System.Linq.OrderedParallelQuery`1" /> que contém elementos a ser classificados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="elementSelector">Uma função para mapear cada elemento de origem para um elemento em um <see cref="T:System.Linq.IGrouping`2" />.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo dos elementos no <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <returns>Uma sequência de grupos que são classificados em ordem decrescente de acordo com <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com uma função de seletor de chave. As chaves são comparadas usando um comparador e os elementos de cada grupo são projetados usando uma função especificada.</summary>
      <param name="source">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="elementSelector">Uma função para mapear cada elemento de origem para um elemento em um IGrouping.</param>
      <param name="comparer">Um IComparer{TSource} para comparar as chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo dos elementos no IGrouping</typeparam>
      <returns>Uma sequência de grupos que são classificados em ordem decrescente de acordo com <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</summary>
      <param name="source">A sequência cujos elementos agrupar.</param>
      <param name="keySelector">Uma função para extrair a chave de cada elemento.</param>
      <param name="resultSelector">Uma função para criar um valor de resultado de cada grupo.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</typeparam>
      <returns>Uma sequência de elementos do tipo <paramref name="TResult" />, em que cada elemento representa uma projeção em um grupo e sua chave.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave. As chaves são comparadas usando um comparador especificado.</summary>
      <param name="source">A sequência cujos elementos agrupar.</param>
      <param name="keySelector">Uma função para extrair a chave de cada elemento.</param>
      <param name="resultSelector">Uma função para criar um valor de resultado de cada grupo.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</typeparam>
      <returns>Uma sequência de grupos.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary>Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave. Os elementos de cada grupo são projetados usando uma função especificada.</summary>
      <param name="source">A sequência cujos elementos agrupar.</param>
      <param name="keySelector">Uma função para extrair a chave de cada elemento.</param>
      <param name="elementSelector">Uma função para mapear cada elemento de origem para um elemento em um IGrouping&lt;TKey, TElement&gt;.</param>
      <param name="resultSelector">Uma função para criar um valor de resultado de cada grupo.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo dos elementos em cada IGrouping {TKey, TElement}.</typeparam>
      <typeparam name="TResult">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</typeparam>
      <returns>Uma sequência de elementos do tipo <paramref name="TResult" />, em que cada elemento representa uma projeção em um grupo e sua chave.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave. Os valores da chave são comparados usando um comparador especificado e os elementos de cada grupo são projetados usando uma função especificada.</summary>
      <param name="source">A sequência cujos elementos agrupar.</param>
      <param name="keySelector">Uma função para extrair a chave de cada elemento.</param>
      <param name="elementSelector">Uma função para mapear cada elemento de origem para um elemento em um IGrouping{Key, TElement}.</param>
      <param name="resultSelector">Uma função para criar um valor de resultado de cada grupo.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo dos elementos em cada IGrouping {TKey, TElement}.</typeparam>
      <typeparam name="TResult">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</typeparam>
      <returns>Uma sequência de elementos do tipo <paramref name="TResult" />, em que cada elemento representa uma projeção em um grupo e sua chave.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>Essa sobrecarga GroupJoin nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="outer">Este parâmetro não é usado.</param>
      <param name="inner">Este parâmetro não é usado.</param>
      <param name="outerKeySelector">Este parâmetro não é usado.</param>
      <param name="innerKeySelector">Este parâmetro não é usado.</param>
      <param name="resultSelector">Este parâmetro não é usado.</param>
      <typeparam name="TOuter">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TInner">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TKey">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TResult">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Essa sobrecarga GroupJoin nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="outer">Este parâmetro não é usado.</param>
      <param name="inner">Este parâmetro não é usado.</param>
      <param name="outerKeySelector">Este parâmetro não é usado.</param>
      <param name="innerKeySelector">Este parâmetro não é usado.</param>
      <param name="resultSelector">Este parâmetro não é usado.</param>
      <param name="comparer">Este parâmetro não é usado.</param>
      <typeparam name="TOuter">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TInner">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TKey">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TResult">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>Correlaciona em paralelo os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados. O comparador de igualdade padrão é usado para comparar chaves.</summary>
      <param name="outer">A primeira sequência a ser ingressada.</param>
      <param name="inner">A sequência a ser ingressada à primeira sequência.</param>
      <param name="outerKeySelector">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</param>
      <param name="innerKeySelector">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</param>
      <typeparam name="TOuter">O tipo dos elementos da primeira sequência.</typeparam>
      <typeparam name="TInner">O tipo dos elementos da segunda sequência.</typeparam>
      <typeparam name="TKey">O tipo das chaves retornadas pelas funções de seletor de chave.</typeparam>
      <typeparam name="TResult">O tipo dos elementos de resultado.</typeparam>
      <returns>Uma sequência que tem elementos do tipo <paramref name="TResult" /> que são obtidos executando uma junção agrupada em duas sequências.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Correlaciona em paralelo os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados. Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado é usado para comparar chaves.</summary>
      <param name="outer">A primeira sequência a ser ingressada.</param>
      <param name="inner">A sequência a ser ingressada à primeira sequência.</param>
      <param name="outerKeySelector">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</param>
      <param name="innerKeySelector">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para executar hash e comparar chaves.</param>
      <typeparam name="TOuter">O tipo dos elementos da primeira sequência.</typeparam>
      <typeparam name="TInner">O tipo dos elementos da segunda sequência.</typeparam>
      <typeparam name="TKey">O tipo das chaves retornadas pelas funções de seletor de chave.</typeparam>
      <typeparam name="TResult">O tipo dos elementos de resultado.</typeparam>
      <returns>Uma sequência que tem elementos do tipo <paramref name="TResult" /> que são obtidos executando uma junção agrupada em duas sequências.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Essa sobrecarga Intersect nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Essa sobrecarga Intersect nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <param name="comparer">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Produz a interseção de conjunto de duas sequências em paralelo usando o comparador de igualdade padrão para comparar os valores.</summary>
      <param name="first">A sequência cujos elementos distintos que também são exibidos em <paramref name="second" /> será retornada.</param>
      <param name="second">Uma sequência cujos elementos distintos que também são exibidos na primeira sequência serão retornados.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém os elementos que formam a interseção de conjunto de duas sequências.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Produz a interseção de conjunto de duas sequências paralelas usando o IEqualityComparer{T} especificado para comparar os valores.</summary>
      <param name="first">A sequência cujos elementos distintos que também são exibidos em <paramref name="second" /> será retornada.</param>
      <param name="second">Uma sequência cujos elementos distintos que também são exibidos na primeira sequência serão retornados.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém os elementos que formam a interseção de conjunto de duas sequências.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>Essa sobrecarga Join nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando invocado.</summary>
      <param name="outer">Este parâmetro não é usado.</param>
      <param name="inner">Este parâmetro não é usado.</param>
      <param name="outerKeySelector">Este parâmetro não é usado.</param>
      <param name="innerKeySelector">Este parâmetro não é usado.</param>
      <param name="resultSelector">Este parâmetro não é usado.</param>
      <typeparam name="TOuter">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TInner">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TKey">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TResult">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Essa sobrecarga Join nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando invocado.</summary>
      <param name="outer">Este parâmetro não é usado.</param>
      <param name="inner">Este parâmetro não é usado.</param>
      <param name="outerKeySelector">Este parâmetro não é usado.</param>
      <param name="innerKeySelector">Este parâmetro não é usado.</param>
      <param name="resultSelector">Este parâmetro não é usado.</param>
      <param name="comparer">Este parâmetro não é usado.</param>
      <typeparam name="TOuter">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TInner">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TKey">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TResult">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>Correlaciona em paralelo os elementos de duas sequências com base em chaves de correspondência. O comparador de igualdade padrão é usado para comparar chaves.</summary>
      <param name="outer">A primeira sequência a ser ingressada.</param>
      <param name="inner">A sequência a ser ingressada à primeira sequência.</param>
      <param name="outerKeySelector">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</param>
      <param name="innerKeySelector">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de dois elementos correspondentes.</param>
      <typeparam name="TOuter">O tipo dos elementos da primeira sequência.</typeparam>
      <typeparam name="TInner">O tipo dos elementos da segunda sequência.</typeparam>
      <typeparam name="TKey">O tipo das chaves retornadas pelas funções de seletor de chave.</typeparam>
      <typeparam name="TResult">O tipo dos elementos de resultado.</typeparam>
      <returns>Uma sequência com elementos do tipo <paramref name="TResult" /> obtidos pela execução de uma junção interna em duas sequências.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Correlaciona em paralelo os elementos de duas sequências com base em chaves de correspondência. Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado é usado para comparar chaves.</summary>
      <param name="outer">A primeira sequência a ser ingressada.</param>
      <param name="inner">A sequência a ser ingressada à primeira sequência.</param>
      <param name="outerKeySelector">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</param>
      <param name="innerKeySelector">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de dois elementos correspondentes.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para executar hash e comparar chaves.</param>
      <typeparam name="TOuter">O tipo dos elementos da primeira sequência.</typeparam>
      <typeparam name="TInner">O tipo dos elementos da segunda sequência.</typeparam>
      <typeparam name="TKey">O tipo das chaves retornadas pelas funções de seletor de chave.</typeparam>
      <typeparam name="TResult">O tipo dos elementos de resultado.</typeparam>
      <returns>Uma sequência com elementos do tipo <paramref name="TResult" /> obtidos pela execução de uma junção interna em duas sequências.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="action" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o último elemento de uma sequência paralela.</summary>
      <param name="source">A sequência da qual retornar o último elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor na última posição na sequência de origem.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna o último elemento de uma sequência paralela que satisfaz a uma condição especificada.</summary>
      <param name="source">A sequência da qual retornar um elemento.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O último elemento na sequência que passa o teste na função de predicado especificada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">Nenhum elemento de <paramref name="source" /> satisfaz a condição em <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>Retornará o último elemento de uma sequência paralela ou um valor padrão, se a sequência não contiver elementos.</summary>
      <param name="source">A sequência da qual retornar um elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>default() se a sequência de origem estiver vazia; caso contrário, o último elemento na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna o último elemento de uma sequência em paralelo que satisfaz a uma condição ou um valor padrão, caso esse elemento não seja encontrado.</summary>
      <param name="source">A sequência da qual retornar um elemento.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>default() se a sequência for vazia ou se nenhum elemento passar no teste na função de predicado; caso contrário, o último elemento que passar no teste na função de predicado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna um Int64 que representa o número total de elementos em uma sequência paralela.</summary>
      <param name="source">Uma sequência que contém os elementos a serem contados.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O número de elementos na sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">O número de elementos na origem é maior do que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.OverflowException">O resultado calculado é maior do que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna um Int64 que representa quantos elementos em uma sequência paralela satisfazem a uma condição.</summary>
      <param name="source">Uma sequência que contém os elementos a serem contados.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Um número que representa quantos elementos na sequência atendem à condição na função de predicado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">O número de elementos na origem é maior do que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.OverflowException">O resultado calculado é maior do que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o valor máximo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <typeparam name="TSource">O tipo de elementos na sequência de origem.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor máximo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo do valor retornado por <paramref name="selector" />.</typeparam>
      <returns>O valor máximo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o valor mínimo em uma sequência paralela de valores.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores para determinação do valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</summary>
      <param name="source">Uma sequência de valores da qual será determinado o valor mínimo.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo do valor retornado por <paramref name="selector" />.</typeparam>
      <returns>O valor mínimo na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não contém elementos e <paramref name="TSource" /> é um tipo de valor não anulável.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary>Filtra os elementos de uma ParallelQuery com base em um tipo especificado.</summary>
      <param name="source">A sequência com os elementos a filtrar.</param>
      <typeparam name="TResult">O tipo no qual filtrar os elementos da sequência.</typeparam>
      <returns>Uma sequência que contém elementos da sequência de entrada filtrada por tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Classifica em paralelo os elementos de uma sequência em ordem crescente de acordo com uma chave.</summary>
      <param name="source">Uma sequência de valores a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um OrderedParallelQuery{TSource} cujos elementos são classificados de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Classifica em paralelo os elementos de uma sequência em ordem crescente usando um comparador especificado.</summary>
      <param name="source">Uma sequência de valores a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um IComparer{TKey} para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um OrderedParallelQuery{TSource} cujos elementos são classificados de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Classifica em paralelo os elementos de uma sequência em ordem decrescente de acordo com uma chave.</summary>
      <param name="source">Uma sequência de valores a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma OrderedParallelQuery{TSource} cujos elementos são classificados em ordem decrescente de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Classifica os elementos de uma sequência em ordem decrescente usando um comparador especificado.</summary>
      <param name="source">Uma sequência de valores a serem ordenados.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um IComparer{TKey} para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma OrderedParallelQuery{TSource} cujos elementos são classificados em ordem decrescente de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="KeySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary>Gera uma sequência paralela de números integrais dentro de um intervalo especificado.</summary>
      <param name="start">O valor do primeiro inteiro na sequência.</param>
      <param name="count">O número de inteiros sequenciais a serem gerados.</param>
      <returns>Um IEnumerable&lt;Int32&gt; em C# ou IEnumerable(Of Int32) no Visual Basic que contém um intervalo de números inteiros sequenciais.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que 0 -ou- <paramref name="start" /> + <paramref name="count" /> -1 é maior do que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary>Gera uma sequência paralela que contém um valor repetido.</summary>
      <param name="element">O valor a ser repetido.</param>
      <param name="count">O número de vezes para repetir o valor na sequência gerada.</param>
      <typeparam name="TResult">O tipo do valor a ser repetido na sequência de resultado.</typeparam>
      <returns>Uma sequência que contém um valor repetido.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary>Inverte a ordem dos elementos em uma sequência paralela.</summary>
      <param name="source">Uma sequência de valores a ser revertida.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência cujos elementos correspondem aos elementos da sequência de entrada em ordem inversa.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Projeta em paralelo cada elemento de uma sequência em um novo formulário.</summary>
      <param name="source">Uma sequência de valores na qual uma função de transformação será invocada.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo de elementos retornados pelo seletor.</typeparam>
      <returns>Uma sequência cujos elementos são o resultado da invocação da função de transformação em cada elemento de <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary>Projeta em paralelo cada elemento de uma sequência em um novo formulário incorporando o índice do elemento.</summary>
      <param name="source">Uma sequência de valores na qual uma função de transformação será invocada.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo de elementos retornados pelo seletor.</typeparam>
      <returns>Uma sequência cujos elementos são o resultado de invocar a função de transformação em cada elemento de <paramref name="source" /> com base no índice fornecido para <paramref name="selector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados pela consulta. Essa condição pode ocorrer em cenários de streaming.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary>Projeta em paralelo em cada elemento de uma sequência para um <see cref="T:System.Collections.Generic.IEnumerable`1" /> e mescla as sequências resultantes em uma sequência.</summary>
      <param name="source">Uma sequência de valores a serem projetados.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo dos elementos da sequência retornada pelo seletor.</typeparam>
      <returns>Uma sequência cujos elementos são o resultado de invocar a função de transformação de um para muitos em cada elemento da sequência de entrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary>Projeta em paralelo em cada elemento de uma sequência para um <see cref="T:System.Collections.Generic.IEnumerable`1" /> e mescla as sequências resultantes em uma sequência. O índice de cada elemento de origem é usado no formulário projetado desse elemento.</summary>
      <param name="source">Uma sequência de valores a serem projetados.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo dos elementos da sequência retornada pelo seletor.</typeparam>
      <returns>Uma sequência cujos elementos são o resultado de invocar a função de transformação de um para muitos em cada elemento da sequência de entrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados pela consulta.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" />, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</summary>
      <param name="source">Uma sequência de valores a serem projetados.</param>
      <param name="collectionSelector">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</param>
      <typeparam name="TSource">O tipo dos elementos intermediários coletados por <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo de elementos na sequência de resultados.</typeparam>
      <returns>Uma sequência cujos elementos são o resultado de chamar a função de transformação de um para muitos <paramref name="collectionSelector" /> em cada elemento de <paramref name="source" /> com base no índice fornecido para <paramref name="collectionSelector" /> e então mapear cada um desses elementos de sequência para seus elementos de origem correspondentes para um elemento de resultado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados pela consulta.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" />, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele. O índice de cada elemento de origem é usado no formulário projetado intermediário do elemento.</summary>
      <param name="source">Uma sequência de valores a serem projetados.</param>
      <param name="collectionSelector">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</param>
      <typeparam name="TSource">O tipo dos elementos intermediários coletados por <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TResult">O tipo de elementos a serem retornados.</typeparam>
      <returns>Uma sequência cujos elementos são o resultado de chamar a função de transformação de um para muitos <paramref name="collectionSelector" /> em cada elemento de <paramref name="source" /> com base no índice fornecido para <paramref name="collectionSelector" /> e então mapear cada um desses elementos de sequência para seus elementos de origem correspondentes para um elemento de resultado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados pela consulta.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Essa sobrecarga SequenceEqual nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Gerada toda vez que esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Essa sobrecarga SequenceEqual nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <param name="comparer">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Gerada toda vez que esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Determina se duas sequências paralelas são iguais comparando os elementos usando o comparador de igualdade padrão para o tipo.</summary>
      <param name="first">Uma sequência à qual comparar em segundo lugar.</param>
      <param name="second">Uma sequência a comparar com a primeira sequência de entrada.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>True se duas sequências de origem forem de comprimento igual e seus elementos correspondentes forem iguais de acordo com o comparador de igualdade padrão para seu tipo; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Determina se duas sequências paralelas são iguais comparando seus elementos usando um IEqualityComparer{T} especificado.</summary>
      <param name="first">Uma sequência à qual comparar com <paramref name="second" />.</param>
      <param name="second">Uma sequência a comparar com a primeira sequência de entrada.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> a ser usado para comparar elementos.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>True se duas sequências de origem forem de comprimento igual e seus elementos correspondentes forem iguais de acordo com o comparador de igualdade padrão para seu tipo; caso contrário, false.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o único elemento de uma sequência paralela e gerará uma exceção se não houver exatamente um elemento na sequência.</summary>
      <param name="source">A sequência para retornar o único elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O único elemento de uma sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">A sequência de entrada contém mais de um elemento. -ou- A sequência de entrada está vazia.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna o único elemento de uma sequência paralela que satisfaz uma condição especificada e gera uma exceção se houver mais de um desses elementos.</summary>
      <param name="source">A sequência para retornar o único elemento.</param>
      <param name="predicate">Uma função para testar um elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O único elemento da sequência de entrada que atende a uma condição.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">Nenhum elemento satisfaz a condição na <paramref name="predicate" />. -ou- mais de um elemento satisfaz a condição em <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>Retorna o único elemento de uma sequência paralela ou um valor padrão, se a sequência estiver vazia. Esse método gerará uma exceção se houver mais de um elemento na sequência.</summary>
      <param name="source">A sequência para retornar o único elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O único elemento de sequência de entrada ou default() se a sequência não contiver elementos.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">O <paramref name="source" /> tem mais de um elemento.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna o único elemento de uma sequência paralela que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lançará uma exceção se mais de um elemento satisfizer a condição.</summary>
      <param name="source">A sequência para retornar o único elemento.</param>
      <param name="predicate">Uma função para testar um elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O único elemento de sequência de entrada que satisfaz a condição ou default() se esse elemento não for encontrado.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> está vazio ou vários elementos são retornados.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Ignora um número especificado de elementos em uma sequência paralela e retorna os elementos restantes.</summary>
      <param name="source">A sequência da qual os elementos serão retornados.</param>
      <param name="count">O número de elementos a serem ignorados antes de retornar os elementos restantes.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém os elementos que ocorrem após o índice especificado na sequência de entrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">A contagem é maior que <see cref="F:System.Int32.MaxValue" /></exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Ignora elementos em uma sequência paralela, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</summary>
      <param name="source">A sequência da qual os elementos serão retornados.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém os elementos da sequência de entrada iniciando no primeiro elemento da série linear que não passa no teste especificado pelo predicado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>Ignora elementos em uma sequência paralela, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes. O índice do elemento é usado na lógica da função de predicado.</summary>
      <param name="source">A sequência da qual os elementos serão retornados.</param>
      <param name="predicate">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém os elementos da sequência de entrada iniciando no primeiro elemento da série linear que não passa no teste especificado pelo predicado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados pela consulta.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Decimal.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Double.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Decimal.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Double.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Single.MaxValue" />. -ou- uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary>Calcula em paralelo a soma de uma sequência de valores.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Single.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Decimal.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Double.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo de elementos na sequência de origem.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Decimal.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Double.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int32.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Int64.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Single.MaxValue" />. -ou- uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</summary>
      <param name="source">Uma sequência de valores para calcular a soma.</param>
      <param name="selector">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>A soma dos valores projetados na sequência.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="selector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">A soma é maior que <see cref="F:System.Single.MaxValue" />. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Retorna um número especificado de elementos contíguos do início de uma sequência paralela.</summary>
      <param name="source">A sequência da qual os elementos serão retornados.</param>
      <param name="count">O número de elementos a serem retornados.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém o número especificado de elementos do início da sequência de entrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Retorna os elementos de uma sequência paralela, contanto que uma condição especificada seja verdadeira.</summary>
      <param name="source">A sequência da qual os elementos serão retornados.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém elementos da sequência de entrada que ocorrem antes do elemento no qual o teste não é mais aprovado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>Retorna os elementos de uma sequência paralela, contanto que uma condição especificada seja verdadeira. O índice do elemento é usado na lógica da função de predicado.</summary>
      <param name="source">A sequência da qual os elementos serão retornados.</param>
      <param name="predicate">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma sequência que contém elementos da sequência de entrada que ocorrem antes do elemento no qual o teste não é mais aprovado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados por essa consulta.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary>Executa em paralelo uma ordenação subsequente dos elementos em uma sequência em ordem crescente de acordo com uma chave.</summary>
      <param name="source">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um OrderedParallelQuery{TSource} cujos elementos são classificados de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Executa em paralelo uma ordenação posterior dos elementos em uma sequência em ordem crescente usando um comparador especificado.</summary>
      <param name="source">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um IComparer{TKey} para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um OrderedParallelQuery{TSource} cujos elementos são classificados de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary>Executa em paralelo uma ordenação subsequente dos elementos em uma sequência em ordem decrescente de acordo com uma chave.</summary>
      <param name="source">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma sequência cujos elementos são classificados em ordem decrescente de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Executa em paralelo uma ordenação posterior dos elementos em uma sequência em ordem decrescente usando um comparador especificado.</summary>
      <param name="source">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</param>
      <param name="keySelector">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer">Um IComparer{TKey} para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Uma sequência cujos elementos são classificados em ordem decrescente de acordo com uma chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary>Cria uma matriz de um <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source">Uma sequência da qual criar uma matriz.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Uma matriz que contém os elementos da sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Cria um <see cref="T:System.Collections.Generic.Dictionary`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com uma função de seletor de chave especificada.</summary>
      <param name="source">Uma sequência da qual criar um <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.Dictionary`2" /> que contém chaves e valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> gera uma chave que é uma referência nula (Nothing no Visual Basic). -ou- <paramref name="keySelector" /> produz chaves duplicadas para os dois elementos. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Cria um <see cref="T:System.Collections.Generic.Dictionary`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com uma função de seletor de chave e um comparador de chaves especificados.</summary>
      <param name="source">Uma sequência da qual criar um <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.Dictionary`2" /> que contém chaves e valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> gera uma chave que é uma referência nula (Nothing no Visual Basic). -ou- <paramref name="keySelector" /> produz chaves duplicadas para os dois elementos. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Cria um <see cref="T:System.Collections.Generic.Dictionary`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com as funções especificadas de seletor de chave e seletor de elemento.</summary>
      <param name="source">Uma sequência da qual criar um <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <param name="elementSelector">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo do valor retornado por <paramref name="elementSelector" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.Dictionary`2" /> que contém os valores do tipo <paramref name="TElement" /> selecionados da sequência de entrada</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> gera uma chave que é uma referência nula (Nothing no Visual Basic). -ou- <paramref name="keySelector" /> produz chaves duplicadas para os dois elementos. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Cria um <see cref="T:System.Collections.Generic.Dictionary`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com uma função de seletor de chave, um comparador e uma função de seletor de elemento especificados.</summary>
      <param name="source">Uma sequência da qual criar um <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <param name="elementSelector">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo do valor retornado por <paramref name="elementSelector" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.Dictionary`2" /> que contém os valores do tipo <paramref name="TElement" /> selecionados da sequência de entrada</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> gera uma chave que é uma referência nula (Nothing no Visual Basic). -ou- <paramref name="keySelector" /> produz chaves duplicadas para os dois elementos. -ou- Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary>Cria um <see cref="T:System.Collections.Generic.List`1" /> de um <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source">Uma sequência da qual criar um <see cref="T:System.Collections.Generic.List`1" />.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.List`1" /> que contém elementos da sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Cria um <see cref="T:System.Linq.ILookup`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com uma função de seletor de chave especificada.</summary>
      <param name="source">A sequência da qual criar um <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um <see cref="T:System.Linq.ILookup`2" /> que contém chaves e valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Cria um <see cref="T:System.Linq.ILookup`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com uma função de seletor de chave e um comparador de chaves especificados.</summary>
      <param name="source">A sequência da qual criar um <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns>Um <see cref="T:System.Linq.ILookup`2" /> que contém chaves e valores.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Cria um <see cref="T:System.Linq.ILookup`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com as funções especificadas de seletor de chave e seletor de elemento.</summary>
      <param name="source">A sequência da qual criar um <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <param name="elementSelector">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo do valor retornado por <paramref name="elementSelector" />.</typeparam>
      <returns>Um <see cref="T:System.Linq.ILookup`2" /> que contém valores do tipo <paramref name="TElement" /> selecionados da sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Cria um <see cref="T:System.Linq.ILookup`2" /> de um <see cref="T:System.Linq.ParallelQuery`1" /> de acordo com uma função de seletor de chave, um comparador e uma função de seletor de elemento especificados.</summary>
      <param name="source">A sequência da qual criar um <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Uma função para extrair uma chave de cada elemento.</param>
      <param name="elementSelector">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TKey">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">O tipo do valor retornado por <paramref name="elementSelector" />.</typeparam>
      <returns>Uma Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;) que contém os valores do tipo TElement selecionado da sequência de entrada.</returns>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Essa sobrecarga Union nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Essa sobrecarga Union nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando chamado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <param name="comparer">Este parâmetro não é usado.</param>
      <typeparam name="TSource">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Produz a união de conjunto de duas sequências paralelas usando o comparador de igualdade padrão.</summary>
      <param name="first">Uma sequência cujos elementos distintos formam o primeiro conjunto da união.</param>
      <param name="second">Uma sequência cujos elementos distintos formam o segundo conjunto da união.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém os elementos de ambas as sequências de entrada, exceto as duplicatas.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Produz a união de conjunto de duas sequências paralelas usando um IEqualityComparer{T} especificado.</summary>
      <param name="first">Uma sequência cujos elementos distintos formam o primeiro conjunto da união.</param>
      <param name="second">Uma sequência cujos elementos distintos formam o segundo conjunto da união.</param>
      <param name="comparer">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</param>
      <typeparam name="TSource">O tipo dos elementos das sequências de entrada.</typeparam>
      <returns>Uma sequência que contém os elementos de ambas as sequências de entrada, exceto as duplicatas.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Filtra uma sequência paralela de valores com base em um predicado.</summary>
      <param name="source">Uma sequência para filtrar.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos da fonte.</typeparam>
      <returns>Uma sequência que contém elementos da sequência de entrada que satisfazem à condição.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>Filtra uma sequência paralela de valores com base em um predicado. O índice de cada elemento é usado na lógica da função de predicado.</summary>
      <param name="source">Uma sequência para filtrar.</param>
      <param name="predicate">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TSource">O tipo dos elementos da fonte.</typeparam>
      <returns>Uma sequência que contém elementos da sequência de entrada que satisfazem à condição.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ou <paramref name="predicate" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Mais de <see cref="F:System.Int32.MaxValue" /> elementos são enumerados pela consulta.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary>Define o <see cref="T:System.Threading.CancellationToken" /> a associar à consulta.</summary>
      <param name="source">Um ParallelQuery no qual definir a opção.</param>
      <param name="cancellationToken">Um token de cancelamento.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O ParallelQuery que representa a mesma consulta como origem, mas com o token de cancelamento registrado.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Threading.CancellationTokenSource" /> associados ao <paramref name="cancellationToken" /> foi descartado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="WithCancellation" /> é usado várias vezes na consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Define o grau de paralelismo a ser usado em uma consulta. O grau de paralelismo é o número máximo de tarefas que serão usadas simultaneamente para processar a consulta.</summary>
      <param name="source">Um ParallelQuery no qual definir o limite em graus de paralelismo.</param>
      <param name="degreeOfParallelism">O grau de paralelismo para a consulta. O valor padrão é Math.Min(<see cref="P:System.Environment.ProcessorCount" />, <see langword="MAX_SUPPORTED_DOP" />) em que <see langword="MAX_SUPPORTED_DOP" /> é 512.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>ParallelQuery representa a mesma consulta que a origem, com a limitação no grau de paralelismo definido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="degreeOfParallelism" /> é menor que 1 ou maior que 511.</exception>
      <exception cref="T:System.InvalidOperationException">WithDegreeOfParallelism é usado várias vezes na consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary>Define o modo de execução da consulta.</summary>
      <param name="source">Um ParallelQuery no qual definir a opção.</param>
      <param name="executionMode">O modo no qual executar a consulta.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O ParallelQuery que representa a mesma consulta como fonte, mas com o modo de execução registrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="executionMode" /> não é um valor <see cref="T:System.Linq.ParallelExecutionMode" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">WithExecutionMode é usado várias vezes na consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary>Define as opções de mesclagem para essa consulta, que especifica como a consulta armazenará em buffer a saída.</summary>
      <param name="source">Um ParallelQuery no qual definir a opção.</param>
      <param name="mergeOptions">As opções de mesclagem definidas para esta consulta.</param>
      <typeparam name="TSource">O tipo dos elementos de <paramref name="source" />.</typeparam>
      <returns>O ParallelQuery que representa a mesma consulta como fonte, mas com opções de mesclagem registradas.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> é uma referência nula (Nada no Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mergeOptions" /> não é um valor <see cref="T:System.Linq.ParallelMergeOptions" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="WithMergeOptions" /> é usado várias vezes na consulta.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary>Essa sobrecarga de Zip nunca deve ser chamada. Esse método está marcado como obsoleto e sempre gera <see cref="T:System.NotSupportedException" /> quando invocado.</summary>
      <param name="first">Este parâmetro não é usado.</param>
      <param name="second">Este parâmetro não é usado.</param>
      <param name="resultSelector">Este parâmetro não é usado.</param>
      <typeparam name="TFirst">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TSecond">Esse parâmetro de tipo não é usado.</typeparam>
      <typeparam name="TResult">Esse parâmetro de tipo não é usado.</typeparam>
      <returns>Essa sobrecarga sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">A exceção que ocorre quando esse método é chamado.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary>Mescla em paralelo duas sequências usando a função de predicado especificada.</summary>
      <param name="first">A primeira sequência a compactar.</param>
      <param name="second">A segunda sequência a compactar.</param>
      <param name="resultSelector">Uma função para criar um elemento de resultado de dois elementos correspondentes.</param>
      <typeparam name="TFirst">O tipo dos elementos da primeira sequência.</typeparam>
      <typeparam name="TSecond">O tipo dos elementos da segunda sequência.</typeparam>
      <typeparam name="TResult">O tipo dos elementos de retorno.</typeparam>
      <returns>Uma sequência com elementos do tipo <paramref name="TResult" /> que são obtidos pela execução de <paramref name="resultSelector" /> par a par em duas sequências. Se os comprimentos de sequência forem diferentes, isso truncará o comprimento da sequência mais curta.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> ou <paramref name="second" /> ou <paramref name="resultSelector" /> é uma referência nula (Nothing no Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">A consulta foi cancelada com o token transmitido pelo <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Uma ou mais exceções ocorreram durante a avaliação da consulta.</exception>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary>O modo de execução de consulta é uma dica que especifica como o sistema deve tratar as compensações de desempenho ao paralelizar consultas.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary>Essa é a configuração padrão. O PLINQ examinará a estrutura da consulta e paralelizará a consulta apenas se provavelmente isso resultará no aumento de velocidade. Se a estrutura de consulta indicar que não é provável que esse aumento de velocidade seja obtido, o PLINQ executará a consulta como uma consulta LINQ to Objects comum.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary>Paralelizar toda a consulta, mesmo que isso signifique usar algoritmos de alta sobrecarga. Use esse sinalizador nos casos em que você sabe que a execução paralela da consulta resultará no aumento de velocidade, mas o PLINQ no modo Atual executaria como sequencial.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary>Especifica o tipo preferencial de mesclagem de saída a ser usado em uma consulta. Em outras palavras, ele indica como o PLINQ deve mesclar os resultados de várias partições novamente em uma sequência de resultados. Isso é apenas uma dica e pode não ser respeitado pelo sistema ao paralelizar todas as consultas.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary>Usar uma mesclagem com buffers de saída de um tamanho escolhido pelo sistema. Os resultados acumularão em um buffer de saída antes de estarem disponíveis para o consumidor da consulta.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary>Usar o tipo de mesclagem padrão, que é AutoBuffered.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary>Usar uma mesclagem com buffers de saída cheios. O sistema acumulará todos os resultados antes de disponibilizá-los para o consumidor da consulta.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary>Usar uma mesclagem sem buffers de saída. Assim que os elementos de resultado tiverem sido computados, disponibilizar esse elemento para o consumidor na consulta.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary>Representa uma sequência paralela.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera pela sequência.</summary>
      <returns>Um enumerador que itera pela sequência.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary>Representa uma sequência paralela.</summary>
      <typeparam name="TSource">O tipo de elemento na sequência de origem.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary>Retorna um enumerador que itera pela sequência.</summary>
      <returns>Um enumerador que itera pela sequência.</returns>
    </member>
  </members>
</doc>