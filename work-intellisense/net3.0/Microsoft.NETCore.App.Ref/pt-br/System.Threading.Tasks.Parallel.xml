<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary vsli:raw="Provides support for parallel loops and regions.">Fornece suporte para regiões e loops paralelos.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel.">Executa um loop <see langword="for" /> no qual as iterações podem ser executadas em paralelo.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> no qual as iterações podem ser executadas em paralelo, as opções do loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and loop options can be configured.">Executa um loop <see langword="for" /> em que as iterações podem ser executadas em paralelo e as opções de loop podem ser configuradas.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> com índices de 64 bits no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ParallelLoopResult&quot; /&gt; structure that contains information on what portion of the loop completed.">Uma estrutura <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel.">Executa um loop <see langword="for" /> com índices de 64 bits no qual as iterações podem ser executadas em paralelo.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> com índices de 64 bits no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado de loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.">Executa um loop <see langword="for" /> com índices de 64 bits no qual as iterações podem ser executadas em paralelo e opções de loop podem ser configuradas.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> com os dados locais de thread no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> com os dados locais do thread nos quais iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> com índices de 64 bits e dados locais de thread no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa um loop <see langword="for" /> com índices de 64 bits e dados locais do thread nos quais iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">O índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">O índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each thread.">O delegado da função que retorna o estado inicial dos dados locais para cada thread.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each thread.">O delegado que executa uma ação final no estado local de cada thread.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />, no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">O particionador solicitável que contém a fonte de dados original.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the source orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Any methods in the source orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no particionador solicitável <paramref name="source" /> retorna <see langword="false" />.  

ou - 
A propriedade <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> no particionador solicitável de origem retorna <see langword="false" />.  

ou - 
Quaisquer métodos no particionador solicitável de origem retorna <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception thrown from one of the specified delegates.">A exceção gerada de um dos representantes especificados.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />, em que iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">O particionador ordenável que contém a fonte de dados original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no particionador solicitável <paramref name="source" /> retorna <see langword="false" />.  

ou - 
A propriedade <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> no particionador solicitável <paramref name="source" /> retorna <see langword="false" />.  

ou - 
A exceção que é gerada quando qualquer método no particionador solicitável <paramref name="source" /> retorna <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">A exceção que é gerada para conter uma exceção gerada de uma dos delegados especificados.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.Concurrent.Partitioner" />, na qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">O particionador que contém a fonte de dados original.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no particionador <paramref name="source" /> retorna <see langword="false" />.  

ou - 
O método no particionador <paramref name="source" /> retorna <see langword="null" />.  

ou - 
O método <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> no particionador <paramref name="source" /> não retorna o número de partições correto.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">A exceção que é gerada para conter uma exceção gerada de uma dos delegados especificados.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.Concurrent.Partitioner" /> no qual as iterações podem ser executadas em paralelo.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">O particionador que contém a fonte de dados original.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no particionador <paramref name="source" /> retorna <see langword="false" />.  

ou - 
A exceção que é gerada quando qualquer método no particionador <paramref name="source" /> retorna <see langword="null" />.  

ou - 
O método <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> no particionador <paramref name="source" /> não retorna o número de partições correto.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">A exceção que é gerada para conter uma exceção gerada de uma dos delegados especificados.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.Concurrent.Partitioner" />, em que iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">O particionador que contém a fonte de dados original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no particionador <paramref name="source" /> retorna <see langword="false" />.  

ou - 
A exceção que é gerada quando qualquer método no particionador <paramref name="source" /> retorna <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">A exceção que é gerada para conter uma exceção gerada de uma dos delegados especificados.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.Concurrent.Partitioner" /> no qual as iterações podem ser executadas em paralelo e as opções de loop podem ser configuradas.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">O particionador que contém a fonte de dados original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no particionador <paramref name="source" /> retorna <see langword="false" />.  

ou - 
A exceção que é gerada quando qualquer método no particionador <paramref name="source" /> retorna <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">A exceção que é gerada para conter uma exceção gerada de uma dos delegados especificados.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com índices de 64 bits em uma <see cref="T:System.Collections.IEnumerable" /> na qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em uma <see cref="T:System.Collections.IEnumerable" /> na qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.IEnumerable" /> no qual as iterações podem ser executadas em paralelo.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em índices de 64 bits em um <see cref="T:System.Collections.IEnumerable" />, no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado de loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.IEnumerable" />, no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado de loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) em um <see cref="T:System.Collections.IEnumerable" /> no qual as iterações podem ser executadas em paralelo e as opções de loop podem ser configuradas.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com os dados locais do thread em um <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />, no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">O particionador solicitável que contém a fonte de dados original.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retorna <see langword="false" /> ou o particionador retorna partições <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes and  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com índices de 64 bits e dados locais do thread em um <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />, no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">O particionador solicitável que contém a fonte de dados original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; or &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> ou <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retorna <see langword="false" /> ou o particionador retorna partições <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais geradas em todos os threads.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com os dados de local de thread em um <see cref="T:System.Collections.Concurrent.Partitioner" />, no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">O particionador que contém a fonte de dados original.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retorna <see langword="false" /> ou o particionador retorna partições <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com os dados locais do thread em um <see cref="T:System.Collections.Concurrent.Partitioner" />, no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">O particionador que contém a fonte de dados original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">O tipo dos elementos em <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados locais do thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">A propriedade <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> no <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retorna <see langword="false" /> ou o particionador retorna partições <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais geradas em todos os threads.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com índices de dados de local de thread em um <see cref="T:System.Collections.IEnumerable" />, no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados do local de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com os dados de local de thread em um <see cref="T:System.Collections.IEnumerable" /> no qual as iterações podem ser executadas em paralelo e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados do local de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com os dados locais do thread em um <see cref="T:System.Collections.IEnumerable" /> no qual as iterações podem ser executadas em paralelo, as opções de loop podem ser configuradas e o estado do loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados do local de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data and 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Executa uma operação <see langword="foreach" /> (<see langword="For Each" /> no Visual Basic) com os dados locais de thread e índices de 64 bits em um <see cref="T:System.Collections.IEnumerable" />, no qual iterações podem ser executadas em paralelo, opções de loop podem ser configuradas e o estado de loop pode ser monitorado e manipulado.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Uma fonte de dados enumerável.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">O delegado da função que retorna o estado inicial dos dados locais para cada tarefa.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">O delegado invocado uma vez por iteração.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">O delegado que executa uma ação final no estado local de cada tarefa.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">O tipo de dados na fonte.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">O tipo dos dados do local de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Uma estrutura que contém informações sobre qual parte do loop foi concluída.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="source" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="body" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localInit" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="localFinally" /> é <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">O <see cref="T:System.Threading.CancellationToken" /> no argumento <paramref name="parallelOptions" /> foi cancelado.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">A exceção que contém todas as exceções individuais lançadas em todos os threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel.">Executa cada uma das ações fornecidas, possivelmente em paralelo.</summary>
      <param name="actions" vsli:raw="An array of &lt;see cref=&quot;T:System.Action&quot; /&gt; to execute.">Uma matriz de <see cref="T:System.Action" /> para executar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="actions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">A exceção que é gerada quando qualquer ação na matriz <paramref name="actions" /> gerar uma exceção.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">A matriz <paramref name="actions" /> contém um elemento <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.">Executa cada uma das ações fornecidas, possivelmente em paralelo, a menos que a operação seja cancelada pelo usuário.</summary>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Um objeto que configura o comportamento dessa operação.</param>
      <param name="actions" vsli:raw="An array of actions to execute.">Uma matriz de ações a serem executadas.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; is set.">O <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> está definido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="actions" /> é <see langword="null" />.  

ou - 
O argumento <paramref name="parallelOptions" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">A exceção que é gerada quando qualquer ação na matriz <paramref name="actions" /> gerar uma exceção.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">A matriz <paramref name="actions" /> contém um elemento <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">O <see cref="T:System.Threading.CancellationTokenSource" /> associado ao <see cref="T:System.Threading.CancellationToken" /> no <paramref name="parallelOptions" /> foi descartado.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary vsli:raw="Provides completion status on the execution of a &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop.">Fornece o status de conclusão da execução de um loop <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary vsli:raw="Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.">Especifica se o loop foi executado até a conclusão, por exemplo, todas as iterações do loop foram executadas e o loop não recebeu uma solicitação para ser encerrado prematuramente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the loop ran to completion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">true se o loop foi executado até a conclusão; caso contrário, false;</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary vsli:raw="Gets the index of the lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">Obtém o índice de menor iteração do qual <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> foi chamado.</summary>
      <returns vsli:raw="Returns an integer that represents the lowest iteration from which the Break statement was called.">Retorna um inteiro que representa a iteração mais baixa da qual a instrução break foi chamada.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary vsli:raw="Enables iterations of parallel loops to interact with other iterations. An instance of this class is provided by the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class to each loop; you can not create instances in your code.">Permite que iterações de loops paralelos interajam com outras iterações. Uma instância dessa classe é fornecida pela classe <see cref="T:System.Threading.Tasks.Parallel" /> a cada loop. Você não pode criar instâncias no seu código.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution of iterations beyond the current iteration at the system's earliest convenience.">Comunica que o loop de <see cref="T:System.Threading.Tasks.Parallel" /> deve encerrar a execução de iterações além da iteração atual, conforme a necessidade mais recente do sistema.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method was previously called. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">O método <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> foi chamado anteriormente. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> e <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> não podem ser usados em combinação por iterações do mesmo loop.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary vsli:raw="Gets whether any iteration of the loop has thrown an exception that went unhandled by that iteration.">Obtém se qualquer iteração do loop gerou uma exceção que ficou sem tratamento por aquela iteração.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an unhandled exception was thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se uma exceção sem tratamento foi gerada; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary vsli:raw="Gets whether any iteration of the loop has called the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method.">Obtém se qualquer iteração do loop chamou o método <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any iteration has stopped the loop by calling the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se qualquer iteração tiver parado o loop chamando o <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> método; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary vsli:raw="Gets the lowest iteration of the loop from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">Obtém a menor iteração do loop do qual <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> foi chamado.</summary>
      <returns vsli:raw="The lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called. In the case of a &lt;see cref=&quot;M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})&quot; /&gt; loop, the value is based on an internally-generated index.">A iteração mais baixa <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> da qual foi chamada. No caso de um <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" /> loop, o valor é baseado em um índice gerado internamente.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary vsli:raw="Gets whether the current iteration of the loop should exit based on requests made by this or other iterations.">Obtém se a iteração atual do loop deve sair com base nas solicitações feitas por esta ou outras iterações.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current iteration should exit; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a iteração atual deve sair; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution at the system's earliest convenience.">Comunica que o loop <see cref="T:System.Threading.Tasks.Parallel" /> deve cessar a execução assim que for possível para o sistema.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; method was called previously. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">O método <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> foi chamado anteriormente. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> e <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> não podem ser usados em combinação por iterações do mesmo loop.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary vsli:raw="Stores options that configure the operation of methods on the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class.">Armazena opções que configuram a operação dos métodos na classe <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">Obtém ou define o <see cref="T:System.Threading.CancellationToken" /> associado a esta instância do <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
      <returns vsli:raw="The token that is associated with this instance.">O token associado a essa instância.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary vsli:raw="Gets or sets the maximum number of concurrent tasks enabled by this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">Obtém ou define o número máximo de tarefas simultâneas habilitadas por esta instância <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
      <returns vsli:raw="An integer that represents the maximum degree of parallelism.">Um inteiro que representa o grau máximo de paralelismo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is being set to zero or to a value that is less than -1.">A propriedade está sendo definida como zero ou com um valor menor que -1.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.Tasks.TaskScheduler&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance. Setting this property to null indicates that the current scheduler should be used.">Obtém ou define o <see cref="T:System.Threading.Tasks.TaskScheduler" /> associado a esta instância do <see cref="T:System.Threading.Tasks.ParallelOptions" />. A definição dessa propriedade como nula indica que o agendador atual deve ser usado.</summary>
      <returns vsli:raw="The task scheduler that is associated with this instance.">O agendador de tarefas associado a esta instância.</returns>
    </member>
  </members>
</doc>