<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary>Compara dois objetos quanto à equivalência, ignorando maiúsculas e minúsculas em cadeias de caracteres.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> usando o <see cref="P:System.Threading.Thread.CurrentCulture" /> do thread atual.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> usando o <see cref="T:System.Globalization.CultureInfo" /> especificado.</summary>
      <param name="culture">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado para o novo <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary>Executa uma comparação que não diferencia maiúsculas de minúsculas de dois objetos do mesmo tipo e retorna um valor que indica se um é menor que, igual a ou maior que o outro.</summary>
      <param name="a">O primeiro objeto a ser comparado.</param>
      <param name="b">O segundo objeto a ser comparado.</param>
      <returns>Um inteiro assinado que indica os valores relativos de <paramref name="a" /> e <paramref name="b" />, conforme mostrado na tabela a seguir.  
  Valor 
  Significado 
  Menor que zero 
 <paramref name="a" /> é menor que <paramref name="b" />, com o uso de maiúsculas ignorado.  

  Zero 
 <paramref name="a" /> é igual a <paramref name="b" />, com o uso de maiúsculas ignorado.  

  Maior que zero 
 <paramref name="a" /> é maior que <paramref name="b" />, com o uso de maiúsculas ignorado.</returns>
      <exception cref="T:System.ArgumentException">Nem <paramref name="a" /> nem <paramref name="b" /> implementam a interface <see cref="T:System.IComparable" />.  

ou - 
<paramref name="a" /> e <paramref name="b" /> são de tipos diferentes.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary>Obtém uma instância de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está associada ao <see cref="P:System.Threading.Thread.CurrentCulture" /> do thread atual e que está sempre disponível.</summary>
      <returns>Uma instância do <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está associada <see cref="P:System.Threading.Thread.CurrentCulture" /> ao do thread atual.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary>Obtém uma instância de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está associada ao <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> e que está sempre disponível.</summary>
      <returns>Uma instância do <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está associada a <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary>Fornece um código hash para um objeto, usando um algoritmo de hash que não diferencia maiúsculas de minúsculas em cadeias de caracteres.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> usando o <see cref="P:System.Threading.Thread.CurrentCulture" /> do thread atual.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> usando o <see cref="T:System.Globalization.CultureInfo" /> especificado.</summary>
      <param name="culture">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado para o novo <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary>Obtém uma instância de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está associada ao <see cref="P:System.Threading.Thread.CurrentCulture" /> do thread atual e que está sempre disponível.</summary>
      <returns>Uma instância do <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está associada <see cref="P:System.Threading.Thread.CurrentCulture" /> ao do thread atual.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary>Obtém uma instância de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está associada ao <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> e que está sempre disponível.</summary>
      <returns>Uma instância do <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está associada a <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary>Retorna um código hash para o objeto específico, usando um algoritmo de hash que não diferencia maiúsculas de minúsculas em cadeias de caracteres.</summary>
      <param name="obj">O <see cref="T:System.Object" /> para o qual um código hash deve ser retornado.</param>
      <returns>Um código hash para o objeto específico, usando um algoritmo de hash que não diferencia maiúsculas de minúsculas em cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary>Fornece a classe base <see langword="abstract" /> para uma coleção fortemente tipada.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.CollectionBase" /> com a capacidade inicial padrão.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.CollectionBase" /> com a capacidade especificada.</summary>
      <param name="capacity">O número de elementos que a nova lista pode armazenar inicialmente.</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary>Obtém ou define o número de elementos que o <see cref="T:System.Collections.CollectionBase" /> pode conter.</summary>
      <returns>O número de elementos que o <see cref="T:System.Collections.CollectionBase" /> pode conter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> é definido como um valor menor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível no sistema.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary>Remove todos os objetos da instância <see cref="T:System.Collections.CollectionBase" />. Esse método não pode ser substituído.</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary>Obtém o número de elementos contidos na instância <see cref="T:System.Collections.CollectionBase" />. Essa propriedade não pode ser substituída.</summary>
      <returns>O número de elementos contidos na instância <see cref="T:System.Collections.CollectionBase" />.  
A recuperação do valor dessa propriedade é uma operação O(1).</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary>Retorna um enumerador que itera pela instância <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para a instância <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary>Obtém uma <see cref="T:System.Collections.ArrayList" /> que contém a lista de elementos na instância de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>Uma <see cref="T:System.Collections.ArrayList" /> que representa a própria instância de <see cref="T:System.Collections.CollectionBase" /> .  
A recuperação do valor dessa propriedade é uma operação O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary>Obtém uma <see cref="T:System.Collections.IList" /> que contém a lista de elementos na instância de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>Uma <see cref="T:System.Collections.IList" /> que representa a própria instância de <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary>Executa processos personalizados adicionais ao limpar o conteúdo da instância <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary>Executa processos adicionais personalizados após limpar o conteúdo da instância <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary>Executa os processos personalizados adicionais antes de inserir um novo elemento na instância <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> será inserido.</param>
      <param name="value">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais após inserir um novo elemento na instância de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> será inserido.</param>
      <param name="value">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais ao remover um elemento da instância <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> pode ser encontrado.</param>
      <param name="value">O valor do elemento a ser removido de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais após remover um elemento da instância de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> pode ser encontrado.</param>
      <param name="value">O valor do elemento a ser removido de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais antes de definir um valor na instância <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="oldValue" /> pode ser encontrado.</param>
      <param name="oldValue">O valor a ser substituído por <paramref name="newValue" />.</param>
      <param name="newValue">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais após configurar um valor na instância de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="oldValue" /> pode ser encontrado.</param>
      <param name="oldValue">O valor a ser substituído por <paramref name="newValue" />.</param>
      <param name="newValue">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary>Executa processos personalizados adicionais ao validar um valor.</summary>
      <param name="value">O objeto a ser validado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary>Remove o elemento no índice especificado da instância <see cref="T:System.Collections.CollectionBase" />. Este método não é substituível.</summary>
      <param name="index">O índice de base zero do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia todo o <see cref="T:System.Collections.CollectionBase" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.CollectionBase" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
O número de elementos na origem <see cref="T:System.Collections.CollectionBase" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.CollectionBase" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.CollectionBase" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.CollectionBase" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary>Adiciona um objeto ao final do <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">O objeto <see cref="T:System.Object" /> a ser adicionado ao final do <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>O índice <see cref="T:System.Collections.CollectionBase" /> ao qual o <paramref name="value" /> foi adicionado.</returns>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.CollectionBase" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.CollectionBase" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se o <see cref="T:System.Collections.CollectionBase" /> contém um elemento específico.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.CollectionBase" /> contiver o <paramref name="value" /> especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice de base zero da primeira ocorrência dentro de todo o <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>O índice baseado em zero da primeira ocorrência de <paramref name="value" /> em todo o <see cref="T:System.Collections.CollectionBase" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insere um elemento no <see cref="T:System.Collections.CollectionBase" />, no índice especificado.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.Object" /> a ser inserido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.CollectionBase" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.CollectionBase" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.CollectionBase" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.CollectionBase" /> tiver um valor fixo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.CollectionBase" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.CollectionBase" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary>Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="value" /> não foi localizado no objeto <see cref="T:System.Collections.CollectionBase" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.CollectionBase" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.CollectionBase" /> tem um tamanho fixo.</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary>Fornece a classe base <see langword="abstract" /> para uma coleção fortemente tipada de pares chave-valor.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary>Limpa o conteúdo da instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos <see cref="T:System.Collections.DictionaryBase" /> para um objeto <see cref="T:System.Array" /> unidimensional no índice especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados da instância de <see cref="T:System.Collections.DictionaryBase" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
O número de elementos na origem <see cref="T:System.Collections.DictionaryBase" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.DictionaryBase" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary>Obtém o número de elementos contidos na instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>O número de elementos contidos na instância <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary>Obtém a lista de elementos contidos na instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Uma <see cref="T:System.Collections.IDictionary" /> que representa a própria instância de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary>Retorna um <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera pela instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Um <see cref="T:System.Collections.IDictionaryEnumerator" /> para a instância <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary>Obtém a lista de elementos contidos na instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Um <see cref="T:System.Collections.Hashtable" /> que representa <see cref="T:System.Collections.DictionaryBase" /> a instância em si.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary>Executa processos adicionais personalizados antes de limpar o conteúdo da instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary>Executa processos adicionais personalizados após limpar o conteúdo da instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary>Obtém o elemento com a chave e o valor especificados à instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a obter.</param>
      <param name="currentValue">O valor atual do elemento associado a <paramref name="key" />.</param>
      <returns>Um <see cref="T:System.Object" /> que contém o elemento com a chave e o valor especificados.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary>Executa os processos personalizados adicionais antes de inserir um novo elemento na instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a ser inserido.</param>
      <param name="value">O valor do elemento a ser inserido.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais após inserir um novo elemento na instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a ser inserido.</param>
      <param name="value">O valor do elemento a ser inserido.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais antes de remover um elemento da instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a ser removido.</param>
      <param name="value">O valor do elemento a ser removido.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais após remover um elemento da instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a ser removido.</param>
      <param name="value">O valor do elemento a ser removido.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais antes de definir um valor na instância <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a localizar.</param>
      <param name="oldValue">O valor antigo do elemento associado a <paramref name="key" />.</param>
      <param name="newValue">O valor novo do elemento associado a <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais após configurar um valor na instância de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a localizar.</param>
      <param name="oldValue">O valor antigo do elemento associado a <paramref name="key" />.</param>
      <param name="newValue">O valor novo do elemento associado a <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais ao validar o elemento com a chave e o valor especificados.</summary>
      <param name="key">A chave do elemento a ser validado.</param>
      <param name="value">O valor do elemento a ser validado.</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a um objeto <see cref="T:System.Collections.DictionaryBase" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Collections.DictionaryBase" /> acesso ao objeto for sincronizado (thread-safe); <see langword="false" />caso contrário,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso a um objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o <see cref="T:System.Collections.DictionaryBase" /> acesso ao objeto.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adiciona um elemento com a chave e o valor especificados ao <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a ser adicionada.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Já existe um elemento com a mesma chave no <see cref="T:System.Collections.DictionaryBase" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.DictionaryBase" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.DictionaryBase" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se a <see cref="T:System.Collections.DictionaryBase" /> contém uma chave específica.</summary>
      <param name="key">A chave a ser localizada no <see cref="T:System.Collections.DictionaryBase" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.DictionaryBase" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary>Obtém um valor que indica se o objeto <see cref="T:System.Collections.DictionaryBase" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Collections.DictionaryBase" /> objeto tiver um tamanho fixo; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Collections.DictionaryBase" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Collections.DictionaryBase" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary>Obtém ou define o valor associado à chave especificada.</summary>
      <param name="key">A chave cujo valor será obtido ou definido.</param>
      <returns>O valor associado à chave especificada. Se a chave especificada não for encontrada, tentar obtê-la retornará <see langword="null" /> e tentar de defini-la criará um novo elemento usando a chave especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A propriedade é definida e o <see cref="T:System.Collections.DictionaryBase" /> é somente leitura.  

ou - 
A propriedade é definida, <paramref name="key" /> não existe na coleção e o <see cref="T:System.Collections.DictionaryBase" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary>Obtém um objeto <see cref="T:System.Collections.ICollection" /> que contém as chaves no objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ICollection" /> que contém as chaves no objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Remove o elemento com a chave especificada do <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.DictionaryBase" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.DictionaryBase" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary>Obtém um objeto <see cref="T:System.Collections.ICollection" /> que contém os valores no objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ICollection" /> que contém os valores no objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um <see cref="T:System.Collections.IEnumerator" /> que itera pelo <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary>Representa uma coleção primeiro a entrar, primeiro a sair de objetos.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que está vazia, tem a capacidade inicial padrão e usa o fator de crescimento padrão.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que contém os elementos copiados da coleção especificada, tem a mesma capacidade inicial que o número de elementos copiados e usa o fator de crescimento padrão.</summary>
      <param name="col">A <see cref="T:System.Collections.ICollection" /> da qual copiar elementos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que está vazia, tem a capacidade inicial especificada e usa o fator de crescimento padrão.</summary>
      <param name="capacity">O número inicial de elementos que o <see cref="T:System.Collections.Queue" /> pode conter.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que está vazia, tem a capacidade inicial especificada e usa o fator de crescimento especificado.</summary>
      <param name="capacity">O número inicial de elementos que o <see cref="T:System.Collections.Queue" /> pode conter.</param>
      <param name="growFactor">O fator pelo qual a capacidade da <see cref="T:System.Collections.Queue" /> é expandida.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.  

ou - 
<paramref name="growFactor" /> é menor que 1,0 ou maior que 10,0.</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary>Remove todos os objetos da <see cref="T:System.Collections.Queue" />.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary>Cria uma cópia superficial do <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Uma cópia superficial do <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary>Determina se um elemento está no <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.Queue" />. O valor pode ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for encontrado no <see cref="T:System.Collections.Queue" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos <see cref="T:System.Collections.Queue" /> em um <see cref="T:System.Array" /> unidimensional existente, começando no índice da matriz especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Queue" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
O número de elementos na origem <see cref="T:System.Collections.Queue" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">O tipo do <see cref="T:System.Collections.Queue" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary>Obtém o número de elementos contidos no <see cref="T:System.Collections.Queue" />.</summary>
      <returns>O número de elementos contidos no <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary>Remove e retorna o objeto no início do <see cref="T:System.Collections.Queue" />.</summary>
      <returns>O objeto removido do início do <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Collections.Queue" /> está vazio.</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary>Adiciona um objeto ao final do <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj">O objeto a ser adicionado ao <see cref="T:System.Collections.Queue" />. O valor pode ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary>Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.Queue" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.Queue" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary>Retorna o objeto ao início da <see cref="T:System.Collections.Queue" /> sem removê-lo.</summary>
      <returns>O objeto no início da <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Collections.Queue" /> está vazio.</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary>Retorna um novo <see cref="T:System.Collections.Queue" /> que encapsula a fila original e é thread-safe.</summary>
      <param name="queue">O <see cref="T:System.Collections.Queue" /> a ser sincronizado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.Queue" /> sincronizado (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queue" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary>Copia os elementos do <see cref="T:System.Collections.Queue" /> em uma nova matriz.</summary>
      <returns>Uma nova matriz que contém os elementos copiados de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary>Define a capacidade para o número real de elementos em <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.Queue" /> é somente leitura.</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary>Fornece a classe base <see langword="abstract" /> para uma coleção somente leitura fortemente tipada não genérica.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary>Obtém o número de elementos contidos na instância <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>O número de elementos contidos na instância <see cref="T:System.Collections.ReadOnlyCollectionBase" />.  
A recuperação do valor dessa propriedade é uma operação O(1).</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary>Retorna um enumerador que itera pela instância <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para a instância <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary>Obtém a lista de elementos contidos na instância <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>Uma <see cref="T:System.Collections.ArrayList" /> que representa a própria instância de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia todo o <see cref="T:System.Collections.ReadOnlyCollectionBase" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
O número de elementos na origem <see cref="T:System.Collections.ReadOnlyCollectionBase" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a um objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Collections.ReadOnlyCollectionBase" /> acesso ao objeto for sincronizado (thread-safe); <see langword="false" />caso contrário,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso a um objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o <see cref="T:System.Collections.ReadOnlyCollectionBase" /> acesso ao objeto.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary>Representa uma coleção de pares chave/valor que são classificados pelas chaves e são acessíveis por chave e por índice.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial padrão e é classificada de acordo com a interface <see cref="T:System.IComparable" /> implementada por cada chave adicionada ao objeto <see cref="T:System.Collections.SortedList" />.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial padrão e é classificada de acordo com a interface <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada ao comparar chaves.  

ou - 
<see langword="null" /> para usar a implementação de <see cref="T:System.IComparable" /> de cada chave.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial especificada e é classificada de acordo com a interface <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada ao comparar chaves.  

ou - 
<see langword="null" /> para usar a implementação de <see cref="T:System.IComparable" /> de cada chave.</param>
      <param name="capacity">O número inicial de elementos que o objeto <see cref="T:System.Collections.SortedList" /> pode conter.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível para criar um objeto <see cref="T:System.Collections.SortedList" /> com o <paramref name="capacity" /> especificado.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que contém elementos copiados do dicionário especificado, tem a mesma capacidade inicial que o número de elementos copiados e é classificada segundo a interface <see cref="T:System.IComparable" /> implementada por cada chave.</summary>
      <param name="d">A implementação de <see cref="T:System.Collections.IDictionary" /> para copiar para um novo objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Um ou mais elementos em <paramref name="d" /> não implementam a interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que contém elementos copiados do dicionário especificado, tem a mesma capacidade inicial que o número de elementos copiados e é classificada segundo a interface <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="d">A implementação de <see cref="T:System.Collections.IDictionary" /> para copiar para um novo objeto <see cref="T:System.Collections.SortedList" />.</param>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada ao comparar chaves.  

ou - 
<see langword="null" /> para usar a implementação de <see cref="T:System.IComparable" /> de cada chave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="comparer" /> é <see langword="null" />, e um ou mais elementos em <paramref name="d" /> não implementam a interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial especificada e é classificada de acordo com a interface <see cref="T:System.IComparable" /> implementada por cada chave adicionada ao objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="initialCapacity">O número inicial de elementos que o objeto <see cref="T:System.Collections.SortedList" /> pode conter.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> é menor que zero.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível para criar um objeto <see cref="T:System.Collections.SortedList" /> com o <paramref name="initialCapacity" /> especificado.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary>Adiciona um elemento com a chave e o valor especificados a um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">A chave do elemento a ser adicionada.</param>
      <param name="value">O valor do elemento a ser adicionado. O valor pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Já existe um elemento com o <paramref name="key" /> especificado no objeto <see cref="T:System.Collections.SortedList" />.  

ou - 
O <see cref="T:System.Collections.SortedList" /> está definido para usar a interface <see cref="T:System.IComparable" /> e <paramref name="key" /> não implementa a interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.SortedList" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível para adicionar o elemento ao <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException">O comparador gera uma exceção.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary>Obtém ou define a capacidade de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>O número de elementos que o objeto <see cref="T:System.Collections.SortedList" /> pode conter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor atribuído é menor que o número atual de elementos no objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível no sistema.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary>Remove todos os elementos de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary>Cria uma cópia superficial de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Uma cópia superficial do objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary>Determina se um objeto <see cref="T:System.Collections.SortedList" /> contém uma chave específica.</summary>
      <param name="key">A chave a ser localizada no objeto <see cref="T:System.Collections.SortedList" />.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> contiver um elemento com o <paramref name="key" /> especificado, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O comparador gera uma exceção.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary>Determina se um objeto <see cref="T:System.Collections.SortedList" /> contém uma chave específica.</summary>
      <param name="key">A chave a ser localizada no objeto <see cref="T:System.Collections.SortedList" />.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> contiver um elemento com o <paramref name="key" /> especificado, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O comparador gera uma exceção.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary>Determina se um objeto <see cref="T:System.Collections.SortedList" /> contém um valor específico.</summary>
      <param name="value">O valor a ser localizado no objeto <see cref="T:System.Collections.SortedList" />. O valor pode ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> contiver um elemento com o <paramref name="value" /> especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary>Copia <see cref="T:System.Collections.SortedList" /> elementos para um objeto <see cref="T:System.Array" /> unidimensional, iniciando no índice especificado na matriz.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.SortedList" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
O número de elementos no objeto de origem <see cref="T:System.Collections.SortedList" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.SortedList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary>Obtém o número de elementos contidos em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>O número de elementos contidos no objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary>Obtém o valor no índice especificado de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">O índice baseado em zero do valor a ser obtido.</param>
      <returns>O valor no índice especificado do objeto <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary>Retorna um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para o objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary>Obtém a chave no índice especificado de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">O índice de base zero da chave a ser obtida.</param>
      <returns>A chave no índice especificado do objeto <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary>Obtém as chaves em um objeto <see cref="T:System.Collections.SortedList" /> .</summary>
      <returns>Um objeto <see cref="T:System.Collections.IList" /> que contém as chaves no objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary>Obtém os valores em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IList" /> que contém os valores no objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary>Retorna o índice baseado em zero da chave especificada em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">A chave a ser localizada no objeto <see cref="T:System.Collections.SortedList" />.</param>
      <returns>O índice baseado em zero do parâmetro <paramref name="key" />, se <paramref name="key" /> for encontrado no objeto <see cref="T:System.Collections.SortedList" />; caso contrário, -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O comparador gera uma exceção.</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary>Retorna o índice baseado em zero da primeira ocorrência do valor especificado em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="value">O valor a ser localizado no objeto <see cref="T:System.Collections.SortedList" />. O valor pode ser <see langword="null" />.</param>
      <returns>O índice baseado em zero da primeira ocorrência do parâmetro <paramref name="value" />, se <paramref name="value" /> for encontrado no objeto <see cref="T:System.Collections.SortedList" />; caso contrário, -1.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary>Obtém um valor que indica se o objeto <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Collections.SortedList" /> objeto tiver um tamanho fixo; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary>Obtém um valor que indica se um objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a um objeto <see cref="T:System.Collections.SortedList" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Collections.SortedList" /> acesso ao objeto for sincronizado (thread-safe); <see langword="false" />caso contrário,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary>Obtém ou define o valor associado com uma chave específica em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">A chave associada com o valor a ser obtido ou definido.</param>
      <returns>O valor associado ao parâmetro <paramref name="key" /> no objeto <see cref="T:System.Collections.SortedList" /> se <paramref name="key" /> for localizado; caso contrário, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A propriedade é definida e o objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.  

ou - 
A propriedade é definida, <paramref name="key" /> não existe na coleção e o <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível para adicionar o elemento ao <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException">O comparador gera uma exceção.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary>Obtém as chaves em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ICollection" /> que contém as chaves no objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary>Remove o elemento com a chave especificada de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary>Remove o elemento no índice especificado de um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">O índice de base zero do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.SortedList" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary>Substitui o valor em um índice específico em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">O índice baseado em zero no qual salvar <paramref name="value" />.</param>
      <param name="value">O <see cref="T:System.Object" /> a salvar no objeto <see cref="T:System.Collections.SortedList" />. O valor pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary>Retorna o wrapper sincronizado (thread-safe) para um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="list">O objeto <see cref="T:System.Collections.SortedList" /> a ser sincronizado.</param>
      <returns>Um wrapper sincronizado (thread-safe) para o objeto <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso a um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o <see cref="T:System.Collections.SortedList" /> acesso ao objeto.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um <see cref="T:System.Collections.IEnumerator" /> que itera pelo <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary>Define a capacidade para o número real de elementos em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.  

ou - 
O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary>Obtém os valores em um objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ICollection" /> que contém os valores no objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary>Cria coleções que ignoram maiúsculas e minúsculas em cadeias de caracteres.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Specialized.CollectionsUtil" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>Cria uma nova instância que não diferencia maiúsculas e minúsculas da classe <see cref="T:System.Collections.Hashtable" /> com a capacidade inicial padrão.</summary>
      <returns>Uma nova instância que não diferencia maiúsculas e minúsculas da classe <see cref="T:System.Collections.Hashtable" /> com a capacidade inicial padrão.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary>Copia as entradas do dicionário especificado para uma nova instância que não diferencia maiúsculas de minúsculas da classe <see cref="T:System.Collections.Hashtable" /> com a mesma capacidade inicial que o número de entradas copiadas.</summary>
      <param name="d">O <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo <see cref="T:System.Collections.Hashtable" /> que não diferencia maiúsculas de minúsculas.</param>
      <returns>Uma nova instância que não diferencia maiúsculas de minúsculas da classe <see cref="T:System.Collections.Hashtable" /> que contém as entradas do <see cref="T:System.Collections.IDictionary" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary>Cria uma nova instância que não diferencia maiúsculas e minúsculas da classe <see cref="T:System.Collections.Hashtable" /> com a capacidade inicial especificada.</summary>
      <param name="capacity">O número aproximado de entradas que o <see cref="T:System.Collections.Hashtable" /> inicialmente pode conter.</param>
      <returns>Uma nova instância que não diferencia maiúsculas e minúsculas da classe <see cref="T:System.Collections.Hashtable" /> com a capacidade inicial especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary>Cria uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que diferencia as maiúsculas e minúsculas das cadeias de caracteres.</summary>
      <returns>Uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que diferencia as maiúsculas e minúsculas das cadeias de caracteres.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary>Representa uma coleção não genérica simples UEPS (último a entrar, primeiro a sair) de objetos.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Stack" /> que está vazia e tem a capacidade inicial padrão.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Stack" />, que contém os elementos copiados da coleção especificada e tem a mesma capacidade inicial que o número de elementos copiados.</summary>
      <param name="col">A <see cref="T:System.Collections.ICollection" /> da qual copiar elementos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Stack" /> que está vazia e tem a capacidade inicial especificada ou a capacidade inicial padrão, a que for maior.</summary>
      <param name="initialCapacity">O número inicial de elementos que o <see cref="T:System.Collections.Stack" /> pode conter.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary>Remove todos os objetos da <see cref="T:System.Collections.Stack" />.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary>Cria uma cópia superficial do <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Uma cópia superficial do <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary>Determina se um elemento está no <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj">O objeto a ser localizado no <see cref="T:System.Collections.Stack" />. O valor pode ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for encontrado no <see cref="T:System.Collections.Stack" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary>Copia o <see cref="T:System.Collections.Stack" /> para um unidimensional <see cref="T:System.Array" /> existente, começando no índice da matriz especificada.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Stack" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
O número de elementos na origem <see cref="T:System.Collections.Stack" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.Stack" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary>Obtém o número de elementos contidos no <see cref="T:System.Collections.Stack" />.</summary>
      <returns>O número de elementos contidos no <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary>Retorna um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.Stack" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" />, se o <see cref="T:System.Collections.Stack" /> acesso ao for sincronizado (thread-safe); <see langword="false" />caso contrário,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary>Retorna o objeto na parte superior do <see cref="T:System.Collections.Stack" /> sem removê-lo.</summary>
      <returns>O <see cref="T:System.Object" /> na parte superior do <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Collections.Stack" /> está vazio.</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary>Remove e retorna o objeto na parte superior do <see cref="T:System.Collections.Stack" />.</summary>
      <returns>O <see cref="T:System.Object" /> foi removido da parte superior do <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Collections.Stack" /> está vazio.</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary>Insere um objeto na parte superior do <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj">O <see cref="T:System.Object" /> a ser enviado por push para o <see cref="T:System.Collections.Stack" />. O valor pode ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary>Retorna um wrapper sincronizado (thread-safe) para o <see cref="T:System.Collections.Stack" />.</summary>
      <param name="stack">O <see cref="T:System.Collections.Stack" /> a ser sincronizado.</param>
      <returns>Um wrapper sincronizado em torno do <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stack" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Um <see cref="T:System.Object" /> que pode ser usado para sincronizar o <see cref="T:System.Collections.Stack" />acesso ao.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary>Copia o <see cref="T:System.Collections.Stack" /> em uma nova matriz.</summary>
      <returns>Uma nova matriz que contém cópias dos elementos do <see cref="T:System.Collections.Stack" />.</returns>
    </member>
  </members>
</doc>