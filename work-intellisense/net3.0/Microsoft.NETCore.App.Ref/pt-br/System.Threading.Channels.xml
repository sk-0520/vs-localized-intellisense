<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary>Especifica o comportamento a ser usado ao gravar em um canal limitado que já esteja cheio.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary>Remove e ignora o item mais recente no canal para liberar espaço para o item que está sendo gravado.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary>Remove e ignora o item mais antigo no canal para liberar espaço para o item que está sendo gravado.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary>Remove o item que está sendo gravado.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary>Aguarda até que espaço esteja disponível para concluir a operação de gravação.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary>Fornece opções que controlam o comportamento das instâncias <see cref="T:System.Threading.Channels.Channel`1" /> limitadas.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary>Inicializa as opções.</summary>
      <param name="capacity">O número máximo de itens que o canal limitado pode armazenar.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary>Obtém ou define o número máximo de itens que o canal limitado pode armazenar.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary>Obtém ou define o comportamento incorrido por operações de gravação quando o canal está cheio.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary>Fornece métodos estáticos para criar canais.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary>Cria um canal com a capacidade máxima especificada.</summary>
      <param name="capacity">O número máximo de itens que o canal pode armazenar.</param>
      <typeparam name="T">Especifica o tipo de dados no canal.</typeparam>
      <returns>O canal criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary>Cria um canal com a capacidade máxima especificada.</summary>
      <param name="options">Opções que orientam o comportamento do canal.</param>
      <typeparam name="T">Especifica o tipo de dados no canal.</typeparam>
      <returns>O canal criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary>Cria um canal sem limites utilizável por qualquer número de leitores e gravadores simultaneamente.</summary>
      <typeparam name="T" />
      <returns>O canal criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary>Cria um canal sem limites sujeito às opções fornecidas.</summary>
      <param name="options">Opções que orientam o comportamento do canal.</param>
      <typeparam name="T">Especifica o tipo de dados no canal.</typeparam>
      <returns>O canal criado.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary>Fornece uma classe raiz para canais que dão suporte à leitura e gravação de elementos do tipo <typeparamref name="T" />.</summary>
      <typeparam name="T">Especifica o tipo de dados legíveis e graváveis no canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor" />
    <member name="T:System.Threading.Channels.Channel`2">
      <summary>Fornece uma classe base para canais que dão suporte à leitura de elementos do tipo <typeparamref name="TRead" /> e a gravação de elementos do tipo <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite">Especifica o tipo de dados que podem ser gravados no canal.</typeparam>
      <typeparam name="TRead">Especifica o tipo de dados que podem ser lidos do canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor" />
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary>Conversão implícita de um <see cref="T:System.Threading.Channels.Channel`2" /> em sua metade legível.</summary>
      <param name="channel">O <see cref="T:System.Threading.Channels.Channel`2" /> que está sendo convertido.</param>
      <returns>A metade legível.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary>Conversão implícita de um <see cref="T:System.Threading.Channels.Channel`2" /> em sua metade gravável.</summary>
      <param name="channel">O <see cref="T:System.Threading.Channels.Channel`2" /> que está sendo convertido.</param>
      <returns>A metade gravável.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary>Obtém a metade legível do canal.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary>Obtém a metade gravável do canal.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary>A exceção gerada quando um canal é usado após ser fechado.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException">A exceção que é a causa desta exceção.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
      <param name="innerException">A exceção que é a causa desta exceção.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary>Fornece opções que controlam o comportamento das instâncias do canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor" />
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary>
        <see langword="true" /> se as operações executadas em um canal puderem invocar, de forma síncrona, continuações assinadas para notificações de operações assíncronas pendentes. <see langword="false" /> se todas as continuações devem ser invocadas de forma assíncrona.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary>
        <see langword="true" /> os leitores do canal garantem que sempre haverá no máximo uma operação de leitura por vez. <see langword="false" /> se tal restrição não for garantida.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary>
        <see langword="true" /> os gravadores do canal garantem que sempre haverá no máximo uma operação de gravação por vez. <see langword="false" /> se tal restrição não for garantida.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary>Fornece uma classe base para leitura a partir de um canal.</summary>
      <typeparam name="T">Especifica o tipo de dados que podem ser lidos do canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor" />
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary>Obtém uma <see cref="T:System.Threading.Tasks.Task" /> que será concluída quando não houverem mais dados disponíveis para serem lidos neste canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary>Cria um <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> que habilita a leitura de todos os dados do canal.</summary>
      <param name="cancellationToken">O token de cancelamento a ser usado para cancelar a enumeração.</param>
      <returns>O enumerável assíncrono criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary>Lê assincronamente um item de um canal.</summary>
      <param name="cancellationToken">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de leitura.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask`1" /> que representa a operação de leitura assíncrona.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary>Tenta ler um item do canal.</summary>
      <param name="item">O item de leitura, ou um valor padrão, se nenhum item puder ser lido.</param>
      <returns>
        <see langword="true" /> se um item foi lido. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary>Retorna uma <see cref="T:System.Threading.Tasks.Task`1" /> que será concluída quando os dados estiverem disponíveis para leitura.</summary>
      <param name="cancellationToken">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de espera.</param>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task`1" /> que será concluída com um resultado <see langword="true" /> quando os dados estiverem disponíveis para leitura ou com um resultado <see langword="false" /> quando nenhum outro dado estiver disponível para ser lido.</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary>Fornece uma classe base para gravação em um canal.</summary>
      <typeparam name="T">Especifica o tipo de dados que podem ser gravados no canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary>Marca o canal como concluído, ou seja, que nenhum outro item será gravado nele.</summary>
      <param name="error">A Exceção opcional indicando uma falha que está fazendo com que o canal seja concluído.</param>
      <exception cref="T:System.InvalidOperationException">O canal já foi marcado como concluído.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary>Tenta marcar o canal como concluído, ou seja, mais nenhum outro dado será gravado nele.</summary>
      <param name="error">Uma <see cref="T:System.Exception" /> indicando a falha que faz com que mais nenhum dado seja gravado, ou nulo para sucesso.</param>
      <returns>
        <see langword="true" /> se esta operação concluir o canal com sucesso. Caso contrário, <see langword="false" /> se o canal não puder ser marcado para conclusão, por exemplo, devido a já ter sido marcado como tal ou por não oferecer suporte à conclusão.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary>Tenta gravar o item especificado no canal.</summary>
      <param name="item">O item a ser gravado.</param>
      <returns>
        <see langword="true" /> se o item foi gravado. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary>Retorna uma <see cref="T:System.Threading.Tasks.Task`1" /> que será concluída quando houver espaço disponível para gravar um item.</summary>
      <param name="cancellationToken">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de espera.</param>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task`1" /> que será concluída com um resultado <see langword="true" /> quando os dados estiverem disponíveis para gravar um item ou com um resultado <see langword="false" /> quando nenhuma outra gravação for permitida.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary>Grava assincronamente um item para um canal.</summary>
      <param name="item">O valor a ser gravado no canal.</param>
      <param name="cancellationToken">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de gravação.</param>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary>Fornece opções que controlam o comportamento das instâncias <see cref="T:System.Threading.Channels.Channel`1" /> ilimitadas.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
  </members>
</doc>