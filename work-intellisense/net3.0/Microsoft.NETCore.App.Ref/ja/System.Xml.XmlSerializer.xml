<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">XML Web サービスで使用する .NET Framework 型を生成するときに使用する各種のオプションを指定します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">データ バインディングを有効にします。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Web メソッドを非同期呼び出しするイベントを作成します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Web メソッドの非同期呼び出し用の Begin メソッドおよび End メソッドを作成します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" />、および <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 属性の <see langword="Order" /> プロパティで明示的に指定されている順序に従いシリアル化コードを生成します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">プロパティでプリミティブ型を表します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">フィールドおよび <see cref="N:System" /> 名前空間型でプリミティブ型を表します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">入力テキストをコード エンティティの名前に変換する静的メソッドを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.CodeIdentifier" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">入力文字列から Camel 形式の文字列を作成します。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">コード エンティティの名前。たとえば、メソッド パラメーターなど。通常は XML 要素名または属性名が使用されます。</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Camel 形式に変換されたパラメーター文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">入力文字列から Pascal 形式の文字列を作成します。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">コード エンティティの名前。たとえば、メソッド パラメーターなど。通常は XML 要素名または属性名が使用されます。</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Pascal 形式に変換されたパラメーター文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">入力文字列から有効なコード エンティティを作成します。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">コード エンティティの名前。たとえば、メソッド パラメーターなど。通常は XML 要素名または属性名が使用されます。</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">メソッド パラメーターの名前など、コード識別子として使用できる文字列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">.NET Framework の XML シリアル化インフラストラクチャが生成する、関連するコード エンティティまたは型の関連付け情報の名前のグループを保持します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> クラスの新しいインスタンスを初期化します。そして、コード識別子が大文字と小文字を区別するかどうかを判断します。</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">識別子が大文字と小文字を区別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープに、名前付きのコード エンティティまたは型の対応付け情報を追加します。</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">コード エンティティを識別するのに使用する名前。</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">コード エンティティまたは型の対応付け情報。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">指定した名前が <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用されるのを防ぎます。</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用を許可しない名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">名前付きのコード エンティティまたは型対応付け情報を <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープに追加します。これにより、名前はスコープ内で一意であることが保証されます。</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">コード エンティティを識別するのに使用する名前の候補。</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">コード エンティティまたは型の対応付け情報。</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">識別子パラメーター値。名前の競合が発生した場合は修正済みの文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープから、すべてのコード エンティティまたは型の対応付け情報、さらにはそれらの名前を削除します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">指定した名前が <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で既に使用されているかどうかを判断します。</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用されているかどうかを確認する名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">名前が既に使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">
        <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> プロパティの値に従い名前を修正することで、入力した名前で大文字小文字が正しく使用されるようにします。</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">修正対象の名前。</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">入力した識別子と同じ文字列、または先頭の文字の大文字小文字が修正された文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">入力した名前が <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内の別の名前と競合していないか判断し、競合している場合は修正済みの文字列を生成します。</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">一意でない場合に修正される名前。</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">識別子パラメーター値。名前の競合が発生した場合は修正済みの文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープから、入力した名前で識別されるコード エンティティまたは型の対応付け情報を削除します。</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">削除するコード エンティティまたは型の対応付け情報の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスの予約済みの名前から、入力した名前を削除します。</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用を許可する名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内にある、コード エンティティまたは型の対応付け情報の配列を返します。</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">インスタンス内にあるすべてのコード エンティティの型、または型の対応付け情報。</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> オブジェクトに格納されているコード エンティティまたは型の対応付け情報の配列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">インスタンスが Camel 形式を使用するかどうか示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">インスタンスが Camel 形式を使用する場合は <see langword="true" />、インスタンスが Pascal 形式を使用する場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">.NET Framework コード エンティティにスキーマ セットがバインドされるコンテキストを示します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">指定したコード識別子の <see cref="T:System.Xml.Serialization.ImportContext" /> クラスの新しいインスタンスを、指定した型共有オプションを使用して初期化します。</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">コンテキストが適用されるコード エンティティ。</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">カスタム型がスキーマ間で共有されているかどうかを示す <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">カスタム型が共有されているかどうか示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">カスタム型がスキーマ間で共有されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">コンテキストが適用されるコード エンティティのセットを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">コンテキストが適用されるコード エンティティを示す <see cref="T:System.Xml.Serialization.CodeIdentifiers" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">記述したコード エンティティをインポートする際に生成される警告のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">記述したコード エンティティをインポートした際に生成された警告を含む <see cref="T:System.Collections.Specialized.StringCollection" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">.NET Framework インフラストラクチャが使用する <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> プロパティを確立します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">空白および属性値が正規化されているかどうか示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">空白および属性値が正規化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">XML 解析時の空白の処理方法を取得または設定します。</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">XML 解析時の空白の処理方法を示す <see cref="T:System.Xml.WhitespaceHandling" /> 列挙値のメンバー。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">スキーマ インポーターを示します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス メンバーをエンコード済みの SOAP 属性としてシリアル化する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">XML 属性の名前とする値を指定して、<see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">XML 属性の名前。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 属性の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">XML 属性の名前。 既定値はメンバー識別子です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された SOAP 属性の XML スキーマ定義言語 (XSD) データ型を取得または設定します。</summary>
      <returns vsli:raw="An XML Schema data type.">XML スキーマデータ型。</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">指定した XML スキーマ データ型を .NET データ型に割り当てることはできません。</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">XML 属性の XML 名前空間を取得または設定します。</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">XML 属性の XML 名前空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> を使用してオブジェクトをエンコード済みの SOAP としてシリアル化または逆シリアル化するときに、プロパティ、フィールド、クラスに適用される属性をオーバーライドできるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> に格納されている <see cref="T:System.Xml.Serialization.SoapAttributes" /> オブジェクトのコレクションに <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> を追加します。 <paramref name="type" /> パラメーターには、この <see cref="T:System.Xml.Serialization.SoapAttributes" /> によってオーバーライドされるオブジェクトを指定します。 <paramref name="member" /> パラメーターは、オーバーライドされるメンバーの名前を指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">オーバーライドするオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the member to override.">オーバーライドするメンバーの名前。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> を <see cref="T:System.Xml.Serialization.SoapAttributes" /> オブジェクトのコレクションに追加します。 <paramref name="type" /> パラメーターには、この <see cref="T:System.Xml.Serialization.SoapAttributes" /> によってオーバーライドされるオブジェクトを指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">オーバーライドされるオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">指定された型 (基本クラス) に関連付けられているオブジェクトを取得します。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">取得する属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">指定された型 (基本クラス) に関連付けられているオブジェクトを取得します。 <paramref name="member" /> パラメーターには、オーバーライドされる基本クラス メンバーを指定します。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">オーバーライドする対象の属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">返す <see cref="T:System.Xml.Serialization.SoapAttributes" /> を指定する、オーバーライドされたメンバーの名前。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が SOAP メソッドをシリアル化および逆シリアル化する方法を制御する属性オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">指定されたカスタム型を使用して、<see cref="T:System.Xml.Serialization.SoapAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> インターフェイスを実装する <see cref="T:System.Type" /> クラスなどのオブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">オーバーライドする <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">メンバーをシリアル化するときの <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> の動作をオーバーライドする <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">XML 要素または XML 属性の既定値を取得または設定します。</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">XML 要素または XML 属性の既定値を表すオブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">オーバーライドする <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">オーバーライドする <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が SOAP 列挙体をシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を指定するオブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、パブリック フィールドまたはパブリック プロパティをエンコード済みの SOAP XML としてシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がそのフィールドまたはプロパティをシリアル化しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">オブジェクト型をエンコード済みの SOAP XML にシリアル化する方法を <see cref="T:System.Xml.Serialization.XmlSerializer" /> に指示するオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">クラス宣言に適用された <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> をオーバーライドするか、クラス宣言に適用されているか、いずれかの <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック メンバーの値をエンコード済みの SOAP XML 要素としてシリアル化することを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">XML 要素の名前を指定して、<see cref="T:System.Xml.Serialization.SoapElementAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">シリアル化されたメンバーの XML 要素名。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">生成された XML 要素の XML スキーマ定義言語 (XSD: XML Schema Definition Language) データ型を取得または設定します。</summary>
      <returns vsli:raw="One of the XML Schema data types.">XML スキーマ データ型の 1 つ。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">生成された XML 要素の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">生成された XML 要素の名前。 既定値はメンバー識別子です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、<see langword="xsi:null" /> 属性が "1" に設定されているメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:null" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">要素名を指定して、<see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成される XML 要素名。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体をシリアル化する場合は XML ドキュメントに生成された値を、列挙体メンバーを逆シリアル化する場合には認識した値を、取得または設定します。</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体をシリアル化する場合は XML ドキュメントに生成された値。列挙体メンバーを逆シリアル化する場合は認識した値。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> に対して、パブリック フィールドまたはパブリックな読み書き可能プロパティの値をシリアル化しないように指示します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをエンコード済みの SOAP XML としてシリアル化または逆シリアル化するときに、型を認識できるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">型を指定して、<see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type of the object to include.">含めるオブジェクトの型。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">オブジェクトをシリアル化または逆シリアル化するときに使用するオブジェクトの型を取得または設定します。</summary>
      <returns vsli:raw="The type of the object to include.">含めるオブジェクトの型。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">.NET Framework 型、または Web サービス メソッド情報から、SOAP エンコード済みメッセージへの対応付けを生成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">インポートされる型の対応付けに使用する既定の XML 名前空間を指定して、<see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">XML シリアル化のオーバーライドを指定して、<see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> クラスは、SOAP エンコーディングを使用して、対応付けされた型のシリアル化を行いますが、その方法をオーバーライドする <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">XML シリアル化のオーバーライドと既定の XML 名前空間を指定して、<see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> クラスは、SOAP エンコーディングを使用して、対応付けされた型のシリアル化を行いますが、その方法をオーバーライドする <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクト。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL メッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">RPC 形式の Web サービス バインディングを使用する場合は <see langword="true" />、ドキュメント形式の Web サービス バインディングまたは SOAP ヘッダーを使用する場合は <see langword="false" />。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL メッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">RPC 形式の Web サービス バインディングを使用する場合は <see langword="true" />、ドキュメント形式の Web サービス バインディングまたは SOAP ヘッダーを使用する場合は <see langword="false" />。</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">生成されるデシリアライザーでラッパー要素の予期される修飾名をチェックする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <paramref name="hasWrapperElement" /> パラメーターに <see langword="true" /> 値を指定する場合に限り、このパラメーターは使用できます。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL メッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">RPC 形式の Web サービス バインディングを使用する場合は <see langword="true" />、ドキュメント形式の Web サービス バインディングまたは SOAP ヘッダーを使用する場合は <see langword="false" />。</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">生成されるデシリアライザーでラッパー要素の予期される修飾名をチェックする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <paramref name="hasWrapperElement" /> パラメーターに <see langword="true" /> 値を指定する場合に限り、このパラメーターは使用できます。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">.NET Framework 型の XML スキーマ要素に対する対応付けを生成します。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">.NET Framework 型の XML スキーマ要素に対する対応付けを生成します。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">使用する既定の XML 名前空間。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> インスタンスのコンテキストで、型の対応付けを実行します。この対応付け情報は、インポート メソッドを呼び出す場合など後で使用します。</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">型の対応付け情報を保存する .NET Framework 型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> インスタンスのコンテキストで、派生型の対応付けを実行します。この対応付け情報は、インポート メソッドを呼び出す場合など後で使用します。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 属性から派生したカスタム属性を格納する <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> リフレクション オブジェクト。</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">WSDL ドキュメントからクラスを生成するために、WSDL ドキュメントの XSD &lt;<see langword="part" />&gt; 要素の特定の属性を表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">WSDL の part 要素の name 属性に対応する値を取得または設定します。</summary>
      <returns vsli:raw="The element name.">要素名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">WSDL の part 要素の type 属性に対応する値を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">XML 型に対応する <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">SOAP エンコード済みの XML としてクラス インスタンスがシリアル化されるときに、<see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成されるスキーマを制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、型の名前および型の XML 名前空間を指定します。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">型の XML 名前空間。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">SOAP エンコード済みの XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">SOAP エンコード済みの XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">XML 型の名前空間を取得または設定します。</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">XML 型の名前空間。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">XML 型の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">XML 型の名前。 既定値は、クラス名です。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">エンコード済みの SOAP XML ストリームで逆シリアル化時に見つかった、既知ではあっても未参照のオブジェクトに対してデータを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="o" vsli:raw="The unreferenced object.">未参照のオブジェクト。</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">参照されないオブジェクトを識別するために使用される一意の文字列。</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">オブジェクトの ID を取得します。</summary>
      <returns vsli:raw="The ID of the object.">オブジェクトの ID。</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">逆シリアル化された、未参照のオブジェクトを取得します。</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">逆シリアル化された、未参照のオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> の <see cref="T:System.Xml.Serialization.XmlSerializer" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> をコレクションに追加します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">追加する <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">新しく追加された <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">指定した <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> がコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">コレクション内に存在するかどうかを確認する対象の <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">コピー先配列の指定されたインデックスを開始位置として、コレクション全体を、<see cref="T:System.Xml.Serialization.XmlElementAttribute" /> オブジェクトの互換性がある 1 次元配列にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">コレクションからコピーされる要素のコピー先である <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> オブジェクトの 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">指定した <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックスを取得します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">インデックスを取得する対象の <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">指定した <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> をコレクション内の指定のインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> の挿入位置を示すインデックス。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">挿入する <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">指定したインデックス位置にある <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> を取得または設定します。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックス。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">指定したインデックス位置にある <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">指定された <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> をコレクションから削除します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">削除する <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が特定のクラス メンバーを XML 要素の配列としてシリアル化する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメント インスタンスに生成される XML 要素名を指定します。</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">シリアル化された配列に与えられた、XML 要素の名前を取得または設定します。</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">シリアル化された配列の XML 要素名。 既定値は、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> が割り当てられたメンバーの名前です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか。 既定値は、<see langword="XmlSchemaForm.None" /> です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">XML 要素の名前空間を取得または設定します。</summary>
      <returns vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</summary>
      <returns vsli:raw="The order of the code generation.">コード生成の順序。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化された配列で配置できる派生型を指定する属性を表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前を指定します。</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 要素の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前、および生成される XML ドキュメントに挿入できる <see cref="T:System.Type" /> を指定します。</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 要素の名前。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、シリアル化される配列に挿入できる <see cref="T:System.Type" /> を指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">生成された XML 要素の XML データ型を取得または設定します。</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">XML スキーマ定義 (XSD) データ型。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">生成された XML 要素の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">生成された XML 要素の名前。 既定値はメンバー識別子です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。 既定値は、<see langword="XmlSchemaForm.None" /> です。</returns>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> プロパティが <see langword="XmlSchemaForm.Unqualified" /> に設定され、<see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 値が指定されています。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" /> で、インスタンスは作成されません。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">生成された XML 要素の名前空間を取得または設定します。</summary>
      <returns vsli:raw="The namespace of the generated XML element.">生成された XML 要素の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が影響を与える XML 要素の階層構造のレベルを取得または設定します。</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">複数の配列内の 1 つの配列のインデックスのセットの 0 から始まるインデックス番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">配列内で使用できる型を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">配列内で使用できる <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> をコレクションに追加します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">コレクションに追加する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="The index of the added item.">追加された項目のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">指定した <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> がコレクションに含まれているかどうかを判断します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">確認する対象の <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">コピー先の指定したインデックスを開始位置として、<see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 配列をコレクションにコピーします。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">コレクションにコピーする <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクトの配列。</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">コピーされた属性の開始位置のインデックス。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">コレクション内で指定した <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が最初に見つかった位置の 0 から始まるインデックスを返します。属性がコレクション内で見つからなかった場合は -1 を返します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">コレクション内で検索する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">コレクション内の <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> の最初のインデックス。コレクション内に属性が存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> をコレクション内の指定のインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">属性が挿入される位置のインデックス。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">挿入する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">指定したインデックス位置にある項目を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">取得または設定するコレクション メンバーの 0 から始まるインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">指定されたインデックス位置にある <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">コレクションに <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が存在する場合は削除します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">削除する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">不明な XML 属性を表すオブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">不明な XML 属性を表す <see cref="T:System.Xml.XmlAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">XML ドキュメントのインスタンスに出現する可能性のある XML 属性名をコンマで区切ったリストとして取得します。</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 属性名をコンマで区切ったリスト。 各名前には <paramref name="namespace" />:<paramref name="name" /> の形式が使用されます。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">不明 XML 属性の行番号を取得します。</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">不明 XML 属性の行番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">不明 XML 属性の行内の位置を取得します。</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">不明 XML 属性の位置番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">逆シリアル化されているオブジェクトを取得します。</summary>
      <returns vsli:raw="The object being deserialized.">逆シリアル化されているオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> を処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">オブジェクトをシリアル化または逆シリアル化するために <see cref="T:System.Xml.Serialization.XmlSerializer" /> を使用するときに、プロパティ、フィールド、クラスの各属性をユーザーがオーバーライドできるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトを <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトのコレクションに追加します。 <paramref name="type" /> パラメーターは、オーバーライドされるオブジェクトを指定します。 <paramref name="member" /> パラメーターは、オーバーライドされるメンバーの名前を指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">オーバーライドするオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the member to override.">オーバーライドするメンバーの名前。</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトを <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトのコレクションに追加します。 <paramref name="type" /> パラメーターは、<see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトによってオーバーライドされるオブジェクトを指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">オーバーライドされるオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">指定された (基本クラス) 型に関連付けられたオブジェクトを取得します。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">取得する属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">指定された (基本クラス) 型に関連付けられたオブジェクトを取得します。 メンバー パラメーターは、オーバーライドされた基本クラス メンバーを指定します。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">使用する属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">返す <see cref="T:System.Xml.Serialization.XmlAttributes" /> を指定する、オーバーライドされたメンバーの名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化および逆シリアル化する方法を制御する属性オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化し、<see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化および逆シリアル化する方法をカスタマイズします。</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">XML のシリアル化を制御する属性の代替実装を提供できるクラス。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクトのコレクションを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> オブジェクトのコレクションを表す <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、配列を返すパブリック フィールドまたは読み取り/書き込みプロパティをシリアル化する方法を指定するオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">配列を返すパブリック フィールドまたは読み取り/書き込みプロパティを <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> でシリアル化する方法を指定する <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">パブリック フィールドまたは読み取り/書き込みプロパティによって返された配列に挿入されている項目を <see cref="T:System.Xml.Serialization.XmlSerializer" /> によってシリアル化する方法を指定するオブジェクトのコレクションを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> オブジェクトのコレクションを格納している <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、パブリック フィールドまたはパブリックな読み取り/書き込みプロパティを XML 属性としてシリアル化する方法を指定するオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">パブリック フィールドまたは読み取り/書き込みプロパティを XML 属性としてシリアル化する方法を制御する <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">複数の選択肢を区別できるようにするオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see langword="xsi:choice" /> 要素としてシリアル化されているクラス メンバーに適用できる <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">XML 要素または XML 属性の既定値を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">XML 要素または XML 属性の既定値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック フィールドまたは読み取り/書き込みプロパティを XML 要素としてシリアル化する方法を指定する、オブジェクトのコレクションを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> オブジェクトのコレクションを格納している <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> が列挙体メンバーをシリアル化する方法を指定する <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック フィールドまたは読み書き可能なパブリック プロパティをシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がそのフィールドまたはプロパティをシリアル化しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> オブジェクトを返すメンバーを格納するオブジェクトがオーバーライドされたときに、すべての名前空間宣言を保持するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">名前空間宣言を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラスを XML ルート要素としてシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">XML ルート要素として属性が設定されているクラスをオーバーライドする <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> に対してパブリック フィールドまたはパブリックな読み取り/書き込みプロパティを XML テキストとしてシリアル化するよう指示するオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">パブリック プロパティまたはフィールドの既定のシリアル化をオーバーライドする <see cref="T:System.Xml.Serialization.XmlTextAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が適用されているクラスを <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> がシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">クラス宣言に適用された <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> をオーバーライドする <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">列挙体を使用して、メンバーを明確に検出できるようにすることを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">メンバーを検出するために使用される列挙体を返すメンバー名。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">型を検出するときに使用される列挙体を返すフィールドの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">列挙体を返すフィールドの名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> のスレッド セーフな <see cref="T:System.Xml.Serialization.XmlSerializer" /> メソッドにイベント デリゲートを渡すために使用できるフィールドを含みます。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> がクラスをシリアル化する既定の方法をオーバーライドするために使用する、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> をコレクションに追加します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">追加する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="The zero-based index of the newly added item.">新しく追加された項目の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">指定したオブジェクトがコレクションに格納されているかどうかを確認します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">検索対象の <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> またはその一部を 1 次元配列にコピーします。</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">コピーされた要素を保つための <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> アレー。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">指定した <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> のインデックスを取得します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">インデックスを取得する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> の 0 から始まるインデックス番号。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">コレクションに <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> を挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">メンバーが挿入される 0 から始まるインデックス。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">挿入する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> が <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">このプロパティが設定されていますが、<see cref="T:System.Xml.Serialization.XmlElementAttributes" /> が読み取り専用です。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">指定されたオブジェクトをコレクションから削除します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">コレクションから削除する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">不明な XML 要素を表すオブジェクトを取得します。</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">不明な XML 要素を表すオブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">XML ドキュメントのインスタンスに出現する可能性のある XML 要素名をコンマで区切ったリストとして取得します。</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 要素名をコンマで区切ったリスト。 各名前には <paramref name="namespace" />:<paramref name="name" /> の形式が使用されます。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった場所の行番号を取得します。</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった場所の行番号。それ以外の場合は -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった行内の位置を取得します。</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった行内の番号。それ以外の場合は -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が逆シリアル化しているオブジェクトを取得します。</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって逆シリアル化されているオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> の <see cref="T:System.Xml.Serialization.XmlSerializer" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化または逆シリアル化するときに、型を認識できるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">含めるオブジェクトの <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">含めるオブジェクトの型を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">含めるオブジェクトの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">.NET Framework 型と XML スキーマ データ型間の対応付けをサポートします。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">マップされる要素の名前を取得します。</summary>
      <returns vsli:raw="The name of the mapped element.">マップされる要素の名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">マップされる要素の名前空間を取得します。</summary>
      <returns vsli:raw="The namespace of the mapped element.">マップされる要素の名前空間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">マッピングの検索に使用するキーを設定します。</summary>
      <param name="key" vsli:raw="The lookup key.">検索キー。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">マッピングの XSD 要素の名前を取得します。</summary>
      <returns vsli:raw="The XSD element name.">XSD 要素の名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">マッピングについて、読み取り、書き込み、その両方のいずれにするかを指定します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">書き込みメソッドと読み込みメソッドの両方が生成されます。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">読み込みメソッドが生成されます。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">書き込みメソッドが生成されます。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">.NET Framework の Web サービス メソッドのコード エンティティを、Web サービス記述言語 (WSDL: Web Services Description Language) メッセージの要素にマップします。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">.NET Framework 型が、任意の型の XML 要素または属性にマップされているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">型が XML の任意の要素または属性にマップされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">.NET Framework 型の付属フィールドに値が指定されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">付属フィールドに値が指定されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">このマッピングに適用される XML 要素宣言の修飾なしの名前を取得します。</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">このマッピングに適用される XML 要素宣言の修飾なしの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">このマッピングが表す Web サービス メソッド メンバーの名前を取得します。</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">このマッピングが表す Web サービス メソッド メンバーの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">このマッピングに適用される XML 名前空間を取得します。</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">このマッピングに適用される XML 名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">このマッピングの .NET Framework 型の完全修飾型名を取得します。</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">このマッピングの .NET Framework 型の完全修飾型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">このマッピングの .NET Framework 型の型名を取得します。</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">このマッピングの .NET Framework 型の型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">このマッピングの .NET Framework 型の名前空間を取得します。</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">このマッピングの .NET Framework 型の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">サービスの説明ドキュメントに記載される XML 要素名を取得します。</summary>
      <returns vsli:raw="The XML element name.">XML 要素の名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">.NET Framework Web サービス メソッドと、SOAP Web サービスに対して定義されている Web サービス記述言語 (WSDL: Web Services Description Language) メッセージとのマッピングを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">SOAP メッセージがマップされる Web サービス メソッドに属する .NET Framework コード エンティティの数を取得します。</summary>
      <returns vsli:raw="The number of mappings in the collection.">コレクション内のマッピングの数。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">SOAP メッセージにマップされる Web サービス メソッドに属する .NET Framework コード エンティティの、内部型マッピング情報を含む項目を取得します。</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">返される対応付けのインデックス。</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">要求された <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">SOAP メッセージを表す XML スキーマ要素のデータ型にマップされる .NET Framework 型の名前を取得します。</summary>
      <returns vsli:raw="The name of the .NET type.">.NET Framework 型の名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">SOAP メッセージを表す XML スキーマ要素のデータ型にマップされる .NET Framework 型の名前空間を取得します。</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">マップされる .NET Framework の名前空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">不明な XML ノードの行番号を取得します。</summary>
      <returns vsli:raw="The line number of the unknown XML node.">不明な XML ノードの行番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">不明な XML ノードが見つかった行内の位置を取得します。</summary>
      <returns vsli:raw="The position number of the unknown XML node.">不明な XML ノードの位置番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">逆シリアル化されている XML ノードの XML ローカル名を取得します。</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">逆シリアル化されている XML ノードの XML ローカル名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">逆シリアル化されている XML ノードの名前を取得します。</summary>
      <returns vsli:raw="The name of the node being deserialized.">逆シリアル化されているノードの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">逆シリアル化されている XML ノードに関連付けられている名前空間 URI を取得します。</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">逆シリアル化されている XML ノードに関連付けられている名前空間 URI。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">逆シリアル化されている XML ノードの型を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">逆シリアル化されている XML ノードを表す <see cref="T:System.Xml.XmlNodeType" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">逆シリアル化されているオブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">逆シリアル化される <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">逆シリアル化されている XML ノードのテキストを取得します。</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">逆シリアル化されている XML ノードのテキスト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> の <see cref="T:System.Xml.Serialization.XmlSerializer" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">XML スキーマ要素宣言 (Web サービス記述言語 (WSDL: Web Services Description Language) ドキュメント内のリテラル XML スキーマ定義 (XSD: XML Schema Definition) のメッセージ部分など) と、対応する .NET Framework 型または Web サービス メソッドの対応付け情報を生成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">指定した既定の XML 名前空間を使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">指定した XML シリアル化オーバーライドを使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる対応付けされた型のシリアル化をオーバーライドするオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">指定した XML シリアル化オーバーライドと既定の XML 名前空間を使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる対応付けされた型のシリアル化をオーバーライドするオブジェクト。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Web サービス メソッドからの情報を使用して、内部型マッピングを生成します。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対するマッピングを持つ <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Web サービス メソッドからの情報を使用して、内部的な型対応付け情報を返します。またこのメソッドでは、XML 要素名、XML 名前空間、および他のオプションを指定できます。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Web サービス メソッドからの情報を使用して、内部的な型対応付け情報を返します。またこのメソッドでは、XML 要素名、XML 名前空間、および他のオプションを指定できます。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">生成されるスキーマ型を <see langword="&lt;xs:anyAttribute&gt;" /> 要素でマークする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Web サービス メソッドからの情報を使用して、内部型マッピングを生成します。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">生成されるスキーマ型を <see langword="&lt;xs:anyAttribute&gt;" /> 要素でマークする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 値のいずれか 1 つ。 既定値は、<see langword="None" /> です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">指定した .NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">指定した型と名前空間を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">使用する既定の XML 名前空間。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">指定した型と属性を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">型に適用する <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 属性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">.NET Framework 型と XML スキーマ要素の対応付けを表す <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">指定した型、属性、および名前空間を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">型に適用する <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 属性。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">使用する既定の XML 名前空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">.NET Framework 型と XML スキーマ要素の内部的な対応付けを格納した <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">後でインポート メソッドを呼び出すときに使用する型のマッピングを格納します。</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">型の対応付け情報を保存する .NET Framework 型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">後でインポート メソッドを呼び出すときに使用する派生型のマッピングを格納します。</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 属性から派生したカスタム属性を格納する <see cref="T:System.Reflection.ICustomAttributeProvider" /> クラスのインスタンス。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">.NET Framework Web サービス メソッドのコード エンティティと、SOAP Web サービスに対して定義されている Web サービス記述言語 (WSDL: Web Services Description Language) メッセージの内容との対応付けを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">出力パラメーターと対照をなす Web サービス メソッドの戻り値を、<see cref="T:System.Xml.Serialization.XmlReflectionMember" /> が表すかどうか示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メンバーが Web サービスの戻り値を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">このマッピングが示す Web サービス メソッド メンバーの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the Web service method.">Web サービス メソッドの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">このマッピングが表す Web サービス メソッド メンバーのコード エンティティの型を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">このマッピングが表す Web サービス メソッド メンバーのコード エンティティの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">対応する XML 要素定義の <c>isNullable</c> 属性の値が <see langword="false" /> かどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> プロパティがオーバーライドされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">メンバーのコード エンティティに適用された SOAP 関連の属性のコレクションを持つ <see cref="T:System.Xml.Serialization.SoapAttributes" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">メンバーに適用された SOAP 属性を表すオブジェクトを格納した <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">メンバーのコード エンティティに適用された <see cref="T:System.Xml.Serialization.XmlAttributes" /> 関連の属性のコレクションを持つ <see cref="T:System.Xml.Serialization.XmlSerializer" /> を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">メンバー コードに適用された XML 属性を表す <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクションに対する反復処理に使用します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">反復対象の <see cref="T:System.Xml.Serialization.XmlSchemas" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">コレクション内の現在の要素を取得します。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">コレクション内の現在の <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">列挙子をコレクション内の次の項目に進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">移動が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション内の現在の要素を取得します。</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション内の現在の要素。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">列挙子を初期位置、つまり <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクションの最初の要素の前に設定します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに、型マップ オブジェクト内にある XML スキーマ要素宣言を設定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">型マップから取得した要素宣言の追加先となる <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">指定した名前空間によって識別される <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに &lt;any&gt; 要素をエクスポートします。</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">&lt;any&gt; 要素を追加する XML スキーマ ドキュメントの名前空間。</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">&lt;any&gt; 要素の宣言に割り当てる任意の名前。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">オブジェクトまたは型の要素宣言を、SOAP メッセージまたは <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに追加します。</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">エクスポートするマップを含む <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">文字列 "any" と 1 つの整数。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">リテラル SOAP メッセージ定義の各要素部分の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> に追加します。</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Web サービス記述言語 (WSDL: Web Services Description Language) のメッセージ定義の要素部分に対応する内部 .NET Framework 型の割り当て。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">リテラル SOAP メッセージ定義の各要素部分の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> に追加します。そしてスキーマを囲む要素を含めるかどうか指定します。</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">.NET Framework 型と XML スキーマ要素の間の内部マップ。</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スキーマを囲むスキーマ要素を含める場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">リテラル SOAP メッセージ定義の 1 つの要素部分の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに追加します。</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Web サービス記述言語 (WSDL) のメッセージ定義の要素部分に対応する内部 .NET Framework 型の割り当て。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">エクスポートする要素宣言の修飾 XML 名を表す <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">.NET Framework 型の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに追加します。</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">.NET Framework 型と XML スキーマ要素の間の内部マップ。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">WSDL ドキュメントのリテラル XSD メッセージ部分などの XML スキーマ要素宣言に対応する、.NET Framework 型の内部対応付け情報を生成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">XML スキーマを表す <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> オブジェクトのコレクションを受け取って、<see cref="T:System.Xml.Schema.XmlSchema" /> クラスの新しいインスタンスを初期化します。この XML スキーマは、WSDL ドキュメントで定義されている SOAP リテラル メッセージによって使用されます。</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">SOAP リテラル メッセージによって使用される XML スキーマを表す <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> オブジェクトのコレクションと、Web サービス記述言語 (WSDL) ドキュメントで定義されているバインディング用に生成されるクラスを受け取って、<see cref="T:System.Xml.Schema.XmlSchema" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> オブジェクト。</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">WSDL ドキュメントで定義されているバインディング用に生成されるクラスのコレクションを指定する <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">WSDL ドキュメントで定義されている単一の (SOAP) リテラル要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">要素の型の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。この要素の型に対応する .NET Framework 型が生成されます。</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">WSDL ドキュメントの部分要素の名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">WSDL メッセージ定義の単一の要素部分に対応する .NET Framework 型の対応付け情報を表す <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">XSD 要素の型に対応するよう生成される .NET Framework 型の基本型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">XML スキーマ要素に対応する .NET Framework 型の対応付け情報を表す <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">XML スキーマ ドキュメントで定義されている要素、または WSDL ドキュメントの部分要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">XSD 要素の型に対応するよう生成される .NET Framework 型の基本型。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XSD 要素に対応する型が基本型を間接的に継承できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML スキーマ要素に対応する .NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">対応付け情報を生成する要素の名前。</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">対応付け情報を生成する要素の名前空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">対応付け情報を生成する要素のメンバーを指定する <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> インスタンスの配列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">型の対応付け情報を格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの単一要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">メッセージ部分の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">単一の要素部分を含む WSDL メッセージ定義に対応する、.NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">メッセージ部分の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" /> 型の配列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対応する .NET Framework 型の対応付け情報を表す <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">メッセージ部分の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" /> 型の配列。</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">メッセージ部分に対応するように生成されるすべての .NET Framework 型の基本型。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージ部分に対応する型が基本型を間接的に継承できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">WSDL メッセージ定義の要素部分に対応する .NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">XML 要素を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">型の対応付け情報を示す <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">XML 要素を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">基本型を指定する <see cref="T:System.Type" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">型の対応付け情報を示す <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">XML 要素を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">基本型を指定する <see cref="T:System.Type" /> オブジェクト。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">生成される型が <paramref name="baseType" /> を間接的に継承できるようにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">型の対応付け情報を示す <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">XML スキーマ ドキュメントで定義されている要素の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML スキーマ要素に対応する .NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">XML スキーマのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">コレクションの末尾にオブジェクトを追加します。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">オブジェクトのコレクションに追加する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> が追加される位置のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">アセンブリの参照を表す <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトをコレクションに追加します。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">追加する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">スキーマ オブジェクトの <see cref="T:System.Uri" />。</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> が追加される位置のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">コレクションの末尾に <see cref="T:System.Xml.Serialization.XmlSchemas" /> クラスのインスタンスを追加します。</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">コレクションの末尾に追加する <see cref="T:System.Xml.Serialization.XmlSchemas" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">アセンブリの参照を表す <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトをコレクションに追加します。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">追加する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">XML スキーマ内の要素名と属性名を処理します。オプションで、XML スキーマを検証することもできます。</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">fullCompile パラメーターが <see langword="true" /> に設定されている場合、XML スキーマの検証中にエラーおよび警告を処理するコールバック メソッドを指定する <see cref="T:System.Xml.Schema.ValidationEventHandler" />。</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> クラスの <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> メソッドを使用してコレクション内の XML スキーマを検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">指定した名前空間に属する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトがコレクションに格納されているかどうかを示す値を返します。</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">チェックする項目の名前空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">項目が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> に特定のスキーマが格納されているかどうかを判断します。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">検索する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した項目がコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックス位置から始まります。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> のスキーマのコピー先である 1 次元の <see cref="T:System.Xml.Serialization.XmlSchemas" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">コピーを開始する配列のインデックス位置を表す 32 ビット整数。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">いずれかの XML スキーマで、指定した名前と型の <see cref="T:System.Xml.Schema.XmlSchemaObject" /> を検索します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">コレクション内の <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトの検索に使用する名前空間と共に、完全修飾名を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">検索するオブジェクトの <see cref="T:System.Type" />。 使用できる型としては、<see cref="T:System.Xml.Schema.XmlSchemaGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" />、および <see cref="T:System.Xml.Schema.XmlSchemaNotation" /> があります。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> や <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> などの <see cref="T:System.Xml.Schema.XmlSchemaObject" /> インスタンス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">同じ名前空間に属するスキーマのコレクションを取得します。</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">取得対象のスキーマの名前空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">スキーマを格納する <see cref="T:System.Collections.IList" /> 実装。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">指定したスキーマを検索し、<see cref="T:System.Xml.Serialization.XmlSchemas" /> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">検索する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 全体内で値が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 内の指定したインデックス位置に、スキーマを挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">
        <paramref name="schema" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">挿入先の <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">スキーマがコンパイルされているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スキーマがコンパイルされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">指定した XML スキーマに、<see langword="IsDataSet" /> またはそれと等価な値が設定された <see langword="true" /> カスタム属性があるかどうかを判断する静的メソッドです。</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">
        <see langword="IsDataSet" /> 属性の <see langword="true" /> 値をチェックする XML スキーマ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したスキーマが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">指定したインデックスの位置にある <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトを取得または設定します。</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">取得する項目のインデックス。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchema" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">指定した名前空間に関連付けられている XML スキーマを表す <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトを指定して取得します。</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">指定したオブジェクトの名前空間。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">指定した <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスの内容を消去しているときに、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスに新しい要素を挿入する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスから要素を削除するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">
        <paramref name="value" /> が存在する位置の、0 から始まるインデックス番号。</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> から削除する要素の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">
        <paramref name="oldValue" /> が存在する位置の、0 から始まるインデックス番号。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 内で最初に見つかった特定のスキーマを削除します。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">削除する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">XML スキーマのコレクションを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">コレクションまたは列挙値に対応付けられる SOAP エンコード済みの XML データ型を逆シリアル化するために、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲートを示します。</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">コレクション項目の配列のコピー先となるコレクション。</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">
        <c>object collection</c> にコピーされる項目の配列。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">SOAP でエンコードされた XML データを逆シリアル化するために <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲート。</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">元の状態に戻すオブジェクト、および入力する項目の文字列識別子の配列を含む <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> クラスのインスタンス。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> および <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> の基本クラスであり、その両方の型に共通のメソッドを含む抽象クラス。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">SOAP エンコード済みでルート以外の XML データの型を逆シリアル化するために、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲート。</summary>
      <returns vsli:raw="The object returned by the callback.">コールバックによって返されるオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる逆シリアル化を制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">コールバック メソッドを含むオブジェクトを格納します。このコールバック メソッドは、SOAP エンコード済み配列または SOAP エンコード済みの多重参照要素に対応付けられている .NET Framework コレクションまたは列挙値を補完するために必要に応じて呼び出されます。</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲートおよびコールバック メソッドの入力データ。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">SOAP エンコード済み配列内のオブジェクトを補完するために必要に応じて呼び出されるコールバック メソッド インスタンスを含むオブジェクトを格納します。</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートおよびコールバック メソッドの入力データ。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">後に呼び出す <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> デリゲートの実装およびその入力データを格納します。</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">逆シリアル化する .NET Framework 型の名前。</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">逆シリアル化する .NET Framework 型の名前空間。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">逆シリアル化する <see cref="T:System.Type" />。</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> デリゲート。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化されるオブジェクトを格納します。格納の目的は、後に <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> メソッドを介してアクセスするためです。</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">要素を識別する、<see langword="multiRef" /> 要素の <see langword="id" /> 属性の値。</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">XML 要素から逆シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">デシリアライザーが進められたかどうかをチェックします。</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">while ループにおける現在の <see langword="count" />。</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">現在の <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> です。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> は進められていません。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">指定した文字列の先頭と末尾で、空白文字が 1 つ以上連続している場合、それらの空白文字をすべて削除します。</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">空白を削除する対象文字列。</param>
      <returns vsli:raw="The trimmed string.">空白文字が削除された文字列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲート インスタンス、およびメソッドの入力を保持します。またメソッドのパラメーターを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">コールバック メソッドのパラメーターを使用して <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">コールバック メソッドがコレクション項目の配列をコピーする先のコレクション。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲートをインスタンス化するメソッド。</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">コールバック メソッドがコレクションをコピーする先の配列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲートをインスタンス化するコールバック メソッドを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">コールバック メソッドをポイントする <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲート。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">コールバック メソッドの <paramref name="object collection" /> 値を取得します。</summary>
      <returns vsli:raw="The collection that is used for the fixup.">フィックスアップに使用されるコレクション。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">コールバック メソッドがコレクションをコピーする先の配列を取得します。</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">コールバック メソッドがコレクションをコピーする先の配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">逆シリアル化対象のオブジェクトが抽象型でなければならないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name" vsli:raw="The name of the abstract type.">抽象型の名前。</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">抽象型の .NET Framework 名前空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">内部要素を読み取るオプションを使用して、<see cref="T:System.Xml.XmlReader" /> の現在の位置にある XML 表現からオブジェクトを設定します。</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">派生 XML スキーマ データ型のローカル名。</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">派生 XML スキーマ データ型の名前空間。</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">基本 XML スキーマ データ型のローカル名。</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">基本 XML スキーマ データ型の名前空間。</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">派生 .NET Framework 型の名前空間。</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">基本 .NET Framework 型の名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">コンストラクターによるセキュリティ例外のスローが原因で逆シリアル化対象のオブジェクトをインスタンス化できない、ということを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="typeName" vsli:raw="The name of the type.">型の名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">利用できるコンストラクターが存在しないために、逆シリアル化対象のオブジェクトをインスタンス化できない、ということを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="typeName" vsli:raw="The name of the type.">型の名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">明示的な参照の変換が失敗したことを示す <see cref="T:System.InvalidCastException" /> を作成します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">オブジェクトのキャスト先としての使用を許可されない <see cref="T:System.Type" />。 この型は例外メッセージに組み込まれます。</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">キャストが許可されないオブジェクト。 このオブジェクトは例外メッセージに組み込まれます。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">
        <see cref="T:System.InvalidCastException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">明示的な参照の変換が失敗したことを示す <see cref="T:System.InvalidCastException" /> を作成します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">オブジェクトのキャスト先としての使用を許可されない <see cref="T:System.Type" />。 この型は例外メッセージに組み込まれます。</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">キャストが許可されないオブジェクト。 このオブジェクトは例外メッセージに組み込まれます。</param>
      <param name="id" vsli:raw="A string identifier.">文字列識別子。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">
        <see cref="T:System.InvalidCastException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">XML スキーマ データ型にマップされている派生型が見つからないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">使用できない派生型に対応付けられている XML スキーマ データ型のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">使用できない派生型に対応付けられている XML スキーマ データ型の名前空間。</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">検出できない派生型の派生元である .NET Framework 基本型の完全名。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">SOAP エンコード済みコレクション型を変更できず、その値を設定できないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">対応付けられている .NET Framework 型の完全修飾名。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">列挙値が無効なことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">無効な列挙値。</param>
      <param name="enumType" vsli:raw="The enumeration type.">列挙型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置が不明な XML ノードであることを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">型が不明なことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">不明な型の名前を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">XML 文字列が有効な .NET Framework 型の名前に変換されるかどうか判定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 文字列が有効な .NET Framework 型の名前にデコードされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">XML ドキュメントの逆シリアル化先の XML ドキュメント オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">逆シリアル化される <see cref="T:System.Xml.XmlDocument" /> データを表す <see cref="T:System.Xml.XmlDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">指定された配列またはコピーが、指定したインデックスを格納できるだけの大きさを持つことを保証します。</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">チェック対象の <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The required index.">必要なインデックス。</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">配列の要素の <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">既存の <see cref="T:System.Array" /> に十分な大きさが既にある場合はその配列。それ以外の場合は、元の配列の要素を格納する、以前よりも大きい新しい配列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲート インスタンスとメソッドの入力を保持します。また、メソッドのパラメーターとして機能します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">コールバック実装によって値が設定される他のオブジェクトを含むオブジェクト。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートをインスタンス化するメソッド。</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> プロパティから取得される文字列配列のサイズ。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">コールバック実装によって値が設定される他のオブジェクトを含むオブジェクト。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートをインスタンス化するメソッド。</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> プロパティから取得される文字列配列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートのインスタンスを作成するコールバック メソッドを取得します。</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートのインスタンスを作成するコールバック メソッド。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">コールバック実装によって値が設定される <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> プロパティに属するオブジェクトのキーの配列を取得または設定します。</summary>
      <returns vsli:raw="The array of keys.">キーの配列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">コールバック実装によって値が設定される他のオブジェクトを含むオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="The source containing objects with values to fill.">オブジェクトおよび挿入する値が格納されたソース。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">.NET Framework 参照型に対応付けられているデータ型を持つ SOAP エンコード済み配列の値を補完します。</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">補完する値を持つ配列を格納しているオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">
        <see cref="T:System.Xml.XmlReader" /> が現在配置されている、SOAP エンコード済み配列の長さを取得します。</summary>
      <param name="name" vsli:raw="The local name that the array should have.">配列のローカル名。</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">配列の名前空間。</param>
      <returns vsli:raw="The length of the SOAP array.">SOAP 配列の長さ。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置である XML 要素に、<see langword="true" /> 値に設定された null 属性があるかどうかを判断します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置が、<see langword="true" /> 値が設定された null 属性である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化されるオブジェクトで、<see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> が以前に保存したオブジェクトを取得します。</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">要素を識別する、<see langword="multiRef" /> 要素の <see langword="id" /> 属性の値。</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化されるオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置にある XML 要素の <see langword="xsi:type" /> 属性の値を取得します。</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">XML 要素のデータ型を示す XML 修飾名。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">SOAP エンコード済みの XML データにマップされているオブジェクトを設定するコールバック メソッドを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">
        <see cref="T:System.Xml.NameTable" /> オブジェクトに要素名および属性名を格納します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">SOAP 1.1 戻り値に対して <see langword="true" /> であることが必要な値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">値が戻り値の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">XML 属性名が XML 名前空間を示しているかどうかを判断します。</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">XML 属性の名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 属性名が XML 名前空間を示している場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">XML 属性の値が、Web サービス記述言語 (WSDL: Web Services Description Language) 名前空間の <see langword="arrayType" /> 型の場合、その値を設定します。</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">
        <see langword="wsdl:array" /> 型である可能性のある <see cref="T:System.Xml.XmlAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">
        <see cref="T:System.Xml.XmlReader" /> が現在の位置の要素の完全修飾名を読み取るようにします。</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">現在の XML 要素の完全修飾名。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">
        <see cref="T:System.Xml.XmlReader" /> が XML 終了タグを読み取るようにします。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> が使用している <see cref="T:System.Xml.XmlReader" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> が使用している <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />現在のカウントを取得します。</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在のカウント。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">現在の XML 要素が true 値の null 属性を持つ場合、その現在の XML 要素を読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要素に null="true" 属性値があり、その要素が読み取られた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">現在配置されている要素の完全修飾名を読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">現在の XML 要素の完全修飾名を表す <see cref="T:System.Xml.XmlQualifiedName" />。現在の XML 要素に null="true" 属性値がある場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="null" /> が許容されている、単純なテキストのみの XML 要素を読み込むように <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">文字列値。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">SOAP エンコード済みの XML 要素の参照に使用される <see langword="href" /> 属性 (SOAP 1.2 の場合は<see langword="ref" />) の値を読み込みます。</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">
        <see langword="href" /> 属性値の読み込み先となる出力文字列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値が読み込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">SOAP エンコード済みの <see langword="multiRef" /> XML 要素からオブジェクトを逆シリアル化します。</summary>
      <returns vsli:raw="The value of the referenced element in the document.">ドキュメント内の参照要素の値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">SOAP エンコード済みの <see langword="multiRef" /> XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">要素の XML スキーマ データ型のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">要素の XML スキーマ データ型の名前空間。</param>
      <returns vsli:raw="The value of the referenced element in the document.">ドキュメント内の参照要素の値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">SOAP メッセージの SOAP エンコード済み <see langword="multiRef" /> 要素からオブジェクトを逆シリアル化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">
        <see langword="multiRef" /> 要素への参照を含む、SOAP メッセージの XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">要素の XML スキーマ データ型のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">要素の XML スキーマ データ型の名前空間。</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要素名も XML スキーマ データ型名の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">
        <see langword="href" />属性値の読み込み先となる出力文字列。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">
        <see langword="multiRef" /> 要素への参照を含む、SOAP メッセージの XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">要素の XML スキーマ データ型のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">要素の XML スキーマ データ型の名前空間。</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">
        <see langword="href" /> 属性値の読み込み先となる出力文字列。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">
        <see langword="multiRef" /> 要素への参照を含む、SOAP メッセージの XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">
        <see langword="href" /> 属性値の読み込み先となる出力文字列。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置の XML 表現からオブジェクトを設定します。</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置に対応する <see cref="T:System.Xml.Serialization.IXmlSerializable" />。</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置から設定されたメンバーを持つ、<see cref="T:System.Xml.Serialization.IXmlSerializable" /> インターフェイスを実装したオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">XMLReader の現在の位置に対応する IXmlSerializable オブジェクト。</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">シリアル化可能なオブジェクトをラップするかどうかを指定します。</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">XmlReader の現在の場所から読み込まれたメンバーを所有する、IXmlSerializable インターフェイスを実装したオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">
        <see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果を入力値に追加して作成します。</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">
        <see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果の前に追加する文字列。</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">入力値が追加された、<see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">入力値に、<see cref="T:System.Xml.XmlReader" /> クラスの <see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果を追加したものを返します (必要に応じて空白を削除できます)。</summary>
      <param name="value" vsli:raw="A string that will be appended to.">追加する文字列。</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み取り操作の結果から空白を削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">入力値に読み取り操作の結果が追加された値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">null 値が許容される (<see langword="xsi:nil = 'true'" />) XML 要素を読み取り、ジェネリック <see cref="T:System.Nullable`1" /> 値を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在位置に関する単純データ型を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">XML の null 値を表すジェネリック <see cref="T:System.Nullable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">
        <see cref="T:System.Xml.XmlReader" /> の現在の位置の XML ノードの値を取得します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の現在位置に関する単純データ型を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">値が単純な XML スキーマ データ型の場合、.NET Framework 値型としてのノードの値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">現在の位置にある、XML ドキュメントのルート要素を読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要素の開始要素を読み込んだ後にのみ内容を読み込むようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">読み込んだルート要素を格納する <see cref="T:System.Xml.XmlDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">現在の位置にある XML ノードを読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要素の開始要素を読み込んだ後にのみコンテンツを読み込むようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">読み込んだ XML ノードを表す <see cref="T:System.Xml.XmlNode" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化するオブジェクトを格納します。</summary>
      <param name="o" vsli:raw="The object to be deserialized.">逆シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">動的に生成されるアセンブリを名前で取得します。</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">アセンブリの完全名。</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">動的に生成された <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">指定した配列またはコピーが、指定した長さ未満であることを保証します。</summary>
      <param name="a" vsli:raw="The array that is being checked.">チェック対象の配列。</param>
      <param name="length" vsli:raw="The maximum length of the array.">配列の最大長。</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">配列の要素の <see cref="T:System.Type" />。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">入力配列に <see langword="null" /> が存在する場合に、その配列に返すことができるようにする場合は <see langword="true" />。それ以外の場合は、よりサイズの小さな新しい配列。</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">既存の <see cref="T:System.Array" /> が、指定した長さ未満の場合はその配列。それ以外の場合は、元の配列の要素を格納した、サイズが <paramref name="length" /> 未満の新しい配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">現在の位置にある文字列値を読み取り、それを Base-64 のバイト配列として返すように <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="null" /> を返すようにする場合は <see langword="true" />。Base-64 のバイト配列を返すようにする場合は <see langword="false" />。</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Base-64 のバイト配列。<paramref name="isNull" /> パラメーターの値が <see langword="true" /> の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">入力文字列から Base-64 のバイト配列を作成します。</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Base-64 のバイト配列に変換する文字列。</param>
      <returns vsli:raw="A base-64 byte array.">Base-64 のバイト配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">現在の位置にある文字列値を読み取り、16 進のバイト配列として返すように <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="null" /> を返すようにする場合は <see langword="true" />。16 進のバイト配列を返すようにする場合は<see langword="false" />。</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">16 進数のバイト配列。<paramref name="isNull" /> パラメーターの値が <see langword="true" /> の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">入力文字列から 16 進数のバイト配列を生成します。</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">16 進数のバイト配列に変換する文字列。</param>
      <returns vsli:raw="A hexadecimal byte array.">16 進数のバイト配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">入力文字列から <see cref="T:System.Char" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">
        <see cref="T:System.Char" /> オブジェクトに変換する文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">
        <see cref="T:System.Char" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">入力文字列から <see cref="T:System.DateTime" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">
        <see cref="T:System.DateTime" /> クラス オブジェクトに変換する文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">入力文字列から <see cref="T:System.DateTime" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクトに変換する文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">列挙子リストの定数を表す、区切り文字で区切られた識別子で構成される文字列から、数値型の列挙値を作成します。</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">区切り記号で区切られた識別子で構成される文字列。各識別子は設定されている列挙子リストの定数を表します。</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">キーの役割を持つ識別子と整数型の定数で構成される <see cref="T:System.Collections.Hashtable" />。</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">列挙型の名前。</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">一連のビット単位の <see langword="OR" /> 操作が行われた列挙値で構成される long 型の値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">時刻を表す文字列から <see cref="T:System.DateTime" />作成します。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクトに変換する文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 名をデコードします。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">デコードする XML 名。</param>
      <returns vsli:raw="A decoded string.">デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 名をデコードします。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">デコードする XML 名。</param>
      <returns vsli:raw="A decoded string.">デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 名をデコードします。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">デコードする XML 名。</param>
      <returns vsli:raw="A decoded string.">デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 名をデコードします。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">デコードする XML 名。</param>
      <returns vsli:raw="A decoded string.">デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">プレフィックスを含む可能性のある名前から <see cref="T:System.Xml.XmlQualifiedName" /> を取得します。</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">プレフィックスを含む可能性のある名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">名前空間で修飾された XML 名を表す <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> イベントを発生させます。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> プロパティを介してアクセスできます。</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">対象となる属性を表す <see cref="T:System.Xml.XmlAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> イベントを発生させます。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> プロパティを介してアクセスできます。</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">対象となる属性を表す <see cref="T:System.Xml.XmlAttribute" />。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML 修飾名をコンマで区切ったリスト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> イベントを発生させます。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">逆シリアル化の対象となる <see cref="T:System.Object" />。</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" />。この要素に対応するイベントが発生させられます。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> イベントを発生させます。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> プロパティを介してアクセスできます。</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" />。この要素に対応するイベントが発生させられます。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML 修飾名をコンマで区切ったリスト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> イベントを発生させます。</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">逆シリアル化の対象となるオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> イベントを発生させます。</summary>
      <param name="o" vsli:raw="The object being deserialized.">逆シリアル化されているオブジェクト。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML 修飾名をコンマで区切ったリスト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />. の現在の位置に対して <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> イベントを発生させます。</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">未参照のオブジェクトの識別に使用される一意の文字列。この文字列には、その後、<see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> プロパティを介してアクセスできます。</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> プロパティを介してアクセスできます。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">SOAP エンコード済みでルート以外の XML データの型をシリアル化するために、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲートを示します。</summary>
      <param name="o" vsli:raw="The object being serialized.">シリアル化するオブジェクト。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによるシリアル化を制御するために使用する抽象クラスを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> デリゲートの実装、およびデリゲートを適用する型を、後で呼び出すために保管します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">シリアル化するオブジェクトの型の名前。</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">シリアル化するオブジェクトの型の名前空間。</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> デリゲートのインスタンス。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">XML スキーマの <see langword="choice" /> 要素宣言に準拠する要素に、想定外の名前が使用されたことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value" vsli:raw="The name that is not valid.">無効な名前。</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">名前が属する <see langword="choice" /> 要素宣言。</param>
      <param name="name" vsli:raw="The expected local name of an element.">要素の想定内のローカル名。</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">要素の想定内の名前空間。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">
        <see cref="T:System.InvalidOperationException" /> が無効なメンバーに適用されたこと (<see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 型のメンバー、または <see cref="T:System.Xml.XmlNode" /> から派生したメンバーのみ有効であること) を示す <see cref="T:System.Xml.XmlNode" /> を作成します。</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">無効なメンバーを表すオブジェクト。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">
        <see cref="T:System.InvalidOperationException" /> が無効なメンバーに適用されたこと (<see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 型のメンバー、または <see cref="T:System.Xml.XmlNode" /> から派生したメンバーのみ有効であること) を示す <see cref="T:System.Xml.XmlNode" /> を作成します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">無効な <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">XML スキーマの <see langword="choice" /> 要素宣言が適用される配列の書き込み中にエラーが発生したことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="type" vsli:raw="The type being serialized.">シリアル化されている型。</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">
        <see langword="choice" /> 要素宣言の名前。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">無効な列挙値を示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">無効な列挙値を表すオブジェクト。</param>
      <param name="typeName" vsli:raw="The XML type name.">XML 型名。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">XML 要素の値が列挙型に一致しないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value" vsli:raw="The value that is not valid.">有効でない値。</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">無効な値を持つ XML 要素の名前。</param>
      <param name="enumValue" vsli:raw="The valid value.">有効な値。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">XML スキーマの <see langword="any" /> 要素宣言に準拠させる必要のある XML 要素を処理できないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">処理できない XML 要素。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">シリアル化対象の型を有効な方法で扱えないこと、またはシリアル化対象の型に想定外の状況が発生したことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">シリアル化できない型を持つオブジェクト。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">シリアル化対象の型を有効な方法で扱えないこと、またはシリアル化対象の型に想定外の状況が発生したことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">シリアル化できない型。</param>
      <returns vsli:raw="The newly created exception.">新しく作成された例外。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">有効な XML を書き込むために <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> メソッドが使用されるかどうか示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> メソッドがエンコード済みの名前を返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Base 64 バイト配列を処理します。</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">ベース 64 の <see cref="T:System.Byte" /> 配列。</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">引数として渡した配列と同じバイト配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">入力された 16 進バイト配列から文字列を作成します。</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">文字列に変換する 16 進のバイト配列。</param>
      <returns vsli:raw="The byte array value converted to a string.">文字列に変換されたバイト配列値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">入力された <see cref="T:System.Char" /> から文字列を作成します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">文字列に変換する <see cref="T:System.Char" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">文字列に変換された <see cref="T:System.Char" /> 値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクトから文字列を作成します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">文字列に変換する <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">日付を示す <see cref="T:System.DateTime" /> の文字列表現 (時刻は含まれません)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">入力された <see cref="T:System.DateTime" /> から文字列を作成します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">文字列に変換する <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">日付および時刻を示す <see cref="T:System.DateTime" /> の文字列表現。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">設定されている列挙型のメンバーを表す識別子で構成された文字列を作成します。各識別子は区切り記号で区切られます。</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">ビット単位の一連の <see langword="OR" /> 演算の対象となる列挙値。</param>
      <param name="values" vsli:raw="The enumeration's name values.">列挙型の名前値。</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">列挙型の定数値。</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">区切り記号で区切られた識別子で構成される文字列。各文字列が、設定されている列挙型リストのメンバーを表します。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">列挙型リストから数値型の列挙値、名前、および定数を受け取り、設定されている列挙値メンバーを表す識別子で構成された文字列を返します。識別子は区切り記号で区切られます。</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">ビット単位の一連の <see langword="OR" /> 演算の対象となる列挙値。</param>
      <param name="values" vsli:raw="The values of the enumeration.">列挙型の値。</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">列挙型の定数。</param>
      <param name="typeName" vsli:raw="The name of the type.">型の名前。</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">区切り記号で区切られた識別子で構成される文字列。各項目は、ビット単位演算で設定された値の 1 つになります。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> オブジェクトから文字列を作成します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">文字列に変換する <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">時刻を示す <see cref="T:System.DateTime" /> オブジェクトの文字列表現 (日付は含まれません)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">無効な文字をエスケープ シーケンスに置き換えることで、有効な XML 名をエンコードします。</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">XML 名として使用する文字列。</param>
      <returns vsli:raw="An encoded string.">エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">無効な文字をエスケープ シーケンスに置き換えることで、有効な XML ローカル名をエンコードします。</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">(修飾なしの) ローカル XML 名として使用する文字列。</param>
      <returns vsli:raw="An encoded string.">エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">XML 名をエンコードします。</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">エンコードする XML 名。</param>
      <returns vsli:raw="An encoded string.">エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">空白で区切られた一連の XML 名を、単一の XML 名にエンコードします。</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">エンコードの対象となる、空白で区切られた一連の XML 名。</param>
      <returns vsli:raw="An encoded string.">エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">XML 修飾名を返します (無効な文字はエスケープ シーケンスに置き換えられます)。</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">書き込み対象の XML を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">XML 修飾名 (無効な文字はエスケープ シーケンスに置き換えられています)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">XML 修飾名として書き込むことができる文字列を作成します。無効な文字はエスケープ シーケンスに置き換えられます。</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">書き込み対象の XML を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">文字列内の空白を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">XML 修飾名 (無効な文字はエスケープ シーケンスに置き換えられています)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">SOAP エンコード済み XML データをシリアル化する、<see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> デリゲートのインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">XML ドキュメントに修飾名を作成するために使用する名前空間とプレフィックスを含む XML 修飾名オブジェクトのリストを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">名前空間とプレフィックスのペアを含む <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">動的に生成されるアセンブリを名前で取得します。</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">アセンブリの完全名。</param>
      <returns vsli:raw="A dynamically generated assembly.">動的に生成されたアセンブリ。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">SOAP エンコード済みの SOAP メッセージをシリアル化する場合に限り、オブジェクト参照を初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">
        <see cref="T:System.Xml.XmlWriter" /> オブジェクトに、名前に対して名前空間が指定されていない XML 属性を書き込むように指示します。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 属性のローカル名。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">バイト配列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">
        <see cref="T:System.Xml.XmlWriter" /> に、名前に対して名前空間が指定されていない XML 属性を書き込むよう指示します。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 属性のローカル名。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">文字列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">
        <see cref="T:System.Xml.XmlWriter" /> オブジェクトに、XML 属性を書き込むよう指示します。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 属性のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 属性の名前空間。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">バイト配列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">XML 属性を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 属性のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 属性の名前空間。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">文字列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">手動で提供された名前空間プレフィックスを使用して XML 属性を書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">書き込む名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 属性のローカル名。</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">プレフィックスによって表される名前空間。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">文字列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">名前付き XML 要素の本体内に XML ノード オブジェクトを書き込みます。</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">書き込む XML ノード、または子 XML 要素。</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">書き込む親 XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">書き込む親 XML 要素の名前空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ノードまたは XML 要素が XML スキーマの <see langword="true" /> 要素宣言に準拠することを示す場合は <see langword="any" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">名前付き XML 要素の本体内に <see cref="T:System.Xml.XmlWriter" /> オブジェクトを書き込むよう <see cref="T:System.Xml.XmlNode" /> オブジェクトに指示します。</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">書き込む XML ノード、または子 XML 要素。</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">書き込む親 XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">書き込む親 XML 要素の名前空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ノードまたは XML 要素が XML スキーマの <see langword="true" /> 要素宣言に準拠することを示す場合は <see langword="any" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">書き込む XML 要素のローカル名 (名前空間による修飾なし)。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 要素のローカル名。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 要素のテキスト値。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">本体が空の XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">本体が空の XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">
        <see langword="&lt;closing&gt;" /> 要素タグを書き込みます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">
        <see langword="&lt;closing&gt;" /> 要素タグを書き込みます。</summary>
      <param name="o" vsli:raw="The object being serialized.">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">SOAP エンコード済みの <see langword="id" /> 要素内に出現する <see langword="multiRef" /> 属性を書き込みます。</summary>
      <param name="o" vsli:raw="The object being serialized.">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">名前空間宣言属性を書き込みます。</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">宣言する XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">本体内に有効な XML 修飾名を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">XML 要素の本体に書き込む XML 修飾名。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">本体内に有効な XML 修飾名を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">XML 要素の本体に書き込む XML 修飾名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 要素の本体に書き込む文字列。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">XML 要素の本体としてバイト配列を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">XML 要素の本体に書き込むバイト配列。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 要素の本体に書き込む文字列。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 要素の本体に書き込む文字列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">XML 要素の本体としてバイト配列を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">XML 要素の本体に書き込むバイト配列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 要素の本体に書き込む文字列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">指定したオブジェクトに対応する <see langword="&lt;multiRef&gt;" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">指定したオブジェクトに対応する <see langword="&lt;multiRef&gt;" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">オブジェクトの型の対応付けで格納される型 (<see langword="typeof" /> 演算で直接検出されるオブジェクトの型と対照をなす型)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">指定したオブジェクトに対応する <see langword="&lt;multiRef&gt;" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">オブジェクトの型の対応付けで格納される型 (<see langword="typeof" /> 演算で直接検出されるオブジェクトの型と対照をなす型)。</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データを含む要素を他の要素が参照するのではなく、オブジェクトを直接 XML 要素にシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">指定したオブジェクトに対応する <see langword="multiRef" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">オブジェクトの型の対応付けで格納される型 (<see langword="typeof" /> 演算で直接検出されるオブジェクトの型と対照をなす型)。</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データを含む要素を他の要素が参照するのではなく、オブジェクトを直接 XML 要素にシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> によって使用されている <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">このクラスのインスタンスが使用する <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">SOAP メッセージ内の SOAP エンコード済み <see langword="multiRef" /> XML 要素にオブジェクトをシリアル化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">指定したオブジェクトに対応する <see langword="multiRef" /> 要素への参照を格納する、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">書き込む参照元要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">書き込む参照元要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized.">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">指定したオブジェクトに対応する <see langword="multiRef" /> 要素への参照を格納する、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">書き込む参照元要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">書き込む参照元要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized.">シリアル化するオブジェクト。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">本体に指定の修飾名を持つ SOAP 1.2 RPC 結果要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the result body.">結果本体のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the result body.">結果本体の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">カスタム XML フォーマットを使用するオブジェクトを XML 要素として書き込みます。</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">カスタム XML フォーマットを使用する <see cref="T:System.Xml.Serialization.IXmlSerializable" /> インターフェイスを実装したオブジェクト。</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> クラス オブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">カスタム XML フォーマットを使用するオブジェクトを XML 要素として書き込むよう <see cref="T:System.Xml.XmlNode" /> に指示します。</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">カスタム XML フォーマットを使用する <see cref="T:System.Xml.Serialization.IXmlSerializable" /> インターフェイスを実装したオブジェクト。</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> オブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />、それ以外の場合は <see langword="false" />。</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">開始要素タグの書き込みを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">ライターが XML ドキュメントの開始位置に到達した際に、XML 宣言を書き込みます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">開始要素タグおよび属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">開始要素タグおよび属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">開始要素タグおよび属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した名前空間が使用できない場合にプレフィックス付きの要素名を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">開始要素タグおよび属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">XML 要素としてシリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">開始要素タグおよび属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">XML 要素としてシリアル化するオブジェクト。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した名前空間が使用できない場合にプレフィックス付きの要素名を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">開始要素タグおよび属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">書き込む XML 要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">書き込む XML 要素の名前空間。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">XML 要素としてシリアル化するオブジェクト。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した名前空間が使用できない場合にプレフィックス付きの要素名を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">生成された XML で使用されるプレフィックスおよび名前空間のペアを保持する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> クラスのインスタンス。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">テキスト本体内に単純な XML スキーマ データ型の値を持つ XML 要素を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of the element to write.">書き込む要素のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">書き込む要素の名前空間。</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">要素本体にシリアル化されるオブジェクト。</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 要素で、<see langword="true" /> 属性を使用して、テキスト値の型を明示的に指定する場合は <see langword="xsi:type" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Base 64 のバイト配列を書き込みます。</summary>
      <param name="value" vsli:raw="The byte array to write.">書き込むバイト配列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">指定した文字列値を書き込みます。</summary>
      <param name="value" vsli:raw="The value of the string to write.">書き込む文字列の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">指定した <see cref="T:System.Xml.XmlNode" /> を XML 属性として書き込みます。</summary>
      <param name="node" vsli:raw="The XML node to write.">書き込む XML ノード。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">指定した <see cref="T:System.Xml.XmlNode" /> オブジェクトを XML 属性として書き込みます。</summary>
      <param name="node" vsli:raw="The XML node to write.">書き込む XML ノード。</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Web サービス記述言語 (WSDL: Web Services Description Language) 名前空間 ("http://schemas.xmlsoap.org/wsdl/") から <see langword="arrayType" /> 属性の修飾名値を生成するために使用する <see cref="T:System.Xml.Schema.XmlSchemaObject" /> オブジェクト (または <see langword="null" />)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">ドキュメントにシリアル化される XML 要素の <see langword="xsi:type" /> 属性を書き込みます。</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">XML スキーマ データ型のローカル名。</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">XML スキーマ データ型の名前空間。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">オブジェクトから XML ドキュメントへのシリアル化および XML ドキュメントからオブジェクトへの逆シリアル化を行います。 <see cref="T:System.Xml.Serialization.XmlSerializer" /> により、オブジェクトを XML にエンコードする方法を制御できます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 すべての XML 要素の既定の名前空間を指定します。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">すべての XML 要素で使用する既定の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 プロパティまたはフィールドが配列を返す場合、<paramref name="extraTypes" /> パラメーターには、その配列に挿入できるオブジェクトを指定します。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">シリアル化するオブジェクトの型。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">
        <see cref="T:System.Object" /> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <see cref="T:System.Object" /> 型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <paramref name="type" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">
        <see cref="T:System.Object" /> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <see cref="T:System.Object" /> 型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <paramref name="type" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
      <param name="location" vsli:raw="The location of the types.">型の位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 また、XML ルート要素として使用するクラスを指定します。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">ある型を別の型にマップするオブジェクトを指定して、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを初期化します。</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、指定された XML ドキュメントを逆シリアル化できるかどうかを示す値を取得します。</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">逆シリアル化するドキュメントを指す <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> が指すオブジェクトを <see cref="T:System.Xml.Serialization.XmlSerializer" /> が逆シリアル化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">シリアル化される XML ドキュメントを読み取るために使用されるオブジェクトを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">派生クラスでオーバーライドされた場合、オブジェクトのシリアル化に使用されるライターを返します。</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> クラスを実装するインスタンス。</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">逆シリアル化される <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">逆シリアル化される <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">逆シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">指定した <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">逆シリアル化される <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">逆シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを、指定したエンコード スタイルを使用して逆シリアル化します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">シリアル化された XML のエンコード スタイル。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">逆シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> に格納されているデータを使用してオブジェクトを逆シリアル化します。</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">ドキュメントの読み取りに使用される <see cref="T:System.Xml.XmlReader" /> クラスのインスタンス。</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">使用されるエンコーディング。</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> クラスのインスタンス。</param>
      <returns vsli:raw="The object being deserialized.">逆シリアル化されているオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを逆シリアル化します。また、逆シリアル化で発生するイベントのオーバーライドを可能にします。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">逆シリアル化するドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> クラスのインスタンス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">逆シリアル化される <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクトの配列から作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列を返します。</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> の配列。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">指定したマッピングから <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを返します。</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> オブジェクトの配列。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">逆シリアル化されるオブジェクトの <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">型の配列から作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列を返します。</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">
        <see cref="T:System.Type" /> オブジェクトの配列。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">指定した型のシリアル化または逆シリアル化のために特に作成された、1 つ以上のバージョンの <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">逆シリアル化している <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">型の <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">指定した名前空間にある指定した型のシリアライザーを格納しているアセンブリの名前を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">コレクション内に存在するかどうかを確認する対象の <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">型の名前空間。</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">特別に作成されたシリアライザーを格納しているアセンブリの名前。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.IO.Stream" /> を使用してファイルに書き込みます。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.Stream" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.IO.Stream" /> を使用して、指定した名前空間を参照し、生成された XML ドキュメントをファイルに書き込みます。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.Stream" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.IO.TextWriter" /> を使用してファイルに書き込みます。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.IO.TextWriter" /> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">生成された XML ドキュメントで使用する名前空間を格納している <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> を使用してファイルに書き込みます。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.Xml.XmlWriter" /> を使用してファイルに書き込みます。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" /> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">指定したオブジェクトをシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、指定した名前空間とエンコード スタイルを参照し、生成された XML ドキュメントをファイルに書き込みます。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">シリアル化された XML のエンコード スタイル。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" />、XML 名前空間、およびエンコーディングを使用して、XML ドキュメントをファイルに書き込みます。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">使用する名前空間とプレフィックスを格納している <see langword="XmlSerializerNamespaces" /> のインスタンス。</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">ドキュメントで使用するエンコーディング。</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">SOAP エンコード済みメッセージの場合に、id 属性の生成に使用される基本文字列。</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML 属性を認識した場合に発生します。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML 要素を認識した場合に発生します。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML ノードを認識した場合に発生します。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">SOAP エンコード済み XML ストリームの逆シリアル化時に、<see cref="T:System.Xml.Serialization.XmlSerializer" /> が、未使用の型または参照されていない型を認識した場合に発生します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">Web サービス クライアント プロキシに適用すると、カスタム メイドのシリアライザーを含むアセンブリを指定できます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">指定されたアセンブリ名を使用して <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">アセンブリの暗号化されていない簡易名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">指定されたアセンブリ名とアセンブリの場所を使用して、<see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">アセンブリの暗号化されていない簡易名。</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">アセンブリの URL の場所を表す文字列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">特定の型セットのシリアライザーを格納するアセンブリの名前を取得または設定します。</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">アセンブリの暗号化されていない簡易名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">シリアライザーを格納するアセンブリの場所を取得または設定します。</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">アセンブリの場所を示すパス、または URI。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">より効率的なシリアル化を行うことができる <see cref="T:System.Xml.Serialization.XmlSerializer" /> の型指定されたバージョンを作成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">指定した型のシリアル化に使用する <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">指定した型をシリアル化するために特別に作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">指定した型および名前空間のシリアル化に使用する、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">すべての XML 要素で使用する既定の名前空間。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">指定した型をシリアル化するために特別に作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">指定した型のシリアル化に使用する <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 プロパティまたはフィールドが配列を返す場合、<paramref name="extraTypes" /> パラメーターには、その配列に挿入できるオブジェクトを指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">既定のシリアル化動作をオーバーライドするフィールドを含む <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">指定した型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">既定のシリアル化動作をオーバーライドするフィールドを含む <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">指定した型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Type" /> がシリアル化できるオブジェクトの <see cref="T:System.Xml.Serialization.XmlSerializer" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">型パラメーターで指定したクラスの動作を拡張またはオーバーライドする <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">型の位置を示すパス。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 XML ルート要素を表すオブジェクトを指定します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">ある型を別の型に対応付けるオブジェクトを使用して、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">対応付け対象の型をシリアル化するために特別に作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">型指定された生成前のシリアライザーのリーダー、ライター、およびメソッドを定義します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">型をシリアル化できるかどうか示す値を取得します。</summary>
      <param name="type" vsli:raw="The type to be serialized.">シリアル化対象の型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">型をシリアル化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">指定した型のシリアライザーを返します。</summary>
      <param name="type" vsli:raw="The type to be serialized.">シリアル化対象の型。</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスから派生した型のインスタンス。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">シリアライザーが使用する XML リーダー オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">XML ドキュメントまたはデータ ストリームの読み取りに使用される <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">データ ストリームの読み取りに使用されるメソッドのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">メソッドが格納されている <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">アセンブリ内にある型指定されたシリアライザーのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">型指定されたシリアライザーを格納している <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">データ ストリームへの書き込みに使用されるメソッドのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">メソッドが格納されている <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">シリアライザーの XML ライター オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">XML データ ストリームまたはドキュメントへの書き込みに使用される <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">この属性はアセンブリに適用され、シリアル化インフラストラクチャによりコードが生成されたこと、およびパフォーマンスを向上させるためにそれを再利用できることを示します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">型を指定して、<see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type that is being serialized.">シリアル化する型。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">アセンブリの共通言語ランタイム (CLR: Common Language Runtime) の名前空間を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">アセンブリの共通言語ランタイム (CLR: Common Language Runtime) の名前空間を保持する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">親アセンブリの ID を取得または設定します。</summary>
      <returns vsli:raw="The version of the parent assembly.">親アセンブリのバージョン。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">シリアライザーの操作対象の型を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">シリアル化対象の <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">アセンブリのバージョン番号を取得または設定します。</summary>
      <returns vsli:raw="The version of the assembly.">アセンブリのバージョン。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">この属性が適用された対象が <see cref="T:System.Xml.Serialization.XmlSerializer" /> によってシリアル化されるときに生成される XML スキーマを制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">結果のスキーマ型が XSD 匿名型であるかどうかを判断する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">結果のスキーマ型が XSD 匿名型である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">XML 型の名前空間を取得または設定します。</summary>
      <returns vsli:raw="The namespace of the XML type.">XML 型の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">XML 型の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the XML type.">XML 型の名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">1 つの型から別の型へのマッピングを格納します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">名前空間および型を含む完全修飾型名を取得します。</summary>
      <returns vsli:raw="The fully qualified type name.">完全修飾型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">マップされたオブジェクトの型名を取得します。</summary>
      <returns vsli:raw="The type name of the mapped object.">マップされたオブジェクトの型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">マップされたオブジェクトの XML 要素名を取得します。</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">マップされたオブジェクトの XML 要素名。 既定値は、オブジェクトのクラス名です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">マップされたオブジェクトの XML 名前空間を取得します。</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">マップされたオブジェクトの XML 名前空間。 既定値は、空の文字列 ("") です。</returns>
    </member>
  </members>
</doc>