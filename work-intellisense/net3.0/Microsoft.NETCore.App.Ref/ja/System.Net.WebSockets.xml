<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> で単一の <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> 操作を実行した結果を表します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>
        <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" /> 構造体の新しいインスタンスを初期化します。 この構造体のインスタンスは、<see cref="T:System.Net.WebSockets.WebSocket" /> での単一の <c>ReceiveAsync</c> 操作の実行結果を表します。</summary>
      <param name="count">
        <see cref="T:System.Net.WebSockets.WebSocket" /> で受け取ったバイト数。</param>
      <param name="messageType">現在のメッセージが UTF-8 メッセージかバイナリ メッセージかを示す列挙値の 1 つ。</param>
      <param name="endOfMessage">
        <see langword="true" /> は、メッセージを完全に受け取ったことを示します。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType" />
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>WebSocket のアップグレード完了後に、WebSocket クラスによりアプリケーションがデータを送受信できるようになります。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>WebSocket 接続を中止し、保留中の IO 操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>WebSocket プロトコル仕様 セクション 7 で定義されている終了ハンドシェイクを使用して、非同期操作で WebSocket 接続を閉じます。</summary>
      <param name="closeStatus">WebSocket 接続を閉じる理由を示します。</param>
      <param name="statusDescription">接続が閉じられた理由について人間が判読可能な説明を指定します。</param>
      <param name="cancellationToken">操作を取り消す通知を配信するために使用できるトークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>WebSocket プロトコル仕様のセクション 7 で定義されている終了ハンドシェイクを開始または完了します。</summary>
      <param name="closeStatus">WebSocket 接続を閉じる理由を示します。</param>
      <param name="statusDescription">接続が閉じられた理由について人間が判読可能な説明をアプリケーションが指定できるようにします。</param>
      <param name="cancellationToken">操作を取り消す通知を配信するために使用できるトークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>リモート エンドポイントが終了ハンドシェイクを開始した理由を示します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>接続が閉じられた理由をリモート エンドポイントが説明できるようにします。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>この <see cref="T:System.Net.WebSockets.WebSocket" /> インスタンスを使用するようにクライアント バッファーを作成します。</summary>
      <param name="receiveBufferSize">クライアント受信バッファーのサイズ (バイト単位)。</param>
      <param name="sendBufferSize">送信バッファーのサイズ (バイト単位)。</param>
      <returns>クライアント バッファーから成る配列。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>WSPC がフレーム化に使用するクライアント側の WebSocket クラスを呼び出し元が作成できるようにします。</summary>
      <param name="innerStream">IO 操作に使用する接続。</param>
      <param name="subProtocol">クライアントが受け付けたサブプロトコル。</param>
      <param name="receiveBufferSize">クライアント WebSocket の受信バッファーのサイズ (バイト単位)。</param>
      <param name="sendBufferSize">クライアント WebSocket の送信バッファーのサイズ (バイト単位)。</param>
      <param name="keepAliveInterval">接続を介してフレームをキープアライブとして定期的に送信する方法を決定します。 接続がアイドルである場合にのみ適用します。</param>
      <param name="useZeroMaskingKey">WebSocket マスクに乱数キーを使用するか、または静的キー (ゼロだけ) を使用するかを示します。</param>
      <param name="internalBuffer">WPC の内部バッファーとして使用されます。 サイズは、少なくとも <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (32 ビットでは 16)</c> である必要があります。</param>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" /> を返します。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>指定したストリームで動作する新しい <see cref="T:System.Net.WebSockets.WebSocket" /> オブジェクトを作成します。これは、Web ソケット接続を表します。</summary>
      <param name="stream">接続のストリーム。</param>
      <param name="isServer">サーバー側の接続であることを示す場合は <see langword="true" />。クライアント側の場合は <see langword="false" />。</param>
      <param name="subProtocol">接続の作成時に使用された合意済みのサブ プロトコル。</param>
      <param name="keepAliveInterval">使用するキープ アライブ間隔。または、キープ アライブを無効にする場合は <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</param>
      <returns>新しい Web ソケット。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>WebSocket サーバー バッファーを作成します。</summary>
      <param name="receiveBufferSize">要求されるバッファーのサイズ (バイト単位)。</param>
      <returns>
        <see cref="T:System.ArraySegment`1" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>WebSocket プロトコルの既定の keep-alive 間隔を取得します。</summary>
      <returns>既定の WebSocket プロトコルのキープアライブ間隔。 この間隔の一般的な値は30秒です (OS または .NET プラットフォームで定義されています)。 値を初期化<see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" />するために使用されます。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>ASP.NET およびセルフホストされている実装のアンマネージ リソースをクリーンアップするために使用します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>WebSocket インスタンスのターゲットが .NET Framework 4.5 であることを示す値を返します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" /> が .NET Framework 4.5 を対象としている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>WebSocket インスタンスの状態が終了または中止の場合、状態を示す値を返します。</summary>
      <param name="state">WebSocket の現在の状態。</param>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" /> が終了または中止された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 接続からデータを非同期的に受信します。</summary>
      <param name="buffer">受信したデータの格納場所であるアプリケーション バッファーを参照します。</param>
      <param name="cancellationToken">操作を取り消す通知を配信します。</param>
      <returns>非同期操作を表すタスク オブジェクト。 タスク オブジェクト上の <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、受信したデータを含む <see cref="T:System.Byte" /> 配列を返します。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>WebSocket 要求のプレフィックス (ws および wss) を呼び出し元が登録できるようにします。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 接続でデータを非同期的に送信します。</summary>
      <param name="buffer">この接続で送信するバッファー。</param>
      <param name="messageType">アプリケーションが送信するのはバイナリかテキスト メッセージかを示します。</param>
      <param name="endOfMessage">"バッファー" 内のデータがメッセージの最後の部分であるかどうかを示します。</param>
      <param name="cancellationToken">操作を取り消す必要があることを示す通知を伝達するトークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="messageType" />
      <param name="endOfMessage" />
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>WebSocket 接続の現在の状態を返します。</summary>
      <returns>WebSocket 接続の現在の状態。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>開始ハンドシェイクでネゴシエートされたサブプロトコルを取得します。</summary>
      <returns>開始ハンドシェイクの間にネゴシエートされたサブプロトコル。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>接続が予期された状態であることを確認します。</summary>
      <param name="state">有効な状態のリストに対してテストする WebSocket の現在の状態。</param>
      <param name="validStates">有効な接続状態の一覧。</param>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>WebSocket プロトコルの仕様のセクション 11.7 で定義されている、既知の WebSocket の close コードを表します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>エラーが指定されていません。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) エンドポイントが削除されていることを示します。 サーバーまたはクライアントが使用できなくなります。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>接続は、サーバーのエラーのためサーバーによって閉じられます。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) 受け取ったデータ型を許可できないため、クライアントまたはサーバーは接続を終了中です。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) メッセージ型と一致しない受信データがあるため、クライアントまたはサーバーは接続を終了中です。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) クライアントはサーバーが拡張をネゴシエートすると予期したため、接続を終了中です。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) 今後使用するために予約されています。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) 接続は、要求が実行された後に閉じられました。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) エンドポイントがポリシーに違反するメッセージを受け取ったため、接続は閉じられます。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) クライアントまたはサーバーはプロトコル エラーが原因で接続を終了中です。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>WebSocket ハンドシェイクで情報にアクセスするために使用します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketContext" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>開始ハンドシェイク中にサーバーに渡されたクッキー。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>開始ハンドシェイク中にサーバーに送信された HTTP ヘッダー。</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>WebSocket クライアントが認証されているかどうか。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>WebSocket クライアントがローカル コンピューターから接続したかどうか。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>WebSocket 接続が SSL (Secure Sockets Layer) を使用して保護されているかどうか。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>開始ハンドシェイクに含まれる起点 HTTP ヘッダーの値。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>WebSocket クライアントによって要求された URI。</summary>
      <returns>
        <see cref="T:System.Uri" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>開始ハンドシェイクに含まれる SecWebSocketKey HTTP ヘッダーの値。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>開始ハンドシェイクに含まれる SecWebSocketKey HTTP ヘッダーの値。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>WebSocket クライアントから要求されるサブプロトコルのリスト。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>WebSocket クライアントの ID、認証情報、およびセキュリティ ロールを取得するために使用されるオブジェクト。</summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>WebSocket 接続との対話 (送信/受信/閉じる、など) に使用される WebSocket インスタンス。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" /> を返します。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>発生する可能性のある WebSocket のエラーのリストを格納します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>接続が予期せずに終了されたことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>一般的なエラーを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>開始ハンドシェイク中に HTTP ヘッダーを解析しているときに発生したエラーを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>不明なオペコードのある WebSocket フレームを受信したことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>WebSocket が特定の操作に対して無効な状態 (閉じている、中止されたなど) であることを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>不明なネイティブ エラーが発生したことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>受信した要求が有効な websocket 要求ではなかったことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>例外のネイティブ エラー情報がないことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>クライアントがサポートされていない WebSocket サブプロトコルを要求したことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>クライアントが WebSocket プロトコルのサポートされていないバージョンを要求したことを示します。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>WebSocket 接続操作を実行したときに発生した例外を表します 。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
      <param name="innerException">現在の例外の原因となった前の例外を示します。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
      <param name="message">エラーの説明です。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="innerException">現在の例外の原因となった前の例外を示します。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
      <param name="innerException">現在の例外の原因となった前の例外を示します。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
      <param name="message">エラーの説明です。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="nativeError">例外のネイティブ エラー コード。</param>
      <param name="message">エラーの説明です。</param>
      <param name="innerException">現在の例外の原因となった前の例外を示します。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="message">エラーの説明です。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="error">WebSocketError の列挙からのエラー。</param>
      <param name="message">エラーの説明です。</param>
      <param name="innerException">現在の例外の原因となった前の例外を示します。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="message">エラーの説明です。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> クラスのインスタンスを作成します。</summary>
      <param name="message">エラーの説明です。</param>
      <param name="innerException">現在の例外の原因となった前の例外を示します。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>発生した例外のネイティブ エラー コード。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>例外が発生した行番号とファイル名を使用して、SerializationInfo オブジェクトを設定します。</summary>
      <param name="info">SerializationInfo オブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>発生したエラーの種類を示す WebSocketError を返します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketError" /> を返します。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>メッセージの種類を示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>メッセージがバイナリ形式です。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>終了メッセージを受信したため受信が完了しました。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>メッセージはクリア テキストです。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>このクラスのインスタンスは、WebSocket での単一の ReceiveAsync 操作の実行結果を表します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> クラスのインスタンスを作成します。</summary>
      <param name="count">受信されたバイト数。</param>
      <param name="messageType">受信されたメッセージの種類。</param>
      <param name="endOfMessage">これが最後のメッセージかどうかを示します。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> クラスのインスタンスを作成します。</summary>
      <param name="count">受信されたバイト数。</param>
      <param name="messageType">受信されたメッセージの種類。</param>
      <param name="endOfMessage">これが最後のメッセージかどうかを示します。</param>
      <param name="closeStatus">接続の <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> を示します。</param>
      <param name="closeStatusDescription">
        <paramref name="closeStatus" /> の説明。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>リモート エンドポイントが終了ハンドシェイクを開始した理由を示します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>クローズ ハンドシェイクがリモート エンドポイントによって開始された理由を説明するオプションの説明を返します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>WebSocket が受信したバイト数を示します。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>メッセージを完全に受け取ったかどうかを示します。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>現在のメッセージが UTF-8 メッセージであるか、バイナリ メッセージであるかを示します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketMessageType" /> を返します。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>WebSockets インスタンスが取ることのできるさまざまな状態を定義します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>将来使用するために予約されています。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>WebSocket の終了ハンドシェイクが正常に完了したことを示します。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>リモート エンドポイントから終了メッセージが届きました。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>リモート エンドポイントに終了メッセージが送信されました。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>接続は、リモート エンドポイントとのハンドシェイクをネゴシエートしています。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>将来使用するために予約されています。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>HTTP ハンドシェイク完了後の初期状態。</summary>
    </member>
  </members>
</doc>