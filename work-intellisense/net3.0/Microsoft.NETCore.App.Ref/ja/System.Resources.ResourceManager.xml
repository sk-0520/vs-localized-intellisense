<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Resources.ResourceManager</name>
  </assembly>
  <members>
    <member name="T:System.Resources.IResourceReader">
      <summary>リソース ファイルからデータを読み取る基本機能を提供します。</summary>
    </member>
    <member name="M:System.Resources.IResourceReader.Close">
      <summary>リソース リーダーに関連付けられたすべてのリソースを解放してから、リソース リーダーを閉じます。</summary>
    </member>
    <member name="M:System.Resources.IResourceReader.GetEnumerator">
      <summary>このリーダーのリソースのディクショナリ列挙子を返します。</summary>
      <returns>このリーダーのリソースのディクショナリ列挙子。</returns>
    </member>
    <member name="T:System.Resources.MissingManifestResourceException">
      <summary>メイン アセンブリにニュートラル カルチャ リソースが含まれておらず、適切なサテライト アセンブリがない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor">
      <summary>
        <see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータから、<see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">例外の発生元または発生先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="inner">現在の例外の原因となった例外。 <paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Resources.MissingSatelliteAssemblyException">
      <summary>既定のカルチャのリソースのサテライト アセンブリが見つからない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor">
      <summary>
        <see cref="T:System.Resources.MissingSatelliteAssemblyException" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータから、<see cref="T:System.Resources.MissingSatelliteAssemblyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">例外の発生元または発生先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:System.Resources.MissingSatelliteAssemblyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Resources.MissingSatelliteAssemblyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="inner">現在の例外の原因となった例外。 <paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String,System.String)">
      <summary>指定したエラー メッセージとニュートラル カルチャの名前を使用して、<see cref="T:System.Resources.MissingSatelliteAssemblyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="cultureName">ニュートラル カルチャの名前。</param>
    </member>
    <member name="P:System.Resources.MissingSatelliteAssemblyException.CultureName">
      <summary>既定のカルチャの名前を取得します。</summary>
      <returns>既定のカルチャの名前。</returns>
    </member>
    <member name="T:System.Resources.NeutralResourcesLanguageAttribute">
      <summary>アプリケーションの既定のカルチャをリソース マネージャーに通知します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cultureName">現在のアセンブリのニュートラル リソースが書き込まれたカルチャの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String,System.Resources.UltimateResourceFallbackLocation)">
      <summary>指定した最終的なリソース フォールバック位置で、<see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cultureName">現在のアセンブリのニュートラル リソースが書き込まれたカルチャの名前。</param>
      <param name="location">ニュートラル フォールバック リソースを取得する場所を示す列挙値のいずれか。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="location" /> が <see cref="T:System.Resources.UltimateResourceFallbackLocation" /> のメンバーではありません。</exception>
    </member>
    <member name="P:System.Resources.NeutralResourcesLanguageAttribute.CultureName">
      <summary>カルチャ名を取得します。</summary>
      <returns>メイン アセンブリの既定のカルチャの名前。</returns>
    </member>
    <member name="P:System.Resources.NeutralResourcesLanguageAttribute.Location">
      <summary>リソース フォールバック プロセスを使用してニュートラル リソースを取得するのに使用する <see cref="T:System.Resources.ResourceManager" /> クラスの場所を取得します。</summary>
      <returns>ニュートラル リソースの取得元の場所 (メイン アセンブリまたはサテライト) を示す列挙値の 1 つ。</returns>
    </member>
    <member name="T:System.Resources.ResourceManager">
      <summary>実行時にカルチャ固有のリソースにアクセスする便利な手段を提供するリソース マネージャーを表します。</summary>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor">
      <summary>
        <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)">
      <summary>指定したアセンブリ内で指定したルート名を持つファイルに含まれているリソースを検索する <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="baseName">拡張子はないが、完全修飾名前空間名を含んだ、リソース ファイルのルート名。 たとえば、"MyApplication.MyResource.en-US.resources" というリソース ファイルのルート名は "MyApplication.MyResource" です。</param>
      <param name="assembly">リソースのメイン アセンブリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseName" /> パラメーターまたは <paramref name="assembly" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)">
      <summary>指定した <see cref="T:System.Resources.ResourceSet" /> クラスを使用して、指定したアセンブリ内で指定したルート名を持つファイルに含まれるリソースを検索する <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="baseName">拡張子はないが、完全修飾名前空間名を含んだ、リソース ファイルのルート名。 たとえば、"MyApplication.MyResource.en-US.resources" というリソース ファイルのルート名は "MyApplication.MyResource" です。</param>
      <param name="assembly">リソースのメイン アセンブリ。</param>
      <param name="usingResourceSet">使用するカスタム <see cref="T:System.Resources.ResourceSet" /> の種類。 <see langword="null" /> の場合は、既定のランタイム <see cref="T:System.Resources.ResourceSet" /> オブジェクトが使用されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="usingResourceset" /> が <see cref="T:System.Resources.ResourceSet" /> の派生クラスではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseName" /> パラメーターまたは <paramref name="assembly" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor(System.Type)">
      <summary>指定した型オブジェクトの情報に基づいて、サテライト アセンブリでリソースを検索する <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="resourceSource">リソース マネージャーが .resources ファイルを検索するために必要なすべての情報を取得する元となる種類。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceSource" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Resources.ResourceManager.BaseName">
      <summary>
        <see cref="T:System.Resources.ResourceManager" /> がリソースを検索するリソース ファイルのルート名を取得します。</summary>
      <returns>
        <see cref="T:System.Resources.ResourceManager" /> がリソースを検索するリソース ファイルのルート名。</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)">
      <summary>リソースのアセンブリ マニフェストではなく特定のディレクトリを検索する <see cref="T:System.Resources.ResourceManager" /> オブジェクトを返します。</summary>
      <param name="baseName">リソースのルート名。 たとえば、"MyResource.en-US.resources" というリソース ファイルのルート名は "MyResource" です。</param>
      <param name="resourceDir">リソースを検索するディレクトリの名前。 <paramref name="resourceDir" /> には、アプリケーション ディレクトリを基準とした相対パス、または絶対パスを指定できます。</param>
      <param name="usingResourceSet">使用するカスタム <see cref="T:System.Resources.ResourceSet" /> の種類。 <see langword="null" /> の場合は、既定のランタイム <see cref="T:System.Resources.ResourceSet" /> オブジェクトが使用されます。</param>
      <returns>リソースのアセンブリ マニフェストの代わりに指定されたディレクトリを検索する、リソース マネージャーの新しいインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseName" /> パラメーターまたは <paramref name="resourceDir" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Resources.ResourceManager.FallbackLocation">
      <summary>既定のフォールバック リソースの取得元の場所を取得または設定します。</summary>
      <returns>リソース マネージャーがフォールバック リソースを検索できる場所を指定する列挙値のいずれか 1 つ。</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)">
      <summary>指定したアセンブリで <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> 属性の値を取得して、メイン アセンブリの既定のリソースのカルチャ固有の情報を返します。</summary>
      <param name="a">カルチャ固有の情報を返すアセンブリ。</param>
      <returns>見つかった場合は <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> 属性のカルチャ、それ以外の場合は、インバリアント カルチャ。</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.GetObject(System.String)">
      <summary>指定した文字列以外のリソースの値を返します。</summary>
      <param name="name">取得するリソースの名前。</param>
      <returns>呼び出し元の現在のカルチャ用にローカライズされているリソースの値。 適切なリソース セットが存在するが、<paramref name="name" /> が見つからない場合、メソッドは <see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">使用できるローカライズされたリソースのセットが見つからず、既定のカルチャ リソースもありません。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>指定されたカルチャ用にローカライズされている指定された文字列以外のリソースの値を取得します。</summary>
      <param name="name">取得するリソースの名前。</param>
      <param name="culture">リソースのローカライズ対象のカルチャ。 リソースがこのカルチャにローカライズされていない場合、リソース マネージャーはフォールバック規則を使用して適切なリソースを探します。  
この値が <see langword="null" /> の場合、<see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> プロパティを使用して <see cref="T:System.Globalization.CultureInfo" /> オブジェクトが取得されます。</param>
      <returns>指定されたカルチャに合わせてローカライズされているリソースの値。 適切なリソース セットが存在するが、<paramref name="name" /> が見つからない場合、メソッドは <see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">使用できるリソースのセットが見つからず、既定のカルチャ リソースもありません。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)">
      <summary>指定した <see cref="T:System.Globalization.CultureInfo" /> オブジェクトのリソース ファイルの名前を生成します。</summary>
      <param name="culture">リソース ファイル名を構築する対象のカルチャ オブジェクト。</param>
      <returns>指定した <see cref="T:System.Globalization.CultureInfo" /> オブジェクトのリソース ファイルに使用できる名前。</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
      <summary>特定のカルチャのリソース セットを取得します。</summary>
      <param name="culture">リソースが取得されるカルチャ。</param>
      <param name="createIfNotExists">リソース セットがまだ読み込まれていなければ読み込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="tryParents">リソース セットが見つからないときに、適切なリソースを読み込むためにリソース フォールバックを使用する場合は <see langword="true" />。リソース フォールバック プロセスをバイパスする場合は <see langword="false" />。</param>
      <returns>指定されたカルチャに設定されたリソース。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">
        <paramref name="tryParents" /> が <see langword="true" /> で、使用できるリソースのセットが見つからず、既定のカルチャ リソースもありません。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)">
      <summary>指定したアセンブリの <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> 属性で指定されたバージョンを返します。</summary>
      <param name="a">
        <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> 属性を確認する対象のアセンブリ。</param>
      <returns>指定したアセンブリのサテライト コントラクト バージョン。バージョンが見つからなかった場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">アセンブリの <paramref name="a" /> で見つかった <see cref="T:System.Version" /> が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="a" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetStream(System.String)">
      <summary>指定したリソースからアンマネージ メモリ ストリーム オブジェクトを返します。</summary>
      <param name="name">リソースの名前。</param>
      <returns>リソースを表すアンマネージ メモリ ストリーム オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">指定されたリソースの値が <see cref="T:System.IO.MemoryStream" /> オブジェクトではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">使用できるリソースのセットが見つからず、既定のリソースもありません。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)">
      <summary>指定したカルチャを使用し、指定したリソースからアンマネージ メモリ ストリーム オブジェクトを返します。</summary>
      <param name="name">リソースの名前。</param>
      <param name="culture">リソース検索に使用するカルチャを指定するオブジェクト。 <paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドのカルチャが使用されます。</param>
      <returns>リソースを表すアンマネージ メモリ ストリーム オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">指定されたリソースの値が <see cref="T:System.IO.MemoryStream" /> オブジェクトではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">使用できるリソースのセットが見つからず、既定のリソースもありません。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetString(System.String)">
      <summary>指定されている文字列リソースの値を返します。</summary>
      <param name="name">取得するリソースの名前。</param>
      <returns>呼び出し元の現在の UI カルチャのためにローカライズされたリソースの値、または、リソース セットで <see langword="null" /> が見つからない場合は <paramref name="name" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">指定されたリソースの値が文字列ではありません。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">使用できるリソースのセットが見つからず、既定のカルチャ用のリソースもありません。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)">
      <summary>指定したカルチャにローカライズされている文字列リソースの値を返します。</summary>
      <param name="name">取得するリソースの名前。</param>
      <param name="culture">リソースのローカライズ先のカルチャを表すオブジェクト。</param>
      <returns>指定されたカルチャのためにローカライズされたリソースの値、または、リソース セットで <paramref name="name" /> が見つからない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">指定されたリソースの値が文字列ではありません。</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">使用できるリソースのセットが見つからず、既定のカルチャ用のリソースもありません。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。 この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</exception>
    </member>
    <member name="F:System.Resources.ResourceManager.HeaderVersionNumber">
      <summary>
        <see cref="T:System.Resources.ResourceManager" /> の現在の実装が解釈および作成できるリソース ファイル ヘッダーのバージョンを指定します。</summary>
    </member>
    <member name="P:System.Resources.ResourceManager.IgnoreCase">
      <summary>リソース マネージャーが <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> メソッドと <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> メソッドで大文字と小文字を区別しないリソースの検索を許可しているかどうかを示す値を取得または設定します。</summary>
      <returns>リソースの検索時に大文字と小文字の区別を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
      <summary>リソース セットを検索するための実装を提供します。</summary>
      <param name="culture">検索対象のカルチャ オブジェクト。</param>
      <param name="createIfNotExists">リソース セットがまだ読み込まれていなければ読み込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="tryParents">リソース セットを読み込むことができないときに、親 <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを確認する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>指定されたリソース セット。</returns>
      <exception cref="T:System.Resources.MissingManifestResourceException">メイン アセンブリに .resources ファイルが含まれていませんが、これはリソースの検索に必要です。</exception>
      <exception cref="T:System.ExecutionEngineException">ランタイムで、内部エラーが発生しました。</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
        <paramref name="culture" /> に関連付けられているサテライト アセンブリを配置できません。</exception>
    </member>
    <member name="F:System.Resources.ResourceManager.MagicNumber">
      <summary>リソース ファイルを識別するために使用する番号を保持します。</summary>
    </member>
    <member name="F:System.Resources.ResourceManager.MainAssembly">
      <summary>リソースを含むメイン アセンブリを指定します。</summary>
    </member>
    <member name="M:System.Resources.ResourceManager.ReleaseAllResources">
      <summary>リソース マネージャーに、すべての <see cref="M:System.Resources.ResourceSet.Close" /> オブジェクトの <see cref="T:System.Resources.ResourceSet" /> メソッドを呼び出し、すべてのリソースを解放するように指示します。</summary>
    </member>
    <member name="P:System.Resources.ResourceManager.ResourceSetType">
      <summary>
        <see cref="T:System.Resources.ResourceSet" /> オブジェクトの構築にリソース マネージャーが使用するリソース セット オブジェクトの型を取得します。</summary>
      <returns>
        <see cref="T:System.Resources.ResourceSet" /> オブジェクトの構築にリソース マネージャーが使用するリソース セット オブジェクトの型。</returns>
    </member>
    <member name="T:System.Resources.ResourceReader">
      <summary>順次リソースの名前と値のペアを読み取って、バイナリ リソース (.resources) ファイル内のリソースを列挙します。</summary>
    </member>
    <member name="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
      <summary>指定したストリーム用の <see cref="T:System.Resources.ResourceReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">リソースを読み取る入力ストリーム。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> パラメーターは読み取り可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="stream" /> にアクセスしているときに、I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.#ctor(System.String)">
      <summary>リソース ファイルを指定して <see cref="T:System.Resources.ResourceReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">読み取るリソース ファイルのパスと名前。 <c>filename</c> は大文字と小文字を区別しません。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.IO.IOException">I/O エラーが発生しました。</exception>
      <exception cref="T:System.BadImageFormatException">リソース ファイルの形式が無効です。 たとえば、ファイルの長さが 0 の場合などです。</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.Close">
      <summary>この <see cref="T:System.Resources.ResourceReader" /> オブジェクトに関連付けられたすべてのオペレーティング システム リソースを解放します。</summary>
    </member>
    <member name="M:System.Resources.ResourceReader.Dispose">
      <summary>
        <see cref="T:System.Resources.ResourceReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Resources.ResourceReader.GetEnumerator">
      <summary>この <see cref="T:System.Resources.ResourceReader" /> オブジェクトの列挙子を返します。</summary>
      <returns>この <see cref="T:System.Resources.ResourceReader" /> オブジェクトの列挙子。</returns>
      <exception cref="T:System.InvalidOperationException">リーダーが閉じられているか、破棄されているため、アクセスできません。</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
      <summary>オープン リソース ファイルまたはストリームから名前付きリソースの型名とデータを取得します。</summary>
      <param name="resourceName">リソースの名前。</param>
      <param name="resourceType">このメソッドが返るときに、取得したリソースの型名を表す文字列が含まれます。 このパラメーターは初期化せずに渡されます。</param>
      <param name="resourceData">このメソッドは、取得した型のバイナリ表現であるバイト配列を含む値を返します。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceName" /> は存在しません。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="resourceName" /> の型が無効です。</exception>
      <exception cref="T:System.FormatException">取得されたリソース データが壊れています。</exception>
      <exception cref="T:System.InvalidOperationException">現在の <see cref="T:System.Resources.ResourceReader" /> のオブジェクトは、おそらく閉じられたために初期化されません。</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
      <summary>この <see cref="T:System.Resources.ResourceReader" /> オブジェクトの列挙子を返します。</summary>
      <returns>この <see cref="T:System.Resources.ResourceReader" /> オブジェクトの列挙子。</returns>
      <exception cref="T:System.InvalidOperationException">リーダーが既に閉じられているため、アクセスできません。</exception>
    </member>
    <member name="T:System.Resources.ResourceSet">
      <summary>ある特定のカルチャ用にローカライズされたすべてのリソースを格納します。フォールバック規則を含む他のすべてのカルチャ設定は無視されます。</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor">
      <summary>
        <see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
      <summary>
        <see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを、指定したストリームからリソースを読み取るシステムの既定の <see cref="T:System.Resources.ResourceReader" /> を使用して作成します。</summary>
      <param name="stream">読み取るリソースの <see cref="T:System.IO.Stream" />。 ストリームは、既存のリソース ファイルを参照している必要があります。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> が読み取り可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
      <summary>
        <see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを指定したリソース リーダーを使用して作成します。</summary>
      <param name="reader">使用するリーダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor(System.String)">
      <summary>
        <see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを、指定したファイルを開いてリソースを読み取るシステムの既定の <see cref="T:System.Resources.ResourceReader" /> を使用して作成します。</summary>
      <param name="fileName">読み取るリソース ファイル。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.Close">
      <summary>この <see cref="T:System.Resources.ResourceSet" /> が使用するすべてのリソースを閉じて解放します。</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.Dispose">
      <summary>
        <see cref="T:System.Resources.ResourceSet" /> の現在のインスタンスで使用されていたリソース (メモリを除く) を破棄します。</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
      <summary>現在のインスタンスに関連付けられたリソース (メモリを除く) を解放し、要求された場合には内部マネージド オブジェクトを閉じます。</summary>
      <param name="disposing">現在のインスタンスに格納されているオブジェクトを明示的に閉じるかどうかを示します。</param>
    </member>
    <member name="M:System.Resources.ResourceSet.GetDefaultReader">
      <summary>この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース リーダー クラスを返します。</summary>
      <returns>この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース リーダーの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Resources.ResourceSet.GetDefaultWriter">
      <summary>この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース ライター クラスを返します。</summary>
      <returns>この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース ライターの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Resources.ResourceSet.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> を反復処理できる <see cref="T:System.Resources.ResourceSet" /> を返します。</summary>
      <returns>この <see cref="T:System.Resources.ResourceSet" /> の <see cref="T:System.Collections.IDictionaryEnumerator" />。</returns>
      <exception cref="T:System.ObjectDisposedException">リソース セットは、既に閉じられているか破棄されています。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetObject(System.String)">
      <summary>指定した名前のリソース オブジェクトを検索します。</summary>
      <param name="name">検索するリソースの大文字と小文字を区別した名前。</param>
      <returns>要求されたリソース。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ObjectDisposedException">オブジェクトは、閉じられているか破棄されています。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
      <summary>要求された場合に、大文字と小文字を区別せずに、指定した名前のリソース オブジェクトを検索します。</summary>
      <param name="name">検索するリソースの名前。</param>
      <param name="ignoreCase">指定した名前の大文字と小文字の区別を無視するかどうかを示します。</param>
      <returns>要求されたリソース。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ObjectDisposedException">オブジェクトは、閉じられているか破棄されています。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetString(System.String)">
      <summary>指定した名前の <see cref="T:System.String" /> リソースを検索します。</summary>
      <param name="name">検索するリソースの名前。</param>
      <returns>値が <see cref="T:System.String" /> の場合は、リソースの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="name" /> で指定されたリソースが <see cref="T:System.String" /> ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">オブジェクトは、閉じられているか破棄されています。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
      <summary>要求された場合に、大文字と小文字を区別せずに、指定した名前の <see cref="T:System.String" /> リソースを検索します。</summary>
      <param name="name">検索するリソースの名前。</param>
      <param name="ignoreCase">指定した名前の大文字と小文字の区別を無視するかどうかを示します。</param>
      <returns>値が <see cref="T:System.String" /> の場合は、リソースの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="name" /> で指定されたリソースが <see cref="T:System.String" /> ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">オブジェクトは、閉じられているか破棄されています。</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.ReadResources">
      <summary>すべてのリソースを読み取り、<see cref="T:System.Collections.Hashtable" /> プロパティが示す <see cref="F:System.Resources.ResourceSet.Table" /> に格納します。</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see langword="Dispose" /> との競合状態を避けるために、<see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。 このメンバーは、コードで直接使用するためのものではありません。</summary>
      <returns>現在の <see cref="T:System.Resources.ResourceSet" /> オブジェクトの列挙子。</returns>
    </member>
    <member name="T:System.Resources.SatelliteContractVersionAttribute">
      <summary>
        <see cref="T:System.Resources.ResourceManager" /> オブジェクトに対し、サテライト アセンブリの特定のバージョンを要求するように指示します。</summary>
    </member>
    <member name="M:System.Resources.SatelliteContractVersionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="version">読み込むサテライト アセンブリのバージョンを指定する文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Resources.SatelliteContractVersionAttribute.Version">
      <summary>必要なリソースを保持するサテライト アセンブリのバージョンを取得します。</summary>
      <returns>必要なリソースを保持するサテライト アセンブリのバージョンを含む文字列。</returns>
    </member>
    <member name="T:System.Resources.UltimateResourceFallbackLocation">
      <summary>
        <see cref="T:System.Resources.ResourceManager" /> オブジェクトが、メイン アセンブリまたはサテライト アセンブリでアプリケーションの既定のカルチャのリソースを検索するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Resources.UltimateResourceFallbackLocation.MainAssembly">
      <summary>フォールバック リソースは、メイン アセンブリにあります。</summary>
    </member>
    <member name="F:System.Resources.UltimateResourceFallbackLocation.Satellite">
      <summary>フォールバック リソースは、サテライト アセンブリにあります。</summary>
    </member>
  </members>
</doc>