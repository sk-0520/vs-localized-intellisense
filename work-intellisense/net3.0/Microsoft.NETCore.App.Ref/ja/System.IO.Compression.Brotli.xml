<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Compression.Brotli</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.BrotliDecoder" />
    <member name="M:System.IO.Compression.BrotliDecoder.Decompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@)">
      <param name="source" vsli:raw="A buffer containing the compressed data." />
      <param name="destination" vsli:raw="When this method returns, a byte span containing the decompressed data." />
      <param name="bytesConsumed" vsli:raw="The total number of bytes that were read from &lt;paramref name=&quot;source&quot; /&gt;." />
      <param name="bytesWritten" vsli:raw="The total number of bytes that were written in the &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="M:System.IO.Compression.BrotliDecoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliDecoder.TryDecompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" vsli:raw="A buffer containing the compressed data." />
      <param name="destination" vsli:raw="When this method returns, a byte span containing the decompressed data." />
      <param name="bytesWritten" vsli:raw="The total number of bytes that were written in the &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="T:System.IO.Compression.BrotliEncoder" />
    <member name="M:System.IO.Compression.BrotliEncoder.#ctor(System.Int32,System.Int32)">
      <param name="quality" vsli:raw="A number representing quality of the Brotli compression. 0 is the minimum (no compression), 11 is the maximum." />
      <param name="window" vsli:raw="A number representing the encoder window bits. The minimum value is 10, and the maximum value is 24." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Compress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)">
      <param name="source" vsli:raw="A read-only span of bytes containing the source data to compress." />
      <param name="destination" vsli:raw="When this method returns, a byte span where the compressed is stored." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes that were read from &lt;paramref name=&quot;source&quot; /&gt;." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
      <param name="isFinalBlock" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to finalize the internal stream, which prevents adding more input data when this method returns; &lt;see langword=&quot;false&quot; /&gt; to allow the encoder to postpone the production of output until it has processed enough input." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliEncoder.Flush(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="When this method returns, a span of bytes where the compressed data will be stored." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.GetMaxCompressedLength(System.Int32)">
      <param name="inputSize" vsli:raw="The input size to get the maximum expected compressed length from. Must be greater or equal than 0 and less or equal than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; - 515." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" vsli:raw="A read-only span of bytes containing the source data to compress." />
      <param name="destination" vsli:raw="When this method returns, a span of bytes where the compressed data is stored." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32,System.Int32)">
      <param name="source" vsli:raw="A read-only span of bytes containing the source data to compress." />
      <param name="destination" vsli:raw="When this method returns, a span of bytes where the compressed data is stored." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
      <param name="quality" vsli:raw="A number representing quality of the Brotli compression. 0 is the minimum (no compression), 11 is the maximum." />
      <param name="window" vsli:raw="A number representing the encoder window bits. The minimum value is 10, and the maximum value is 24." />
    </member>
    <member name="T:System.IO.Compression.BrotliStream">
      <summary vsli:raw="Provides methods and properties used to compress and decompress streams by using the Brotli data format specification.">Brotli データ形式の仕様を使ってストリームを圧縮および圧縮解除するために使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression level.">指定したストリームと圧縮レベルを使用して、<see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written.">圧縮するストリーム。</param>
      <param name="compressionLevel" vsli:raw="One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing data to the stream.">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression level, and optionally leaves the stream open.">指定したストリームと圧縮レベルを使用して <see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written.">圧縮するストリーム。</param>
      <param name="compressionLevel" vsli:raw="One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing data to the stream.">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to leave the stream open after disposing the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Compression.BrotliStream" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression mode.">指定したストリームと圧縮モードを使用して、<see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written or from which data to decompress is read.">圧縮するストリーム。</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to compress data to the stream or decompress data from the stream.">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression mode, and optionally leaves the stream open.">指定したストリームと圧縮モードを使用して <see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written or from which data to decompress is read.">圧縮するストリーム。</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to compress data to the stream or decompress data from the stream.">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to leave the stream open after the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; object is disposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
    </member>
    <member name="P:System.IO.Compression.BrotliStream.BaseStream">
      <summary vsli:raw="Gets a reference to the underlying stream.">基になるストリームへの参照を取得します。</summary>
      <returns vsli:raw="A stream object that represents the underlying stream.">基になるストリームを表すストリーム オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying stream is closed.">基になるストリームが閉じられました。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">非同期の読み込み動作を開始します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="buffer" vsli:raw="The buffer from which data will be read.">データの読み取り元となるバッファー。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading data from the stream.">ストリームからのデータの読み込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="To maximum number of bytes to read.">読み取る最大バイト数まで。</param>
      <param name="asyncCallback" vsli:raw="An optional asynchronous callback, to be called when the read operation is complete.">読み取り操作の完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState" vsli:raw="A user-provided object that distinguishes this particular asynchronous read request from other requests.">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <returns vsli:raw="An object that represents the asynchronous read operation, which could still be pending.">まだ保留中である可能性がある非同期の読み取り操作を表すオブジェクト。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="The method tried to read asynchronously past the end of the stream, or a disk error occurred.">メソッドは、ストリームの末尾を越えて非同期的に読み取ろうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="One or more of the arguments is invalid.">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the stream was closed.">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The current &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; implementation does not support the read operation.">現在の <see cref="T:System.IO.Compression.BrotliStream" /> 実装は、読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This call cannot be completed.">この呼び出しは完了できません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">非同期の書き込み操作を開始します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="buffer" vsli:raw="The buffer from which data will be written.">データの書き込み元となるバッファー。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the stream.">ストリームからのデータの書き込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">書き込む最大バイト数。</param>
      <param name="asyncCallback" vsli:raw="An optional asynchronous callback, to be called when the write operation is complete.">書き込みの操作完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState" vsli:raw="A user-provided object that distinguishes this particular asynchronous write request from other requests.">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <returns vsli:raw="An object that represents the asynchronous write operation, which could still be pending.">まだ保留中である可能性がある非同期の書き込み操作を表すオブジェクト。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="The method tried to write asynchronously past the end of the stream, or a disk error occurred.">メソッドは、ストリームの末尾を越えて非同期的に書き込もうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="One or more of the arguments is invalid.">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the stream was closed.">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The current &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; implementation does not support the write operation.">現在の <see cref="T:System.IO.Compression.BrotliStream" /> 実装は、書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The write operation cannot be performed because the stream is closed.">ストリームが閉じているため、書き込み操作を実行できません。</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanRead">
      <summary vsli:raw="Gets a value indicating whether the stream supports reading while decompressing a file.">ファイルの圧縮解除中にストリームが読み取りをサポートするかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Compression.CompressionMode&quot; /&gt; value is &lt;see langword=&quot;Decompress,&quot; /&gt; and the underlying stream supports reading and is not closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Decompress," /> で、基になるストリームが読み取りをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanSeek">
      <summary vsli:raw="Gets a value indicating whether the stream supports seeking.">ストリームがシークをサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanWrite">
      <summary vsli:raw="Gets a value indicating whether the stream supports writing.">ストリームが書き込みをサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Compression.CompressionMode&quot; /&gt; value is &lt;see langword=&quot;Compress&quot; /&gt;, and the underlying stream supports writing and is not closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> で、基になるストリームが書き込みをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.DisposeAsync">
      <summary vsli:raw="Asynchronously releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt;.">
        <see cref="T:System.IO.Compression.BrotliStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Waits for the pending asynchronous read to complete. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">保留中の非同期読み取りが完了するまで待機します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request to finish.">終了させる保留状態の非同期リクエストへの参照。</param>
      <returns vsli:raw="The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.">ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。 <see cref="T:System.IO.Compression.BrotliStream" /> が 0 を返すのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み取り可能になるまでブロックします。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The end operation cannot be performed because the stream is closed.">ストリームが閉じているため、終了操作を実行できません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Handles the end of an asynchronous write operation. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">非同期書き込み操作の終了を処理します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult" vsli:raw="The object that represents the asynchronous call.">非同期呼び出しを表すオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying stream is closed or &lt;see langword=&quot;null&quot; /&gt;.">基になるストリームが閉じられたか、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Flush">
      <summary vsli:raw="If the stream is not disposed, and the compression mode is set to compress, writes all the remaining encoder's data into this stream.">現在実装されているこのメソッドは、何の機能も提供しません。</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously clears all buffers for this Brotli stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.">この Brotli ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous flush operation.">非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Length">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <returns vsli:raw="A long value.">long 値。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported on this stream.">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Position">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <returns vsli:raw="A long value.">long 値。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported on this stream.">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a number of decompressed bytes into the specified byte array.">圧縮解除されたバイト数を、指定したバイト配列に読み取ります。</summary>
      <param name="buffer" vsli:raw="The array used to store decompressed bytes.">圧縮解除されたバイトを格納するために使用する配列。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which the read bytes will be placed.">読み取られるバイトが配置される <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of decompressed bytes to read.">読み取られる、圧縮解除されたバイトの最大数。</param>
      <returns vsli:raw="The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.">圧縮解除されバイト配列に読み取られたバイト数。 既にストリームの末尾に到達している場合は、ゼロまたは読み取られたバイト数が返されます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.IO.Compression.CompressionMode&quot; /&gt; value was &lt;see langword=&quot;Compress&quot; /&gt; when the object was created, or there is already an active asynchronous operation on this stream.">オブジェクトが作成されたときに <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> だったか、またはこのストリーム上にアクティブな非同期操作が既に存在しています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="offset" /> または <paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; length minus the index starting point is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="buffer" /> の長さからインデックスの開始点を引いた値が <paramref name="count" /> 未満です。</exception>
      <exception cref="T:System.IO.InvalidDataException" vsli:raw="The data is in an invalid format.">データ形式が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying stream is null or closed.">基になるストリームが null 値であるか、閉じています。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads a sequence of bytes from the current Brotli stream to a byte span and advances the position within the Brotli stream by the number of bytes read.">現在の Brotli ストリームからバイト シーケンスをバイト スパンに読み取り、読み取られたバイト数だけ Brotli ストリーム内の位置を進めます。</summary>
      <param name="buffer" vsli:raw="A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source.">メモリの領域。 このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</param>
      <returns vsli:raw="The total number of bytes read into the buffer. This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.">バッファーに読み取られた合計バイト数。 要求しただけのバイト数を読み取ることができなかった場合、この値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte array starting at a specified index, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.">現在の Brotli ストリームからバイト シーケンスを非同期で読み取り、指定されたインデックスを開始位置とするバイト配列に書き込み、読み取られたバイト数だけ Brotli ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">データを書き込むバッファー。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the Brotli stream.">Brotli ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">読み取る最大バイト数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous read operation, which wraps the total number of bytes read into the &lt;paramref name=&quot;buffer&quot; /&gt;. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the Brotli stream has been reached.">非同期の読み取り操作を表すタスク。<paramref name="buffer" /> に読み取られたバイト数の合計がラップされます。 現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、Brotli ストリームの末尾に到達した場合は 0 になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte memory range, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.">現在の Brotli ストリームからバイト シーケンスを非同期に読み取ってバイト メモリの範囲に書き込み、読み取られたバイト数だけ Brotli ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer" vsli:raw="The region of memory to write the data into.">データを書き込むメモリの領域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous read operation, which wraps the total number of bytes read into the buffer. The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the Brotli stream has been reached.">非同期の読み取り操作を表すタスク。バッファーに読み取られたバイト数の合計がラップされます。 相当するバイト数が現在使用できない場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。Brotli ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset" vsli:raw="The location in the stream.">ストリーム内の位置。</param>
      <param name="origin" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt; values.">
        <see cref="T:System.IO.SeekOrigin" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A long value.">long 値。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported on this stream.">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="value" vsli:raw="The length of the stream.">ストリーム長。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes compressed bytes to the underlying stream from the specified byte array.">圧縮されたバイトを、指定したバイト配列から基になるストリームに書き込みます。</summary>
      <param name="buffer" vsli:raw="The buffer containing the data to compress.">圧縮するデータを格納しているバッファー。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which the bytes will be read.">バイトの読み取り元となる <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">書き込む最大バイト数。</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The write operation cannot be performed because the stream is closed.">ストリームが閉じているため、書き込み操作を実行できません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes a sequence of bytes to the current Brotli stream from a read-only byte span and advances the current position within this Brotli stream by the number of bytes written.">現在の Brotli ストリームに読み取り専用バイト スパンからバイト シーケンスを書き込み、書き込まれたバイト数だけこの Brotli ストリーム内の現在位置を進めます。</summary>
      <param name="buffer" vsli:raw="A region of memory. This method copies the contents of this region to the current Brotli stream.">メモリの領域。 このメソッドでは、この領域のコンテンツが現在の Brotli ストリームにコピーされます。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte array.">圧縮されたバイトを、指定されたバイト配列から基になる Brotli ストリームに非同期で書き込みます。</summary>
      <param name="buffer" vsli:raw="The buffer that contains the data to compress.">圧縮するデータを格納しているバッファー。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which to begin copying bytes to the Brotli stream.">
        <paramref name="buffer" /> のゼロから始まるバイト オフセットであり、ここから Brotli ストリームにバイトをコピーします。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">書き込む最大バイト数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte memory range.">圧縮されたバイトを、指定されたバイト メモリ領域から基になる Brotli ストリームに非同期で書き込みます。</summary>
      <param name="buffer" vsli:raw="The memory region to write data from.">データの書き込み元となるメモリ領域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
  </members>
</doc>