<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Compression.Brotli</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.BrotliDecoder" />
    <member name="M:System.IO.Compression.BrotliDecoder.Decompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesConsumed" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliDecoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliDecoder.TryDecompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="T:System.IO.Compression.BrotliEncoder" />
    <member name="M:System.IO.Compression.BrotliEncoder.#ctor(System.Int32,System.Int32)">
      <param name="quality" />
      <param name="window" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Compress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesConsumed" />
      <param name="bytesWritten" />
      <param name="isFinalBlock" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliEncoder.Flush(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.GetMaxCompressedLength(System.Int32)">
      <param name="inputSize" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32,System.Int32)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
      <param name="quality" />
      <param name="window" />
    </member>
    <member name="T:System.IO.Compression.BrotliStream">
      <summary>Brotli データ形式の仕様を使ってストリームを圧縮および圧縮解除するために使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>指定したストリームと圧縮レベルを使用して、<see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="compressionLevel">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>指定したストリームと圧縮レベルを使用して <see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="compressionLevel">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.BrotliStream" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>指定したストリームと圧縮モードを使用して、<see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="mode">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>指定したストリームと圧縮モードを使用して <see cref="T:System.IO.Compression.BrotliStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="mode">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen" />
    </member>
    <member name="P:System.IO.Compression.BrotliStream.BaseStream">
      <summary>基になるストリームへの参照を取得します。</summary>
      <returns>基になるストリームを表すストリーム オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">基になるストリームが閉じられました。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の読み込み動作を開始します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="buffer">データの読み取り元となるバッファー。</param>
      <param name="offset">ストリームからのデータの読み込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数まで。</param>
      <param name="asyncCallback">読み取り操作の完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <returns>まだ保留中である可能性がある非同期の読み取り操作を表すオブジェクト。</returns>
      <exception cref="T:System.IO.IOException">メソッドは、ストリームの末尾を越えて非同期的に読み取ろうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException">現在の <see cref="T:System.IO.Compression.BrotliStream" /> 実装は、読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">この呼び出しは完了できません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の書き込み操作を開始します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="buffer">データの書き込み元となるバッファー。</param>
      <param name="offset">ストリームからのデータの書き込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="asyncCallback">書き込みの操作完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <returns>まだ保留中である可能性がある非同期の書き込み操作を表すオブジェクト。</returns>
      <exception cref="T:System.IO.IOException">メソッドは、ストリームの末尾を越えて非同期的に書き込もうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException">現在の <see cref="T:System.IO.Compression.BrotliStream" /> 実装は、書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">ストリームが閉じているため、書き込み操作を実行できません。</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanRead">
      <summary>ファイルの圧縮解除中にストリームが読み取りをサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Decompress," /> で、基になるストリームが読み取りをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanSeek">
      <summary>ストリームがシークをサポートしているかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanWrite">
      <summary>ストリームが書き込みをサポートしているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> で、基になるストリームが書き込みをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.DisposeAsync">
      <summary>
        <see cref="T:System.IO.Compression.BrotliStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</summary>
      <returns>非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)">
      <summary>保留中の非同期読み取りが完了するまで待機します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult">終了させる保留状態の非同期リクエストへの参照。</param>
      <returns>ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。 <see cref="T:System.IO.Compression.BrotliStream" /> が 0 を返すのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み取り可能になるまでブロックします。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">ストリームが閉じているため、終了操作を実行できません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)">
      <summary>非同期書き込み操作の終了を処理します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult">非同期呼び出しを表すオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">基になるストリームが閉じられたか、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Flush">
      <summary>現在実装されているこのメソッドは、何の機能も提供しません。</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>この Brotli ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</summary>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Length">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <returns>long 値。</returns>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Position">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <returns>long 値。</returns>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>圧縮解除されたバイト数を、指定したバイト配列に読み取ります。</summary>
      <param name="buffer">圧縮解除されたバイトを格納するために使用する配列。</param>
      <param name="offset">読み取られるバイトが配置される <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count">読み取られる、圧縮解除されたバイトの最大数。</param>
      <returns>圧縮解除されバイト配列に読み取られたバイト数。 既にストリームの末尾に到達している場合は、ゼロまたは読み取られたバイト数が返されます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトが作成されたときに <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> だったか、またはこのストリーム上にアクティブな非同期操作が既に存在しています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> または <paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> の長さからインデックスの開始点を引いた値が <paramref name="count" /> 未満です。</exception>
      <exception cref="T:System.IO.InvalidDataException">データ形式が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">基になるストリームが null 値であるか、閉じています。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})">
      <summary>現在の Brotli ストリームからバイト シーケンスをバイト スパンに読み取り、読み取られたバイト数だけ Brotli ストリーム内の位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</param>
      <returns>バッファーに読み取られた合計バイト数。 要求しただけのバイト数を読み取ることができなかった場合、この値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>現在の Brotli ストリームからバイト シーケンスを非同期で読み取り、指定されたインデックスを開始位置とするバイト配列に書き込み、読み取られたバイト数だけ Brotli ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込むバッファー。</param>
      <param name="offset">Brotli ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。<paramref name="buffer" /> に読み取られたバイト数の合計がラップされます。 現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、Brotli ストリームの末尾に到達した場合は 0 になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>現在の Brotli ストリームからバイト シーケンスを非同期に読み取ってバイト メモリの範囲に書き込み、読み取られたバイト数だけ Brotli ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込むメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。バッファーに読み取られたバイト数の合計がラップされます。 相当するバイト数が現在使用できない場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。Brotli ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset">ストリーム内の位置。</param>
      <param name="origin">
        <see cref="T:System.IO.SeekOrigin" /> 値のいずれか 1 つ。</param>
      <returns>long 値。</returns>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="value">ストリーム長。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>圧縮されたバイトを、指定したバイト配列から基になるストリームに書き込みます。</summary>
      <param name="buffer">圧縮するデータを格納しているバッファー。</param>
      <param name="offset">バイトの読み取り元となる <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じているため、書き込み操作を実行できません。</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>現在の Brotli ストリームに読み取り専用バイト スパンからバイト シーケンスを書き込み、書き込まれたバイト数だけこの Brotli ストリーム内の現在位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドでは、この領域のコンテンツが現在の Brotli ストリームにコピーされます。</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>圧縮されたバイトを、指定されたバイト配列から基になる Brotli ストリームに非同期で書き込みます。</summary>
      <param name="buffer">圧縮するデータを格納しているバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> のゼロから始まるバイト オフセットであり、ここから Brotli ストリームにバイトをコピーします。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>圧縮されたバイトを、指定されたバイト メモリ領域から基になる Brotli ストリームに非同期で書き込みます。</summary>
      <param name="buffer">データの書き込み元となるメモリ領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
  </members>
</doc>