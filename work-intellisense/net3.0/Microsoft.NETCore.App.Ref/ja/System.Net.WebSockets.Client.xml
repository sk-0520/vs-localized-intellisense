<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>WebSocket サービスに接続するクライアントを提供します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>接続を中止し、保留中の IO 操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>非同期操作として <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスを閉じます。</summary>
      <param name="closeStatus">WebSocket の終了状態です。</param>
      <param name="statusDescription">終了状態の説明。</param>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>非同期操作として <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの出力を閉じます。</summary>
      <param name="closeStatus">WebSocket の終了状態です。</param>
      <param name="statusDescription">終了状態の説明。</param>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスで終了ハンドシェイクが開始された理由を取得します。</summary>
      <returns>終了ハンドシェイクが開始された理由。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスが終了した理由の説明を取得します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスが閉じられた理由の説明。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>非同期操作として、WebSocket サーバーに接続します。</summary>
      <param name="uri">接続する WebSocket サーバーの URI です。</param>
      <param name="cancellationToken">操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスによって使用されているアンマネージ リソースを解放します。</summary>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスに対応する WebSocket オプションを取得します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンス用の WebSocket オプションです。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上のデータを非同期操作として受信します。</summary>
      <param name="buffer">応答を受信するバッファー。</param>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> は接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上のデータを非同期操作として、バイト メモリ範囲に受信します。</summary>
      <param name="buffer">応答を受信するメモリの領域。</param>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> は接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上のデータを非同期操作として送信します。</summary>
      <param name="buffer">送信するメッセージが含まれるバッファー。</param>
      <param name="messageType">バッファーが平文かバイナリ形式かを指定する列挙値の 1 つ。</param>
      <param name="endOfMessage">これが最終的な非同期送信であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> は接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>読み取り専用のバイト メモリ範囲から <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上のデータを非同期操作として送信します。</summary>
      <param name="buffer">送信するメッセージが含まれるメモリの領域。</param>
      <param name="messageType">バッファーが平文かバイナリ形式かを指定する列挙値の 1 つ。</param>
      <param name="endOfMessage">これが最終的な非同期送信であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> は接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの WebSocket 状態を取得します。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの WebSocket の状態。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスでサポートされている WebSocket サブプロトコルを取得します。</summary>
      <returns>サポートされる WebSocket サブプロトコル。</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> オブジェクトで使用するオプションです。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>WebSocket 接続ハンドシェイクの間にネゴシエートされるサブプロトコルを追加します。</summary>
      <param name="subProtocol">追加する WebSocket サブプロトコル。</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>クライアント側証明書のコレクションを取得または設定します。</summary>
      <returns>クライアント側証明書のコレクション。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>要求に関連付けられているクッキーを取得または設定します。</summary>
      <returns>要求に関連付けられているクッキー。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>クライアントの資格情報を取得または設定します。</summary>
      <returns>クライアントの資格情報。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>WebSocket プロトコルのキープ アライブ間隔を取得または設定します。</summary>
      <returns>WebSocket プロトコルのキープアライブ間隔。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>WebSocket 要求に対して使用するプロキシを取得または設定します。</summary>
      <returns>WebSocket 要求に対して使用するプロキシです。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback" />
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>クライアント バッファー パラメーターを設定します。</summary>
      <param name="receiveBufferSize">クライアント受信バッファーのサイズ (バイト単位)。</param>
      <param name="sendBufferSize">クライアント送信バッファーのサイズ (バイト単位)。</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>クライアント バッファー パラメーターを設定します。</summary>
      <param name="receiveBufferSize">クライアント受信バッファーのサイズ (バイト単位)。</param>
      <param name="sendBufferSize">クライアント送信バッファーのサイズ (バイト単位)。</param>
      <param name="buffer">使用する受信バッファー。</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>HTTP 要求ヘッダーと値を作成します。</summary>
      <param name="headerName">HTTP ヘッダーの名前です。</param>
      <param name="headerValue">HTTP ヘッダーの値。</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>WebSocket のハンドシェイク中に既定の資格情報を使用するかどうかを示す <see cref="T:System.Boolean" /> の値を取得または設定します。</summary>
      <returns>
        <see langword="true" />WebSocket ハンドシェイク中に既定の資格情報を使用する必要がある場合は。それ以外<see langword="false" />の場合は。 既定値は、<see langword="true" /> です。</returns>
    </member>
  </members>
</doc>