<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary>既にいっぱいになっている制限付きチャネルに書き込んだときに使用する動作を指定します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary>書き込まれる項目用の領域を確保するために、チャネル内の最新の項目を削除して無視します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary>書き込まれる項目用の領域を確保するために、チャネル内の最も古い項目を削除して無視します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary>書き込まれる項目を削除します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary>書き込み操作を完了するために、使用できる領域が空くまで待機します。</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary>バインドされた <see cref="T:System.Threading.Channels.Channel`1" /> インスタンスの動作を制御するオプションを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary>オプションを初期化します。</summary>
      <param name="capacity">制限付きチャネルによって格納できる項目の最大数。</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary>制限付きチャネルによって格納できる項目の最大数を取得または設定します。</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary>チャネルがいっぱいである場合の書き込み操作によって発生する動作を取得または設定します。</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary>チャネルを作成するための静的メソッドを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary>指定した最大容量でチャネルを作成します。</summary>
      <param name="capacity">チャネルによって格納できる項目の最大数。</param>
      <typeparam name="T">チャネル内のデータの種類を指定します。</typeparam>
      <returns>作成されたチャネル。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary>指定した最大容量でチャネルを作成します。</summary>
      <param name="options">チャネルの動作を制御するオプション。</param>
      <typeparam name="T">チャネル内のデータの種類を指定します。</typeparam>
      <returns>作成されたチャネル。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary>任意の数のリーダーおよびライターが同時に使用できる、制限のないチャネルを作成します。</summary>
      <typeparam name="T" />
      <returns>作成されたチャネル。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary>指定したオプションに従う制限のないチャネルを作成します。</summary>
      <param name="options">チャネルの動作を制御するオプション。</param>
      <typeparam name="T">チャネル内のデータの種類を指定します。</typeparam>
      <returns>作成されたチャネル。</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary>
        <typeparamref name="T" /> 型の要素の読み取りと書き込みをサポートしているチャネルの基本クラスを指定します。</summary>
      <typeparam name="T">チャネルで読み取り可能で書き込み可能なデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor" />
    <member name="T:System.Threading.Channels.Channel`2">
      <summary>
        <typeparamref name="TRead" /> 型の要素の読み取りと <typeparamref name="TWrite" /> 型の要素の書き込みをサポートしているチャネルの基本クラスを指定します。</summary>
      <typeparam name="TWrite">チャネルに書き込むことができるデータの種類を指定します。</typeparam>
      <typeparam name="TRead">チャネルから読み取ることができるデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor" />
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary>
        <see cref="T:System.Threading.Channels.Channel`2" /> から読み取り可能な半分への暗黙的なキャスト。</summary>
      <param name="channel">キャストされている <see cref="T:System.Threading.Channels.Channel`2" />。</param>
      <returns>読み取り可能な半分。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary>
        <see cref="T:System.Threading.Channels.Channel`2" /> から書き込み可能な半分への暗黙的なキャスト。</summary>
      <param name="channel">キャストされている <see cref="T:System.Threading.Channels.Channel`2" />。</param>
      <returns>書き込み可能な半分。</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary>このチャネルの読み取り可能な部分を取得します。</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary>このチャネルの書き込み可能な部分を取得します。</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary>閉じた後のチャネルが使用された場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary>
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary>
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerException">この例外の原因となった例外。</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明するメッセージ。</param>
      <param name="innerException">この例外の原因となった例外。</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary>チャネルのインスタンスの動作を制御するオプションを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor" />
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary>チャネル上で実行する操作で、保留中の非同期操作の通知をサブスクライブしている継続を同期的に呼び出してもよい場合は <see langword="true" />、すべての継続を非同期的に呼び出す必要がある場合は <see langword="false" />。</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary>チャネルのリーダーが最大 1 つの読み取り操作しか同時に実行できないことを保証する場合は <see langword="true" />、そのような制約を保証しない場合は <see langword="false" />。</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary>チャネルへのライターが最大 1 つの書き込み操作しか同時に実行できないことを保証する場合は <see langword="true" />、そのような制約を保証しない場合は <see langword="false" />。</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary>チャネルから読み取るための基本クラスを提供します。</summary>
      <typeparam name="T">チャネルから読み取ることができるデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor" />
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary>このチャネルからこれ以上データを読み取れなくなると完了する <see cref="T:System.Threading.Tasks.Task" /> を取得します。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary>チャネルからのすべてのデータを読み取るための <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> を作成します。</summary>
      <param name="cancellationToken">列挙型をキャンセルするために使用するキャンセル トークン。</param>
      <returns>作成された非同期の列挙型。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary>チャネルから非同期的に項目を読み取ります。</summary>
      <param name="cancellationToken">読み取り操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns>非同期の読み取り操作を表すタスク <see cref="T:System.Threading.Tasks.ValueTask`1" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary>チャネルから項目を読み取ろうと試みます。</summary>
      <param name="item">読み取る項目、または項目を読み取れなかった場合の規定値。</param>
      <returns>項目が読み取られた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary>データの読み取りを実行できるようになると完了する <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</summary>
      <param name="cancellationToken">待機操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns>データの読み取りを実行できるようになると結果 <see langword="true" /> と共に完了し、これ以上データを読み取れない場合は結果 <see langword="false" /> と共に完了する <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary>チャネルに書き込むための基本クラスを提供します。</summary>
      <typeparam name="T">チャネルに書き込むことができるデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary>完了しているとしてチャネルをマークします。これ以上の項目は書き込まれないという意味です。</summary>
      <param name="error">チャネルが完了する原因となっているエラーを示す、省略可能な例外。</param>
      <exception cref="T:System.InvalidOperationException">チャネルが既に完了とマークされています。</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary>完了しているとしてチャネルをマークしようとします。これ以上のデータは書き込まれないという意味です。</summary>
      <param name="error">これ以上データを書き込めない原因となるエラーを示す <see cref="T:System.Exception" />、または成功の場合は null。</param>
      <returns>この操作でチャネルが正しく完了した場合は <see langword="true" />、チャネルを完了としてマークできない場合 (たとえば既にそのようにマークされている場合や、完了をサポートしていない場合) は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary>指定した項目のチャネルへの書き込みを試行します。</summary>
      <param name="item">書き込む項目。</param>
      <returns>項目が書き込まれた場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary>項目を書き込むための空き領域が利用可能になると完了する <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</summary>
      <param name="cancellationToken">待機操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns>項目を書き込むための空き領域を利用できる場合は結果 <see langword="true" /> と共に完了し、それ以上の書き込みが許可されない場合は結果 <see langword="false" /> と共に完了する <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary>項目をチャネルに非同期的に書き込みます。</summary>
      <param name="item">チャネルに書き込む値。</param>
      <param name="cancellationToken">書き込み操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns>非同期の書き込み操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary>バインド解除された <see cref="T:System.Threading.Channels.Channel`1" /> インスタンスの動作を制御するオプションを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
  </members>
</doc>