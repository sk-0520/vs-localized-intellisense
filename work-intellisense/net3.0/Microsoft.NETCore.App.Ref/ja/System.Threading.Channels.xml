<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">既にいっぱいになっている制限付きチャネルに書き込んだときに使用する動作を指定します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">書き込まれる項目用の領域を確保するために、チャネル内の最新の項目を削除して無視します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">書き込まれる項目用の領域を確保するために、チャネル内の最も古い項目を削除して無視します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">書き込まれる項目を削除します。</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">書き込み操作を完了するために、使用できる領域が空くまで待機します。</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">バインドされた <see cref="T:System.Threading.Channels.Channel`1" /> インスタンスの動作を制御するオプションを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">オプションを初期化します。</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">制限付きチャネルによって格納できる項目の最大数。</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">制限付きチャネルによって格納できる項目の最大数を取得または設定します。</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">チャネルがいっぱいである場合の書き込み操作によって発生する動作を取得または設定します。</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">チャネルを作成するための静的メソッドを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">指定した最大容量でチャネルを作成します。</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">チャネルによって格納できる項目の最大数。</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">チャネル内のデータの種類を指定します。</typeparam>
      <returns vsli:raw="The created channel.">作成されたチャネル。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">指定した最大容量でチャネルを作成します。</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">チャネルの動作を制御するオプション。</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">チャネル内のデータの種類を指定します。</typeparam>
      <returns vsli:raw="The created channel.">作成されたチャネル。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">任意の数のリーダーおよびライターが同時に使用できる、制限のないチャネルを作成します。</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel." />
      <returns vsli:raw="The created channel.">作成されたチャネル。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">指定したオプションに従う制限のないチャネルを作成します。</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">チャネルの動作を制御するオプション。</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">チャネル内のデータの種類を指定します。</typeparam>
      <returns vsli:raw="The created channel.">作成されたチャネル。</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">
        <typeparamref name="T" /> 型の要素の読み取りと書き込みをサポートしているチャネルの基本クラスを指定します。</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">チャネルで読み取り可能で書き込み可能なデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor" />
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">
        <typeparamref name="TRead" /> 型の要素の読み取りと <typeparamref name="TWrite" /> 型の要素の書き込みをサポートしているチャネルの基本クラスを指定します。</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">チャネルに書き込むことができるデータの種類を指定します。</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">チャネルから読み取ることができるデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor" />
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">
        <see cref="T:System.Threading.Channels.Channel`2" /> から読み取り可能な半分への暗黙的なキャスト。</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">キャストされている <see cref="T:System.Threading.Channels.Channel`2" />。</param>
      <returns vsli:raw="The readable half.">読み取り可能な半分。</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">
        <see cref="T:System.Threading.Channels.Channel`2" /> から書き込み可能な半分への暗黙的なキャスト。</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">キャストされている <see cref="T:System.Threading.Channels.Channel`2" />。</param>
      <returns vsli:raw="The writable half.">書き込み可能な半分。</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">このチャネルの読み取り可能な部分を取得します。</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">このチャネルの書き込み可能な部分を取得します。</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">閉じた後のチャネルが使用された場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">この例外の原因となった例外。</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the error.">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the error.">エラーを説明するメッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">この例外の原因となった例外。</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">チャネルのインスタンスの動作を制御するオプションを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor" />
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">チャネル上で実行する操作で、保留中の非同期操作の通知をサブスクライブしている継続を同期的に呼び出してもよい場合は <see langword="true" />、すべての継続を非同期的に呼び出す必要がある場合は <see langword="false" />。</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">チャネルのリーダーが最大 1 つの読み取り操作しか同時に実行できないことを保証する場合は <see langword="true" />、そのような制約を保証しない場合は <see langword="false" />。</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">チャネルへのライターが最大 1 つの書き込み操作しか同時に実行できないことを保証する場合は <see langword="true" />、そのような制約を保証しない場合は <see langword="false" />。</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">チャネルから読み取るための基本クラスを提供します。</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">チャネルから読み取ることができるデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor" />
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">このチャネルからこれ以上データを読み取れなくなると完了する <see cref="T:System.Threading.Tasks.Task" /> を取得します。</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">チャネルからのすべてのデータを読み取るための <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> を作成します。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">列挙型をキャンセルするために使用するキャンセル トークン。</param>
      <returns vsli:raw="The created async enumerable.">作成された非同期の列挙型。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">チャネルから非同期的に項目を読み取ります。</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">読み取り操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">非同期の読み取り操作を表すタスク <see cref="T:System.Threading.Tasks.ValueTask`1" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">チャネルから項目を読み取ろうと試みます。</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">読み取る項目、または項目を読み取れなかった場合の規定値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">項目が読み取られた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">データの読み取りを実行できるようになると完了する <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">待機操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">データの読み取りを実行できるようになると結果 <see langword="true" /> と共に完了し、これ以上データを読み取れない場合は結果 <see langword="false" /> と共に完了する <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">チャネルに書き込むための基本クラスを提供します。</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">チャネルに書き込むことができるデータの種類を指定します。</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">完了しているとしてチャネルをマークします。これ以上の項目は書き込まれないという意味です。</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">チャネルが完了する原因となっているエラーを示す、省略可能な例外。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">チャネルが既に完了とマークされています。</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">完了しているとしてチャネルをマークしようとします。これ以上のデータは書き込まれないという意味です。</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">これ以上データを書き込めない原因となるエラーを示す <see cref="T:System.Exception" />、または成功の場合は null。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">この操作でチャネルが正しく完了した場合は <see langword="true" />、チャネルを完了としてマークできない場合 (たとえば既にそのようにマークされている場合や、完了をサポートしていない場合) は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">指定した項目のチャネルへの書き込みを試行します。</summary>
      <param name="item" vsli:raw="The item to write.">書き込む項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">項目が書き込まれた場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">項目を書き込むための空き領域が利用可能になると完了する <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">待機操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">項目を書き込むための空き領域を利用できる場合は結果 <see langword="true" /> と共に完了し、それ以上の書き込みが許可されない場合は結果 <see langword="false" /> と共に完了する <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">項目をチャネルに非同期的に書き込みます。</summary>
      <param name="item" vsli:raw="The value to write to the channel.">チャネルに書き込む値。</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">書き込み操作をキャンセルするために使用する <see cref="T:System.Threading.CancellationToken" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">非同期の書き込み操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">バインド解除された <see cref="T:System.Threading.Channels.Channel`1" /> インスタンスの動作を制御するオプションを提供します。</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
  </members>
</doc>