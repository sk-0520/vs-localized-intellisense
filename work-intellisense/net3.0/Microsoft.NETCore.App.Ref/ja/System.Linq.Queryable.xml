<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Queryable</name>
  </assembly>
  <members>
    <member name="T:System.Linq.EnumerableExecutor">
      <summary vsli:raw="Represents an expression tree and provides functionality to execute the expression tree after rewriting it.">式ツリーを表し、式ツリーを書き換えた後で式ツリーを実行する機能を提供します。</summary>
    </member>
    <member name="T:System.Linq.EnumerableExecutor`1">
      <summary vsli:raw="Represents an expression tree and provides functionality to execute the expression tree after rewriting it.">式ツリーを表し、式ツリーを書き換えた後で式ツリーを実行する機能を提供します。</summary>
      <typeparam name="T" vsli:raw="The data type of the value that results from executing the expression tree.">式ツリーの実行結果の値のデータ型。</typeparam>
    </member>
    <member name="M:System.Linq.EnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Linq.EnumerableExecutor`1&quot; /&gt; class.">
        <see cref="T:System.Linq.EnumerableExecutor`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression" vsli:raw="An expression tree to associate with the new instance.">新しいインスタンスに関連付ける式ツリー。</param>
    </member>
    <member name="T:System.Linq.EnumerableQuery">
      <summary vsli:raw="Represents an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; as an &lt;see cref=&quot;T:System.Linq.EnumerableQuery&quot; /&gt; data source.">
        <see cref="T:System.Collections.IEnumerable" /> を <see cref="T:System.Linq.EnumerableQuery" /> データ ソースとして表します。</summary>
    </member>
    <member name="T:System.Linq.EnumerableQuery`1">
      <summary vsli:raw="Represents an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection as an &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; data source.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> コレクションを <see cref="T:System.Linq.IQueryable`1" /> データ ソースとして表します。</summary>
      <typeparam name="T" vsli:raw="The type of the data in the collection.">コレクション内のデータの型。</typeparam>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; class and associates it with an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection.">
        <see cref="T:System.Linq.EnumerableQuery`1" /> クラスの新しいインスタンスを初期化し、それを <see cref="T:System.Collections.Generic.IEnumerable`1" /> コレクションに関連付けます。</summary>
      <param name="enumerable" vsli:raw="A collection to associate with the new instance.">新しいインスタンスに関連付けるコレクション。</param>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; class and associates the instance with an expression tree.">
        <see cref="T:System.Linq.EnumerableQuery`1" /> クラスの新しいインスタンスを初期化し、インスタンスを式ツリーに関連付けます。</summary>
      <param name="expression" vsli:raw="An expression tree to associate with the new instance.">新しいインスタンスに関連付ける式ツリー。</param>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the associated &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection, or, if it is null, through the collection that results from rewriting the associated expression tree as a query on an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; data source and executing it.">関連付けられている <see cref="T:System.Collections.Generic.IEnumerable`1" /> コレクション、またはこれが null の場合は、関連付けられている式ツリーを <see cref="T:System.Collections.Generic.IEnumerable`1" /> データ ソースに対するクエリとして書き換え、それを実行することによって得られるコレクションを反復処理できる列挙子を返します。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the associated data source.">関連付けられたデータ ソースの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the associated &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection, or, if it is null, through the collection that results from rewriting the associated expression tree as a query on an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; data source and executing it.">関連付けられている <see cref="T:System.Collections.Generic.IEnumerable`1" /> コレクション、またはこれが null の場合は、関連付けられている式ツリーを <see cref="T:System.Collections.Generic.IEnumerable`1" /> データ ソースに対するクエリとして書き換え、それを実行することによって得られるコレクションを反復処理できる列挙子を返します。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the associated data source.">関連付けられたデータ ソースの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#ElementType">
      <summary vsli:raw="Gets the type of the data in the collection that this instance represents.">このインスタンスが表すコレクション内のデータの型を取得します。</summary>
      <returns vsli:raw="The type of the data in the collection that this instance represents.">このインスタンスが表すコレクション内のデータの型。</returns>
    </member>
    <member name="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Expression">
      <summary vsli:raw="Gets the expression tree that is associated with or that represents this instance.">このインスタンスに関連付けられた、またはこのインスタンスを表す式ツリーを取得します。</summary>
      <returns vsli:raw="The expression tree that is associated with or that represents this instance.">このインスタンスに関連付けられた、またはこのインスタンスを表す式ツリー。</returns>
    </member>
    <member name="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Provider">
      <summary vsli:raw="Gets the query provider that is associated with this instance.">このインスタンスに関連付けられたクエリ プロバイダーを取得します。</summary>
      <returns vsli:raw="The query provider that is associated with this instance.">このインスタンスに関連付けられたクエリ プロバイダー。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; object and associates it with a specified expression tree that represents an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; collection of data.">新しい <see cref="T:System.Linq.EnumerableQuery`1" /> オブジェクトを構築し、それを、データの <see cref="T:System.Linq.IQueryable" /> コレクションを表す指定した式ツリーに関連付けます。</summary>
      <param name="expression" vsli:raw="An expression tree that represents an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; collection of data.">データの <see cref="T:System.Linq.IQueryable" /> コレクションを表す式ツリー。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; object that is associated with &lt;paramref name=&quot;expression&quot; /&gt;.">
        <paramref name="expression" /> に関連付ける <see cref="T:System.Linq.EnumerableQuery`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
      <summary>新しい <see cref="T:System.Linq.EnumerableQuery`1" /> オブジェクトを構築し、それを、データの <see cref="T:System.Linq.IQueryable`1" /> コレクションを表す指定した式ツリーに関連付けます。</summary>
      <param name="expression">実行する式ツリー。</param>
      <typeparam name="S">
        <paramref name="expression" /> が表すコレクション内のデータの型。</typeparam>
      <returns>
        <paramref name="expression" /> に関連付けられた EnumerableQuery オブジェクト。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Executes an expression after rewriting it to call &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt; methods instead of &lt;see cref=&quot;T:System.Linq.Queryable&quot; /&gt; methods on any enumerable data sources that cannot be queried by &lt;see cref=&quot;T:System.Linq.Queryable&quot; /&gt; methods.">
        <see cref="T:System.Linq.Enumerable" /> メソッドでクエリできない列挙可能なデータ ソースで、<see cref="T:System.Linq.Queryable" /> メソッドの代わりに <see cref="T:System.Linq.Queryable" /> メソッドを呼び出すように式を書き換えた後で、式を実行します。</summary>
      <param name="expression" vsli:raw="An expression tree to execute.">実行する式ツリー。</param>
      <returns vsli:raw="The value that results from executing &lt;paramref name=&quot;expression&quot; /&gt;.">
        <paramref name="expression" /> の実行結果の値。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
      <summary>
        <see cref="T:System.Linq.Enumerable" /> メソッドでクエリできない列挙可能なデータ ソースで、<see cref="T:System.Linq.Queryable" /> メソッドの代わりに <see cref="T:System.Linq.Queryable" /> メソッドを呼び出すように式を書き換えた後で、式を実行します。</summary>
      <param name="expression">実行する式ツリー。</param>
      <typeparam name="S">
        <paramref name="expression" /> が表すコレクション内のデータの型。</typeparam>
      <returns>
        <paramref name="expression" /> の実行結果の値。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.ToString">
      <summary vsli:raw="Returns a textual representation of the enumerable collection or, if it is null, of the expression tree that is associated with this instance.">列挙可能なコレクションのテキスト表現を返します。これが null の場合は、このインスタンスに関連付けられている式ツリーのテキスト表現を返します。</summary>
      <returns vsli:raw="A textual representation of the enumerable collection or, if it is null, of the expression tree that is associated with this instance.">列挙可能なコレクションのテキスト表現。これが null の場合は、このインスタンスに関連付けられている式ツリーのテキスト表現。</returns>
    </member>
    <member name="T:System.Linq.Queryable">
      <summary vsli:raw="Provides a set of &lt;see langword=&quot;static&quot; /&gt; (&lt;see langword=&quot;Shared&quot; /&gt; in Visual Basic) methods for querying data structures that implement &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" /> を実装するデータ構造を照会するための一連の <see langword="static" /> (Visual Basic の場合は <see langword="Shared" />) メソッドを提供します。</summary>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
      <summary vsli:raw="Applies an accumulator function over a sequence.">シーケンスにアキュムレータ関数を適用します。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">集計対象のシーケンス。</param>
      <param name="func" vsli:raw="An accumulator function to apply to each element.">各要素に適用するアキュムレータ関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The final accumulator value.">最終的なアキュムレータ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="func" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
      <summary vsli:raw="Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">シーケンスにアキュムレータ関数を適用します。 指定されたシード値が最初のアキュムレータ値として使用されます。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">集計対象のシーケンス。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">最初のアキュムレータ値。</param>
      <param name="func" vsli:raw="An accumulator function to invoke on each element.">各要素に対して呼び出すアキュムレータ関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">アキュムレータ値の型。</typeparam>
      <returns vsli:raw="The final accumulator value.">最終的なアキュムレータ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="func" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
      <summary vsli:raw="Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">シーケンスにアキュムレータ関数を適用します。 指定したシード値は最初のアキュムレータ値として使用され、指定した関数は結果値の選択に使用されます。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">集計対象のシーケンス。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">最初のアキュムレータ値。</param>
      <param name="func" vsli:raw="An accumulator function to invoke on each element.">各要素に対して呼び出すアキュムレータ関数。</param>
      <param name="selector" vsli:raw="A function to transform the final accumulator value into the result value.">最終的なアキュムレータ値を結果値に変換する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">アキュムレータ値の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">結果の値の型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">変換された最終的なアキュムレータ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="func" />、または <paramref name="selector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Determines whether all the elements of a sequence satisfy a condition.">シーケンスのすべての要素が条件を満たしているかどうかを判断します。</summary>
      <param name="source" vsli:raw="A sequence whose elements to test for a condition.">条件を満たしているかどうかをテストする要素を含むシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された述語でソース シーケンスのすべての要素がテストに合格する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Determines whether a sequence contains any elements.">シーケンスに要素が含まれているかどうかを判断します。</summary>
      <param name="source" vsli:raw="A sequence to check for being empty.">空かどうかを確認するシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ソース シーケンスに要素が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Determines whether any element of a sequence satisfies a condition.">シーケンスの任意の要素が条件を満たしているかどうかを判断します。</summary>
      <param name="source" vsli:raw="A sequence whose elements to test for a condition.">条件を満たしているかどうかをテストする要素を含むシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された述語でソース シーケンスの要素がテストに合格する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)">
      <param name="source" vsli:raw="A queryable sequence." />
      <param name="element" vsli:raw="An element of type &lt;typeparamref name=&quot;TSource&quot; /&gt; to append to &lt;paramref name=&quot;source&quot; /&gt;." />
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence." />
    </member>
    <member name="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; to an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerable" /> を <see cref="T:System.Linq.IQueryable" /> に変換します。</summary>
      <param name="source" vsli:raw="A sequence to convert.">変換するシーケンス。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; that represents the input sequence.">入力シーケンスを表す <see cref="T:System.Linq.IQueryable" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not implement &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; for some &lt;paramref name=&quot;T&quot; /&gt;.">
        <paramref name="source" /> が <paramref name="T" /> に対して <see cref="T:System.Collections.Generic.IEnumerable`1" /> を実装していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Converts a generic &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">ジェネリックの <see cref="T:System.Collections.Generic.IEnumerable`1" /> をジェネリックの <see cref="T:System.Linq.IQueryable`1" /> に変換します。</summary>
      <param name="source" vsli:raw="A sequence to convert.">変換するシーケンス。</param>
      <typeparam name="TElement" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that represents the input sequence.">入力シーケンスを表す <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">
        <see cref="T:System.Decimal" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">
        <see cref="T:System.Double" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">
        <see cref="T:System.Int32" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">
        <see cref="T:System.Int64" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">Null 許容型の <see cref="T:System.Decimal" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">Null 許容型の <see cref="T:System.Double" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">Null 許容型の <see cref="T:System.Int32" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">Null 許容型の <see cref="T:System.Int64" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">Null 許容型の <see cref="T:System.Single" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">
        <see cref="T:System.Single" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Decimal" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">平均値の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Double" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Int32" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Int64" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値。<paramref name="source" /> シーケンスが空か <see langword="null" /> 値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Double" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値。<paramref name="source" /> シーケンスが空か <see langword="null" /> 値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Int32" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値。<paramref name="source" /> シーケンスが空か <see langword="null" /> 値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Int64" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値。<paramref name="source" /> シーケンスが空か <see langword="null" /> 値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Single" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">値のシーケンスの平均値。<paramref name="source" /> シーケンスが空か <see langword="null" /> 値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Single" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; to the specified type.">
        <see cref="T:System.Linq.IQueryable" /> の要素を指定した型に変換します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; that contains the elements to be converted.">変換する要素が格納されている <see cref="T:System.Linq.IQueryable" />。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">
        <paramref name="source" /> の要素の変換後の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains each element of the source sequence converted to the specified type.">指定した型に変換されたソース シーケンスの各要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">シーケンスの要素を <paramref name="TResult" /> 型にキャストできません。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Concatenates two sequences.">2 つのシーケンスを連結します。</summary>
      <param name="source1" vsli:raw="The first sequence to concatenate.">連結する最初のシーケンス。</param>
      <param name="source2" vsli:raw="The sequence to concatenate to the first sequence.">最初のシーケンスに連結するシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the concatenated elements of the two input sequences.">2 つの入力シーケンスの連結された要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
      <summary vsli:raw="Determines whether a sequence contains a specified element by using the default equality comparer.">既定の等値比較子を使用して、指定した要素がシーケンスに含まれているかどうかを判断します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; in which to locate &lt;paramref name=&quot;item&quot; /&gt;.">
        <paramref name="item" /> の検索対象となる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="item" vsli:raw="The object to locate in the sequence.">シーケンス内で検索するオブジェクト。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the input sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した値を持つ要素が入力シーケンスに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して、指定した要素がシーケンスに含まれているかどうかを判断します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; in which to locate &lt;paramref name=&quot;item&quot; /&gt;.">
        <paramref name="item" /> の検索対象となる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="item" vsli:raw="The object to locate in the sequence.">シーケンス内で検索するオブジェクト。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the input sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した値を持つ要素が入力シーケンスに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the number of elements in a sequence.">シーケンス内の要素数を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">カウントする要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">入力シーケンス内の要素数。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="source" /> 内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the number of elements in the specified sequence that satisfies a condition.">指定したシーケンス内の、条件を満たす要素の数を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">カウントする要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The number of elements in the sequence that satisfies the condition in the predicate function.">述語関数の条件を満たす、シーケンス内の要素数。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="source" /> 内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.">指定したシーケンスの要素を返します。シーケンスが空の場合はシングルトン コレクションにある型パラメーターの既定値を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return a default value for if empty.">空の場合に、既定値を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains &lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="TSource" /> が空の場合は <see langword="default" />(<paramref name="source" />) が格納されている <see cref="T:System.Linq.IQueryable`1" />。それ以外の場合は <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.">指定されたシーケンスの要素を返します。シーケンスが空の場合はシングルトン コレクションにある型パラメーターの既定値を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the specified value for if empty.">空の場合に、指定された値を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">シーケンスが空の場合に返す値。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains &lt;paramref name=&quot;defaultValue&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="defaultValue" /> が空の場合は <paramref name="source" /> が格納されている <see cref="T:System.Linq.IQueryable`1" />。それ以外の場合は <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns distinct elements from a sequence by using the default equality comparer to compare values.">既定の等値比較子を使用して値を比較することにより、シーケンスから一意の要素を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to remove duplicates from.">重複を削除する対象の <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains distinct elements from &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の一意の要素が格納される <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、シーケンスから一意の要素を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to remove duplicates from.">重複を削除する対象の <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains distinct elements from &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の一意の要素が格納される <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="comparer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a sequence.">シーケンス内の指定されたインデックス位置にある要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">取得する要素の、0 から始まるインデックス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The element at the specified position in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 内の指定した位置にある要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a sequence or a default value if the index is out of range.">シーケンス内の指定したインデックス位置にある要素を返します。インデックスが範囲外の場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">取得する要素の、0 から始まるインデックス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;index&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;source&quot; /&gt;; otherwise, the element at the specified position in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> が <paramref name="source" /> の範囲外の場合は <c>default</c>(<paramref name="TSource" />)。それ以外の場合は <paramref name="source" /> で指定された位置にある要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set difference of two sequences by using the default equality comparer to compare values.">既定の等値比較子を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements that are not also in &lt;paramref name=&quot;source2&quot; /&gt; will be returned.">
        <paramref name="source2" /> には含まれていないが、返される要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that also occur in the first sequence will not appear in the returned sequence.">最初のシーケンスにも含まれているが、返されたシーケンスには出現しない要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the set difference of the two sequences.">2 つのシーケンスの差集合が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements that are not also in &lt;paramref name=&quot;source2&quot; /&gt; will be returned.">
        <paramref name="source2" /> には含まれていないが、返される要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that also occur in the first sequence will not appear in the returned sequence.">最初のシーケンスにも含まれているが、返されたシーケンスには出現しない要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the set difference of the two sequences.">2 つのシーケンスの差集合が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the first element of a sequence.">シーケンスの最初の要素を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the first element of.">最初の要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The first element in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source sequence is empty.">ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the first element of a sequence that satisfies a specified condition.">指定された条件を満たす、シーケンスの最初の要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> でテストに合格する、<paramref name="predicate" /> の最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="predicate" /> の条件を満たす要素はありません。  
または 
ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the first element of a sequence, or a default value if the sequence contains no elements.">シーケンスの最初の要素を返します。シーケンスに要素が含まれていない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the first element of.">最初の要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> が空の場合は <c>default</c>(<paramref name="TSource" />)。それ以外の場合は <paramref name="source" /> の最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.">指定された条件を満たす、シーケンスの最初の要素を返します。このような要素が見つからない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> が空の場合または <paramref name="predicate" /> で指定されたテストに合格する要素がない場合は <c>default</c>(<paramref name="TSource" />)。それ以外の場合は、<paramref name="predicate" /> で指定されたテストに合格する、<paramref name="source" /> の最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TSource&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TSource))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; object contains a sequence of objects and a key.">C# では <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c>、Visual Basic では <c>IQueryable(Of IGrouping(Of TKey, TSource))</c>。ここでは、各 <see cref="T:System.Linq.IGrouping`2" /> オブジェクトに、オブジェクトのシーケンスとキーが含まれています。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、指定された比較子を使用してキーを比較します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TSource&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TSource))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; contains a sequence of objects and a key.">C# では <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c>、Visual Basic では <c>IQueryable(Of IGrouping(Of TKey, TSource))</c>。ここでは、各 <see cref="T:System.Linq.IGrouping`2" /> に、オブジェクトのシーケンスとキーが含まれています。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="comparer" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、指定された関数を使用して各グループの要素を射影します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">各 <see cref="T:System.Linq.IGrouping`2" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TElement))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; contains a sequence of objects of type &lt;paramref name=&quot;TElement&quot; /&gt; and a key.">C# では <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c>、Visual Basic では <c>IQueryable(Of IGrouping(Of TKey, TElement))</c>。ここでは、各 <see cref="T:System.Linq.IGrouping`2" /> に、<paramref name="TElement" /> 型のオブジェクトのシーケンスとキーが含まれています。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence and projects the elements for each group by using a specified function. Key values are compared by using a specified comparer.">指定された関数を使用して、シーケンスの要素をグループ化し、各グループの要素を射影します。 キー値の比較には、指定された比較子を使用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">各 <see cref="T:System.Linq.IGrouping`2" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TElement))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; contains a sequence of objects of type &lt;paramref name=&quot;TElement&quot; /&gt; and a key.">C# では <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c>、Visual Basic では <c>IQueryable(Of IGrouping(Of TKey, TElement))</c>。ここでは、各 <see cref="T:System.Linq.IGrouping`2" /> に、<paramref name="TElement" /> 型のオブジェクトのシーケンスとキーが含まれています。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="elementSelector" />、または <paramref name="comparer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> の型引数を持つ <c>T:System.Linq.IQueryable`1</c>。各要素は、グループとそのキーの射影を表します。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="resultSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Keys are compared by using a specified comparer.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。 キーの比較には、指定された比較子を使用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> の型引数を持つ <c>T:System.Linq.IQueryable`1</c>。各要素は、グループとそのキーの射影を表します。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="resultSelector" />、または <paramref name="comparer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。 各グループの要素は、指定された関数を使用して射影されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">各 <see cref="T:System.Linq.IGrouping`2" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> の型引数を持つ <c>T:System.Linq.IQueryable`1</c>。各要素は、グループとそのキーの射影を表します。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="elementSelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。 キーの比較には、指定された比較子を使用し、各グループの要素の射影には、指定された関数を使用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">各 <see cref="T:System.Linq.IGrouping`2" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> の型引数を持つ <c>T:System.Linq.IQueryable`1</c>。各要素は、グループとそのキーの射影を表します。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="elementSelector" />、<paramref name="resultSelector" />、または <paramref name="comparer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
      <summary vsli:raw="Correlates the elements of two sequences based on key equality and groups the results. The default equality comparer is used to compare keys.">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果をグループ化します。 キーの比較には既定の等値比較子が使用されます。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing a grouped join on two sequences.">2 つのシーケンスに対してグループ化結合を実行して取得した <paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果をグループ化します。 指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用してキーを比較します。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</param>
      <param name="comparer" vsli:raw="A comparer to hash and compare keys.">キーをハッシュして比較する比較子。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing a grouped join on two sequences.">2 つのシーケンスに対してグループ化結合を実行して取得した <paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set intersection of two sequences by using the default equality comparer to compare values.">既定の等値比較子を使用して値を比較することにより、2 つのシーケンスの積集合を生成します。</summary>
      <param name="source1" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;source2&quot; /&gt; are returned.">
        <paramref name="source2" /> にも含まれる、返される一意の要素を含むシーケンス。</param>
      <param name="source2" vsli:raw="A sequence whose distinct elements that also appear in the first sequence are returned.">最初のシーケンスにも含まれる、返される一意の要素を含むシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence that contains the set intersection of the two sequences.">2 つのシーケンスの積集合を含むシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、2 つのシーケンスの積集合を生成します。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose distinct elements that also appear in &lt;paramref name=&quot;source2&quot; /&gt; are returned.">
        <paramref name="source2" /> にも含まれる、返される一意の要素を含む <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements that also appear in the first sequence are returned.">最初のシーケンスにも含まれる、返される一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the set intersection of the two sequences.">2 つのシーケンスの積集合を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
      <summary vsli:raw="Correlates the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">一致するキーに基づいて 2 つのシーケンスの要素を相互に関連付けます。 キーの比較には既定の等値比較子が使用されます。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">一致する 2 つの要素から結果の要素を作成する関数。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing an inner join on two sequences.">2 つのシーケンスに対して内部結合を実行して取得した <paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">一致するキーに基づいて 2 つのシーケンスの要素を相互に関連付けます。 指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用してキーを比較します。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">一致する 2 つの要素から結果の要素を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">キーをハッシュして比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing an inner join on two sequences.">2 つのシーケンスに対して内部結合を実行して取得した <paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the last element in a sequence.">シーケンスの最後の要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the last element of.">最後の要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value at the last position in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の最後の位置にある値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source sequence is empty.">ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the last element of a sequence that satisfies a specified condition.">指定された条件を満たす、シーケンスの最後の要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The last element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> で指定されたテストに合格する、<paramref name="predicate" /> の最後の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="predicate" /> の条件を満たす要素はありません。  

または - 
ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the last element in a sequence, or a default value if the sequence contains no elements.">シーケンスの最後の要素を返します。シーケンスに要素が含まれていない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the last element of.">最後の要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the last element in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> が空の場合は <c>default</c>(<paramref name="TSource" />)。それ以外の場合は <paramref name="source" /> の最後の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.">条件を満たす、シーケンスの最後の要素を返します。このような要素が見つからない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no elements pass the test in the predicate function; otherwise, the last element of &lt;paramref name=&quot;source&quot; /&gt; that passes the test in the predicate function.">
        <paramref name="source" /> が空の場合、または述語関数でテストに合格する要素がない場合は <c>default</c>(<paramref name="TSource" />)。それ以外の場合は、述語関数でテストに合格する、<paramref name="source" /> の最後の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Int64&quot; /&gt; that represents the total number of elements in a sequence.">シーケンス内の要素の合計数を表す <see cref="T:System.Int64" /> を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">カウントする要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> にある要素の数。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements exceeds &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">要素数が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Int64&quot; /&gt; that represents the number of elements in a sequence that satisfy a condition.">条件を満たす、シーケンス内の要素の数を表す <see cref="T:System.Int64" /> を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">カウントする要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; that satisfy the condition in the predicate function.">述語関数の条件を満たす、<paramref name="source" /> の要素数。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of matching elements exceeds &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">一致する要素数が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the maximum value in a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">ジェネリックの <see cref="T:System.Linq.IQueryable`1" /> にある最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum of.">最大値を確認する対象となる値のシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Invokes a projection function on each element of a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; and returns the maximum resulting value.">ジェネリックの <see cref="T:System.Linq.IQueryable`1" /> の各要素に対して射影関数を呼び出し、結果の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> で表された関数によって返される値の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the minimum value of a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">ジェネリックの <see cref="T:System.Linq.IQueryable`1" /> にある最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum of.">最小値を確認する対象となる値のシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Invokes a projection function on each element of a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; and returns the minimum resulting value.">ジェネリックの <see cref="T:System.Linq.IQueryable`1" /> の各要素に対して射影関数を呼び出し、結果の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> で表された関数によって返される値の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
      <summary vsli:raw="Filters the elements of an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; based on a specified type.">指定された型に基づいて <see cref="T:System.Linq.IQueryable" /> の要素をフィルター処理します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; whose elements to filter.">フィルター処理する要素を含む <see cref="T:System.Linq.IQueryable" />。</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">シーケンスの要素をフィルター処理する型。</typeparam>
      <returns vsli:raw="A collection that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; that have type &lt;paramref name=&quot;TResult&quot; /&gt;.">
        <paramref name="source" /> 型を持つ、<paramref name="TResult" /> の要素を含むコレクション。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Sorts the elements of a sequence in ascending order according to a key.">シーケンスの要素をキーに従って昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表される関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in ascending order by using a specified comparer.">指定された比較子を使用してシーケンスの要素を昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表される関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="comparer" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order according to a key.">シーケンスの要素をキーに従って降順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表される関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">指定された比較子を使用してシーケンスの要素を降順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表される関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="comparer" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)">
      <param name="source" vsli:raw="A queryable sequence." />
      <param name="element" vsli:raw="An element of type &lt;typeparamref name=&quot;TSource&quot; /&gt; to prepend to &lt;paramref name=&quot;source&quot; /&gt;." />
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence." />
    </member>
    <member name="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Inverts the order of the elements in a sequence.">シーケンスの要素の順序を反転させます。</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">反転させる値のシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements correspond to those of the input sequence in reverse order.">要素が入力シーケンスの要素に逆順で対応している <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Projects each element of a sequence into a new form.">シーケンスの各要素を新しいフォームに射影します。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> で表された関数によって返される値の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a projection function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の各要素に対して射影関数を呼び出した結果として得られる要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
      <summary vsli:raw="Projects each element of a sequence into a new form by incorporating the element's index.">要素のインデックスを組み込むことにより、シーケンスの各要素を新しいフォームに射影します。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> で表された関数によって返される値の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a projection function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の各要素に対して射影関数を呼び出した結果として得られる要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and combines the resulting sequences into one sequence.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに結合します。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> で表される関数によって返されるシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.">入力シーケンスの各要素で一対多の射影関数を呼び出した結果として得られる要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and combines the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに結合します。 各ソース要素のインデックスは、その要素の射影されたフォームで使用されます。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element; the second parameter of this function represents the index of the source element.">各要素に適用する射影関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> で表される関数によって返されるシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.">入力シーケンスの各要素で一対多の射影関数を呼び出した結果として得られる要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and invokes a result selector function on each element therein. The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、その各要素で結果のセレクター関数を呼び出します。 各中間シーケンスの結果として得られる値は、1 つの 1 次元シーケンスに結合され、返されます。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="collectionSelector" vsli:raw="A projection function to apply to each element of the input sequence.">入力シーケンスの各要素に適用する射影関数。</param>
      <param name="resultSelector" vsli:raw="A projection function to apply to each element of each intermediate sequence.">各中間シーケンスの各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of the intermediate elements collected by the function represented by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> で表される関数によって収集される中間要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the resulting sequence.">結果のシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking the one-to-many projection function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; and then mapping each of those sequence elements and their corresponding &lt;paramref name=&quot;source&quot; /&gt; element to a result element.">
        <paramref name="collectionSelector" /> の各要素で一対多の射影関数 <paramref name="source" /> を呼び出し、こうしたシーケンスの各要素とそれに対応する <paramref name="source" /> 要素を結果の要素に割り当てた結果として得られる要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;collectionSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="collectionSelector" />、または <paramref name="resultSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that incorporates the index of the source element that produced it. A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.">シーケンスの各要素を、それを生成したソース要素のインデックスを組み込む <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影します。 結果のセレクター関数は、各中間シーケンスの各要素に対して呼び出されます。結果値は 1 つの 1 次元シーケンスに結合され、返されます。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="collectionSelector" vsli:raw="A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.">入力シーケンスの各要素に適用する射影関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <param name="resultSelector" vsli:raw="A projection function to apply to each element of each intermediate sequence.">各中間シーケンスの各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of the intermediate elements collected by the function represented by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> で表される関数によって収集される中間要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the resulting sequence.">結果のシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking the one-to-many projection function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; and then mapping each of those sequence elements and their corresponding &lt;paramref name=&quot;source&quot; /&gt; element to a result element.">
        <paramref name="collectionSelector" /> の各要素で一対多の射影関数 <paramref name="source" /> を呼び出し、こうしたシーケンスの各要素とそれに対応する <paramref name="source" /> 要素を結果の要素に割り当てた結果として得られる要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;collectionSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="collectionSelector" />、または <paramref name="resultSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Determines whether two sequences are equal by using the default equality comparer to compare elements.">既定の等値比較子を使用して要素を比較することで、2 つのシーケンスが等しいかどうかを判断します。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to compare to those of &lt;paramref name=&quot;source2&quot; /&gt;.">
        <paramref name="source2" /> の要素と比較する要素が含まれている <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to compare to those of the first sequence.">最初のシーケンスの要素と比較する要素が含まれている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのソース シーケンスが同じ長さで、それらに対応する要素の比較が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two sequences are equal by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare elements.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して要素を比較することで、2 つのシーケンスが等しいかどうかを判断します。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to compare to those of &lt;paramref name=&quot;source2&quot; /&gt;.">
        <paramref name="source2" /> の要素と比較する要素が含まれている <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to compare to those of the first sequence.">最初のシーケンスの要素と比較する要素が含まれている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">要素の比較に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのソース シーケンスが同じ長さで、それらに対応する要素の比較が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.">シーケンスの唯一の要素を返し、シーケンス内の要素が 1 つだけでない場合は例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the single element of.">1 つの要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence.">入力シーケンスの 1 つの要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="source" /> には複数の要素があります。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">指定された条件を満たす、シーケンスの唯一の要素を返し、そのような要素が複数存在する場合は例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return a single element from.">1 つの要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> の条件を満たす、入力シーケンスの 1 つの要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="predicate" /> の条件を満たす要素はありません。  
または 
<paramref name="predicate" /> の条件を満たす要素が複数あります。  

または - 
ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">シーケンスの唯一の要素を返します。シーケンスが空の場合、既定値を返します。シーケンス内に要素が複数ある場合、このメソッドは例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the single element of.">1 つの要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence, or &lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if the sequence contains no elements.">入力シーケンスの唯一の要素、または、シーケンスに要素が含まれない場合は <c>default</c>(<paramref name="TSource" />)。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> には複数の要素があります。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">指定された条件を満たすシーケンスの唯一の要素、またはそのような要素がない場合は既定値を返します。このメソッドは、複数の要素が条件を満たす場合に例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return a single element from.">1 つの要素を返す <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;, or &lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if no such element is found.">
        <paramref name="predicate" /> の条件を満たす入力シーケンスの唯一要素、または、そのような要素が見つからない場合は <c>default</c>(<paramref name="TSource" />)。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> の条件を満たす要素が複数あります。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a sequence and then returns the remaining elements.">シーケンス内の指定された数の要素をバイパスし、残りの要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return elements from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">残りの要素を返す前にスキップする要素の数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements that occur after the specified index in the input sequence.">入力シーケンスで指定されたインデックスの後に出現する要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)">
      <param name="source" vsli:raw="A queryable sequence." />
      <param name="count" vsli:raw="The number of elements to omit from the end of the queryable sequence." />
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence." />
    </member>
    <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.">指定された条件が満たされる限り、シーケンスの要素をバイパスした後、残りの要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return elements from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from &lt;paramref name=&quot;source&quot; /&gt; starting at the first element in the linear series that does not pass the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> で指定されたテストに合格しない連続する最初の要素から <paramref name="predicate" /> の要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary vsli:raw="Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">指定された条件が満たされる限り、シーケンスの要素をバイパスした後、残りの要素を返します。 要素のインデックスは、述語関数のロジックで使用されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return elements from.">返される要素が含まれる <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition; the second parameter of this function represents the index of the source element.">各要素が条件に当てはまるかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from &lt;paramref name=&quot;source&quot; /&gt; starting at the first element in the linear series that does not pass the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> で指定されたテストに合格しない連続する最初の要素から <paramref name="predicate" /> の要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">
        <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">
        <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">
        <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">
        <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">null 許容の <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">null 許容の <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">null 許容の <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">null 許容の <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">
        <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する、null 許容の <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">入力シーケンスの各要素に対して射影関数を呼び出して取得する <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">
        <paramref name="TSource" /> 型の値のシーケンス。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">各要素に適用する射影関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a sequence.">シーケンスの先頭から、指定された数の連続する要素を返します。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要素を返すシーケンス。</param>
      <param name="count" vsli:raw="The number of elements to return.">返す要素数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the specified number of elements from the start of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の先頭から、指定された数の要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)">
      <param name="source" vsli:raw="A queryable sequence instance." />
      <param name="count" vsli:raw="The number of elements to take from the end of the queryable sequence." />
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence." />
    </member>
    <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns elements from a sequence as long as a specified condition is true.">指定された条件が満たされる限り、シーケンスから要素を返します。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要素を返すシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence occurring before the element at which the test specified by &lt;paramref name=&quot;predicate&quot; /&gt; no longer passes.">
        <paramref name="predicate" /> で指定されたテストに合格しなくなった要素の前に出現する、入力シーケンスの要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary vsli:raw="Returns elements from a sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">指定された条件が満たされる限り、シーケンスから要素を返します。 要素のインデックスは、述語関数のロジックで使用されます。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要素を返すシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.">各要素が条件を満たしているかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース シーケンスの要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence occurring before the element at which the test specified by &lt;paramref name=&quot;predicate&quot; /&gt; no longer passes.">
        <paramref name="predicate" /> で指定されたテストに合格しなくなった要素の前に出現する、入力シーケンスの要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.">キーに従って、シーケンス内の後続の要素を昇順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">指定された比較子を使用して、シーケンス内の後続の要素を昇順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="comparer" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.">キーに従って、シーケンス内の後続の要素を降順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> で表された関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">指定された比較子を使用して、シーケンス内の後続の要素を降順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key that is returned by the &lt;paramref name=&quot;keySelector&quot; /&gt; function.">
        <paramref name="keySelector" /> 関数によって返されるキーの型。</typeparam>
      <returns vsli:raw="A collection whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられているコレクション。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="comparer" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set union of two sequences by using the default equality comparer.">既定の等値比較子を使用して、2 つのシーケンスの和集合を生成します。</summary>
      <param name="source1" vsli:raw="A sequence whose distinct elements form the first set for the union operation.">和集合演算の最初のセットを形成する各要素を含むシーケンス。</param>
      <param name="source2" vsli:raw="A sequence whose distinct elements form the second set for the union operation.">和集合演算の 2 番目のセットを形成する各要素を含むシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements from both input sequences, excluding duplicates.">2 つの入力シーケンスの要素 (重複する要素は除く) を格納している <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two sequences by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して 2 つのシーケンスの和集合を生成します。</summary>
      <param name="source1" vsli:raw="A sequence whose distinct elements form the first set for the union operation.">和集合演算の最初のセットを形成する各要素を含むシーケンス。</param>
      <param name="source2" vsli:raw="A sequence whose distinct elements form the second set for the union operation.">和集合演算の 2 番目のセットを形成する各要素を含むシーケンス。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements from both input sequences, excluding duplicates.">2 つの入力シーケンスの要素 (重複する要素は除く) を格納している <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Filters a sequence of values based on a predicate.">述語に基づいて値のシーケンスをフィルター処理します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to filter.">フィルター処理する <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence that satisfy the condition specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> で指定された条件を満たす、入力シーケンスの要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary vsli:raw="Filters a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">述語に基づいて値のシーケンスをフィルター処理します。 各要素のインデックスは、述語関数のロジックで使用されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to filter.">フィルター処理する <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.">各要素が条件を満たしているかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース シーケンスの要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence that satisfy the condition specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> で指定された条件を満たす、入力シーケンスの要素を含む <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Queryable.Zip``2(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1})">
      <summary vsli:raw="Produces a sequence of tuples with elements from the two specified sequences.">指定された 2 つのシーケンスの要素を持つタプルのシーケンスを生成します。</summary>
      <param name="source1" vsli:raw="The first sequence to merge.">マージする 1 番目のシーケンス。</param>
      <param name="source2" vsli:raw="The second sequence to merge.">マージする 2 番目のシーケンス。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first input sequence.">1 番目の入力シーケンスの要素の型。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second input sequence.">2 番目の入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence of tuples with elements taken from the first and second sequences, in that order.">最初のシーケンスと 2 番目のシーケンスから取得された要素が、その順序で備えられているタプルのシーケンス。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary vsli:raw="Merges two sequences by using the specified predicate function.">指定された述語関数を使用して 2 つのシーケンスをマージします。</summary>
      <param name="source1" vsli:raw="The first sequence to merge.">マージする 1 番目のシーケンス。</param>
      <param name="source2" vsli:raw="The second sequence to merge.">マージする 2 番目のシーケンス。</param>
      <param name="resultSelector" vsli:raw="A function that specifies how to merge the elements from the two sequences.">2 つのシーケンスの要素をマージする方法を指定する関数。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first input sequence.">1 番目の入力シーケンスの要素の型。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second input sequence.">2 番目の入力シーケンスの要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the result sequence.">結果のシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains merged elements of two input sequences.">2 つの入力シーケンスのマージされた要素が格納されている <see cref="T:System.Linq.IQueryable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> または <paramref name="source2" /> が <see langword="null" /> です。</exception>
    </member>
  </members>
</doc>