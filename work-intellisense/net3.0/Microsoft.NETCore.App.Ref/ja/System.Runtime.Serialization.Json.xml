<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary vsli:raw="Specifies date-time format options.">日付/時刻の書式オプションを指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string.">書式文字列を使用して、<see cref="T:System.Runtime.Serialization.DateTimeFormat" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="formatString" vsli:raw="The format string.">書式指定文字列。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string and format provider.">書式文字列と書式プロバイダーを使用して、<see cref="T:System.Runtime.Serialization.DateTimeFormat" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="formatString" vsli:raw="The format sting.">書式指定文字列。</param>
      <param name="formatProvider" vsli:raw="The format provider.">書式プロバイダー。</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary vsli:raw="Gets or sets the formatting options that customize string parsing for some date and time parsing methods.">いくつかの日時解析メソッドによる文字列の解析をカスタマイズする形式指定オプションを取得または設定します。</summary>
      <returns vsli:raw="The formatting options that customize string parsing for some date and time parsing methods.">いくつかの日時解析メソッドによる文字列の解析をカスタマイズする形式指定オプション。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary vsli:raw="Gets an object that controls formatting.">書式を制御するオブジェクトを取得します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary vsli:raw="Gets the format strings to control the formatting produced when a date or time is represented as a string.">日付または時刻が文字列として表されるときに生成される書式を制御するための書式指定文字列を取得します。</summary>
      <returns vsli:raw="The format strings to control the formatting produced when a date or time is represented as a string.">日付または時刻が文字列として表されるときに生成される書式を制御するための書式指定文字列。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary vsli:raw="Specifies how often to emit type information.">型情報を出力するための頻度を指定します。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary vsli:raw="Always to emit type information.">常に型情報を出力します。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary vsli:raw="As needed emit type information.">必要に応じて型情報を出力します。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary vsli:raw="Never to emit type information.">常に型情報を出力しません。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary vsli:raw="Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.">オブジェクトを JSON (JavaScript Object Notation) にシリアル化し、JSON データをオブジェクトに逆シリアル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションをシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and serializer settings.">指定した型とシリアライザー設定のオブジェクトをシリアル化または逆シリアル化する <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="settings" vsli:raw="The serializer settings for the JSON serializer.">JSON シリアライザーのシリアライザーの設定。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、パラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションを、パラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize. The default is &quot;root&quot;.">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。 既定値は "root" です。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、型 <see cref="T:System.Xml.XmlDictionaryString" /> のパラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, with a collection of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションを、型 <see cref="T:System.Xml.XmlDictionaryString" /> のパラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary vsli:raw="Gets the format of the date and time type items in object graph.">オブジェクト グラフの日付型および時刻型の項目の書式を取得します。</summary>
      <returns vsli:raw="The format of the date and time type items in object graph.">オブジェクト グラフの日付型および時刻型の項目の書式。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">型情報を出力するデータ コントラクトの JSON シリアライザーの設定を取得または設定します。</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">型情報を出力するデータ コントラクトの JSON シリアライザーの設定。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether unknown data is ignored on deserialization and whether the &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt; interface is ignored on serialization.">逆シリアル化時に未知のデータを無視するかどうか、およびシリアル化時に <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> インターフェイスを無視するかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore unknown data and &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">未知のデータおよび <see langword="true" /> を無視する場合は <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that represents an object the serializer can deserialize from.">シリアライザーが逆シリアル化できるオブジェクトを表す XML 要素に <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを指定する値を取得します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream mapped from JSON.">JSON からマップされた XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">リーダーが正確に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを決定します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">リーダーが正確に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> コンストラクターに既知の型として渡される、予測型を含む <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.">シリアライザーが 1 回の読み取りまたは書き込みの呼び出しでシリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得します。</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize.">シリアル化、または逆シリアル化する項目の最大数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">項目数が最大値を超えています。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.">ドキュメント ストリームを JSON (JavaScript Object Notation) 形式で読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to be read.">読み取られる <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して、JSON (JavaScript Object Notation) からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して、JSON からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。さらに、逆シリアル化を試みる前に、シリアライザーが適切な要素に配置されていることを確認する必要があるかどうかを指定できます。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">周囲の XML 要素名と名前空間が予期される名前と名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlReader" /> を使用して、JSON (JavaScript Object Notation) からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads an XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> を使用して、JSON からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。さらに、逆シリアル化を試みる前に、シリアライザーが適切な要素に配置されていることを確認する必要があるかどうかを指定できます。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;, which skips the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">周囲の XML 要素名と名前空間が予期される名前と名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">読み取り専用の型をシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">読み取り専用の型をシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets a value that specifies whether to use a simple dictionary format.">簡単なディクショナリ形式を使用するかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">単純なディクショナリ形式を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">XML の終了要素を、<see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML ドキュメントに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document to map to JSON.">XML ドキュメントを書き込んで、JSON にマップするために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">XML の終了要素を、<see cref="T:System.Xml.XmlWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML ドキュメントに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document mapped to JSON.">JSON にマップされた XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.">指定したオブジェクトを JSON (JavaScript Object Notation) データにシリアル化し、生成された JSON をストリームに書き込みます。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that is written to.">書き込まれる <see cref="T:System.IO.Stream" />。</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">ストリームに書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">オブジェクトを JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。 <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素、コンテンツ、終了要素を含む、すべてのオブジェクト データを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream to map to JSON.">XML ドキュメントまたはストリームを書き込んで、JSON にマップするために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">オブジェクトを JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。 <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素、コンテンツ、終了要素を含む、すべてのオブジェクト データを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document to map to JSON.">XML ドキュメントを書き込んで、JSON にマップするために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML コンテンツを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; to write to.">書き込み先の <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML コンテンツを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write to.">書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素を書き込み、オブジェクトを、JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素を書き込み、オブジェクトを、JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">書き込むオブジェクト。</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary vsli:raw="Specifies &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; settings.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> の設定を指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary vsli:raw="Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">カルチャに対応する、日時の表示形式を定義する DateTimeFormat を取得または設定します。</summary>
      <returns vsli:raw="The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">カルチャに対応する、日時の表示形式を定義する DateTimeFormat。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">型情報を出力するデータ コントラクトの JSON シリアライザーの設定を取得または設定します。</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">型情報を出力するデータ コントラクトの JSON シリアライザーの設定。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">DataContractJsonSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得または設定します。</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">DataContractJsonSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクション。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得または設定します。</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">選択したオブジェクトのルート名を取得または設定します。</summary>
      <returns vsli:raw="The root name of the selected object.">選択されたオブジェクトのルート名。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">読み取り専用の型をシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">読み取り専用の型をシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets or sets a value that specifies whether to use a simple dictionary format.">簡単なディクショナリ形式を使用するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">単純なディクショナリ形式を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.">JSON (JavaScript Object Notation) リーダーを再利用して特定のストリームまたはバッファーから読み取るときに、JSON (JavaScript Object Notation) リーダーを初期化するためのインターフェイスを指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.">JSON (JavaScript Object Notation) 対応のリーダーを、JSON エンコードされたデータを含む特定のバッファーに再初期化します。</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">リーダーによって使用される <see cref="T:System.Text.Encoding" />。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 。</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">リーダーが閉じられたときに呼び出す <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> デリゲート。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.">JSON (JavaScript Object Notation) 対応のリーダーを、JSON エンコードされたデータを含む特定のストリームに再初期化します。</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">読み込み元の入力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">リーダーによって使用される <see cref="T:System.Text.Encoding" />。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する<see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 。</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.">JSON (JavaScript Object Notation) ライターを再利用して特定の出力ストリームに書き込むときに、JSON ライターを初期化するためのインターフェイスを指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.">JSON (JavaScript Object Notation) ライターを、指定した文字エンコーディングの特定の出力ストリームに初期化 (または、再初期化) します。</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to which the writer writes.">ライターの書き込み先となる出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding of the output stream.">出力ストリームの文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary vsli:raw="Produces instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that can map an XML Infoset to JSON and write JSON-encoded data to a stream.">ストリームまたはバッファーから JSON (JavaScript Object Notation) でエンコードされたデータを読み取り、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスと、XML Infoset を JSON にマップし、JSON エンコードされたデータをストリームに書き込むことができる <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.">JSON (JavaScript Object Notation) でエンコードされたバッファーを、サイズとオフセットおよび文字エンコーディングを指定して、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み込み開始位置。</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み込み可能バイト数。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">リーダーによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 値として <see langword="null" /> が指定されている場合、リーダーは、エンコーディングを自動検出します。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed. The default value is &lt;see langword=&quot;null&quot; /&gt;.">リーダーが閉じられたときに呼び出す <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> デリゲート。 既定値は <see langword="null" /> です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">JSON (JavaScript Object Notation) でエンコードされたバッファーを、サイズおよびオフセットを指定して、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み込み開始位置。</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み込み可能バイト数。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.">JSON (JavaScript Object Notation) でエンコードされたバッファーを XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can process JavaScript Object Notation (JSON) data.">JSON (JavaScript Object Notation) データを処理できる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">JSON (JavaScript Object Notation) でエンコードされたストリームを、サイズおよびオフセットを指定して、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">読み込み元の入力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">リーダーによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" /> 。 値として <see langword="null" /> が指定されている場合、リーダーは、エンコーディングを自動検出します。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">リーダーが閉じられたときに呼び出す <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> デリゲート。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.">JSON (JavaScript Object Notation) でエンコードされたストリームを XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">読み込み元の入力 <see cref="T:System.IO.Stream" />。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream.">JSON でエンコードされたデータをストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">JSON でエンコードされたデータを、文字エンコーディングを指定してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">JSON でエンコードされたデータを、文字エンコーディングを指定してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">JSON でエンコードされたデータを、指定した文字を使用してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> の場合、出力は複数行形式を使用し、各レベルを適切にインデントします。それ以外の場合は、<see langword="false" /> です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">JSON でエンコードされたデータを、指定した文字を使用してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> の場合、出力は複数行形式を使用し、各レベルを適切にインデントします。それ以外の場合は、<see langword="false" /> です。</param>
      <param name="indentChars" vsli:raw="The string used to indent each level.">各レベルのインデントに使用される文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
  </members>
</doc>