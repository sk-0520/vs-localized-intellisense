<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary vsli:raw="Represents an operation with context to be used for logging.">ログ記録に使用されるコンテキストを使用して、操作を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Activity" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="operationName" vsli:raw="The name of the operation.">操作の名前。</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary vsli:raw="Gets or sets the flags (defined by the W3C ID specification) associated with the activity.">アクティビティに関連付けられている (W3C ID 仕様によって定義された) フラグを取得します。</summary>
      <returns vsli:raw="the flags associated with the activity.">アクティビティに関連付けられているフラグ。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new baggage item with the specified key and value.">指定したキーと値の新しい baggage 項目を得られるように <see cref="T:System.Diagnostics.Activity" /> を更新します。</summary>
      <param name="key" vsli:raw="The baggage key.">baggage キーです。</param>
      <param name="value" vsli:raw="The baggage value.">baggage 値です。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new tag with the provided &lt;paramref name=&quot;key&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt;.">指定した <paramref name="key" /> と <paramref name="value" /> で新しいタグが得られるように <see cref="T:System.Diagnostics.Activity" /> を更新します。 .</summary>
      <param name="key" vsli:raw="The tag key.">タグ キーです。</param>
      <param name="value" vsli:raw="The tag value.">タグ値です。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary vsli:raw="Gets a collection of key/value pairs that represents information that is passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">この <see cref="T:System.Diagnostics.Activity" /> の子に渡される情報を表すキーと値のペアのコレクションを取得します。</summary>
      <returns vsli:raw="Information that's passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">文字列文字列のキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary vsli:raw="Gets or sets the current operation (&lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;) for the current thread. This flows across async calls.">現在のスレッドの現在の操作 (<see cref="T:System.Diagnostics.Activity" />) を取得または設定します。  これは非同期呼び出し間でフローします。</summary>
      <returns vsli:raw="The current operation for the current thread.">現在のスレッドの現在の操作。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary vsli:raw="Gets or sets the default ID format for the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">
        <see cref="T:System.Diagnostics.Activity" /> の既定の ID の形式を取得または設定します。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary vsli:raw="Gets the duration of the operation.">操作の継続時間を取得します。</summary>
      <returns vsli:raw="The delta between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the end time if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has ended (&lt;see cref=&quot;M:System.Diagnostics.Activity.Stop&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was called), or &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has not ended and &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was not called.">が終了し<see cref="P:System.Diagnostics.Activity.StartTimeUtc" />た ( <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /><see cref="F:System.TimeSpan.Zero" /><see cref="T:System.Diagnostics.Activity" /><see cref="M:System.Diagnostics.Activity.Stop" /> または<see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />が呼び出された) 場合は、と終了時刻の間の差。が終了しておらず、が呼び出されなかった場合は。 <see cref="T:System.Diagnostics.Activity" /></returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary vsli:raw="Gets or sets a value that detrmines if the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt; is always used to define the default ID format.">既定の ID 形式を定義するために <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> を常に使用するかどうかを決定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always use the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />常にを使用<see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />する場合は<see langword="false" />。それ以外の場合は。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary vsli:raw="Returns the value of a key-value pair added to the activity with &lt;see cref=&quot;M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)&quot; /&gt;.">
        <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" /> でアクティビティに追加されたキーと値のペアの値を返します。</summary>
      <param name="key" vsli:raw="The baggage key.">baggage キーです。</param>
      <returns vsli:raw="The value of the key-value-pair item if it exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not exist.">存在する場合は、キーと値のペア項目の値で、それ以外の場合は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary vsli:raw="Gets an identifier that is specific to a particular request.">特定の要求に固有の識別子を取得します。</summary>
      <returns vsli:raw="The activity ID.">アクティビティ ID。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary vsli:raw="Gets the format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" /> の形式を取得します。</summary>
      <returns vsli:raw="The format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">の形式<see cref="P:System.Diagnostics.Activity.Id" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary vsli:raw="Gets the operation name.">操作名を取得します。</summary>
      <returns vsli:raw="The name of the operation.">操作の名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; that created this activity.">このアクティビティを作成した親 <see cref="T:System.Diagnostics.Activity" /> を取得します。</summary>
      <returns vsli:raw="The parent of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, if it is from the same process, or &lt;see langword=&quot;null&quot; /&gt; if this instance has no parent (it is a root activity) or if the parent is from outside the process.">この<see cref="T:System.Diagnostics.Activity" />の親が同じプロセスからのものである場合、また<see langword="null" />はこのインスタンスが親を持たない場合 (ルートアクティビティの場合)、または親がプロセスの外部からのものである場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary vsli:raw="Gets the ID of this activity's parent.">このアクティビティの親の ID を取得します。</summary>
      <returns vsli:raw="The parent ID, if one exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not.">親 ID (存在する場合)、また<see langword="null" />は存在しない場合はです。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary vsli:raw="Gets the parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">親の <see cref="P:System.Diagnostics.Activity.SpanId" /> を取得します。</summary>
      <returns vsli:raw="The parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">親の<see cref="P:System.Diagnostics.Activity.SpanId" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary vsli:raw="Gets a value that indicates whether the W3CIdFlags.Recorded flag is set.">W3CIdFlags.Recorded フラグが設定されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the W3CIdFlags.Recorded flag is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />W3CIdFlags フラグが設定されている場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary vsli:raw="Gets the root ID of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">この <see cref="T:System.Diagnostics.Activity" /> のルート ID を取得します。</summary>
      <returns vsli:raw="The root ID, or &lt;see langword=&quot;null&quot; /&gt; if the current instance has either a &lt;see cref=&quot;P:System.Diagnostics.Activity.ParentId&quot; /&gt; or an &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">ルート ID <see cref="P:System.Diagnostics.Activity.Id" />。現在の<see langword="null" />インスタンスがまたはのいずれか<see cref="P:System.Diagnostics.Activity.ParentId" />を持っている場合は。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to set its &lt;see cref=&quot;P:System.Diagnostics.Activity.Duration&quot; /&gt; as the difference between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the specified stop time.">
        <see cref="T:System.Diagnostics.Activity" /> を更新して、その <see cref="P:System.Diagnostics.Activity.Duration" /> を <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> と指定した停止時間の差に設定します。</summary>
      <param name="endTimeUtc" vsli:raw="The UTC stop time.">UTC の停止時刻です。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary vsli:raw="Sets the ID format on this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; before it is started.">開始される前に、この <see cref="T:System.Diagnostics.Activity" /> で ID 形式を設定します。</summary>
      <param name="format" vsli:raw="One of the enumeration values that specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.Activity.Id" /> プロパティの形式を指定する列挙値の 1 つ。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary vsli:raw="Sets the parent ID using the W3C convention of a TraceId and a SpanId.">TraceId および SpanId の W3C 規約を使用して、親 ID を設定します。</summary>
      <param name="traceId" vsli:raw="The parent activity's TraceId.">親アクティビティの TraceId。</param>
      <param name="spanId" vsli:raw="The parent activity's SpanId.">親アクティビティの SpanId。</param>
      <param name="activityTraceFlags" vsli:raw="One of the enumeration values that specifies flags defined by the W3C standard that are associated with an activity.">アクティビティに関連付けられている、W3C 標準で定義されたフラグを指定する列挙値の 1 つ。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary vsli:raw="Updates this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; with an ID of &lt;paramref name=&quot;parentId&quot; /&gt; caused this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">この <see cref="T:System.Diagnostics.Activity" /> を更新して、<paramref name="parentId" /> の ID の <see cref="T:System.Diagnostics.Activity" /> がこの <see cref="T:System.Diagnostics.Activity" /> を発生させたことを示します。</summary>
      <param name="parentId" vsli:raw="The ID of the parent operation.">親操作の ID です。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary vsli:raw="Sets the start time of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">この <see cref="T:System.Diagnostics.Activity" /> の開始時間を設定します。</summary>
      <param name="startTimeUtc" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; start time in UTC.">UTC での <see cref="T:System.Diagnostics.Activity" /> の開始時間です。</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary vsli:raw="Gets the SPAN part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" /> の SPAN 部分を取得します。</summary>
      <returns vsli:raw="The ID for the SPAN part of &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has the W3C format; otherwise, a zero &lt;see langword=&quot;SpanId&quot; /&gt;.">が W3C 形式の<see cref="P:System.Diagnostics.Activity.Id" /><see cref="T:System.Diagnostics.Activity" />場合は、の SPAN 部分の ID。それ以外の場合は 0 <see langword="SpanId" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary vsli:raw="Starts the activity.">アクティビティを開始します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary vsli:raw="Gets the time when the operation started.">操作が開始された時間を取得します。</summary>
      <returns vsli:raw="The UTC time that the operation started.">操作が開始された UTC 時刻。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary vsli:raw="Stops the activity.">アクティビティを停止します。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary vsli:raw="Gets a collection of key/value pairs that represent information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">ログ システムに <see cref="T:System.Diagnostics.Activity" /> と共に書き込まれる情報を表すキーと値のペアのコレクションを取得します。</summary>
      <returns vsli:raw="Information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">文字列文字列のキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary vsli:raw="Gets the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" /> の TraceId 部分を取得します。</summary>
      <returns vsli:raw="The ID for the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the ID has the W3C format; otherwise, a zero TraceId.">Id に W3C 形式が指定され<see cref="P:System.Diagnostics.Activity.Id" />ている場合は、の TraceId 部分の id。それ以外の場合は 0 TraceId。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary vsli:raw="Gets or sets the W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">W3C <see langword="tracestate" /> ヘッダーを取得します。</summary>
      <returns vsli:raw="The W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">W3C <see langword="tracestate" />ヘッダー。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary vsli:raw="Specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.Activity.Id" /> プロパティの形式を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary vsli:raw="The hierarchical format.">階層的形式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary vsli:raw="An unknown format.">不明な形式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary vsli:raw="The W3C format.">W3C 形式。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt; formatted based on a W3C standard.">W3C 標準に基づいて書式設定された <see cref="P:System.Diagnostics.Activity.SpanId" /> を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 8 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; to a specified span.">現在の <see cref="T:System.Diagnostics.ActivitySpanId" /> の 8 バイトを指定のスパンにコピーします。</summary>
      <param name="destination" vsli:raw="The span to which the 8 bytes of the SpanID are to be copied.">SpanID の 8 バイトがコピーされるスパン。</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of eight bytes.">8 バイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> 値を作成します。</summary>
      <param name="idData" vsli:raw="A read-only span of eight bytes.">8 バイトの読み取り専用スパン。</param>
      <returns vsli:raw="The new span ID.">新しいスパン ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> には 8 バイトは含まれません。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of 16 hexadecimal characters.">16 個の 16 進数文字の読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> 値を作成します。</summary>
      <param name="idData" vsli:raw="A span that contains 16 hexadecimal characters.">16 個の 16 進数文字を含むスパン。</param>
      <returns vsli:raw="The new span ID.">新しいスパン ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;          &#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> には、16 個の 16 進数文字は含まれていません。

または - 
<paramref name="idData" /> の文字は、すべて小文字の 16 進数文字でもすべてゼロでもありません。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">UTF8 でエンコードされたバイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> 値を作成します。</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">UTF8 でエンコードされたバイトの読み取り専用スパン。</param>
      <returns vsli:raw="The new span ID.">新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; based on a random number (that is very likely to be unique).">ランダムな数 (一意となる可能性が非常に高い) に基づいて新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> を作成します。</summary>
      <returns vsli:raw="The new span ID.">新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether this instance and the specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance have the same value.">このインスタンスと、指定した <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="spanId" vsli:raw="The instance to compare.">比較対象のインスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;spanId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="spanId" /> が現在のインスタンスと同じ 16 進数値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary vsli:raw="the current instance and a specified object, which also must be an &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance, have the same value.">現在のインスタンスと指定したオブジェクト (やはり <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスである必要があります) が同じ値です。</summary>
      <param name="obj" vsli:raw="The object to compare.">比較対象のオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> が <see cref="T:System.Diagnostics.ActivitySpanId" /> のインスタンスで、現在のインスタンスと同じ 16 進値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the SpanId.">SpanId のハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code of the SpanId.">SpanId のハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have the same value.">指定した 2 つの <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">比較する 1 番目のインスタンス。</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">比較する 2 番目のインスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is the same as the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="spanId1" /> の SpanId が <paramref name="spandId2" /> の SpanId と同じ場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determine whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have unequal values.">指定した 2 つの <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスの値が異なるかどうかを判断します。</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">比較する 1 番目のインスタンス。</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">比較する 2 番目のインスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is different from the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="spanId1" /> の SpanId が <paramref name="spandId2" /> の SpanId と異なる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">このスパン ID を表す 16 文字からなる 16 進数文字列を返します。</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">このスパン ID を 16 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">このスパン ID を表す 16 文字からなる 16 進数文字列を返します。</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">このスパン ID を 16 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary vsli:raw="Specifies flags defined by the W3C standard that are associated with an activity.">アクティビティに関連付けられている、W3C 標準で定義されたフラグを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary vsli:raw="The activity has not been marked.">アクティビティはマークされていません。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary vsli:raw="The activity (or more likely its parents) has been marked as useful to record.">アクティビティ (または多くの場合、その親) は、記録するのに役立つものとしてマークされています。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.TraceId&quot; /&gt; whose format is based on a W3C standard.">形式が W3C 標準に基づく <see cref="P:System.Diagnostics.Activity.TraceId" /> を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 16 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; to a specified span.">現在の <see cref="T:System.Diagnostics.ActivityTraceId" /> の 16 バイトを指定のスパンにコピーします。</summary>
      <param name="destination" vsli:raw="The span to which the 16 bytes of the trace ID are to be copied.">トレース ID の 16 バイトがコピーされるスパン。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 16 bytes.">16 バイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivityTraceId" /> 値を作成します。</summary>
      <param name="idData" vsli:raw="A read-only span of 16 bytes.">16 バイトの読み取り専用スパン。</param>
      <returns vsli:raw="The new trace ID.">新しいトレース ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> には 8 バイトは含まれません。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 32 hexadecimal characters.">32 個の 16 進数文字の読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivityTraceId" /> 値を作成します。</summary>
      <param name="idData" vsli:raw="A span that contains 32 hexadecimal characters.">32 個の 16 進数文字を含むスパン。</param>
      <returns vsli:raw="The new trace ID.">新しいトレース ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;&#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> には、16 個の 16 進数文字は含まれていません。

または -

<paramref name="idData" /> の文字は、すべて小文字の 16 進数文字でもすべてゼロでもありません。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">UTF8 でエンコードされたバイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivityTraceId" /> 値を作成します。</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">UTF8 でエンコードされたバイトの読み取り専用スパン。</param>
      <returns vsli:raw="The new trace ID.">新しいトレース ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; based on a random number (that is very likely to be unique).">ランダムな数 (一意となる可能性が非常に高い) に基づいて新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> を作成します。</summary>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt;.">新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether the current instance and a specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; are equal.">現在のインスタンスと指定した <see cref="T:System.Diagnostics.ActivityTraceId" /> が、等しいかどうかを判断します。</summary>
      <param name="traceId" vsli:raw="The instance to compare.">比較対象のインスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;traceId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="traceId" /> が現在のインスタンスと同じ 16 進数値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance and a specified object, which must also be an &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instance, have the same value.">このインスタンスと、指定したオブジェクトの値が同一かどうかを判断します。<see cref="T:System.Diagnostics.ActivityTraceId" /> インスタンスを指定する必要があります。</summary>
      <param name="obj" vsli:raw="The object to compare.">比較対象のオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> が <see cref="T:System.Diagnostics.ActivityTraceId" /> のインスタンスで、現在のインスタンスと同じ 16 進値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the TraceId.">TraceId のハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code of the TraceId.">TraceId のハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">指定した 2 つの <see cref="T:System.Diagnostics.ActivityTraceId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">比較する 1 番目のインスタンス。</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">比較する 2 番目のインスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is the same as the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="traceId1" /> の TraceId が <paramref name="traceId2" /> の TraceId と同じである場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">指定した 2 つの <see cref="T:System.Diagnostics.ActivityTraceId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">比較する 1 番目のインスタンス。</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">比較する 2 番目のインスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is different from the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="traceId1" /> の TraceId が <paramref name="traceId2" /> の TraceId と異なる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this span ID.">このスパン ID を表す 16 文字からなる 16 進数文字列を返します。</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">このトレース ID を 32 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this trace ID.">このトレース ID を表す 32 文字からなる 16 進数文字列を返します。</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">このトレース ID を 32 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary vsli:raw="Provides an implementation of the abstract &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class that represents a named place to which a source sends its information (events).">ソースがその情報を送信する (イベント) 名前付きの場所を表す抽象 <see cref="T:System.Diagnostics.DiagnosticSource" /> クラスの実装を提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">新しい <see cref="T:System.Diagnostics.DiagnosticListener" /> を作成します。</summary>
      <param name="name" vsli:raw="The name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">この <see cref="T:System.Diagnostics.DiagnosticListener" /> の名前。</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary vsli:raw="Gets the collection of listeners for this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">この <see cref="T:System.Diagnostics.DiagnosticListener" /> のリスナーのコレクションを取得します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary vsli:raw="Disposes the NotificationListeners.">NotificationListeners を破棄します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary vsli:raw="Determines whether there are any registered subscribers.">登録されているサブスクライバーが存在するかどうかを判断します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any registered subscribers, &lt;see langword=&quot;false&quot; /&gt; otherwise.">登録されているサブスクライバーがいる場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary vsli:raw="Checks whether the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt; is enabled.">
        <see cref="T:System.Diagnostics.DiagnosticListener" /> が有効かどうかを確認します。</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">通知が有効になっている場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Checks if any subscriber to the diagnostic events is interested in receiving events with this name. Subscribers indicate their interest using a delegate provided in &lt;see cref=&quot;Overload:System.Diagnostics.DiagnosticListener.Subscribe&quot; /&gt;.">DiagnosticListener が有効かどうかを確認します。</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <param name="arg1" vsli:raw="The object that represents a context." />
      <param name="arg2" vsli:raw="The object that represents a context." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">有効な場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">この <see cref="T:System.Diagnostics.DiagnosticListener" /> の名前を取得します。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">
        <see cref="T:System.Diagnostics.DiagnosticListener" /> の名前。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityExport method of all the subscribers.">すべてのサブスクライバーの OnActivityExport メソッドを呼び出します。</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">送信要求を表すオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityImport method of all the subscribers.">すべてのサブスクライバーの OnActivityImport メソッドを呼び出します。</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload" vsli:raw="An object that represents the incoming request.">受信要求を表すオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary vsli:raw="Adds a subscriber.">サブスクライバーを追加します。</summary>
      <param name="observer" vsli:raw="A subscriber.">サブスクライバーです。</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name and up to two context objects.">サブスクライバーを追加し、任意で、その名前と最大 2 つのコンテキスト オブジェクトに基づいてイベントをフィルタリングします。</summary>
      <param name="observer" vsli:raw="A subscriber.">サブスクライバーです。</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; to if an event filter is not desirable.">その名前と最大 2 つのコンテキスト オブジェクト (<see langword="null" /> が可能) に基づいてイベントをフィルタリングするデリゲートです。あるいは、イベント フィルターが望ましくない場合、<see langword="null" />。</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary vsli:raw="Adds a subscriber, optionally filters events based on their name and up to two context objects, and specifies methods to call when providers import or export activites from outside the process.">サブスクライバーを追加し、任意で、その名前と最大 2 つのコンテキスト オブジェクトに基づいてイベントをフィルタリングし、プロバイダーがプロセスの外からアクティビティをインポートまたはエクスポートするときに呼び出すメソッドを指定します。</summary>
      <param name="observer" vsli:raw="A subscriber.">サブスクライバーです。</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; if an event filter is not desirable.">その名前と最大 2 つのコンテキスト オブジェクト (<see langword="null" /> が可能) に基づいてイベントをフィルタリングするデリゲートです。あるいは、イベント フィルターが望ましくない場合、<see langword="null" />。</param>
      <param name="onActivityImport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the incoming request.">外部イベントの影響を受けるアクティビティを受け取るアクション デリゲートおよび受信要求を表すオブジェクトです。</param>
      <param name="onActivityExport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the outgoing request.">外部イベントの影響を受けるアクティビティを受け取るアクション デリゲートおよび送信要求を表すオブジェクトです。</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name.">サブスクライバーを追加し、任意で、その名前に基づいてイベントをフィルタリングします。</summary>
      <param name="observer" vsli:raw="A subscriber.">サブスクライバーです。</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name (&lt;see cref=&quot;T:System.String&quot; /&gt;). The delegate should return &lt;see langword=&quot;true&quot; /&gt; if the event is enabled.">その名前 (<see cref="T:System.String" />) に基づいてイベントをフィルタリングするデリゲートです。 イベントが有効な場合、このデリゲートは <see langword="true" /> を返します。</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary vsli:raw="Returns a string with the name of this DiagnosticListener.">この DiagnosticListener の名前と共に文字列を返します。</summary>
      <returns vsli:raw="The name of this DiagnosticListener.">この DiagnosticListener の名前です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary vsli:raw="Logs a notification.">通知をログ記録します。</summary>
      <param name="name" vsli:raw="The name of the event to log.">ログ記録するイベントの名前。</param>
      <param name="value" vsli:raw="An object that represents the payload for the event.">イベントのペイロードを表すオブジェクト。</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary vsli:raw="An abstract class that allows code to be instrumented for production-time logging of rich data payloads for consumption within the process that was instrumented.">コードが、インストルメント化されたプロセスで使用されるために、リッチ データのペイロードの生産時間のログ記録に使用されるのをインストルメント化する抽象クラスです。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.DiagnosticSource" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary vsli:raw="Verifies if the notification event is enabled.">通知イベントが有効になったかどうかを確認します。</summary>
      <param name="name" vsli:raw="The name of the event being written.">書き込まれるイベントの名前です。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">通知イベントが有効な場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Verifies it the notification event is enabled.">通知イベントが有効になったかどうかを確認します。</summary>
      <param name="name" vsli:raw="The name of the event being written.">書き込まれるイベントの名前です。</param>
      <param name="arg1" vsli:raw="An object that represents the additional context for IsEnabled. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) to check if consumer wants to get notifications for such events at all. Based on that, producer may call IsEnabled(string, object, object) again with non-&lt;see langword=&quot;null&quot; /&gt; context.">IsEnabled の追加のコンテキストを表すオブジェクトです。 コンシューマーは <see langword="null" /> を受け取ります。これは、プロデューサーが純粋な IsEnabled(string) を呼び出し、コンシューマーがそのようなイベントの通知をそもそも受け取りたいかを確認したことを示している場合があります。 これに基づいて、プロデューサーが非 <see langword="null" /> コンテキストを使用して再度 IsEnabled(string, object, object) を呼び出す場合があります。</param>
      <param name="arg2" vsli:raw="Optional. An object that represents the additional context for IsEnabled. &lt;see langword=&quot;null&quot; /&gt; by default. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) or producer passed all necessary context in &lt;paramref name=&quot;arg1&quot; /&gt;.">任意。 IsEnabled の追加のコンテキストを表すオブジェクトです。 既定では <see langword="null" /> です。 コンシューマーは <see langword="null" /> を受け取ります。これは、プロデューサーが純粋な IsEnabled(string) を呼び出したか、プロデューサーが必要なすべてのコンテキストを <paramref name="arg1" /> で渡していることを示している場合があります。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">通知イベントが有効な場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state from an activity to some event or operation, such as an outgoing HTTP request, that will occur outside the process.">送信される HTTP 要求など、プロセスの外で発生するイベントまたは操作にアクティビティから状態を転送します。</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">送信要求を表すオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state to an activity from some event or operation, such as an incoming request, that occurred outside the process.">プロセスの外で発生した、受信要求など、イベントまたは操作からアクティビティに状態を転送します。</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload" vsli:raw="A payload that represents the incoming request.">受信した要求を表すペイロード。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Starts an &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; and writes a start event.">
        <see cref="T:System.Diagnostics.Activity" /> を開始し、開始イベントを書き込みます。</summary>
      <param name="activity" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to be started.">開始する <see cref="T:System.Diagnostics.Activity" /> です。</param>
      <param name="args" vsli:raw="An object that represent the value being passed as a payload for the event.">イベントのペイロードとして渡される値を表すオブジェクトです。</param>
      <returns vsli:raw="The started activity for convenient chaining.">チェーンで役立つために開始されたアクティビティです。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Stops the given &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, maintains the global &lt;see cref=&quot;P:System.Diagnostics.Activity.Current&quot; /&gt; activity, and notifies consumers that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; was stopped.">指定した <see cref="T:System.Diagnostics.Activity" /> を停止し、グローバルな <see cref="P:System.Diagnostics.Activity.Current" /> アクティビティを維持し、コンシューマーに <see cref="T:System.Diagnostics.Activity" /> が停止されたことを通知します。</summary>
      <param name="activity" vsli:raw="The activity to be stopped.">停止するアクティビティです。</param>
      <param name="args" vsli:raw="An object that represents the value passed as a payload for the event.">イベントのペイロードとして渡される値を表すオブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary vsli:raw="Provides a generic way of logging complex payloads.">複雑なペイロードのログを記録する汎用的な方法です。</summary>
      <param name="name" vsli:raw="The name of the event being written.">書き込まれるイベントの名前です。</param>
      <param name="value" vsli:raw="An object that represents the value being passed as a payload for the event. This is often an anonymous type which contains several sub-values.">イベントのペイロードとして渡される値を表すオブジェクトです。 これは通常、いくつかのサブ値を含む匿名型です。</param>
    </member>
  </members>
</doc>