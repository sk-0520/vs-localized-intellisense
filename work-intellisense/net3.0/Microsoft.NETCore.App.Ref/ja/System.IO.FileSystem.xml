<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem</name>
  </assembly>
  <members>
    <member name="T:System.IO.Directory">
      <summary>ディレクトリやサブディレクトリを通じて、作成、移動、および列挙するための静的メソッドを公開します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.IO.Directory.CreateDirectory(System.String)">
      <summary>既に存在している場合以外は、指定したパスにすべてのディレクトリとサブディレクトリを作成します。</summary>
      <param name="path">作成するディレクトリ。</param>
      <returns>指定したパスに存在するディレクトリを表すオブジェクト。 指定したパスにおいてディレクトリが既に存在するかどうかにかかわりなく、このオブジェクトが返されます。</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> によって指定されたディレクトリはファイルです。  

または - 
ネットワーク名が不明です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="path" /> のプレフィックスまたは内容がコロン文字 (:) だけです。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> に、ドライブ ラベル ("C:\") の一部ではないコロン文字 (:) が含まれています。</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String)">
      <summary>指定されたパスから空のディレクトリを削除します。</summary>
      <param name="path">削除する空のディレクトリの名前。 このディレクトリは、書き込み可能で空である必要があります。</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> で指定された同じ名前と場所を持つファイルが存在します。  

または - 
ディレクトリはアプリケーションの現在の作業ディレクトリです。  

または - 
<paramref name="path" /> によって指定されたディレクトリは空ではありません。  

または - 
ディレクトリが読み取り専用になっているか、または読み取り専用のファイルが含まれています。  

または - 
ディレクトリは別のプロセスによって使用されています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が存在しないか、見つかりませんでした。  

または - 
指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String,System.Boolean)">
      <summary>指定したディレクトリと、特に指定されている場合はディレクトリ内の任意のサブディレクトリおよびファイルを削除します。</summary>
      <param name="path">削除するディレクトリの名前。</param>
      <param name="recursive">
        <paramref name="path" /> のディレクトリ、サブディレクトリ、およびファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> で指定された同じ名前と場所を持つファイルが存在します。  

または - 
<paramref name="path" /> で指定されたディレクトリが読み取り専用です。または、<paramref name="recursive" /> が <see langword="false" /> であり、<paramref name="path" /> は空のディレクトリではありません。  

または - 
ディレクトリはアプリケーションの現在の作業ディレクトリです。  

または - 
ディレクトリに読み取り専用のファイルが含まれています。  


または 
ディレクトリは別のプロセスによって使用されています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が存在しないか、見つかりませんでした。  

または - 
指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String)">
      <summary>指定されたパスに存在するディレクトリ名の列挙可能なコレクションを返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <returns>
        <paramref name="path" /> で指定したディレクトリ内にあるディレクトリの完全名 (パスを含む) から成る列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
      <summary>指定されたパスから、検索パターンに一致するディレクトリ名の列挙可能なコレクションを返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>指定した検索パターンに一致し、<paramref name="path" /> で指定したディレクトリの中にあるディレクトリの完全名 (パスを含む) から成る列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。  

または - 
<paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>指定されたパスにあるディレクトリのうち、検索パターンに一致するディレクトリ名の列挙可能なコレクションを返します。オプションでサブディレクトリを検索対象にすることができます。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。  
既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>指定した検索パターンおよびオプションに一致し、<paramref name="path" /> で指定したディレクトリの中にあるディレクトリの完全名 (パスを含む) から成る列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。  

または - 
<paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String)">
      <summary>指定されたパスに存在するファイル名の列挙可能なコレクションを返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <returns>
        <paramref name="path" /> で指定したディレクトリ内にあるファイルの完全名 (パスを含む) から成る列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
      <summary>指定されたパスから、検索パターンに一致するファイル名の列挙可能なコレクションを返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイル名と対応させる検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>指定した検索パターンに一致し、<paramref name="path" /> で指定したディレクトリの中にあるファイルの完全名 (パスを含む) から成る列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  
または 
 <paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。  

または - 
<paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>指定されたパスにあるファイルのうち、検索パターンに一致するファイル名の列挙可能なコレクションを返します。オプションでサブディレクトリを検索対象にすることができます。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイル名と対応させる検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。  
既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>指定した検索パターンおよびオプションに一致し、<paramref name="path" /> で指定したディレクトリの中にあるファイルの完全名 (パスを含む) から成る列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。  

または - 
<paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
      <summary>指定されたパスに存在するファイル名とディレクトリ名の列挙可能なコレクションを返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <returns>
        <paramref name="path" /> で指定されたディレクトリ内のファイル システム エントリの列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
      <summary>指定されたパスから、検索パターンに一致するファイル名とディレクトリ名の列挙可能なコレクションを返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイル システム エントリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>
        <paramref name="path" /> で指定されたディレクトリに存在するファイル システム エントリのうち、指定した検索パターンに一致するファイル システム エントリの列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  
または 
 <paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。  

または - 
<paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>指定されたパスにあるディレクトリのうち、検索パターンに一致するファイル名およびディレクトリ名の列挙可能なコレクションを返します。オプションでサブディレクトリを検索対象にすることができます。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイル システム エントリと対応させる検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。  
既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>
        <paramref name="path" /> で指定されたディレクトリに存在するファイル システム エントリのうち、指定した検索パターンおよびオプションに一致するファイル システム エントリの列挙可能なコレクション。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。  

または - 
<paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.Exists(System.String)">
      <summary>指定したパスがディスク上の既存のディレクトリを参照しているかどうかを確認します。</summary>
      <param name="path">テストするパス。</param>
      <returns>
        <paramref name="path" /> が既存のディレクトリを参照している場合は <see langword="true" />。ディレクトリが存在していない場合や、指定したディレクトリが存在するかどうかを判断しようとしたときにエラーが発生した場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Directory.GetCreationTime(System.String)">
      <summary>ディレクトリの作成日時を取得します。</summary>
      <param name="path">ディレクトリのパス。</param>
      <returns>指定したディレクトリの作成日時に設定された構造体。 この値は現地時刻で表示されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
      <summary>世界協定時刻 (UTC: Coordinated Universal Time) 形式でのディレクトリの作成日時を取得します。</summary>
      <param name="path">ディレクトリのパス。</param>
      <returns>指定したディレクトリの作成日時に設定された構造体。 この値は UTC 時刻で表記されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.Directory.GetCurrentDirectory">
      <summary>アプリケーションの現在の作業ディレクトリを取得します。</summary>
      <returns>現在の作業ディレクトリの絶対パスを示す文字列。この文字列の末尾には、円記号 (\) は付きません。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">オペレーティング システムは、現在のディレクトリの機能が装備されていない Windows CE です。  
 このメソッドは、.NET Compact Framework で使用できますが、現在サポートされていません。</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String)">
      <summary>指定したディレクトリ内のサブディレクトリの名前 (パスを含む) を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <returns>指定したパス内のサブディレクトリのフル ネーム (パスを含む) の配列。または、ディレクトリが見つからない場合は空の配列。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String)">
      <summary>指定したディレクトリ内の指定した検索パターンに一致するサブディレクトリ名 (パスを含む) を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のサブディレクトリの名前と照合する検索文字列。 このパラメーターに、有効なリテラルのパスとワイルドカード文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>指定したディレクトリ内の検索パターンに一致するサブディレクトリの完全名 (パスを含む) の配列。または、ディレクトリが見つからない場合は空の配列。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> を使用して、正しくない文字を検出するクエリを実行できます。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれていません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>現在のディレクトリ内で、指定された検索パターンに一致するサブディレクトリの名前 (パスを含む) を返します。オプションで、サブディレクトリを検索対象にすることができます。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のサブディレクトリの名前と照合する検索文字列。 このパラメーターに、有効なリテラルのパスとワイルドカード文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作にすべてのサブディレクトリを含めるのか、または現在のディレクトリのみを含めるのかを指定する列挙値の 1 つ。</param>
      <returns>指定した条件に一致するサブディレクトリの完全名 (パスを含む) の配列。または、ディレクトリが見つからない場合は空の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectoryRoot(System.String)">
      <summary>指定したパスのボリューム情報またはルート情報、あるいはその両方を返します。</summary>
      <param name="path">ファイルまたはディレクトリのパス。</param>
      <returns>指定したパスのボリューム情報、ルート情報、またはその両方を含む文字列。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> を使用して、正しくない文字に対するクエリを実行できます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String)">
      <summary>指定したディレクトリ内のファイルの名前 (パスを含む) を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <returns>指定したディレクトリ内のファイルの完全名 (パスを含む) の配列。または、ファイルが見つからない場合は空の配列。</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。  

または - 
ネットワーク エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが見つからないか正しくありません (たとえば、マップされていないドライブ上のパスなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String)">
      <summary>指定したディレクトリ内の指定した検索パターンに一致するファイル名 (パスを含む) を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイル名と対応させる検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>指定したディレクトリ内の指定した検索パターンに一致するファイルの完全名 (パスを含む) の配列。または、ファイルが見つからない場合は空の配列。</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。  
または 
ネットワーク エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> を使用して、正しくない文字を検出するクエリを実行できます。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれていません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが見つからないか正しくありません (たとえば、マップされていないドライブ上のパスなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>指定したディレクトリの中から、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル名 (パスを含む) を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイル名と対応させる検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作にすべてのサブディレクトリを含めるのか、または現在のディレクトリのみを含めるのかを指定する列挙値の 1 つ。</param>
      <returns>指定したディレクトリ内の指定した検索パターンおよびオプションに一致するファイルの完全名 (パスを含む) の配列。または、ファイルが見つからない場合は空の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用して、正しくない文字に対するクエリを実行できます。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="searchpattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが見つからないか正しくありません (たとえば、マップされていないドライブ上のパスなど)。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。  

または - 
ネットワーク エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String)">
      <summary>指定したパス内のすべてのファイル名とサブディレクトリ名を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <returns>指定したディレクトリ内ファイル名またはサブディレクトリ名の配列。ファイルやサブディレクトリが見つからない場合は、空の配列。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> を使用して、正しくない文字に対するクエリを実行できます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
      <summary>指定されたパスから、検索パターンに一致するファイル名とディレクトリ名の配列を返します。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイルおよびディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>指定した検索条件に一致するファイル名またはディレクトリ名の配列。ファイルやディレクトリが見つからない場合は、空の配列。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用して、正しくない文字に対するクエリを実行できます。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>指定されたパスにあるファイルおよびディレクトリのうち、検索パターンに一致するすべてのファイル名およびディレクトリ名の配列を返します。オプションでサブディレクトリを検索対象にすることができます。</summary>
      <param name="path">検索するディレクトリの相対パスまたは絶対パス。 この文字列の大文字と小文字は区別されません。</param>
      <param name="searchPattern">
        <paramref name="path" /> 内のファイルおよびディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。  
既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>指定した検索条件に一致するファイル名またはディレクトリ名の配列。ファイルやディレクトリが見つからない場合は、空の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または無効な文字が使用されています。 正しくない文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。  

または - 
<paramref name="searchPattern" /> には有効なパターンが含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。  

または - 
<paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">たとえば、マップされていないドライブへの参照など、<paramref name="path" /> は無効です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> はファイル名です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定されたパス、ファイル名、または結合は、システム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTime(System.String)">
      <summary>指定したファイルまたはディレクトリに最後にアクセスした日付と時刻を返します。</summary>
      <param name="path">アクセス日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定されたファイルまたはディレクトリが最後にアクセスされた日時に設定された構造体。 この値は現地時刻で表示されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用して、正しくない文字に対するクエリを実行できます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> パラメーターの形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
      <summary>指定されたファイルまたはディレクトリが最後にアクセスされた日付と時刻を世界協定時刻 (UTC) 形式で返します。</summary>
      <param name="path">アクセス日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定されたファイルまたはディレクトリが最後にアクセスされた日時に設定された構造体。 この値は UTC 時刻で表記されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> パラメーターの形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTime(System.String)">
      <summary>指定したファイルまたはディレクトリに最後に書き込んだ日付と時刻を返します。</summary>
      <param name="path">変更日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリに最後に書き込んだ日時に設定された構造体。 この値は現地時刻で表示されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
      <summary>指定したファイルまたはディレクトリに最後に書き込んだ日付と時刻を世界協定時刻 (UTC) 形式で返します。</summary>
      <param name="path">変更日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリに最後に書き込んだ日時に設定された構造体。 この値は UTC 時刻で表記されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.Directory.GetLogicalDrives">
      <summary>このコンピューターの論理ドライブ名を "&lt;ドライブ文字&gt;:\" の形式で取得します。</summary>
      <returns>このコンピューターの論理ドライブ。</returns>
      <exception cref="T:System.IO.IOException">I/O エラーが発生しました (ディスク エラーなど)。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.GetParent(System.String)">
      <summary>絶対パスと相対パスの両方を含む指定したパスの親ディレクトリを取得します。</summary>
      <param name="path">親ディレクトリを取得する対象のパス。</param>
      <returns>親ディレクトリ。または <paramref name="path" /> が UNC サーバーや共有名のルートを含むルート ディレクトリの場合は <see langword="null" />。</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> によって指定されたディレクトリは読み取り専用です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 詳細については、「<see cref="T:System.IO.PathTooLongException" />」を参照してください。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">.NET Framework のみ: 呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.Directory.Move(System.String,System.String)">
      <summary>ファイルまたはディレクトリ、およびその内容を新しい場所に移動します。</summary>
      <param name="sourceDirName">移動するファイルまたはディレクトリのパス。</param>
      <param name="destDirName">
        <paramref name="sourceDirName" /> の新しい位置へのパス。 <paramref name="sourceDirName" /> がファイルの場合は、<paramref name="destDirName" /> もファイル名にする必要があります。</param>
      <exception cref="T:System.IO.IOException">ディレクトリを別のボリュームに移動しようとしました。

または - 
<paramref name="destDirName" /> が既に存在します。 「解説」セクションの注意を参照してください。

または - 
<paramref name="sourceDirName" /> パラメーターと <paramref name="destDirName" /> パラメーターが、同じファイルまたはディレクトリを参照しています。  

または - 
ディレクトリ、またはそのディレクトリ内のファイルが別のプロセスによって使用されています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceDirName" /> または <paramref name="destDirName" /> は長さ 0 の文字列で、空白のみで構成されているか、正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirName" /> または <paramref name="destDirName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceDirName" /> で指定されたパスが、マップされていないドライブ上にあるなど、正しくありません。</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
      <summary>指定したファイルまたはディレクトリの作成日時を設定します。</summary>
      <param name="path">作成日時情報を設定する対象のファイルまたはディレクトリ。</param>
      <param name="creationTime">ファイルまたはディレクトリに最後に書き込んだ日付と時刻。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>指定したファイルまたはディレクトリの作成日時を世界協定時刻 (UTC) 形式で設定します。</summary>
      <param name="path">作成日時情報を設定する対象のファイルまたはディレクトリ。</param>
      <param name="creationTimeUtc">ディレクトリまたはファイルが作成された日時。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
    </member>
    <member name="M:System.IO.Directory.SetCurrentDirectory(System.String)">
      <summary>アプリケーションの現在の作業ディレクトリを指定したディレクトリに設定します。</summary>
      <param name="path">現在の作業ディレクトリが設定されるパス。</param>
      <exception cref="T:System.IO.IOException">I/O エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し側に、アンマネージ コードへのアクセスに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが見つかりませんでした。</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
      <summary>指定したファイルまたはディレクトリに最後にアクセスした日付と時刻を設定します。</summary>
      <param name="path">アクセス日時情報を設定する対象のファイルまたはディレクトリ。</param>
      <param name="lastAccessTime">
        <paramref name="path" /> のアクセス日時の設定値を含むオブジェクト。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>指定したファイルまたはディレクトリに最後にアクセスした日付と時刻を世界協定時刻 (UTC) 形式で設定します。</summary>
      <param name="path">アクセス日時情報を設定する対象のファイルまたはディレクトリ。</param>
      <param name="lastAccessTimeUtc">
        <paramref name="path" /> のアクセス日時の設定値を含むオブジェクト。 この値は UTC 時刻で表記されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
      <summary>ディレクトリに最後に書き込んだ日付と時刻を設定します。</summary>
      <param name="path">ディレクトリのパス。</param>
      <param name="lastWriteTime">ディレクトリに最後に書き込んだ日付と時刻。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> が見つかりませんでした (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が見つかりませんでした (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>ディレクトリに最後に書き込んだ日付と時刻を世界協定時刻 (UTC) 形式で設定します。</summary>
      <param name="path">ディレクトリのパス。</param>
      <param name="lastWriteTimeUtc">ディレクトリに最後に書き込んだ日付と時刻。 この値は UTC 時刻で表記されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> が見つかりませんでした (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が見つかりませんでした (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。 無効な文字を照会するには、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドを使用します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="T:System.IO.DirectoryInfo">
      <summary>ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.IO.DirectoryInfo.#ctor(System.String)">
      <summary>指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">
        <see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Create">
      <summary>ディレクトリを作成します。</summary>
      <exception cref="T:System.IO.IOException">ディレクトリを作成できません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
      <summary>指定したパスに 1 つ以上のサブディレクトリを作成します。 パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</summary>
      <param name="path">指定するパス。 異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</param>
      <returns>
        <paramref name="path" /> に指定された最後のディレクトリ。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">サブディレクトリを作成できません。  

または - 
<paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。  
または 
呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。  <paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> に、ドライブ ラベル ("C:\") の一部ではないコロン文字 (:) が含まれています。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</summary>
      <exception cref="T:System.UnauthorizedAccessException">ディレクトリに読み取り専用のファイルが含まれています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリが空ではありません。  

または - 
ディレクトリはアプリケーションの現在の作業ディレクトリです。  

または - 
開いているハンドルがディレクトリに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。 開いているハンドルは、ディレクトリを列挙する際に発生した可能性があります。 詳細については、「方法 : ディレクトリとファイルを列挙する。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
      <summary>中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</summary>
      <param name="recursive">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.UnauthorizedAccessException">ディレクトリに読み取り専用のファイルが含まれています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリが読み取り専用です。  
または 
ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、<paramref name="recursive" /> が <see langword="false" /> です。  

または - 
ディレクトリはアプリケーションの現在の作業ディレクトリです。  

または - 
開いているハンドルがディレクトリまたはそのディレクトリ内のファイルに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。 このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。 詳細については、「方法 : ディレクトリとファイルを列挙する。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories">
      <summary>現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</summary>
      <returns>現在のディレクトリ内の列挙可能なディレクトリのコレクション。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
      <summary>指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</summary>
      <param name="searchPattern">ディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>
        <paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
      <summary>指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</summary>
      <param name="searchPattern">ディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。 既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>
        <paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles">
      <summary>現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</summary>
      <returns>現在のディレクトリ内の列挙可能なファイルのコレクション。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
      <summary>検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</summary>
      <param name="searchPattern">ファイル名と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>
        <paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
      <summary>指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</summary>
      <param name="searchPattern">ファイル名と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。 既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>
        <paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
      <summary>現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</summary>
      <returns>現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
      <summary>指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</summary>
      <param name="searchPattern">ディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>
        <paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</summary>
      <param name="searchPattern">ディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。 既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>
        <paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Exists">
      <summary>ディレクトリが存在するかどうかを示す値を取得します。</summary>
      <returns>ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories">
      <summary>現在のディレクトリのサブディレクトリを返します。</summary>
      <returns>
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
      <summary>現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</summary>
      <param name="searchPattern">ディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>
        <paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
      <summary>現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</summary>
      <param name="searchPattern">ディレクトリの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</param>
      <returns>
        <paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see langword="DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles">
      <summary>現在のディレクトリからファイル一覧を返します。</summary>
      <returns>
        <see cref="T:System.IO.FileInfo" /> 型の配列。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">割り当てられていないドライブであるなど、パスが無効です。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String)">
      <summary>現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</summary>
      <param name="searchPattern">ファイル名と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>
        <see cref="T:System.IO.FileInfo" /> 型の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
      <summary>現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</summary>
      <param name="searchPattern">ファイル名と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</param>
      <returns>
        <see cref="T:System.IO.FileInfo" /> 型の配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos">
      <summary>ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</summary>
      <returns>厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが無効です (割り当てられていないドライブであるなど)。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
      <summary>指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</summary>
      <param name="searchPattern">ディレクトリおよびファイルの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <returns>検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</summary>
      <param name="searchPattern">ディレクトリおよびファイルの名前と照合する検索文字列。  このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</param>
      <param name="searchOption">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。 既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</param>
      <returns>検索条件に一致するファイル システム エントリの配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.MoveTo(System.String)">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</summary>
      <param name="destDirName">このディレクトリの移動先の名前とパス。 別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。 このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destDirName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destDirName" /> が空の文字列 (''") です。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリを別のボリュームに移動しようとしました。  

または - 
<paramref name="destDirName" /> が既に存在します。  

または 
このパスへのアクセスが承認されていません。  

または - 
移動しようとしているディレクトリと移動先のディレクトリが同じ名前です。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">移動先のディレクトリが見つかりません。</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Name">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</summary>
      <returns>ディレクトリ名。</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Parent">
      <summary>指定されたサブディレクトリの親ディレクトリを取得します。</summary>
      <returns>親ディレクトリ<see langword="null" /> 。パスが null の場合、またはファイルパスがルート (、 C:\ \\server\share、など) を\表している場合は。</returns>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Root">
      <summary>ディレクトリのルート部分を取得します。</summary>
      <returns>ディレクトリのルートを表すオブジェクト。</returns>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.ToString">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" /> コンストラクターに渡された元のパスを返します。 このメソッドの代わりに、完全なパスの <see cref="P:System.IO.DirectoryInfo.FullName" /> または <see cref="P:System.IO.DirectoryInfo.Name" /> のプロパティ、またはファイル名またはディレクトリ名を使用します。</summary>
      <returns>ユーザーから渡された元のパス。</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEntry">
      <summary>検索結果の処理とフィルター処理を補助するために、<see cref="T:System.IO.FileSystemInfo" /> の下位レベルのビューを提供します。</summary>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Attributes">
      <summary>このエントリの属性を取得します。</summary>
      <returns>このエントリの属性。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.CreationTimeUtc">
      <summary>エントリの作成時刻、またはオペレーティング システムで作成タイム スタンプがサポートされていない場合は入手可能な最も古いタイム スタンプを取得します。</summary>
      <returns>エントリの作成時刻。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Directory">
      <summary>このエントリが存在するディレクトリの完全なパスを取得します。</summary>
      <returns>このエントリのディレクトリの完全パス。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.FileName">
      <summary>このエントリのファイル名を取得します。</summary>
      <returns>このエントリのファイル名。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsDirectory">
      <summary>このエントリがディレクトリかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />エントリがディレクトリの場合は。それ以外<see langword="true" />の場合は。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsHidden">
      <summary>ファイルに隠し属性があるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />ファイルに hidden 属性が含まれている場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastAccessTimeUtc">
      <summary>最後のアクセス時刻を UTC で表す日時オフセットを取得します。</summary>
      <returns>最後のアクセス時刻 (UTC)。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastWriteTimeUtc">
      <summary>最後の書き込み時刻を UTC で表す日時オフセットを取得します。</summary>
      <returns>最後の書き込み時刻 (UTC)。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Length">
      <summary>ファイルの長さをバイト単位で取得します。</summary>
      <returns>ファイルの長さ (バイト単位)。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.OriginalRootDirectory">
      <summary>コンストラクターで指定されている列挙型のルート ディレクトリを取得します。</summary>
      <returns>元のルートディレクトリ。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.RootDirectory">
      <summary>列挙型に使用されるルート ディレクトリの完全なパスを取得します。</summary>
      <returns>ルートディレクトリ。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFileSystemInfo">
      <summary>このインスタンスの値を <see cref="T:System.IO.FileSystemInfo" /> に変換します。</summary>
      <returns>このインスタンスの <see cref="T:System.IO.FileSystemInfo" /> としての値。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFullPath">
      <summary>検索結果の完全なパスを返します。</summary>
      <returns>完全なパスを表す文字列。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToSpecifiedFullPath">
      <summary>最初に指定されたパスに基づいて、検索結果の完全なパスを返します。</summary>
      <returns>完全なパスを表す文字列。</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1">
      <summary>カスタム フィルター述語を利用でき、列挙のためにデリゲートを変換します。</summary>
      <typeparam name="TResult">この列挙型がカプセル化する型。</typeparam>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.#ctor(System.String,System.IO.Enumeration.FileSystemEnumerable{`0}.FindTransform,System.IO.EnumerationOptions)">
      <param name="directory" />
      <param name="transform" />
      <param name="options" />
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindPredicate">
      <summary>検索結果をフィルターで除外するためのメソッドをカプセル化します。</summary>
      <param name="entry">述語条件で評価されるファイル システム エントリへの参照。</param>
      <typeparam name="TResult" />
      <returns>述語の条件が満たされた場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindTransform">
      <summary>生の検索データを結果に変換するためのメソッドをカプセル化します。</summary>
      <param name="entry">述語条件で評価されるファイル システム エントリへの参照。</param>
      <typeparam name="TResult" />
      <returns>このデリゲートによってカプセル化される型のインスタンス。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.GetEnumerator">
      <summary>この結果の型の列挙子を取得します。</summary>
      <returns>列挙子。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldIncludePredicate">
      <summary>TResults を含める必要があるかどうかを確認するために使用できる述語を取得または設定します。</summary>
      <returns>Include 述語。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldRecursePredicate">
      <summary>TResults を再帰処理する必要があるかどうかを確認するために使用できる述語を取得または設定します。</summary>
      <returns>再帰述語。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>反復処理に使用できる列挙子を取得します。</summary>
      <returns>列挙子のインスタンス。</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerator`1">
      <typeparam name="TResult" />
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.#ctor(System.String,System.IO.EnumerationOptions)">
      <summary>検索操作をカプセル化します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="options">使用する列挙オプション。</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ContinueOnError(System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、実行を継続するか、または既定の例外をスローするかを示す値を返します。</summary>
      <param name="error">ネイティブ エラー コード。</param>
      <returns>続行する場合は <see langword="true" />、指定されたエラーの既定の例外をスローする場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.Current">
      <summary>現在アクセスしている要素を取得します。</summary>
      <returns>現在アクセスしている要素。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose">
      <summary>
        <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose(System.Boolean)">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.MoveNext">
      <summary>列挙子を <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" /> の次の項目に進めます。</summary>
      <returns>列挙子が次の項目に正常に進んだ場合は <see langword="true" />、列挙子の末尾を超えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.OnDirectoryFinished(System.ReadOnlySpan{System.Char})">
      <summary>派生クラスでオーバーライドされた場合、ディレクトリの末尾に到達するたびにこのメソッドが呼び出されます。</summary>
      <param name="directory">読み取り専用スパンとしてのディレクトリ パス。</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Reset">
      <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldIncludeEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>派生クラスでオーバーライドされた場合、指定されたファイル システム エントリを結果に含める必要があるかどうかを決定します。</summary>
      <param name="entry">ファイル システム エントリの参照。</param>
      <returns>指定されたファイル システム エントリを結果に含める必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldRecurseIntoEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>派生クラスでオーバーライドされた場合、指定されたファイル システム エントリを再帰処理する必要があるかどうかを決定します。</summary>
      <param name="entry">ファイル システム エントリの参照。</param>
      <returns>指定されたディレクトリ エントリを再帰処理する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.System#Collections#IEnumerator#Current">
      <summary>現在アクセスしているオブジェクトを取得します。</summary>
      <returns>現在アクセスしているオブジェクト。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.TransformEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>派生クラスでオーバーライドされた場合、現在のエントリから結果の型を生成します。</summary>
      <param name="entry" />
      <returns>現在のエントリの結果の型。</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemName">
      <summary>ファイル システム名を照合するためのメソッドを提供します。</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesSimpleExpression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>指定された式が指定された名前と一致するかどうかを調べます。 次のワイルドカードがサポートされています: '*'、'?'。 円記号 ''' はエスケープします。</summary>
      <param name="expression">照合する式。</param>
      <param name="name">式に対して調べる名前。</param>
      <param name="ignoreCase">大文字と小文字を区別しない場合は <see langword="true" /> (既定値)、一致で大文字と小文字を区別する場合は <see langword="false" />。</param>
      <returns>指定された式が指定された名前と一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesWin32Expression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>指定された Win32 の式が指定された名前と一致するかどうかを調べます。 次のワイルドカードがサポートされています: '*'、'?'、'&lt;'、'&gt;'、'"'。 円記号 ''' はエスケープします。</summary>
      <param name="expression">照合する式 (例: "*.foo")。</param>
      <param name="name">式に対して調べる名前。</param>
      <param name="ignoreCase">大文字と小文字を区別しない場合は <see langword="true" /> (既定値)、一致で大文字と小文字を区別する場合は <see langword="false" />。</param>
      <returns>指定された式が指定された名前と一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)">
      <summary>指定された Win32 の式を変換します。 Win32 の動作を照合するように、'*' と '?' を、'&lt;'、'&gt;'、および '"' に変更します。</summary>
      <param name="expression">変換する式。</param>
      <returns>変換された Win32 の式を含む文字列。</returns>
    </member>
    <member name="T:System.IO.EnumerationOptions" />
    <member name="M:System.IO.EnumerationOptions.#ctor">
      <summary>推奨される既定のオプションを使用して、<see cref="T:System.IO.EnumerationOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.IO.EnumerationOptions.AttributesToSkip">
      <summary>スキップする属性を取得または設定します。 既定値は <c>FileAttributes.Hidden | FileAttributes.System</c> です。</summary>
      <returns>スキップする属性。</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.BufferSize">
      <summary>推奨されるバッファー サイズ (バイト単位) を取得または設定します。 既定値は 0 (推奨なし) です。</summary>
      <returns>バッファーサイズ。</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.IgnoreInaccessible">
      <summary>アクセスが拒否されたときにファイルまたはディレクトリをスキップするかどうかを示す値を取得または設定します (例: <see cref="T:System.UnauthorizedAccessException" /> または <see cref="T:System.Security.SecurityException" />)。 既定値は、<see langword="true" /> です。</summary>
      <returns>
        <see langword="true" />innacessible ファイルまたはディレクトリをスキップするにはそれ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchCasing">
      <summary>大文字と小文字の一致の動作を取得または設定します。</summary>
      <returns>Case 照合動作を示す列挙値の1つ。</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchType">
      <summary>一致の種類を取得または設定します。</summary>
      <returns>一致の種類を示す列挙値の1つ。</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.RecurseSubdirectories">
      <summary>列挙においてサブディレクトリを再帰的に処理するかどうかを示す値を取得または設定します。 既定値は、<see langword="false" /> です。</summary>
      <returns>
        <see langword="true" />サブディレクトリを再帰的にする場合は、それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.ReturnSpecialDirectories">
      <summary>特別なディレクトリ エントリ "." と ".." を返すかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" />特別なディレクトリエントリ "." と ".." を返すにはそれ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="T:System.IO.File">
      <summary>1 つのファイルの作成、コピー、削除、移動、オープンのための静的メソッドを提供し、<see cref="T:System.IO.FileStream" /> オブジェクトの作成を支援します。</summary>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>ファイルに行を追加してから、そのファイルを閉じます。 指定したファイルが存在しない場合、このメソッドはファイルを作成し、指定した行をファイルに書き込んだ後、ファイルを閉じます。</summary>
      <param name="path">行を追加するファイル。 ファイルがまだ存在しない場合は作成されます。</param>
      <param name="contents">ファイルに追加する行。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみが含まれるか、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="contents" /> のいずれかが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が有効ではありません (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> によって指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> がシステムで定義されている最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元には、ファイルに対する書き込みアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用のファイルを指定します。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> はディレクトリです。</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>指定されたエンコーディングを使用してファイルに行を追加してから、そのファイルを閉じます。 指定したファイルが存在しない場合、このメソッドはファイルを作成し、指定した行をファイルに書き込んだ後、ファイルを閉じます。</summary>
      <param name="path">行を追加するファイル。 ファイルがまだ存在しない場合は作成されます。</param>
      <param name="contents">ファイルに追加する行。</param>
      <param name="encoding">使用する文字エンコーディング。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみが含まれるか、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />、<paramref name="contents" />、または <paramref name="encoding" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が有効ではありません (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> によって指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> がシステムで定義されている最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用のファイルを指定します。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> はディレクトリです。  


または 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>指定のエンコーディングを使用してファイルに行を非同期に追加してから、そのファイルを閉じます。 指定したファイルが存在しない場合、このメソッドはファイルを作成し、指定した行をファイルに書き込んだ後、ファイルを閉じます。</summary>
      <param name="path">行を追加するファイル。 ファイルがまだ存在しない場合は作成されます。</param>
      <param name="contents">ファイルに追加する行。</param>
      <param name="encoding">使用する文字エンコーディング。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の追加操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>非同期にファイルに行を追加してから、そのファイルを閉じます。 指定したファイルが存在しない場合、このメソッドはファイルを作成し、指定した行をファイルに書き込んだ後、ファイルを閉じます。</summary>
      <param name="path">行を追加するファイル。 ファイルがまだ存在しない場合は作成されます。</param>
      <param name="contents">ファイルに追加する行。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の追加操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String)">
      <summary>ファイルを開き、指定した文字列をそのファイルに追加した後、ファイルを閉じます。 ファイルが存在しない場合、このメソッドはファイルを作成し、指定した文字列をファイルに書き込んだ後、ファイルを閉じます。</summary>
      <param name="path">指定した文字列の追加先となるファイル。</param>
      <param name="contents">ファイルに追加する文字列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが有効ではありません (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  
または 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)">
      <summary>指定のエンコードを使用して指定の文字列をファイルに追加し、ファイルが存在しない場合は作成します。</summary>
      <param name="path">指定した文字列の追加先となるファイル。</param>
      <param name="contents">ファイルに追加する文字列。</param>
      <param name="encoding">使用する文字エンコーディング。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが有効ではありません (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  
または 
この操作は、現在のプラットフォームではサポートされていません。  
または 
 <paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>ファイルを非同期的に開くか、ファイルが存在しない場合は作成し、指定のエンコードを使用して指定の文字列をファイルに追加してから、ファイルを閉じます。</summary>
      <param name="path">指定した文字列の追加先となるファイル。</param>
      <param name="contents">ファイルに追加する文字列。</param>
      <param name="encoding">使用する文字エンコーディング。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の追加操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>ファイルを非同期的に開くか、ファイルが存在しない場合は作成し、指定の文字列をファイルに追加してからファイルを閉じます。</summary>
      <param name="path">指定した文字列の追加先となるファイル。</param>
      <param name="contents">ファイルに追加する文字列。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の追加操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.AppendText(System.String)">
      <summary>
        <see cref="T:System.IO.StreamWriter" /> を作成します。これは、UTF-8 でエンコードされたテキストを既存のファイルに 追加するか、指定したファイルが存在しない場合は新しいファイルに追加します。</summary>
      <param name="path">追加先のファイル パス。</param>
      <returns>指定したファイルまたは新しいファイルに、UTF-8 エンコードされたテキストを追加するストリーム ライター。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが有効ではありません (たとえば、ディレクトリが存在しない、またはマップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String)">
      <summary>既存のファイルを新しいファイルにコピーします。 同じ名前のファイルを上書きできません。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destFileName">コピー先ファイルの名前。 ディレクトリや既存のファイルは使用できません。</param>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> が、長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義されている 1 つ以上の正しくない文字を含んでいます。  
または 
 <paramref name="sourceFileName" /> または <paramref name="destFileName" /> がディレクトリを指定しています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> で指定されたパスが正しくありません (マップされていないドライブ上のパスなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="sourceFileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> が存在しています。  
または 
I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String,System.Boolean)">
      <summary>既存のファイルを新しいファイルにコピーします。 同じ名前のファイルの上書きが許可されます。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destFileName">コピー先ファイルの名前。 このパラメーターには、ディレクトリは指定できません。</param>
      <param name="overwrite">コピー先ファイルが上書きできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  
または 
 <paramref name="destFileName" /> は読み取り専用です。

または - 
<paramref name="overwrite" /> は <see langword="true" /> です。<paramref name="destFileName" /> は存在するのに非表示ですが、<paramref name="sourceFileName" /> は非表示になっていません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> が、長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義されている使用できない文字を含んでいます。  
または 
 <paramref name="sourceFileName" /> または <paramref name="destFileName" /> がディレクトリを指定しています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> で指定されたパスが正しくありません (マップされていないドライブ上のパスなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="sourceFileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> が存在しており、<paramref name="overwrite" /> が <see langword="false" /> です。  
または 
I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String)">
      <summary>指定したパスでファイルを作成または上書きします。</summary>
      <param name="path">作成するファイルのパスと名前。</param>
      <returns>
        <see cref="T:System.IO.FileStream" /> で指定したファイルへの読み取り/書き込みアクセスを提供する <paramref name="path" />。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  

または - 
<paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルの作成中に I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32)">
      <summary>指定したファイルを作成または上書きします。</summary>
      <param name="path">ファイルの名前です。</param>
      <param name="bufferSize">ファイルの読み取りおよび書き込み用にバッファリングされるバイト数。</param>
      <returns>指定された大きさのバッファーを持ち、<see cref="T:System.IO.FileStream" /> で指定されたファイルへの読み取り/書き込みアクセスを提供する <paramref name="path" />。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  

または - 
<paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルの作成中に I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)">
      <summary>バッファー サイズとファイルの作成または上書き方法を示す <see cref="T:System.IO.FileOptions" /> 値を指定して、指定のファイルを作成または上書きします。</summary>
      <param name="path">ファイルの名前です。</param>
      <param name="bufferSize">ファイルの読み取りおよび書き込み用にバッファリングされるバイト数。</param>
      <param name="options">ファイルを作成または上書きする方法を示す <see cref="T:System.IO.FileOptions" /> 値のいずれか。</param>
      <returns>指定したバッファー サイズの新規ファイル。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  

または - 
<paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど。</exception>
      <exception cref="T:System.IO.IOException">ファイルの作成中に I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.CreateText(System.String)">
      <summary>UTF-8 エンコードされたテキストの書き込み用にファイルを作成または開きます。 ファイルが既に存在する場合は、そのコンテンツが上書きされます。</summary>
      <param name="path">書き込み用に開かれるファイル。</param>
      <returns>UTF-8 エンコーディングを使用して指定したファイルに書き込まれる <see cref="T:System.IO.StreamWriter" />。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  
または 
 <paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Decrypt(System.String)">
      <summary>
        <see cref="M:System.IO.File.Encrypt(System.String)" /> メソッドを使用して現在のアカウントによって暗号化されたファイルを復号化します。</summary>
      <param name="path">復号化するファイルを示すパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> パラメーターは長さゼロの文字列で、空白のみで構成されているか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義されるように 1 つ以上の無効な文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DriveNotFoundException">正しくないドライブが指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> パラメーターで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。 たとえば、暗号化されたファイルが既に開いています。  

または -  

 この操作は、現在のプラットフォームではサポートされていません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.NotSupportedException">このファイル システムは NTFS ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> パラメーターに読み取り専用のファイルが指定されています。  
または 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> パラメーターにディレクトリが指定されています。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.Delete(System.String)">
      <summary>指定されたファイルを削除します。</summary>
      <param name="path">削除するファイルの名前。 ワイルドカード文字はサポートされていません。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">指定されたファイルは、使用されています。  
または 
ファイルに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。 このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。 詳細については、「方法 : ディレクトリとファイルを列挙する。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  

または - 
ファイルは使用されている実行可能ファイルです。  

または - 
<paramref name="path" /> はディレクトリです。  

または - 
<paramref name="path" /> は読み取り専用ファイルを指定しました。</exception>
    </member>
    <member name="M:System.IO.File.Encrypt(System.String)">
      <summary>ファイルを暗号化し、そのファイルの暗号化に使用したアカウントだけが暗号化の解除をできるようにします。</summary>
      <param name="path">暗号化するファイルを示すパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> パラメーターは長さゼロの文字列で、空白のみで構成されているか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義されるように 1 つ以上の無効な文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DriveNotFoundException">正しくないドライブが指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> パラメーターで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。  

または -  

 この操作は、現在のプラットフォームではサポートされていません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.NotSupportedException">このファイル システムは NTFS ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> パラメーターに読み取り専用のファイルが指定されています。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または 
<paramref name="path" /> パラメーターにディレクトリが指定されています。  
または 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.Exists(System.String)">
      <summary>指定したファイルが存在するかどうかを確認します。</summary>
      <param name="path">確認するファイル。</param>
      <returns>呼び出し元が必要なアクセス許可を持ち、<see langword="true" /> に既存のファイル名が格納されている場合は <paramref name="path" />。それ以外の場合は <see langword="false" />。 <see langword="false" /> が <paramref name="path" />、正しくないパス、または長さ 0 の文字列の場合にも、このメソッドは <see langword="null" /> を返します。 呼び出し元が指定したファイルを読み取るための十分なアクセス許可を持たない場合、例外はスローされず、このメソッドは、<see langword="false" /> の有無にかかわらず <paramref name="path" /> を返します。</returns>
    </member>
    <member name="M:System.IO.File.GetAttributes(System.String)">
      <summary>パス上のファイルの <see cref="T:System.IO.FileAttributes" /> を取得します。</summary>
      <param name="path">ファイルへのパス。</param>
      <returns>パス上のファイルの <see cref="T:System.IO.FileAttributes" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> はファイルを表しますが、正しくありません (マップされていないドライブにあるなど)。またはファイルが見つかりません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> はディレクトリを表しますが、正しくありません (マップされていないドライブにあるなど)。またはディレクトリが見つかりません。</exception>
      <exception cref="T:System.IO.IOException">ファイルは別のプロセスによって使用されています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.GetCreationTime(System.String)">
      <summary>指定したファイルまたはディレクトリの作成日時を返します。</summary>
      <param name="path">作成日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリの作成日時に設定された <see cref="T:System.DateTime" /> 構造体。 この値は現地時刻で表示されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.GetCreationTimeUtc(System.String)">
      <summary>指定したファイルまたはディレクトリの作成日時を世界協定時刻 (UTC) で返します。</summary>
      <param name="path">作成日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリの作成日時に設定された <see cref="T:System.DateTime" /> 構造体。 この値は UTC 時刻で表記されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.GetLastAccessTime(System.String)">
      <summary>指定したファイルまたはディレクトリに最後にアクセスした日付と時刻を返します。</summary>
      <param name="path">アクセス日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリに最後にアクセスした日付と時刻に設定された <see cref="T:System.DateTime" /> 構造体。 この値は現地時刻で表示されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.GetLastAccessTimeUtc(System.String)">
      <summary>指定されたファイルまたはディレクトリに最後にアクセスした日付と時刻を世界協定時 (UTC) で返します。</summary>
      <param name="path">アクセス日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリに最後にアクセスした日付と時刻に設定された <see cref="T:System.DateTime" /> 構造体。 この値は UTC 時刻で表記されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.GetLastWriteTime(System.String)">
      <summary>指定したファイルまたはディレクトリに最後に書き込んだ日付と時刻を返します。</summary>
      <param name="path">書き込み日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリに最後に書き込んだ日付と時刻に設定された <see cref="T:System.DateTime" /> 構造体。 この値は現地時刻で表示されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.GetLastWriteTimeUtc(System.String)">
      <summary>指定したファイルまたはディレクトリに最後に書き込んだ日付と時刻を世界協定時刻 (UTC) で返します。</summary>
      <param name="path">書き込み日時情報を取得する対象のファイルまたはディレクトリ。</param>
      <returns>指定したファイルまたはディレクトリに最後に書き込んだ日付と時刻に設定された <see cref="T:System.DateTime" /> 構造体。 この値は UTC 時刻で表記されます。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String)">
      <summary>指定したファイルを新しい場所に移動します。オプションで新しいファイル名を指定することもできます。</summary>
      <param name="sourceFileName">移動するファイルの名前。 相対パスまたは絶対パスを含めることができます。</param>
      <param name="destFileName">ファイルの新しいパスおよび名前。</param>
      <exception cref="T:System.IO.IOException">リンク先ファイルが既に存在します。  

または - 
<paramref name="sourceFileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> か <paramref name="destFileName" /> が長さ 0 の文字列であるか、空白のみで構成されているか、または <see cref="F:System.IO.Path.InvalidPathChars" />で定義されている正しくない文字を含んでいます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> で指定されたパスが正しくありません (マップされていないドライブ上のパスなど)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String,System.Boolean)">
      <summary>指定したファイルを新しい場所に移動します。新しいファイル名を指定し、既に存在する場合は、対象ファイルを上書きするオプションが用意されています。</summary>
      <param name="sourceFileName">移動するファイルの名前。 相対パスまたは絶対パスを含めることができます。</param>
      <param name="destFileName">ファイルの新しいパスおよび名前。</param>
      <param name="overwrite">宛先ファイルが既に存在する場合にそれを上書きする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="sourceFileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> か <paramref name="destFileName" /> が長さ 0 の文字列であるか、空白のみで構成されているか、または <see cref="F:System.IO.Path.InvalidPathChars" />で定義されている正しくない文字を含んでいます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> で指定されたパスが正しくありません (マップされていないドライブ上のパスなど)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> または <paramref name="destFileName" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode)">
      <summary>指定したパスの <see cref="T:System.IO.FileStream" /> を、共有なしの読み取り/書き込みアクセスで開きます。</summary>
      <param name="path">開くファイル。</param>
      <param name="mode">ファイルが存在しない場合にファイルを作成するかどうかを指定し、既存のファイルの内容を保持するか上書きするかを決定する <see cref="T:System.IO.FileMode" /> 値。</param>
      <returns>共有モードではなく読み取り/書き込みアクセスで、指定したモードとパスで開いた <see cref="T:System.IO.FileStream" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または 
 <paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。  

または 
 <paramref name="mode" /> は <see cref="F:System.IO.FileMode.Create" /> であり、指定されたファイルは隠しファイルです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> により正しくない値が指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>指定したモードとアクセスを使用し、共有なしで、指定したパスの <see cref="T:System.IO.FileStream" /> を開きます。</summary>
      <param name="path">開くファイル。</param>
      <param name="mode">ファイルが存在しない場合にファイルを作成するかどうかを指定し、既存のファイルの内容を保持するか上書きするかを決定する <see cref="T:System.IO.FileMode" /> 値。</param>
      <param name="access">ファイルで実行できる操作を指定する <see cref="T:System.IO.FileAccess" /> 値。</param>
      <returns>指定されたモードとアクセスで、指定されたファイルへのアクセスを提供する非共有 <see cref="T:System.IO.FileStream" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。  

または - 
<paramref name="access" /> には <see langword="Read" /> が指定され、 <paramref name="mode" /> には <see langword="Create" />、 <see langword="CreateNew" />、 <see langword="Truncate" />、または <see langword="Append" />が指定されました。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> に読み取り専用ファイルが指定されましたが、 <paramref name="access" /> が <see langword="Read" />ではありません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。  


または 
 <paramref name="mode" /> が <see cref="F:System.IO.FileMode.Create" /> ですが、指定されたファイルは隠しファイルです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> または <paramref name="access" /> に正しくない値が指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>読み取り、書き込み、または読み取り/書き込みアクセスを持つ指定モードと指定した共有オプションで、指定したパスの <see cref="T:System.IO.FileStream" /> を開きます。</summary>
      <param name="path">開くファイル。</param>
      <param name="mode">ファイルが存在しない場合にファイルを作成するかどうかを指定し、既存のファイルの内容を保持するか上書きするかを決定する <see cref="T:System.IO.FileMode" /> 値。</param>
      <param name="access">ファイルで実行できる操作を指定する <see cref="T:System.IO.FileAccess" /> 値。</param>
      <param name="share">他のスレッドがファイルに対して持つアクセス タイプを指定する <see cref="T:System.IO.FileShare" /> 値。</param>
      <returns>読み取り、書き込み、または読み取り/書き込みアクセスを持つ指定モードと指定した共有オプションで、指定したパスの <see cref="T:System.IO.FileStream" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。  

または - 
<paramref name="access" /> には <see langword="Read" /> が指定され、 <paramref name="mode" /> には <see langword="Create" />、 <see langword="CreateNew" />、 <see langword="Truncate" />、または <see langword="Append" />が指定されました。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> に読み取り専用ファイルが指定されましたが、 <paramref name="access" /> が <see langword="Read" />ではありません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または 
呼び出し元に、必要なアクセス許可がありません。  

または - 
<paramref name="mode" /> が <see cref="F:System.IO.FileMode.Create" /> ですが、指定されたファイルは隠しファイルです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に正しくない値が指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.OpenRead(System.String)">
      <summary>読み取り用の既存のファイルを開きます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <returns>指定したパスの読み取り専用 <see cref="T:System.IO.FileStream" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> はディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.File.OpenText(System.String)">
      <summary>読み取り用の既存の UTF-8 エンコードされたテキスト ファイルを開きます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <returns>指定したパスの <see cref="T:System.IO.StreamReader" />。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.OpenWrite(System.String)">
      <summary>書き込み用に、既存のファイルを開くか新しいファイルを作成します。</summary>
      <param name="path">書き込み用に開かれるファイル。</param>
      <returns>指定されたパスに置かれている、非共有の <see cref="T:System.IO.FileStream" /> オブジェクト。アクセス許可は <see cref="F:System.IO.FileAccess.Write" /> です。</returns>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  

または - 
<paramref name="path" /> が読み取り専用ファイルまたはディレクトリを指定しました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadAllBytes(System.String)">
      <summary>バイナリ ファイルを開き、ファイルの内容をバイト配列に読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <returns>ファイルの内容を格納しているバイト配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">この操作は、現在のプラットフォームではサポートされていません。  
または 
 <paramref name="path" /> がディレクトリを指定しました。  
または 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)">
      <summary>バイナリ ファイルを非同期に開き、ファイルの内容をバイト配列に読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。ファイルの内容が含まれるバイト配列がラップされます。</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String)">
      <summary>テキスト ファイルを開き、ファイルのすべての行を読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <returns>ファイルのすべての行を含む文字列配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)">
      <summary>ファイルを開き、指定したエンコーディングが適用されたファイルのすべての行を読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="encoding">ファイルの内容に適用されるエンコーディング。</param>
      <returns>ファイルのすべての行を含む文字列配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  
または 
この操作は、現在のプラットフォームではサポートされていません。  
または 
 <paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>テキスト ファイルを非同期に開き、指定のエンコーディングが適用されたファイルのすべての行を読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="encoding">ファイルの内容に適用されるエンコーディング。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。ファイルのすべての行が含まれる文字列配列がラップされます。</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)">
      <summary>テキスト ファイルを非同期に開き、ファイルのすべての行を読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。ファイルのすべての行が含まれる文字列配列がラップされます。</returns>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String)">
      <summary>テキスト ファイルを開き、そのファイル内のすべてのテキストを読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <returns>ファイル内のすべてのテキストを含んでいる文字列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)">
      <summary>ファイルを開き、指定したエンコードを使ってファイル内のすべてのテキストを読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="encoding">ファイルの内容に適用されるエンコーディング。</param>
      <returns>ファイル内のすべてのテキストを含んでいる文字列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>テキスト ファイルを非同期に開き、指定のエンコーディングが適用されたファイルのすべてのテキストを読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="encoding">ファイルの内容に適用されるエンコーディング。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。ファイルのすべてのテキストが含まれる文字列がラップされます。</returns>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)">
      <summary>テキスト ファイルを非同期に開き、ファイルのすべてのテキストを読み取った後、ファイルを閉じます。</summary>
      <param name="path">読み取り用に開かれるファイル。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。ファイルのすべてのテキストが含まれる文字列がラップされます。</returns>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String)">
      <summary>ファイルの行を読み取ります。</summary>
      <param name="path">読み取るファイル。</param>
      <returns>ファイルのすべての行、またはクエリの結果の行。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみを含んでいるか、または <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義されている 1 つ以上の無効な文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が有効ではありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> によって指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> がシステムで定義されている最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用のファイルを指定します。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または 
 <paramref name="path" /> はディレクトリです。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String,System.Text.Encoding)">
      <summary>指定された方法でエンコーディングされたファイルの行を読み取ります。</summary>
      <param name="path">読み取るファイル。</param>
      <param name="encoding">ファイルの内容に適用されるエンコーディング。</param>
      <returns>ファイルのすべての行、またはクエリの結果の行。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみで構成されているか、または <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義されるように 1 つ以上の無効な文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が有効ではありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> によって指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> がシステムで定義されている最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用のファイルを指定します。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または 
 <paramref name="path" /> はディレクトリです。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String)">
      <summary>指定したファイルの内容を別のファイルの内容に置き換えます。置き換えによって元のファイルは削除され、置き換えられたファイルのバックアップが作成されます。</summary>
      <param name="sourceFileName">
        <paramref name="destinationFileName" /> で指定したファイルを置き換えるファイルの名前。</param>
      <param name="destinationFileName">置き換えられるファイルの名前。</param>
      <param name="destinationBackupFileName">バックアップ ファイルの名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。  
または 
<paramref name="destinationBackupFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DriveNotFoundException">正しくないドライブが指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。  

または - 
<paramref name="destinationBackupFileName" /> パラメーターで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。  

または - 
<paramref name="sourceFileName" /> および <paramref name="destinationFileName" /> パラメーターは、同じファイルを指定します。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは Windows 98 Second Edition 以前であり、ファイル システムは NTFS ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="sourceFileName" /> または <paramref name="destinationFileName" /> パラメーターに読み取り専用のファイルを指定します。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または 
ソースまたはターゲットのパラメーターは、ファイルの代わりにディレクトリを指定します。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)">
      <summary>指定したファイルの内容を別のファイルの内容に置き換えます。置き換えによって元のファイルは削除され、置き換えられたファイルのバックアップが作成されます。オプションで、マージ エラーを無視することもできます。</summary>
      <param name="sourceFileName">
        <paramref name="destinationFileName" /> で指定したファイルを置き換えるファイルの名前。</param>
      <param name="destinationFileName">置き換えられるファイルの名前。</param>
      <param name="destinationBackupFileName">バックアップ ファイルの名前。</param>
      <param name="ignoreMetadataErrors">置換されるファイルから置換ファイルへのマージ エラー (属性やアクセス制御リスト (ACL: Access Control List) など) を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。  

または - 
<paramref name="destinationBackupFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DriveNotFoundException">正しくないドライブが指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。  

または - 
<paramref name="destinationBackupFileName" /> パラメーターで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。  

または - 
<paramref name="sourceFileName" /> および <paramref name="destinationFileName" /> パラメーターは、同じファイルを指定します。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは Windows 98 Second Edition 以前であり、ファイル システムは NTFS ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="sourceFileName" /> または <paramref name="destinationFileName" /> パラメーターに読み取り専用のファイルを指定します。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
ソースまたはターゲットのパラメーターは、ファイルの代わりにディレクトリを指定します。  


または 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)">
      <summary>指定したパスでファイルの指定された <see cref="T:System.IO.FileAttributes" /> を設定します。</summary>
      <param name="path">ファイルへのパス。</param>
      <param name="fileAttributes">列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> が空か、空白文字だけを含むか、正しくない文字を含むか、ファイル属性が正しくありません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。  
または 
この操作は、現在のプラットフォームではサポートされていません。  
または 
 <paramref name="path" /> がディレクトリを指定しました。  
または 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTime(System.String,System.DateTime)">
      <summary>ファイルが作成された日付と時刻を設定します。</summary>
      <param name="path">作成日時情報を設定する対象のファイル。</param>
      <param name="creationTime">
        <paramref name="path" /> の作成日時の設定値を含む <see cref="T:System.DateTime" />。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">操作の実行中に I/O エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> はこの操作に許可される日付または時刻のいずれか、またはその両方の範囲外の値を指定します。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>ファイルが作成された日付と時刻を世界協定時刻 (UTC) で設定します。</summary>
      <param name="path">作成日時情報を設定する対象のファイル。</param>
      <param name="creationTimeUtc">
        <paramref name="path" /> の作成日時の設定値を含む <see cref="T:System.DateTime" />。 この値は UTC 時刻で表記されます。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.IOException">操作の実行中に I/O エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> はこの操作に許可される日付または時刻のいずれか、またはその両方の範囲外の値を指定します。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)">
      <summary>指定したファイルに最後にアクセスした日付と時刻を設定します。</summary>
      <param name="path">アクセス日時情報を設定する対象のファイル。</param>
      <param name="lastAccessTime">
        <see cref="T:System.DateTime" /> に最後にアクセスした日付と時刻の設定値を含む <paramref name="path" />。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>指定したファイルに最後にアクセスした日付と時刻を世界協定時刻 (UTC) で設定します。</summary>
      <param name="path">アクセス日時情報を設定する対象のファイル。</param>
      <param name="lastAccessTimeUtc">
        <see cref="T:System.DateTime" /> に最後にアクセスした日付と時刻の設定値を含む <paramref name="path" />。 この値は UTC 時刻で表記されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)">
      <summary>指定したファイルに最後に書き込んだ日付と時刻を設定します。</summary>
      <param name="path">日時情報を設定する対象のファイル。</param>
      <param name="lastWriteTime">
        <paramref name="path" /> に最後に書き込んだ日付と時刻の設定値を含む <see cref="T:System.DateTime" />。 この値は現地時刻で表示されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>指定したファイルに最後に書き込んだ日付と時刻を世界協定時刻 (UTC) で設定します。</summary>
      <param name="path">日時情報を設定する対象のファイル。</param>
      <param name="lastWriteTimeUtc">
        <paramref name="path" /> に最後に書き込んだ日付と時刻の設定値を含む <see cref="T:System.DateTime" />。 この値は UTC 時刻で表記されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したパスが見つかりませんでした。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" /> はこの操作に許可される日付または時刻の範囲外の値を指定しています。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])">
      <summary>新しいファイルを作成し、指定されたバイト配列をそのファイルに書き込んだ後、ファイルを閉じます。 既存のターゲット ファイルは上書きされます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="bytes">ファイルに書き込むバイト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> であるか、またはバイト配列が空です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
      <summary>新しいファイルを非同期に作成し、指定のバイト配列をそのファイルに書き込んだ後、ファイルを閉じます。 既存のターゲット ファイルは上書きされます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="bytes">ファイルに書き込むバイト。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>新しいファイルを作成し、文字列のコレクションをそのファイルに書き込んでから、そのファイルを閉じます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む行。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみを含んでいるか、または <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義されている 1 つ以上の無効な文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="contents" /> のいずれかが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が有効ではありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> がシステムで定義されている最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。
または 
 <paramref name="path" /> によって、非表示のファイルが指定されました。

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> はディレクトリです。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>指定されたエンコーディングを使用して新しいファイルを作成し、文字列のコレクションをそのファイルに書き込んでから、そのファイルを閉じます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む行。</param>
      <param name="encoding">使用する文字エンコーディング。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さゼロの文字列で、空白のみを含んでいるか、または <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義されている 1 つ以上の無効な文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />、<paramref name="contents" />、または <paramref name="encoding" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> が有効ではありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> がシステムで定義されている最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> はディレクトリです。  


または 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[])">
      <summary>新しいファイルを作成し、指定した文字列配列をそのファイルに書き込んだ後、ファイルを閉じます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む文字列配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="contents" /> のいずれかが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  


または 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
      <summary>新しいファイルを作成し、指定されたエンコーディングで指定された文字列配列をそのファイルに書き込んでから、そのファイルを閉じます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む文字列配列。</param>
      <param name="encoding">文字列配列に適用された文字エンコーディングを表す <see cref="T:System.Text.Encoding" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> または <paramref name="contents" /> のいずれかが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。
または 
 <paramref name="path" /> によって、非表示のファイルが指定されました。  
または 
この操作は、現在のプラットフォームではサポートされていません。  
または 
 <paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>新しいファイルを非同期に作成し、指定のエンコーディングで指定の行をそのファイルに書き込んでから、そのファイルを閉じます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む行。</param>
      <param name="encoding">使用する文字エンコーディング。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>新しいファイルを非同期に作成し、指定の行をそのファイルに書き込んでから、ファイルを閉じます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む行。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String)">
      <summary>新しいファイルを作成し、指定した文字列をそのファイルに書き込んだ後、ファイルを閉じます。 既存のターゲット ファイルは上書きされます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む文字列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。
または 
 <paramref name="path" /> によって、非表示のファイルが指定されました。  
または 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
<paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)">
      <summary>新しいファイルを作成し、指定したエンコーディングで指定の文字列をそのファイルに書き込んだ後、ファイルを閉じます。 既存のターゲット ファイルは上書きされます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む文字列。</param>
      <param name="encoding">文字列に適用するエンコーディング。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。

または - 
<paramref name="path" /> によって、非表示のファイルが指定されました。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  


または 
 <paramref name="path" /> がディレクトリを指定しました。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>新しいファイルを非同期に作成し、指定のエンコーディングで指定の文字列をそのファイルに書き込んだ後、ファイルを閉じます。 既存のターゲット ファイルは上書きされます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む文字列。</param>
      <param name="encoding">文字列に適用するエンコーディング。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>新しいファイルを非同期に作成し、指定の文字列をそのファイルに書き込んでから、ファイルを閉じます。 既存のターゲット ファイルは上書きされます。</summary>
      <param name="path">書き込み先のファイル。</param>
      <param name="contents">ファイルに書き込む文字列。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.IO.FileInfo">
      <summary>ファイルを作成、コピー、削除、移動、および開くためのプロパティおよびインスタンス メソッドを提供し、<see cref="T:System.IO.FileStream" /> オブジェクトを作成できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.IO.FileInfo.#ctor(System.String)">
      <summary>ファイル パスのラッパーとして機能する、<see cref="T:System.IO.FileInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しいファイルの完全修飾名または相対ファイル名。 パスの末尾がディレクトリの区切り記号にならないようにしてください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">ファイル名は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="fileName" /> へのアクセスが拒否されました</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="fileName" /> の文字列の途中にコロン (:) が含まれています。</exception>
    </member>
    <member name="M:System.IO.FileInfo.AppendText">
      <summary>
        <see cref="T:System.IO.FileInfo" />のインスタンスが表すファイルの末尾にテキストを追加する<see cref="T:System.IO.StreamWriter" />を作成します。</summary>
      <returns>新しい <see langword="StreamWriter" />。</returns>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String)">
      <summary>既存のファイルを上書きできないようにして、既存のファイルを新しいファイルにコピーします。</summary>
      <param name="destFileName">コピー先の新しいファイルの名前。</param>
      <returns>完全修飾パスを含む新しいファイル。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
      <exception cref="T:System.IO.IOException">エラーが発生したか、リンク先ファイルが既に存在します。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ディレクトリ パスが渡されるか、ファイルが別のドライブに移動されています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="destFileName" /> で指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> の文字列内にコロン (:) が含まれていますが、ボリュームを指定していません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
      <summary>既存のファイルを上書きできるようにして、既存のファイルを新しいファイルにコピーします。</summary>
      <param name="destFileName">コピー先の新しいファイルの名前。</param>
      <param name="overwrite">既存のファイルを上書きできるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>新しいファイル。または、<paramref name="overwrite" /> が <see langword="true" /> の場合は、既存のファイルを上書きしたファイル。 ファイルが存在しており、<paramref name="overwrite" /> が <see langword="false" /> の場合は、<see cref="T:System.IO.IOException" /> がスローされます。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
      <exception cref="T:System.IO.IOException">エラーが発生したか、リンク先ファイルが既に存在し、<paramref name="overwrite" /> が <see langword="false" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="destFileName" /> で指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ディレクトリ パスが渡されるか、ファイルが別のドライブに移動されています。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> の文字列の途中にコロン (:) が含まれています。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Create">
      <summary>ファイルを作成します。</summary>
      <returns>新しいファイル。</returns>
    </member>
    <member name="M:System.IO.FileInfo.CreateText">
      <summary>新しいテキスト ファイルに書き込みを実行する <see cref="T:System.IO.StreamWriter" /> を作成します。</summary>
      <returns>新しい <see langword="StreamWriter" />。</returns>
      <exception cref="T:System.UnauthorizedAccessException">このファイル名はディレクトリです。</exception>
      <exception cref="T:System.IO.IOException">ディスクが読み取り専用です。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Decrypt">
      <summary>
        <see cref="M:System.IO.FileInfo.Encrypt" /> メソッドを使用して現在のアカウントによって暗号化されたファイルを復号化します。</summary>
      <exception cref="T:System.IO.DriveNotFoundException">正しくないドライブが指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">このファイル システムは NTFS ではありません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルは読み取り専用です。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または - 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Delete">
      <summary>ファイルを完全に削除します。</summary>
      <exception cref="T:System.IO.IOException">ターゲット ファイルが、Microsoft Windows NT を実行するコンピューター上で開いているかメモリ マップされています。  

または - 
ファイルに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。 このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。 詳細については、「方法 : ディレクトリとファイルを列挙する。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">このパスは、ディレクトリです。</exception>
    </member>
    <member name="P:System.IO.FileInfo.Directory">
      <summary>親ディレクトリのインスタンスを取得します。</summary>
      <returns>このファイルの親ディレクトリを表す <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:System.IO.FileInfo.DirectoryName">
      <summary>ディレクトリの絶対パスを表す文字列を取得します。</summary>
      <returns>ディレクトリの絶対パスを表す文字列。</returns>
      <exception cref="T:System.ArgumentNullException">ディレクトリ名に <see langword="null" /> が渡されました。</exception>
      <exception cref="T:System.IO.PathTooLongException">完全修飾パス名がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Encrypt">
      <summary>ファイルを暗号化し、そのファイルの暗号化に使用したアカウントだけが暗号化の解除をできるようにします。</summary>
      <exception cref="T:System.IO.DriveNotFoundException">正しくないドライブが指定されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">このファイル システムは NTFS ではありません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルは読み取り専用です。  

または - 
この操作は、現在のプラットフォームではサポートされていません。  

または 
呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:System.IO.FileInfo.Exists">
      <summary>ファイルが存在するかどうかを示す値を取得します。</summary>
      <returns>ファイルが存在する場合は <see langword="true" />。ファイルが存在しないか、ファイルがディレクトリである場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.FileInfo.IsReadOnly">
      <summary>現在のファイルが読み取り専用であるかどうかを判断する値を取得または設定します。</summary>
      <returns>現在のファイルが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときに、I/O エラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">この操作は、現在のプラットフォームではサポートされていません。  

または -  

 呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">ユーザーには書き込みのアクセス許可がありませんが、このプロパティを <see langword="false" /> に設定しようとしました。</exception>
    </member>
    <member name="P:System.IO.FileInfo.Length">
      <summary>現在のファイルのサイズをバイト単位で取得します。</summary>
      <returns>現在のファイルのサイズ (バイト単位)。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> はファイルまたはディレクトリの状態を更新することはできません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。  

または - 
<see langword="Length" /> プロパティはディレクトリに呼び出されます。</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String)">
      <summary>指定したファイルを新しい場所に移動します。オプションで新しいファイル名を指定することもできます。</summary>
      <param name="destFileName">ファイルの移動先のパス。異なるファイル名を指定できます。</param>
      <exception cref="T:System.IO.IOException">移動先のファイルが既に存在する、移動先のデバイスが準備できていないなど、I/O エラーが発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" /> は読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> の文字列の途中にコロン (:) が含まれています。</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String,System.Boolean)">
      <summary>指定したファイルを新しい場所に移動します。新しいファイル名を指定し、既に存在する場合は、対象ファイルを上書きするオプションが用意されています。</summary>
      <param name="destFileName">ファイルの移動先のパス。異なるファイル名を指定できます。</param>
      <param name="overwrite">宛先ファイルが既に存在する場合にそれを上書きする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.IO.IOException">宛先デバイスの準備ができていないなどの I/O エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" /> は読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> の文字列の途中にコロン (:) が含まれています。</exception>
    </member>
    <member name="P:System.IO.FileInfo.Name">
      <summary>ファイルの名前を取得します。</summary>
      <returns>ファイルの名前です。</returns>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode)">
      <summary>指定したモードでファイルを開きます。</summary>
      <param name="mode">ファイルを開くときのモード (<see cref="T:System.IO.FileMode" />、<see langword="Open" /> など) を指定する定数 <see langword="Append" />。</param>
      <returns>読み書き可能、共有不可の権限を適用し、指定したモードで開くファイル。</returns>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">このファイルは読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルは既に開いています。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
      <summary>読み取り可、書き込み可、または読み書き込み可などのアクセス権を指定し、指定したモードでファイルを開きます。</summary>
      <param name="mode">ファイルを開くときのモード (<see cref="T:System.IO.FileMode" />、<see langword="Open" /> など) を指定する定数 <see langword="Append" />。</param>
      <param name="access">ファイルを <see langword="Read" />、<see langword="Write" />、または <see langword="ReadWrite" /> のいずれのアクセス権で開くかを指定する <see cref="T:System.IO.FileAccess" /> 定数。</param>
      <returns>指定したモードとアクセス権、および非共有の権限で開く <see cref="T:System.IO.FileStream" /> オブジェクト。</returns>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルは既に開いています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> が空か、空白文字だけを含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">1 つ以上の引数が null です。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>読み取り可、書き込み可、読み書き可などのアクセス権を指定し、指定したモードと共有オプションでファイルを開きます。</summary>
      <param name="mode">ファイルを開くときのモード (<see cref="T:System.IO.FileMode" />、<see langword="Open" /> など) を指定する定数 <see langword="Append" />。</param>
      <param name="access">ファイルを <see cref="T:System.IO.FileAccess" /> 、 <see langword="Read" />、または <see langword="Write" />のいずれのアクセス権で開くかを指定する <see langword="ReadWrite" /> 定数。</param>
      <param name="share">ファイルに対して他の <see cref="T:System.IO.FileShare" /> オブジェクトが持つアクセスの種類を指定する <see langword="FileStream" /> 定数。</param>
      <returns>指定したモード、アクセス権、および共有オプションで開く <see cref="T:System.IO.FileStream" /> オブジェクト。</returns>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルは既に開いています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> が空か、空白文字だけを含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">1 つ以上の引数が null です。</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenRead">
      <summary>読み取り専用の <see cref="T:System.IO.FileStream" /> を作成します。</summary>
      <returns>新しい読み取り専用の <see cref="T:System.IO.FileStream" /> オブジェクト。</returns>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルは既に開いています。</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenText">
      <summary>既存のテキスト ファイルからの読み取りを行う、UTF8 エンコーディングの <see cref="T:System.IO.StreamReader" /> を作成します。</summary>
      <returns>UTF8 エンコーディングの新しい <see langword="StreamReader" />。</returns>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが見つかりません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> は読み取り専用か、ディレクトリです。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenWrite">
      <summary>書き込み専用の <see cref="T:System.IO.FileStream" /> を作成します。</summary>
      <returns>新規または既存のファイルの書き込み専用の非共有 <see cref="T:System.IO.FileStream" /> オブジェクト。</returns>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:System.IO.FileInfo" /> オブジェクトのインスタンスを作成するときに指定されたパスが、読み取り専用であるかディレクトリです。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.FileInfo" /> オブジェクトのインスタンスを作成するときに指定されたパスが、マップされていないドライブにあるなど、正しくありません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String)">
      <summary>指定したファイルの内容を現在の <see cref="T:System.IO.FileInfo" /> オブジェクトが示すファイルと置き換え、元のファイルを削除し、置き換えられたファイルのバックアップを作成します。</summary>
      <param name="destinationFileName">現在のファイルと置き換えるファイルの名前。</param>
      <param name="destinationBackupFileName">
        <paramref name="destFileName" /> パラメーターが示すファイルのバックアップを作成するために使用するファイルの名前。</param>
      <returns>
        <paramref name="destFileName" /> パラメーターが示すファイルに関する情報をカプセル化する <see cref="T:System.IO.FileInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。  

または - 
<paramref name="destBackupFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。  
または 
<paramref name="destinationFileName" /> パラメーターで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
      <summary>指定したファイルの内容を現在の <see cref="T:System.IO.FileInfo" /> オブジェクトが示すファイルと置き換え、元のファイルを削除し、置き換えられたファイルのバックアップを作成します。  また、マージ エラーを無視するかどうかも指定します。</summary>
      <param name="destinationFileName">現在のファイルと置き換えるファイルの名前。</param>
      <param name="destinationBackupFileName">
        <paramref name="destFileName" /> パラメーターが示すファイルのバックアップを作成するために使用するファイルの名前。</param>
      <param name="ignoreMetadataErrors">置き換えられるファイルから置き換えるファイルへのマージ エラー (属性や ACL など) を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="destFileName" /> パラメーターが示すファイルに関する情報をカプセル化する <see cref="T:System.IO.FileInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。  

または - 
<paramref name="destBackupFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。  

または - 
<paramref name="destinationFileName" /> パラメーターで記述されているファイルが見つかりませんでした。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</exception>
    </member>
    <member name="M:System.IO.FileInfo.ToString">
      <summary>このパスを文字列として返します。 完全なパスには <see cref="P:System.IO.FileInfo.Name" /> プロパティを使用します。</summary>
      <returns>パスを表す文字列。</returns>
    </member>
    <member name="T:System.IO.FileSystemInfo">
      <summary>
        <see cref="T:System.IO.FileInfo" /> オブジェクトと <see cref="T:System.IO.DirectoryInfo" /> オブジェクトの両方の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor">
      <summary>
        <see cref="T:System.IO.FileSystemInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.IO.FileSystemInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を含む <see cref="T:System.Runtime.Serialization.StreamingContext" /> です。</param>
      <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Runtime.Serialization.SerializationInfo" /> が null です。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Attributes">
      <summary>現在のファイルまたはディレクトリの属性を取得または設定します。</summary>
      <returns>現在の <see cref="T:System.IO.FileAttributes" /> の <see cref="T:System.IO.FileSystemInfo" />。</returns>
      <exception cref="T:System.IO.FileNotFoundException">指定されたファイルが存在しません。 プロパティ値を設定する場合にのみスローされます。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です。 たとえば、マップされていないドライブ上にあります。 プロパティ値を設定する場合にのみスローされます。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
      <exception cref="T:System.ArgumentException">呼び出し元が、無効なファイル属性を設定しようとしました。  
 または  
 ユーザーが属性値を設定しようとしていますが、書き込みアクセス許可がありません。</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTime">
      <summary>現在のファイルまたはディレクトリの作成日時を取得または設定します。</summary>
      <returns>現在の <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの作成日時。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定したパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">呼び出し元が、無効な作成時間を設定しようとしています。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTimeUtc">
      <summary>現在のファイルまたはディレクトリの作成日時を世界協定時刻 (UTC) で取得または設定します。</summary>
      <returns>現在の <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの UTC 形式での作成日時。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定したパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">呼び出し元が、無効なアクセス時間を設定しようとしています。</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.Delete">
      <summary>ファイルまたはディレクトリを削除します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定したパスが無効です (割り当てられていないドライブであるなど)。</exception>
      <exception cref="T:System.IO.IOException">開いているハンドルがファイルまたはディレクトリに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。 このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。 詳細については、「方法 : ディレクトリとファイルを列挙する。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Exists">
      <summary>ファイルまたはディレクトリが存在するかどうかを示す値を取得します。</summary>
      <returns>ファイルまたはディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Extension">
      <summary>ファイルの拡張子部分を表す文字列を取得します。</summary>
      <returns>
        <see cref="T:System.IO.FileSystemInfo" /> 拡張子を格納している文字列。</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.FullName">
      <summary>ディレクトリまたはファイルの絶対パスを取得します。</summary>
      <returns>絶対パスを含んでいる文字列。</returns>
      <exception cref="T:System.IO.PathTooLongException">完全修飾パスとファイル名がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="F:System.IO.FileSystemInfo.FullPath">
      <summary>ディレクトリまたはファイルの絶対パスを表します。</summary>
      <exception cref="T:System.IO.PathTooLongException">完全修飾パスがシステム定義の最大長を超えています。</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ファイル名と追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を含む <see cref="T:System.Runtime.Serialization.StreamingContext" /> です。</param>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTime">
      <summary>現在のファイルまたはディレクトリに最後にアクセスした時刻を取得または設定します。</summary>
      <returns>現在のファイルまたはディレクトリに最後にアクセスした時刻。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">呼び出し元が、無効なアクセス時間を設定しようとしています。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTimeUtc">
      <summary>現在のファイルまたはディレクトリに最後にアクセスした時刻を世界協定時刻 (UTC) で取得または設定します。</summary>
      <returns>現在のファイルまたはディレクトリに最後にアクセスした UTC 時刻。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">呼び出し元が、無効なアクセス時間を設定しようとしています。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTime">
      <summary>現在のファイルまたはディレクトリに最後に書き込みが行われた時刻を取得または設定します。</summary>
      <returns>現在のファイルに最後に書き込みが行われた時刻。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">呼び出し元が、無効な書き込み時間を設定しようとしています。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTimeUtc">
      <summary>現在のファイルまたはディレクトリに最後に書き込みが行われた時刻を世界協定時刻 (UTC) で取得または設定します。</summary>
      <returns>現在のファイルに最後に書き込みが行われた UTC 時刻。</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> がデータを初期化できません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">現在のオペレーティング システムは Windows NT 以降ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">呼び出し元が、無効な書き込み時間を設定しようとしています。</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Name">
      <summary>ファイルの場合は、そのファイルの名前を取得します。 ディレクトリの場合は、階層が存在する場合は、その階層内にある最後のディレクトリの名前を取得します。 それ以外の場合は、<see langword="Name" /> プロパティはそのディレクトリの名前を取得します。</summary>
      <returns>親ディレクトリの名前、階層内にある最後のディレクトリの名前、またはファイル名拡張子を含むファイル名を示す文字列。</returns>
    </member>
    <member name="F:System.IO.FileSystemInfo.OriginalPath">
      <summary>パスは、以前にユーザーが相対パスまたは絶対パスで指定したものです。</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.Refresh">
      <summary>オブジェクトの状態を更新します。</summary>
      <exception cref="T:System.IO.IOException">ディスク ドライブなどのデバイスの準備ができていません。</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.ToString">
      <summary>元のパスを返します。 完全なパスの <see cref="P:System.IO.FileSystemInfo.FullName" /> または <see cref="P:System.IO.FileSystemInfo.Name" /> のプロパティ、またはファイル名またはディレクトリ名を使用します。</summary>
      <returns>元のパスを含む文字列。</returns>
    </member>
    <member name="T:System.IO.MatchCasing" />
    <member name="F:System.IO.MatchCasing.CaseInsensitive">
      <summary>文字の大文字と小文字の区別を無視する一致。</summary>
    </member>
    <member name="F:System.IO.MatchCasing.CaseSensitive">
      <summary>文字の大文字と小文字の区別を無視しない一致。</summary>
    </member>
    <member name="F:System.IO.MatchCasing.PlatformDefault">
      <summary>指定されたプラットフォームでの既定の大文字と小文字の区別を使用する一致。</summary>
    </member>
    <member name="T:System.IO.MatchType" />
    <member name="F:System.IO.MatchType.Simple">
      <summary>'*' および '?' ワイルドカードを使用して一致を調べます。</summary>
    </member>
    <member name="F:System.IO.MatchType.Win32">
      <summary>Win32 DOS スタイルの一致セマンティクスを使用して照合します。 '*'、'?'、'&lt;'、'&gt;'、'"' はすべて、ワイルドカードと見なされます。</summary>
    </member>
    <member name="T:System.IO.SearchOption">
      <summary>現在のディレクトリを検索するのか、または現在のディレクトリとすべてのサブディレクトリを検索するのかを指定します。</summary>
    </member>
    <member name="F:System.IO.SearchOption.AllDirectories">
      <summary>検索操作に現在のディレクトリとすべてのサブディレクトリを含めます。 このオプションは、検索範囲に、マウントされたドライブやシンボリック リンクのようなリパース ポイントを含めます。</summary>
    </member>
    <member name="F:System.IO.SearchOption.TopDirectoryOnly">
      <summary>検索操作に現在のディレクトリのみを含めます。</summary>
    </member>
  </members>
</doc>