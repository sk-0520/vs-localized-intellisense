<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>現在のアプリケーションに関するプロパティ、メソッド、およびイベントを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを変更します。</summary>
      <param name="cultureName">
        <see langword="String" />。 カルチャの名前を表す文字列。 使用可能な名前の一覧については、「<see cref="T:System.Globalization.CultureInfo" />」を参照してください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> が有効なカルチャ名ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを変更します。</summary>
      <param name="cultureName">
        <see langword="String" />。 カルチャの名前を表す文字列。 使用可能な名前の一覧については、「<see cref="T:System.Globalization.CultureInfo" />」を参照してください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> が有効なカルチャ名ではありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを取得します。</summary>
      <returns>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>指定した環境変数の値を返します。</summary>
      <param name="name">環境変数の名前を保持する <see langword="String" />。</param>
      <returns>環境変数 <paramref name="name" /> の値を保持する <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> で指定された環境変数が存在しません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元のコードに <see langword="Read" /> アクセスを持つ <see cref="T:System.Security.Permissions.EnvironmentPermission" /> がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>バージョン番号、説明、読み込まれているアセンブリなど、アプリケーションのアセンブリに関する情報を取得するためのプロパティを提供するオブジェクトを取得します。</summary>
      <returns>現在のアプリケーションの <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを取得します。</summary>
      <returns>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>バージョン番号、説明、読み込まれているアセンブリなど、アプリケーションに関する情報を取得するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>指定したアセンブリ情報を使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />。 情報を取得するアセンブリです。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>アプリケーションのアセンブリ ファイル名のうち、拡張子を除いた部分を取得します。</summary>
      <returns>ファイル名を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>アプリケーションに関連付けられている会社名を取得します。</summary>
      <returns>アプリケーションに関連付けられた会社名を保持する <see langword="String" />。</returns>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 属性がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>アプリケーションに関連付けられている著作権表記を取得します。</summary>
      <returns>アプリケーションに関連付けられた著作権表記を保持する <see langword="String" />。</returns>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 属性がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>アプリケーションに関する説明を取得します。</summary>
      <returns>アプリケーションの説明を保持する <see langword="String" />。</returns>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 属性がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>アプリケーションが格納されているディレクトリを取得します。</summary>
      <returns>アプリケーションが格納されているディレクトリを保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>アプリケーションによって読み込まれたすべてのアセンブリのコレクションを取得します。</summary>
      <returns>アプリケーションによって読み込まれたすべてのアセンブリを保持する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> の <see cref="T:System.Reflection.Assembly" />。</returns>
      <exception cref="T:System.AppDomainUnloadedException">アプリケーション ドメインが読み込まれていません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>アプリケーションに関連付けられている製品名を取得します。</summary>
      <returns>アプリケーションに関連付けられた製品名を保持する <see langword="String" />。</returns>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyProductAttribute" /> 属性がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>現在のスタック トレース情報を取得します。</summary>
      <returns>現在のスタック トレース情報を保持する <see langword="String" />。 戻り値が <see cref="F:System.String.Empty" /> になる場合もあります。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">要求されたスタック トレース情報が指定範囲外です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>アプリケーションに関連付けられているタイトルを取得します。</summary>
      <returns>アプリケーションに関連付けられた <see cref="T:System.Reflection.AssemblyTitleAttribute" /> を保持する <see langword="String" />。</returns>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 属性がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>アプリケーションに関連付けられている商標表記を取得します。</summary>
      <returns>アプリケーションに関連付けられた商標表記を保持する <see langword="String" />。</returns>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 属性がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>アプリケーションのバージョン番号を取得します。</summary>
      <returns>アプリケーションのバージョン番号を保持する <see cref="T:System.Version" /> オブジェクト。</returns>
      <exception cref="T:System.Security.SecurityException">アプリケーションがアセンブリのバージョンにアクセスするのに必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>プロセス コンテキストに割り当てられる物理メモリ量を取得します。</summary>
      <returns>プロセス コンテキストに割り当てられる物理メモリのバイト数を保持する <see langword="Long" />。</returns>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>現在のアプリケーションに関するプロパティ、メソッド、およびイベントを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>現在のアプリケーションのコマンド ライン引数が文字列として格納されたコレクションを取得します。</summary>
      <returns>現在のアプリケーションのコマンド ライン引数が文字列として格納された、<see langword="String" /> の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>現在のアプリケーションのコマンド ライン引数として使用する値を設定します。</summary>
      <returns>
        <see langword="String" /> の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。現在のアプリケーションのコマンド ライン引数として使用される文字列が格納されます。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>
        <see langword="My.Application.Startup" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="args">アプリケーションのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>アプリケーションのコマンド ライン引数を取得します。</summary>
      <returns>アプリケーションのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>
        <see langword="My.Application.StartupNextInstance" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="args">後続のアプリケーション インスタンスのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</param>
      <param name="bringToForegroundFlag">例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示す <see cref="T:System.Boolean" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示します。</summary>
      <returns>例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>後続のアプリケーション インスタンスのコマンド ライン引数を取得します。</summary>
      <returns>後続のアプリケーション インスタンスのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>
        <see langword="My.Application.UnhandledException" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exitApplication">例外ハンドラーの終了時にアプリケーションを終了するかどうかを示す <see cref="T:System.Boolean" />。</param>
      <param name="exception">発生した <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>例外ハンドラーの終了時にアプリケーションを終了するかどうかを示します。</summary>
      <returns>例外ハンドラーの終了時にアプリケーションを終了するかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>現在のユーザーに関する情報にアクセスします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>ロールベースのセキュリティに関する、現在のプリンシパルを取得または設定します。</summary>
      <returns>セキュリティ コンテキストを表す <see cref="T:System.Security.Principal.IPrincipal" /> 値。</returns>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、プリンシパルを設定するために必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>現在のユーザーを表すプリンシパル オブジェクトを取得または設定します。</summary>
      <returns>現在のユーザーを表す <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>ユーザーが認証されているかどうかを示す値を取得します。</summary>
      <returns>ユーザーが認証されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>現在のユーザーが、指定したロールに属しているかどうかを確認します。</summary>
      <param name="role">メンバーシップを確認する対象のロールの名前。</param>
      <returns>現在のユーザーが指定されたロールのメンバーである場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>現在のユーザーの名前を取得します。</summary>
      <returns>
        <see langword="String" />。 現在のユーザーの名前。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">
        <see langword="Shell" /> 関数を呼び出すときに、実行されるプログラムで使用するウィンドウ スタイルを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">ウィンドウは非表示になり、フォーカスは非表示ウィンドウに渡されます。 このメンバーは、Visual Basic 定数の <see langword="vbHide" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">ウィンドウはフォーカスを持った状態で最大化されます。 このメンバーは、Visual Basic 定数の <see langword="vbMaximizedFocus" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">ウィンドウはフォーカスを持った状態でアイコンとして表示されます。 このメンバーは、Visual Basic 定数の <see langword="vbMinimizedFocus" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">ウィンドウはアイコンとして表示されます。 現在アクティブなウィンドウはアクティブなままです。 このメンバーは、Visual Basic 定数の <see langword="vbMinimizedNoFocus" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">ウィンドウはフォーカスを保持し、元のサイズと位置に戻されます。 このメンバーは、Visual Basic 定数の <see langword="vbNormalFocus" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">ウィンドウは最後に表示されたときのサイズと位置に戻されます。 現在アクティブなウィンドウはアクティブなままです。 このメンバーは、Visual Basic 定数の <see langword="vbNormalNoFocus" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">
        <see langword="CallByName" /> 関数を呼び出すときに呼び出すプロシージャの種類を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">プロパティ値を取得します。  このメンバーは、Visual Basic 定数の <see langword="vbGet" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">オブジェクトのプロパティ値を設定します。 このメンバーは、Visual Basic 定数の <see langword="vbLet" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">メソッドを起動します。  このメンバーは、Visual Basic 定数の <see langword="vbMethod" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">プロパティ値を設定します。  このメンバーは、Visual Basic 定数の <see langword="vbSet" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Visual Basic の <see langword="Collection" /> は、単位として参照できる項目の順序付けされたセットです。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">Visual Basic の新しい <see cref="T:Microsoft.VisualBasic.Collection" /> オブジェクトを作成して返します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">要素を <see langword="Collection" /> オブジェクトに追加します。</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">必須です。 コレクションに追加する要素を指定する任意の型のオブジェクトです。</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">任意。 コレクション内の新しい要素にアクセスするときに位置インデックスの代わりに使用できるキー文字列を指定する、一意の <see langword="String" /> 型の式。</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">任意。 コレクション内の位置を相対的に示す式。 追加される要素は、コレクション内で <paramref name="Before" /> 引数によって識別された要素の前に配置されます。 <paramref name="Before" /> が数式である場合、値の範囲は 1 以上でコレクションの <see cref="P:Microsoft.VisualBasic.Collection.Count" /> プロパティ値以下である必要があります。 <paramref name="Before" /> が <see langword="String" /> 型の式である場合は、参照される要素がコレクションに追加されたときに指定されたキー文字列に対応する必要があります。 <paramref name="Before" /> と <paramref name="After" /> の両方を指定することはできません。</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">任意。 コレクション内の位置を相対的に示す式。 追加される要素は、コレクション内で <paramref name="After" /> 引数によって識別された要素の後に配置されます。 <paramref name="After" /> が数式である場合、値の範囲は 1 以上でコレクションの <see langword="Count" /> プロパティ値以下である必要があります。 <paramref name="After" /> が <see langword="String" /> 型の式である場合は、参照される要素がコレクションに追加されたときに指定されたキー文字列に対応する必要があります。 <paramref name="Before" /> と <paramref name="After" /> の両方を指定することはできません。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">Visual Basic の <see langword="Collection" /> オブジェクトの要素をすべて削除します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">Visual Basic の <see langword="Collection" /> オブジェクトに特定のキーを持つ要素が含まれているかどうかを示す値を返します。</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">必須です。 コレクションの要素を検索するキーを指定する <see langword="String" /> 型の式。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Visual Basic の <see langword="Collection" /> オブジェクトに特定のキーを持つ要素が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">コレクション内の要素の数を取得します。</summary>
      <returns vsli:raw="The number of elements in a collection.">コレクション内の要素の数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">コレクションを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" /> オブジェクトの特定の要素を、位置またはキーに基づいて取得します。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">コレクションの要素の位置を指定する数式。 <paramref name="Index" /> は 1 からコレクションの <see cref="P:Microsoft.VisualBasic.Collection.Count" /> プロパティの値までの数字であることが必要です。 または、(B) コレクションの要素の位置またはキー文字列を指定する <see langword="Object" /> 型の式。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">位置またはキーに<see langword="Collection" />よってオブジェクトの特定の要素。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" /> オブジェクトの特定の要素を、位置またはキーに基づいて取得します。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">コレクションの要素の位置を指定する数式。 <paramref name="Index" /> は 1 からコレクションの <see cref="P:Microsoft.VisualBasic.Collection.Count" /> プロパティの値までの数字であることが必要です。 または、(B) コレクションの要素の位置またはキー文字列を指定する <see langword="Object" /> 型の式。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">位置またはキーに<see langword="Collection" />よってオブジェクトの特定の要素。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" /> オブジェクトの特定の要素を、位置またはキーに基づいて取得します。</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">コレクションの要素にアクセスするときに位置インデックスの代わりに使用できるキー文字列を指定する、一意の <see langword="String" /> 型の式。 <paramref name="Key" /> は、要素がコレクションに追加されたときに指定された <paramref name="Key" /> 引数に対応します。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">位置またはキーに<see langword="Collection" />よってオブジェクトの特定の要素。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">
        <see langword="Collection" /> オブジェクトから要素を削除します。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">コレクションの要素の位置を指定する数式。 <paramref name="Index" /> は 1 からコレクションの <see cref="P:Microsoft.VisualBasic.Collection.Count" /> プロパティの値までの数字であることが必要です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">
        <see langword="Collection" /> オブジェクトから要素を削除します。</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">コレクションの要素にアクセスするときに位置インデックスの代わりに使用できるキー文字列を指定する、一意の <see langword="String" /> 型の式。 <paramref name="Key" /> は、要素がコレクションに追加されたときに指定された <paramref name="Key" /> 引数に対応します。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">
        <see langword="ComClassAttribute" /> 属性は、クラスを COM オブジェクトとして公開できるようにするメタデータの追加をコンパイラに指示します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">クラスを一意に識別するために使用する <see langword="ClassID" /> プロパティの値を初期化します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">クラスを一意に識別するために使用する <see langword="ClassID" /> プロパティの値を初期化します。</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">インターフェイスを一意に識別するために使用する <see langword="InterfaceID" /> プロパティの値を初期化します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">クラスを一意に識別するために使用する <see langword="ClassID" /> プロパティの値を初期化します。</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">インターフェイスを一意に識別するために使用する <see langword="InterfaceID" /> プロパティの値を初期化します。</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">イベントを一意に識別するために使用する <see langword="EventID" /> プロパティの値を初期化します。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">クラスを一意に識別するために使用するクラス ID を取得します。</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">読み取り専用。 COM オブジェクトが作成されるときに、クラスを一意に識別するためにコンパイラによって使用される文字列。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">イベントを一意に識別するときに使用するイベント ID を取得します。</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">読み取り専用。 COM オブジェクトが作成されるときに、クラスのイベントを一意に識別するためにコンパイラによって使用される文字列。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">インターフェイスを一意に識別するときに使用するインターフェイス ID を取得します。</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">読み取り専用。 COM オブジェクトが作成されるときに、クラスのインターフェイスを一意に識別するためにコンパイラによって使用される文字列。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">COM インターフェイス名がクラスまたは基本クラスの別のメンバーをシャドウすることを示します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">COM インターフェイス名がクラスまたは基本クラスの別のメンバーをシャドウすることを示す <see langword="Boolean" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">比較関数を呼び出すときに、文字列を比較する方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">バイナリ比較を実行します。 このメンバーは、Visual Basic 定数の <see langword="vbBinaryCompare" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">テキスト比較を実行します。 このメンバーは、Visual Basic 定数の <see langword="vbTextCompare" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Boolean" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">必須です。 <see langword="Boolean" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Boolean" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Boolean" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">必須です。 <see langword="Boolean" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Boolean" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Byte" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">必須です。 <see langword="Byte" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Byte" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Byte" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">必須です。 <see langword="Byte" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Byte" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="CharArray" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">必須です。 <see langword="CharArray" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="CharArray" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="CharArray" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">必須です。 <see langword="CharArray" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="CharArray" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Char" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">必須です。 <see langword="Char" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Char" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Char" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">必須です。 <see langword="Char" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Char" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">さまざまな型変換を実行するメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">オブジェクトを指定された型に変換します。</summary>
      <param name="Expression" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">変換後のオブジェクトの型。</param>
      <returns vsli:raw="An object of the specified target type.">指定した型のオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">オブジェクトを指定された型に変換します。</summary>
      <param name="Expression" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">変換後のオブジェクトの型。</param>
      <returns vsli:raw="An object of the specified target type.">指定した型のオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">指定されたバイト数の <see cref="T:System.Char" /> 値を文字列に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">変換する <see langword="Char" /> 値。</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">
        <see langword="Char" /> 値のバイト数。</param>
      <returns vsli:raw="The string representation of the specified value.">指定した値の文字列形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">
        <see cref="T:System.Char" /> 配列を文字列に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">変換対象の <see langword="Char" /> 配列。</param>
      <returns vsli:raw="The string representation of the specified array.">指定した配列の文字列形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">
        <see cref="T:System.Char" /> 配列のサブセットを文字列に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">変換対象の <see langword="Char" /> 配列。</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">0 から始まるインデックスでの開始位置。</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">サブセットのバイト単位の長さ。</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">指定した配列の、開始位置から指定した長さまでの文字列形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">オブジェクトを <see cref="T:System.Boolean" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 値。 オブジェクトが null の場合は <see langword="False" /> を返し、それ以外の場合は <see langword="True" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">文字列を <see cref="T:System.Boolean" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 値。 文字列が null の場合は <see langword="False" /> を返し、それ以外の場合は <see langword="True" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">オブジェクトを <see cref="T:System.Byte" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">オブジェクトの <see langword="Byte" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">文字列を <see cref="T:System.Byte" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">文字列の <see langword="Byte" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">オブジェクトを <see cref="T:System.Char" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">オブジェクトの <see langword="Char" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">文字列を <see cref="T:System.Char" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">文字列の <see langword="Char" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">オブジェクトを 1 次元の <see cref="T:System.Char" /> 配列に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">1 次元の <see langword="Char" /> 配列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">文字列を 1 次元の <see cref="T:System.Char" /> 配列に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">1 次元の <see langword="Char" /> 配列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">オブジェクトを <see cref="T:System.DateTime" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">オブジェクトの <see langword="DateTime" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">文字列を <see cref="T:System.DateTime" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">文字列の <see langword="DateTime" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">
        <see cref="T:System.Boolean" /> 値を <see cref="T:System.Decimal" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">変換するブール値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">ブール値の <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">オブジェクトを <see cref="T:System.Decimal" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">オブジェクトの <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">文字列を <see cref="T:System.Decimal" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">文字列の <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">オブジェクトを <see cref="T:System.Double" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">オブジェクトの <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">文字列を <see cref="T:System.Double" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">文字列の <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">オブジェクトをジェネリック型 <paramref name="T" /> に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">変換後の <paramref name="Value" /> の型。</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">ジェネリック型 <paramref name="T" /> の構造体またはオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">オブジェクトを整数値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">オブジェクトの <see langword="int" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">文字列を整数値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">文字列の <see langword="int" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">オブジェクトを <see langword="Long" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">オブジェクトの <see langword="Long" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">文字列を <see langword="Long" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">文字列の <see langword="Long" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">オブジェクトを <see cref="T:System.SByte" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">オブジェクトの <see langword="SByte" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">文字列を <see cref="T:System.SByte" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">文字列の <see langword="SByte" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">オブジェクトを <see langword="Short" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">オブジェクトの <see langword="Short" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">文字列を <see langword="Short" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">文字列の <see langword="Short" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">オブジェクトを <see cref="T:System.Single" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">オブジェクトの <see langword="Single" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see cref="T:System.String" /> を <see cref="T:System.Single" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">文字列の <see langword="Single" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Boolean" /> 値を <see cref="T:System.String" /> に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">変換する <see langword="Boolean" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Boolean" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Byte" /> 値を <see cref="T:System.String" /> に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">変換する <see langword="Byte" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Byte" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Char" /> 値を <see cref="T:System.String" /> に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">変換する <see langword="Char" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Char" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.DateTime" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">変換する <see langword="DateTime" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="DateTime" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Decimal" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">変換する <see langword="Decimal" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Decimal" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">指定された数値書式を使用して、<see cref="T:System.Decimal" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">変換する <see langword="decimal" /> 値。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> に従って使用する数値書式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Decimal" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Double" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">変換する <see langword="Double" /> 値。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Double" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">指定された数値書式を使用して、<see cref="T:System.Double" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">変換する <see langword="Double" /> 値。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> に従って使用する数値書式。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Double" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="Short" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">変換する <see langword="Short" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Short" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">整数値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">変換する <see langword="int" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="int" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="Long" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">変換する <see langword="Long" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Long" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">オブジェクトを <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">オブジェクトの <see langword="String" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Single" /> 値 (単精度浮動小数点数) を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">変換する <see langword="Single" /> 値。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Single" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">指定された数値書式を使用して、<see cref="T:System.Single" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">変換する <see langword="Single" /> 値。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> に従って使用する数値書式。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Single" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="uint" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">変換する <see langword="Uint" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Uint" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="Ulong" /> 値を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">変換する <see langword="Ulong" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">
        <see langword="String" /> 値の <see langword="Ulong" /> 表現。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">オブジェクトを <see langword="Uint" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">オブジェクトの <see langword="Uint" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">文字列を <see langword="Uint" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">文字列の <see langword="Uint" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">オブジェクトを <see langword="Ulong" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">オブジェクトの <see langword="Ulong" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">文字列を <see langword="Ulong" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">文字列の <see langword="Ulong" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">オブジェクトを <see langword="Ushort" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">オブジェクトの <see langword="Ushort" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">文字列を <see langword="Ushort" /> 値に変換します。</summary>
      <param name="Value" vsli:raw="The string to convert.">変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">文字列の <see langword="Ushort" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Date" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必須です。 <see langword="Date" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Date" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Date" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必須です。 <see langword="Date" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Date" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">指定した文字列とカルチャ情報に対応する <see langword="Date" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必須です。 <see langword="Date" /> 値に変換する文字列。</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">必須です。 カルチャに応じて日付の値を書式設定および表示する方法を定義する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Date" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">指定した <see langword="Decimal" /> 値に対応する <see langword="Boolean" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必須です。 <see langword="Boolean" /> に変換する <see langword="Decimal" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">指定したオブジェクトと数値書式情報に対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換するオブジェクト。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">指定した文字列と数値書式情報に対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換する文字列。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">指定した文字列と数値書式情報に対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換する文字列。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Decimal" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">クラスに適用される場合、コンパイラは、既定の代理コンストラクターからコンポーネント初期化メソッドを暗黙のうちに呼び出します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> 属性の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換するオブジェクト。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">指定した文字列と数値書式情報に対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換する文字列。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Double" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">指定した文字列と数値書式情報に対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換する文字列。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Double" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">Visual Basic コンパイラは、静的なローカルを初期化しているときにこのクラスを使用します。これは、コードから直接呼び出すためのものではありません。 静的ローカル変数が初期化に失敗した場合、この型の例外がスローされます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Integer" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">必須です。 <see langword="Integer" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Integer" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Integer" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">必須です。 <see langword="Integer" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Integer" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">オブジェクトのメソッドの遅延バインディングによる呼び出しを実行します。</summary>
      <param name="o" vsli:raw="The object to call a method on.">メソッドを呼び出すオブジェクト。</param>
      <param name="objType" vsli:raw="The type of the object.">オブジェクトの型。</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">呼び出す <paramref name="o" /> のメソッド名。</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">メソッドに渡すパラメーター値の配列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">
        <see langword="Boolean" /> 値の配列。<see langword="True" /> は、対応するパラメーターが <see langword="ByRef" /> で渡されることを示します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">オブジェクトからの遅延バインディング値を返します。</summary>
      <param name="o" vsli:raw="The object to return the value from.">値を返すオブジェクト。</param>
      <param name="objType" vsli:raw="The type of the object.">オブジェクトの型。</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">値を取得する <paramref name="o" /> のメンバー名。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" /> が 1 次元配列または多次元配列の場合は、<paramref name="o" /> 内での位置を指定する 1 つ以上のインデックス値の配列。または、オブジェクト <paramref name="o" /> に渡す引数値。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">
        <see langword="Boolean" /> 値の配列。<see langword="True" /> は、対応するパラメーターが <see langword="ByRef" /> で渡されることを示します。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">
        <paramref name="o" /> が配列の場合は、<paramref name="o" /> で指定した位置の <paramref name="args" /> の値。 <paramref name="o" /> がオブジェクトの場合は、<paramref name="o" /> の名前付きパラメーターとそれに関連する <paramref name="paramnames" /> の値を使用して呼び出された <paramref name="args" /> の戻り値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">指定されたインデックスまたはパラメーターを使用して、オブジェクトから遅延バインディング値を返します。</summary>
      <param name="o" vsli:raw="The object to return the value from.">値を返すオブジェクト。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" /> が 1 次元配列または多次元配列の場合は、<paramref name="o" /> 内での位置を指定する 1 つ以上のインデックス値の配列。または、オブジェクト <paramref name="o" /> に渡す引数値。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">
        <paramref name="o" /> が配列の場合は、<paramref name="o" /> で指定した位置の <paramref name="args" /> の値。 <paramref name="o" /> がオブジェクトの場合は、<paramref name="o" /> の名前付きパラメーターとそれに関連する <paramref name="paramnames" /> の値を使用して呼び出された <paramref name="args" /> の戻り値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">指定されたパラメーターを使用して、オブジェクトの遅延バインディング値を設定します。</summary>
      <param name="o" vsli:raw="The object to set the value for.">値を設定するオブジェクト。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" /> が 1 次元配列または多次元配列の場合は、<paramref name="o" /> 内での位置を指定する 1 つ以上のインデックス値の配列。または、オブジェクト <paramref name="o" /> に渡す引数値。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">指定されたパラメーターを使用して、オブジェクトの遅延バインディング値を設定します。</summary>
      <param name="o" vsli:raw="The object to set the value for.">値を設定するオブジェクト。</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">オブジェクト <paramref name="o" /> に渡す 1 つ以上のパラメーター値の配列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">設定するメンバーが見つからないときにスローされる例外を抑制する場合は <see langword="True" />。</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <paramref name="o" /> を遅延バインディング式の結果として指定する場合は <see langword="True" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">指定されたパラメーターを使用して、オブジェクトのメンバーの遅延バインディング値を設定します。</summary>
      <param name="o" vsli:raw="The object to set the member value for.">メンバーの値を設定するオブジェクト。</param>
      <param name="objType" vsli:raw="The type of the object.">オブジェクトの型。</param>
      <param name="name" vsli:raw="The member name to set.">設定するメンバーの名前。</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" /> のメンバーに渡す 1 つ以上のパラメーター値の配列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">指定されたパラメーターを使用して、オブジェクトのメンバーの遅延バインディング値を設定します。</summary>
      <param name="o" vsli:raw="The object to set the member value for.">メンバーの値を設定するオブジェクト。</param>
      <param name="objType" vsli:raw="The type of the object.">オブジェクトの型。</param>
      <param name="name" vsli:raw="The member name to set.">設定するメンバーの名前。</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" /> のメンバーに渡す 1 つ以上のパラメーター値の配列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 配列内の値を渡すパラメーターの名前を格納した配列。</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">設定するメンバーが見つからないときにスローされる例外を抑制する場合は <see langword="True" />。</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <paramref name="o" /> を遅延バインディング式の結果として指定する場合は <see langword="True" />。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">このクラスには、Visual Basic コンパイラが使用して、Like Operator に対する操作を実行するヘルパーが用意されています。 これは、コードから直接呼び出すためのものではありません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">指定された 2 つのオブジェクトに対してバイナリ文字列比較またはテキスト文字列比較を実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Source" vsli:raw="The string to compare.">比較対象の文字列。</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">
        <paramref name="Source" /> と比較する文字列。</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">テキスト比較を使用するかどうかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 列挙体。 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> の場合、このメソッドはテキスト比較を使用します。<see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> の場合、このメソッドはバイナリ比較を使用します。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">文字列が一致する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">指定された 2 つの文字列に対してバイナリ文字列比較またはテキスト文字列比較を実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Source" vsli:raw="The string to compare.">比較対象の文字列。</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">
        <paramref name="Source" /> と比較する文字列。</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">テキスト比較を使用するかどうかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 列挙体。 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> の場合、このメソッドはテキスト比較を使用します。<see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> の場合、このメソッドはバイナリ比較を使用します。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">文字列が一致する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Long" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">必須です。 <see langword="Long" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Long" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Long" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">必須です。 <see langword="Long" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Long" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">このクラスには、Visual Basic コンパイラが遅延バインディング呼び出しに使用するヘルパーが用意されています。これは、コードから直接呼び出すためのものではありません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">遅延バインディング メソッドまたは関数呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">戻り値を無視できるかどうかを示す <see langword="Boolean" /> 値。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの取得またはフィールド アクセスの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">設定操作を有効にするかどうかを決定するために使用する <see langword="Boolean" /> 値。 プロパティまたはフィールドに中間の値が設定されている場合は <see langword="True" /> を設定します。それ以外の場合は <see langword="False" /> を設定します。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">遅延参照の基本参照を <see langword="Boolean" /> にするかどうかを指定する <see langword="RValue" /> 値。 遅延参照の基本参照を <see langword="True" /> にする場合は <see langword="RValue" /> に設定します。これにより、値型の <see langword="RValues" /> のフィールドに対して遅延割り当てを実行すると、実行時例外を生成できます。 それ以外の場合は <see langword="False" /> に設定します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">遅延バインディングされた既定のプロパティ/フィールドの取得、または遅延バインディングされた既定のメソッド/関数の呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。 <paramref name="Instance" /> の型が <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> の場合、動的言語ランタイムを使用してバインドします。それ以外の場合は、標準の遅延バインディングを実行します。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">エラーが発生した場合に例外をスローするかどうかを指定するのに使用される <see langword="Boolean" /> 値。 例外をスローするには <see langword="True" /> に設定します。 エラーが発生した場合に <see langword="False" /> を返すには、<see langword="Nothing" /> に設定します。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">遅延バインディングされた既定のプロパティ/フィールドの取得、または遅延バインディングされた既定のメソッド/関数の呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">エラーが発生した場合に例外をスローするかどうかを指定するのに使用される <see langword="Boolean" /> 値。 例外をスローするには <see langword="True" /> に設定します。 エラーが発生した場合に <see langword="False" /> を返すには、<see langword="Nothing" /> に設定します。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">設定操作を有効にするかどうかを決定するために使用する <see langword="Boolean" /> 値。 プロパティまたはフィールドに中間の値が設定されている場合は <see langword="True" /> を設定します。それ以外の場合は <see langword="False" /> を設定します。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">遅延参照の基本参照を <see langword="Boolean" /> にするかどうかを指定する <see langword="RValue" /> 値。 遅延参照の基本参照を <see langword="True" /> にする場合は <see langword="RValue" /> に設定します。これにより、値型の <see langword="RValues" /> のフィールドに対して遅延割り当てを実行すると、実行時例外を生成できます。 それ以外の場合は <see langword="False" /> に設定します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">遅延バインディング メソッドまたは関数呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Type" vsli:raw="The type of the call object.">通知オブジェクトの型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引数型の配列。引数型を渡す汎用呼び出しにのみ使用します。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">引数が <see langword="Boolean" /> パラメーターと一致する呼び出しサイトと通信するために遅延バインダーが使用する、<see langword="ByRef" /> 値の配列。 それぞれの <see langword="True" /> 値は、引数が一致したため <see langword="LateCall" /> に対する呼び出しが完了した後でそれをコピーする必要があることを示します。</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">戻り値を無視できるかどうかを示す <see langword="Boolean" /> 値。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">既定のメソッドまたは関数の、遅延バインディングによる呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">エラーが発生した場合に例外をスローするかどうかを指定するのに使用される <see langword="Boolean" /> 値。 例外をスローするには <see langword="True" /> に設定します。 エラーが発生した場合に <see langword="False" /> を返すには、<see langword="Nothing" /> に設定します。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの取得またはフィールド アクセスの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Type" vsli:raw="The type of the call object.">通知オブジェクトの型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引数型の配列。引数型を渡す汎用呼び出しにのみ使用します。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">引数が <see langword="Boolean" /> パラメーターと一致する呼び出しサイトと通信するために遅延バインダーが使用する、<see langword="ByRef" /> 値の配列。 それぞれの <see langword="True" /> 値は、引数が一致したため <see langword="LateCall" /> に対する呼び出しが完了した後でそれをコピーする必要があることを示します。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">既定のプロパティまたはフィールドの、遅延バインディングによる取得を実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">エラーが発生した場合に例外をスローするかどうかを指定するのに使用される <see langword="Boolean" /> 値。 例外をスローするには <see langword="True" /> に設定します。 エラーが発生した場合に <see langword="False" /> を返すには、<see langword="Nothing" /> に設定します。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの取得またはフィールド アクセスの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <returns vsli:raw="An instance of the call object.">通知オブジェクトのインスタンス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">設定操作を有効にするかどうかを決定するために使用する <see langword="Boolean" /> 値。 プロパティまたはフィールドに中間の値が設定されている場合は <see langword="True" /> を設定します。それ以外の場合は <see langword="False" /> を設定します。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">遅延参照の基本参照を <see langword="Boolean" /> にするかどうかを指定する <see langword="RValue" /> 値。 遅延参照の基本参照を <see langword="True" /> にする場合は <see langword="RValue" /> に設定します。これにより、値型の <see langword="RValues" /> のフィールドに対して遅延割り当てを実行すると、実行時例外を生成できます。 それ以外の場合は <see langword="False" /> に設定します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Type" vsli:raw="The type of the call object.">通知オブジェクトの型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引数型の配列。引数型を渡す汎用呼び出しにのみ使用します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Type" vsli:raw="The type of the call object.">通知オブジェクトの型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引数型の配列。引数型を渡す汎用呼び出しにのみ使用します。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">設定操作を有効にするかどうかを決定するために使用する <see langword="Boolean" /> 値。 プロパティまたはフィールドに中間の値が設定されている場合は <see langword="True" /> を設定します。それ以外の場合は <see langword="False" /> を設定します。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">遅延参照の基本参照を <see langword="Boolean" /> にするかどうかを指定する <see langword="RValue" /> 値。 遅延参照の基本参照を <see langword="True" /> にする場合は <see langword="RValue" /> に設定します。これにより、値型の <see langword="RValues" /> のフィールドに対して遅延割り当てを実行すると、実行時例外を生成できます。 それ以外の場合は <see langword="False" /> に設定します。</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">呼び出されるプロシージャの型を表す、<see cref="T:Microsoft.VisualBasic.CallType" /> 型の列挙体のメンバーです。 CallType の値は、<see langword="Method" />、<see langword="Get" />、<see langword="Set" /> のいずれかになります。 <see langword="Set" /> のみ使用します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">遅延バインディング プロパティの設定またはフィールド書き込みの呼び出しを実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">プロパティまたはメソッドを公開する通知オブジェクトのインスタンス。</param>
      <param name="Type" vsli:raw="The type of the call object.">通知オブジェクトの型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">通知オブジェクトのプロパティまたはメソッドの名前。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">呼び出されるプロパティまたはメソッドに渡す引数を格納する配列。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引数名の配列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引数型の配列。引数型を渡す汎用呼び出しにのみ使用します。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">設定操作を有効にするかどうかを決定するために使用する <see langword="Boolean" /> 値。 プロパティまたはフィールドに中間の値が設定されている場合は <see langword="True" /> を設定します。それ以外の場合は <see langword="False" /> を設定します。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">遅延参照の基本参照を <see langword="Boolean" /> にするかどうかを指定する <see langword="RValue" /> 値。 遅延参照の基本参照を <see langword="True" /> にする場合は <see langword="RValue" /> に設定します。これにより、値型の <see langword="RValues" /> のフィールドに対して遅延割り当てを実行すると、実行時例外を生成できます。 それ以外の場合は <see langword="False" /> に設定します。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">Visual Basic コンパイラは、オブジェクトのフロー制御にこのクラスを使用します。これは、コードから直接呼び出すためのものではありません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">指定された型の同期ロックをチェックします。</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">同期ロックのチェック対象のデータ型。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">
        <see langword="For...Next" /> ループをコンパイルするためのサービスを、Visual Basic コンパイラに提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">
        <see langword="For...Next" /> ループを初期化します。</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">ループ カウンター変数。</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">ループ カウンターの初期値。</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">
        <see langword="To" /> オプションの値。</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">
        <see langword="Step" /> オプションの値。</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">ループ値の検証済みの値が格納されているオブジェクト。</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">次のループ反復のカウンター値。</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">ループが終了している場合は <see langword="False" />。それ以外の場合は <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">ループ カウンター、<see langword="Step" /> 値、および <see langword="To" /> 値が有効な値かどうかをチェックします。</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必須です。 ループ カウンター変数に渡された初期値を表す <see langword="Decimal" /> 値。</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必須です。 <see langword="Decimal" /> キーワードを使用して渡された値を表す <see langword="To" /> 値。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必須です。 <see langword="Decimal" /> キーワードを使用して渡された値を表す <see langword="Step" /> 値。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="StepValue" /> が 0 より大で <paramref name="count" /> が <paramref name="limit" /> 以下の場合、または <paramref name="StepValue" /> が 0 以下で <paramref name="count" /> が <paramref name="limit" /> 以上の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">
        <see langword="For...Next" /> ループをインクリメントします。</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">ループ カウンター変数。</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">ループ値の検証済みの値が格納されているオブジェクト。</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">次のループ反復のカウンター値。</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">ループが終了している場合は <see langword="False" />。それ以外の場合は <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">ループ カウンター、<see langword="Step" /> 値、および <see langword="To" /> 値が有効な値かどうかをチェックします。</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必須です。 ループ カウンター変数に渡された初期値を表す <see langword="Single" /> 値。</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必須です。 <see langword="Single" /> キーワードを使用して渡された値を表す <see langword="To" /> 値。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必須です。 <see langword="Single" /> キーワードを使用して渡された値を表す <see langword="Step" /> 値。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="StepValue" /> が 0 より大で <paramref name="count" /> が <paramref name="limit" /> 以下の場合、または <paramref name="StepValue" /> が 0 以下で <paramref name="count" /> が <paramref name="limit" /> 以上の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">ループ カウンター、<see langword="Step" /> 値、および <see langword="To" /> 値が有効な値かどうかをチェックします。</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必須です。 ループ カウンター変数に渡された初期値を表す <see langword="Double" /> 値。</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必須です。 <see langword="Double" /> キーワードを使用して渡された値を表す <see langword="To" /> 値。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必須です。 <see langword="Double" /> キーワードを使用して渡された値を表す <see langword="Step" /> 値。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="StepValue" /> が 0 より大で <paramref name="count" /> が <paramref name="limit" /> 以下の場合、または <paramref name="StepValue" /> が 0 以下で <paramref name="count" /> が <paramref name="limit" /> 以上の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">加算 (+) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> と <paramref name="o2" /> の合計。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">ビットごとの <see langword="And" /> 演算を実行します。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">
        <paramref name="obj1" /> と <paramref name="obj2" /> が両方とも 1 と評価される場合は 1。それ以外の場合は 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">ビットごとの <see langword="Or" /> 演算を実行します。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">
        <paramref name="obj1" /> と <paramref name="obj2" /> が両方とも 0 と評価される場合は 0。それ以外の場合は 1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">
        <see langword="Xor" /> 演算を実行します。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">2 つの数値ビット パターンのビットごとの排他的論理和を表す数値。 詳細については、「Xor 演算子」を参照してください。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">除算 (/) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">
        <paramref name="o1" /> を <paramref name="o2" /> で割った、剰余を含む完全な商。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">ボックス化されたプリミティブ値を返します。 このメソッドは、構造体を何回もコピーするのを避けるために使用します。</summary>
      <param name="o" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">オブジェクトとして型指定された <paramref name="o" /> のプリミティブ値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">整数除算 (\) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="o1" /> を <paramref name="o2" /> で割った整数の商。余りはすべて破棄され、整数部分だけが保持されます。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">
        <see langword="Like" /> 比較を実行します。</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">必須です。 「Like 演算子」で説明されているパターン一致規則に準拠した任意の文字列式。</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">必須です。 演算でテキスト比較とバイナリ比較のどちらを使用するかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 値。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="vLeft" /> の値の文字列表現が <paramref name="vRight" /> で指定されているパターンを満たす場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 <paramref name="vLeft" /> と <paramref name="vRight" /> が両方とも <see langword="True" /> の場合は <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">剰余 (<see langword="Mod" />) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> を <paramref name="o2" /> で除算した後の剰余。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">乗算 (*) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> と <paramref name="o2" /> の積。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">単項マイナス (-) 演算を実行します。</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="obj" /> の負の値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">
        <see langword="Not" /> 演算を実行します。</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">
        <see langword="Boolean" /> 演算では、<paramref name="obj" /> が <see langword="False" /> の場合は <see langword="True" />。それ以外の場合は <see langword="True" />。 ビットごとの演算では、<paramref name="obj" /> が 0 の場合は 1。それ以外の場合は 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">指定された 2 つのオブジェクトに対して、バイナリ文字列比較またはテキスト文字列比較を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="o2" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">[値] 
  条件 
  -1 
 
                <paramref name="o1" /> は <paramref name="o2" /> より小さい値です。  

  0 
 
                <paramref name="o1" /> と <paramref name="o2" /> が等価です。  

  1 
 
                <paramref name="o1" /> が <paramref name="o2" /> より大きくなっています。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">単項プラス (+) 演算を実行します。</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">
        <paramref name="obj" /> の値。 (<paramref name="obj" /> の符号は変更されません)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">指数 (^) 演算を実行します。</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">
        <paramref name="obj1" /> を <paramref name="obj2" /> で累乗した結果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">算術左シフト (&lt;&lt;) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必須です。 整数の式を指定します。 シフトされるビット パターンです。 データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必須です。 数式を指定します。 ビット パターンは、このビット数だけシフトされます。 データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">整数値。 ビット パターンをシフトした結果が格納されます。 データ型は、<paramref name="o1" /> の型と同じになります。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">算術右シフト (&gt;&gt;) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必須です。 整数の式を指定します。 シフトされるビット パターンです。 データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必須です。 数式を指定します。 ビット パターンは、このビット数だけシフトされます。 データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">整数値。 ビット パターンをシフトした結果が格納されます。 データ型は、<paramref name="o1" /> の型と同じになります。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">文字列の連結 (&amp;) 演算を実行します。</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="vRight" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">
        <paramref name="vLeft" /> と <paramref name="vRight" /> の連結を表す文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">減算 (-) 演算を実行します。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> と <paramref name="o2" /> の差。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">
        <see langword="Xor" /> 比較を実行します。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> 値または数値。 <see langword="Boolean" /> 式の比較の場合、戻り値は 2 つの <see langword="Boolean" /> 値の排他的論理和です。 ビットごとの (数値) 演算の場合、戻り値は 2 つの数値ビット パターンのビットごとの排他的論理和を表す数値です。 詳細については、「Xor 演算子」を参照してください。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">Visual Basic コンパイラが内部的に使用する、<see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> や <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" /> などの遅延バインディング数値演算子を提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">Visual Basic の加算 (+) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> と <paramref name="Right" /> の合計。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">Visual Basic の <see langword="And" /> 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">
        <see langword="Boolean" /> 演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも <see langword="True" /> と評価される場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 ビットごとの演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも 1 と評価される場合は 1。それ以外の場合は 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">Visual Basic の等値 (=) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> と <paramref name="Left" /> が等しい場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">Visual Basic のより大きい (&gt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> が <paramref name="Left" /> より大きい場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Visual Basic のより大か等しい (&gt;=) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" /> が <paramref name="Right" /> 以上の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">Visual Basic のより小さい (&lt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" /> が <paramref name="Right" /> より小さい場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">Visual Basic のより小さいか等しい (&lt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" /> が <paramref name="Right" /> 以下の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Visual Basic の不等号 (&lt;&gt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> が <paramref name="Left" /> と等しくない場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">指定された 2 つの文字列に対して、バイナリ文字列比較またはテキスト文字列比較を実行します。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意のブール型 ( <see langword="String" /> ) の式を指定します。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意のブール型 ( <see langword="String" /> ) の式を指定します。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">[値] 
  条件 
  -1 
 
                <paramref name="Left" /> は <paramref name="Right" /> より小さい値です。  

  0 
 
                <paramref name="Left" /> と <paramref name="Right" /> が等価です。  

  1 
 
                <paramref name="Left" /> が <paramref name="Right" /> より大きくなっています。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">Visual Basic の連結 (&amp;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> と <paramref name="Right" /> の連結を表す文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">Visual Basic のオーバーロードされた等値 (=) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">オーバーロードされた等値演算子の結果。 演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">Visual Basic のオーバーロードされたより大きい (&gt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">オーバーロードされた大なり演算子の結果。 演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Visual Basic のオーバーロードされたより大か等しい (&gt;=) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">オーバーロードされた以上演算子の結果。 演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">Visual Basic のオーバーロードされたより小さい (&lt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">オーバーロードされた小なり演算子の結果。 演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">Visual Basic のオーバーロードされたより小さいか等しい (&lt;=) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">オーバーロードされた以下演算子の結果。 演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Visual Basic のオーバーロードされた不等号 (&lt;&gt;) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必須です。 任意の式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">オーバーロードされた不等演算子の結果。 演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">Visual Basic の除算 (/) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">
        <paramref name="Left" /> を <paramref name="Right" /> で割った、剰余を含む完全な商。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">Visual Basic の指数 (^) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> を <paramref name="Right" /> で累乗した結果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">ユーザー定義の演算子の遅延バインディング評価を実行します。 このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">ユーザー定義の演算子。</param>
      <param name="Arguments">ユーザー定義の演算子に渡す引数値。</param>
      <returns vsli:raw="The result returned from the user-defined operator.">ユーザー定義の演算子から返される結果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">Visual Basic の整数除算 (\) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="Left" /> を <paramref name="Right" /> で割った整数の商。余りはすべて破棄され、整数部分だけが保持されます。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">Visual Basic の算術左シフト (&lt;&lt;) 演算子を表します。</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必須です。 整数の式を指定します。 シフトされるビット パターンです。 データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必須です。 数式を指定します。 ビット パターンは、このビット数だけシフトされます。 データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">整数値。 ビット パターンをシフトした結果が格納されます。 データ型は、<paramref name="Operand" /> の型と同じになります。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">Visual Basic の <see langword="Mod" /> 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> を <paramref name="Right" /> で除算した後の剰余。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">Visual Basic の乗算 (*) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> と <paramref name="Right" /> の積。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">Visual Basic の単項マイナス (-) 演算子を表します。</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">
        <paramref name="Operand" /> の負の値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">Visual Basic の <see langword="Not" /> 演算子を表します。</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">
        <see langword="Boolean" /> 演算では、<paramref name="Operand" /> が <see langword="False" /> の場合は <see langword="True" />。それ以外の場合は <see langword="True" />。 ビットごとの演算では、<paramref name="Operand" /> が 0 の場合は 1。それ以外の場合は 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">Visual Basic の <see langword="Or" /> 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">
        <see langword="Boolean" /> 演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも <see langword="False" /> と評価される場合は <see langword="False" />。それ以外の場合は <see langword="True" />。 ビットごとの演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも 0 と評価される場合は 0。それ以外の場合は 1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">Visual Basic の単項プラス (+) 演算子を表します。</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">
        <paramref name="Operand" /> の値。 (<paramref name="Operand" /> の符号は変更されません)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">Visual Basic の算術右シフト (&gt;&gt;) 演算子を表します。</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必須です。 整数の式を指定します。 シフトされるビット パターンです。 データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必須です。 数式を指定します。 ビット パターンは、このビット数だけシフトされます。 データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">整数値。 ビット パターンをシフトした結果が格納されます。 データ型は、<paramref name="Operand" /> の型と同じになります。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">Visual Basic の減算 (-) 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必須です。 任意の数式。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> と <paramref name="Right" /> の差。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">Visual Basic の <see langword="Xor" /> 演算子を表します。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必須です。 任意のブール型 (<see langword="Boolean" />) または数式を指定します。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> 値または数値。 <see langword="Boolean" /> 式の比較の場合、戻り値は 2 つの <see langword="Boolean" /> 値の排他的論理和です。 ビットごとの (数値) 演算の場合、戻り値は 2 つの数値ビット パターンのビットごとの排他的論理和を表す数値です。 詳細については、「Xor 演算子」を参照してください。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">現在の <see langword="Option Compare" /> 設定を引数の既定値として渡す必要があることを指定します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">Visual Basic コンパイラはこのヘルパー クラスを出力して、バイナリとテキストのどちらの比較方法を使用するかを Visual Basic デバッグに示します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> クラスの新しいインスタンスを初期化します。 これはヘルパー メソッドです。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic <see langword="Err" /> オブジェクト用のヘルパーを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">
        <see langword="Clear" /> オブジェクトの <see langword="Err" /> メソッドに対する処理を実行します。 ヘルパー メソッドです。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">
        <see langword="Raise" /> オブジェクトの <see langword="Err" /> メソッドに対する処理を実行します。 ヘルパー メソッドです。</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">エラーの性質を識別する整数値。 Visual Basic エラーの番号は 0 から 65535 の範囲です。0 から 512 はシステム エラー用に予約されています。513 から 65535 はユーザー定義エラーに使用できます。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">
        <see cref="T:System.Exception" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">呼び出し元のアセンブリが使用するすべてのファイルを閉じて、プロセスを停止します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic コンパイラは、このヘルパー メソッドを使用して <see langword="Err" /> オブジェクトの例外をキャプチャします。</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">キャッチする <see cref="T:System.Exception" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic コンパイラは、このヘルパー メソッドを使用して <see langword="Err" /> オブジェクトの例外をキャプチャします。</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">キャッチする <see cref="T:System.Exception" /> オブジェクト。</param>
      <param name="lErl" vsli:raw="The line number of the exception.">例外の行番号。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Short" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">必須です。 <see langword="Short" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Short" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Short" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">必須です。 <see langword="Short" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Short" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Single" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必須です。 <see langword="Single" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Single" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="Single" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必須です。 <see langword="Single" /> 値に変換するオブジェクト。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Single" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">指定した文字列に対応する <see langword="Single" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必須です。 <see langword="Single" /> 値に変換する文字列。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Single" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">指定した文字列と数値書式情報に対応する <see langword="Single" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必須です。 <see langword="Single" /> 値に変換する文字列。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="Single" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">このクラスには、中間言語 (IL) に出力するときに、標準モジュールの構成要素に適用する引数が用意されています。 これは、コードから直接呼び出すためのものではありません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">Visual Basic コンパイラは、静的なローカル メンバーを初期化するときにこのクラスを内部的に使用します。これは、コードから直接呼び出すためのものではありません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">静的なローカル メンバーの初期化フラグの状態 (初期化済みかどうか) を返します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">このクラスの使用は、Visual Basic 2005 以降推奨されていません。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Boolean" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Boolean" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Byte" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Byte" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Char" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Char" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">指定した日付に対応する <see langword="String" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="String" /> 値に変換する日付。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">指定した <see langword="String" /> と数値書式情報に対応する <see langword="Decimal" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Decimal" /> 値に変換する <see langword="String" />。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">指定した <see langword="String" /> と数値書式情報に対応する <see langword="Double" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">必須です。 <see langword="Double" /> 値に変換する <see langword="String" />。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Integer" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Integer" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">指定した <see langword="String" /> (64 ビット整数) に対応する <see langword="Int64" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Int64" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">指定したオブジェクトに対応する <see langword="String" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="String" /> 値に変換するオブジェクト。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">指定した <see langword="String" /> (16 ビット整数) に対応する <see langword="Int16" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Int616" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">指定した <see langword="String" /> に対応する <see langword="Single" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Single" /> 値に変換する <see langword="String" />。</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">指定した <see langword="String" /> と数値書式情報に対応する <see langword="Single" /> 値を返します。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 <see langword="Single" /> 値に変換する <see langword="String" />。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">カルチャに応じて数値を形式指定および表示する方法を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクト。</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" /> に対応する <see langword="String" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">
        <paramref name="sDest" /> パラメーターの内容で <paramref name="sInsert" /> パラメーターを上書きします。</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">必須です。 変更する文字列変数。</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">必須です。 上書きを開始する <paramref name="sDest" /> パラメーター内の位置。 インデックスは 1 から始まっています。</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">必須です。 使用する <paramref name="sInsert" /> パラメーターの最大文字数。1 文字目から開始します。</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">必須です。 <paramref name="sDest" /> パラメーターを上書きする文字列値。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">2 つの文字列を比較します。</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">必須です。 <paramref name="sRight" /> と比較する文字列。</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">必須です。 <paramref name="sLeft" /> と比較する文字列。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">必須です。 大文字と小文字を区別せずに比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">[値] 
  条件 
  ゼロ 
  2 つの文字列は等価。  

  0 より小さい値 
 
                <paramref name="sLeft" /> は <paramref name="sRight" /> より小さい値です。  

  0 より大きい値 
 
                <paramref name="sLeft" /> が <paramref name="sRight" /> より大きくなっています。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">
        <paramref name="Source" /> パラメーターと <paramref name="Pattern" /> パラメーターを比較し、<see langword="Like" /> 演算子と同じ結果を返します。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意のブール型 ( <see langword="String" /> ) の式を指定します。</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">パターン一致規則に適合させる任意の文字列 (<see langword="String" />) 式を指定します。規則については「Like 演算子」で説明します。</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">
        <see cref="T:Microsoft.VisualBasic.CompareMethod" /> に従って、文字列をパターンと比較する方法を指定します。 バイナリを比較する場合は <see langword="vbBinaryCompare" /> を指定します。システムの <see langword="vbTextCompare" /> 値によって決まる大文字と小文字が区別されたテキストの並べ替え順序に基づいて比較する場合は、<see langword="LocaleID" /> を指定します。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">文字列がパターンを満たすかどうかを示す <see langword="Boolean" /> 値。 文字列内の値がパターンに格納されているパターンを満たす場合、結果は <see langword="True" /> になります。 文字列がパターンを満たさない場合、結果は <see langword="False" /> になります。 文字列とパターンの両方が空の文字列の場合、結果は <see langword="True" /> になります。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">バイナリ比較を使用して <paramref name="Source" /> パラメーターと <paramref name="Pattern" /> パラメーターを比較し、<see langword="Like" /> 演算子と同じ結果を返します。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意のブール型 ( <see langword="String" /> ) の式を指定します。</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">必須です。 パターン一致規則に適合させる任意の文字列 (<see langword="String" />) 式を指定します。規則については「Like 演算子」で説明します。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">文字列がパターンを満たすかどうかを示す <see langword="Boolean" /> 値。 文字列内の値がパターンに格納されているパターンを満たす場合、結果は <see langword="True" /> になります。 文字列がパターンを満たさない場合、結果は <see langword="False" /> になります。 文字列とパターンの両方が空の文字列の場合、結果は <see langword="True" /> になります。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">テキスト比較を使用して <paramref name="Source" /> パラメーターと <paramref name="Pattern" /> パラメーターを比較し、<see langword="Like" /> 演算子と同じ結果を返します。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意のブール型 ( <see langword="String" /> ) の式を指定します。</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">必須です。 パターン一致規則に適合させる任意の文字列 (<see langword="String" />) 式を指定します。規則については「Like 演算子」で説明します。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">文字列がパターンを満たすかどうかを示す <see langword="Boolean" /> 値。 文字列内の値がパターンに格納されているパターンを満たす場合、結果は <see langword="True" /> になります。 文字列がパターンを満たさない場合、結果は <see langword="False" /> になります。 文字列とパターンの両方が空の文字列の場合、結果は <see langword="True" /> になります。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">Visual Basic コンパイラが使用するユーティリティを格納しています。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">Visual Basic コンパイラが <see langword="Redim" /> のヘルパーとして使用します。</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">コピーする配列。</param>
      <param name="aryDest" vsli:raw="The destination array.">コピー先の配列。</param>
      <returns vsli:raw="The copied array.">コピーされた配列。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> モジュールに含まれるプロシージャを使って、オブジェクト、アプリケーション、システムと対話します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">オブジェクトに対してメソッドを実行するか、オブジェクトのプロパティを設定または取得します。</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">必須です。 <see langword="Object" />。 プロパティまたはメソッドを公開しているオブジェクトへのポインターです。</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">必須です。 <see langword="String" />。 オブジェクトのプロパティまたはメソッドの名前を含む文字列式です。</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">必須です。 呼び出されるプロシージャの型を表す、<see cref="T:Microsoft.VisualBasic.CallType" /> 型の列挙体のメンバーです。 <see langword="CallType" /> の値は、<see langword="Method" />、<see langword="Get" />、<see langword="Set" /> のいずれかになります。</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">任意。 <see langword="ParamArray" />。 呼び出されるプロパティまたはメソッドに渡される引数を格納するパラメーター配列です。</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">オブジェクトに対してメソッドを実行するか、オブジェクトのプロパティを設定または取得します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">式が数値として評価できるかどうかを示すブール値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">式が数値として評価できるかどうかを示すブール値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">変数のシステム データ型名を含む文字列値を返します。</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">必須です。 Visual Basic の型名を含む文字列変数です。</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">変数のシステム データ型名を含む文字列値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">変数に関するデータ型情報を含む文字列値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必須です。 <see langword="Object" /> 変数。 <see langword="Option Strict" /> が <see langword="Off" /> の場合、構造体以外の任意のデータ型の変数を渡すことができます。</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">変数に関するデータ型情報を含む文字列値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">変数の Visual Basic データ型名を含む文字列値を返します。</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">必須です。 共通言語ランタイムにより使用される型名を含む文字列変数です。</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">変数の Visual Basic データ型名を含む文字列値を返します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">
        <see langword="Constants" /> モジュールには、さまざまな定数が含まれています。 この定数は、コード内のどこにでも使用できます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="Abort" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Abort" /> 関数を呼び出すときに、[<see langword="Retry" />]、[<see langword="Ignore" />]、および [<see langword="MsgBox" />] の各ボタンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、メッセージ ボックスがモーダル ダイアログ ボックスとして表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">ファイル アクセス関数において、ファイルが前回のバックアップ操作以降に変更されていることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が配列であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">印刷機能および表示機能のためのバックスペース文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">比較関数を呼び出すときに、バイナリ比較を実行するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Boolean" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Byte" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="Cancel" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">印刷機能および表示機能のための復帰文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、警告メッセージ アイコンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">印刷機能および表示機能のためのライン フィード文字と組み合わされた復帰文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Currency" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Date" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Decimal" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">メッセージ ボックスが表示されるときに、左端のボタンが既定のボタンとして選択されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">メッセージ ボックスが表示されるときに、左から 2 番目のボタンが既定のボタンとして選択されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">メッセージ ボックスが表示されるときに、左から 3 番目のボタンが既定のボタンとして選択されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">ファイル アクセス関数において、ファイルがディレクトリまたはフォルダーであることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Double" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Empty" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、感嘆符アイコンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">数値書式指定関数を呼び出すときに <see langword="Boolean" /> 値 <see langword="False" /> が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">日付関連の関数を呼び出すときに、年の最初の週として、少なくとも 4 日の日数を含む週が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">日付関連の関数を呼び出すときに、年の最初の週として、1 週間全体を含む週が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">日付関連の関数を呼び出すときに、年の最初の週として、1 月 1 日を含む週が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">印刷機能のためのフォーム フィード文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、金曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの標準の日付形式が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 関数を呼び出すときに、プロパティ値を取得するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">ファイル アクセス関数において、ファイルが隠しファイルであることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが非表示に設定されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、ひらがながカタカナに変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="Ignore" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、情報アイコンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Integer" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、カタカナがひらがなに変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 関数を呼び出すときに、オブジェクト インスタンスにプロパティ値が設定されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">印刷機能および表示機能のためのライン フィード文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、ファイル システムの大文字/小文字の区別規則ではなく、言語学的な大文字/小文字の区別規則を使用して文字が変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Long" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの長い日付形式が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの長い時刻形式が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、文字が小文字に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが最大化に設定され、フォーカスが与えられることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 関数を呼び出すときに、メソッドを呼び出すように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが最小化に設定され、フォーカスが与えられることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが最小化に設定され、フォーカスは与えられないことを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、月曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Help" /> 関数を呼び出すときに、[<see langword="MsgBox" />] ボタンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、テキストが右揃えで表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、右から左に読むテキスト (ヘブライ語およびアラビア語のシステム) が表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、メッセージ ボックスが前面に表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、全角 (2 バイト) 文字が半角 (1 バイト) 文字に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">印刷機能および表示機能のための改行文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="No" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">ファイル アクセス関数において、ファイルが通常のファイルであることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが通常のスタイルに設定され、フォーカスが与えられることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが通常のスタイルに設定され、フォーカスは与えられないことを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Nothing" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">印刷機能および表示機能のための null 文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">印刷機能、表示機能、および外部プロシージャ呼び出しのための長さ 0 の文字列を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Object" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">オブジェクトのエラー番号を表します。 ユーザー定義のエラー番号は、この値を超える値にする必要があります。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="OK" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="OK" /> 関数を呼び出すときに、[<see langword="Cancel" />] ボタンと [<see langword="MsgBox" />] ボタンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="OK" /> 関数を呼び出すときに、[<see langword="MsgBox" />] ボタンだけが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、文字列中のすべての単語の最初の文字が大文字に変換され、残りの文字が小文字に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、疑問符アイコンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">ファイル アクセス関数において、ファイルが読み取り専用のファイルであることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="Retry" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Retry" /> 関数を呼び出すときに、[<see langword="Cancel" />] ボタンと [<see langword="MsgBox" />] ボタンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、土曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 関数を呼び出すときに、プロパティ値が設定されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの短い日付形式が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの短い時刻形式が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、文字が簡体字中国語に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Single" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="String" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、日曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">ファイル アクセス関数において、ファイルがシステム ファイルであることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 関数を呼び出すときに、メッセージ ボックスがモーダル ダイアログ ボックスとして表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">印刷機能および表示機能のためのタブ文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">比較関数を呼び出すときに、テキスト比較が実行されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、木曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、文字が繁体字中国語に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">数値書式指定関数を呼び出すときに <see langword="Boolean" /> 値 <see langword="True" /> が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、火曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、文字が大文字に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">数値書式指定関数を呼び出すときに、既定の <see langword="Boolean" /> 値が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型がユーザー定義型であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">日付関連の関数を呼び出すときに、年の最初の週として、システムで指定されている週が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">日付関連の関数を呼び出すときに、週の最初の曜日として、システムで指定されている曜日が使用されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">バリアント オブジェクトの型が <see langword="Variant" /> であることを示します。 <see langword="VarType" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">印刷機能のための復帰文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">ファイル アクセス関数において、ボリューム ラベルのファイル属性を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">日付関連の関数を呼び出すときに、水曜日を週の最初の曜日として使用するように指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 関数を呼び出すときに、半角 (1 バイト) 文字が全角 (2 バイト) 文字に変換されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">メッセージ ボックスで [<see langword="Yes" />] ボタンがクリックされたことを示します。 <see langword="MsgBox" /> 関数によって返されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Yes" /> 関数を呼び出すときに、[<see langword="No" />] ボタンと [<see langword="MsgBox" />] ボタンが表示されることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Yes" /> 関数を呼び出すときに、[<see langword="No" />]、[<see langword="Cancel" />]、および [<see langword="MsgBox" />] の各ボタンが表示されることを示します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">
        <see langword="ControlChars" /> モジュールには、制御文字として使用される定数が含まれています。 この定数は、コード内のどこにでも使用できます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.ControlChars" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">バックスペース文字 (<see langword="vbBack" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">復帰文字 (<see langword="vbCr" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">復帰文字とライン フィード文字の組み合わせ (<see langword="vbCrLf" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">印刷機能のためのフォーム フィード文字 (<see langword="vbFormFeed" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">ライン フィード文字 (<see langword="vbLf" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">改行文字 (<see langword="vbNewLine" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">null 文字 (<see langword="vbNullChar" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">二重引用符文字を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">タブ文字 (<see langword="vbTab" />) を表します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">垂直タブ文字 (<see langword="vbVerticalTab" />) を表します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">
        <see langword="Conversion" /> モジュールに含まれるプロシージャを使って、さまざまな変換演算を実行します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">オブジェクトを指定された型に変換します。</summary>
      <param name="Expression" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">変換後のオブジェクトの型。</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">実行時の種類が要求されたターゲットの種類であるオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">指定したジェネリック型にオブジェクトを変換します。</summary>
      <param name="Expression" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">変換後のオブジェクトの型。</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">要求されたジェネリック型として静的に型指定されたオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">特定のエラー番号に対応するエラー メッセージを返します。</summary>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">直前の実行時エラーに対応するエラー メッセージ。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">該当する <paramref name="ErrorNumber" /> がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">特定のエラー番号に対応するエラー メッセージを返します。</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">任意。 有効なエラー番号。</param>
      <returns vsli:raw="The error message that corresponds to a given error number.">特定のエラー番号に対応するエラー メッセージ。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">該当する <paramref name="ErrorNumber" /> がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Decimal" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Double" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Short" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Integer" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Long" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">必須です。 <see langword="Object" /> 型の数字または任意の有効な数式。 <paramref name="Number" /> に <see langword="Nothing" /> が含まれている場合は、<see langword="Nothing" /> が返されます。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Single" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">数値の 16 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Decimal" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Double" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Short" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Integer" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Long" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">必須です。 <see langword="Object" /> 型の数字または任意の有効な数式。 <paramref name="Number" /> に <see langword="Nothing" /> が含まれている場合は、<see langword="Nothing" /> が返されます。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">数値の整数部分を返します。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">必須です。 <see langword="Single" /> 型の数字または任意の有効な数式。</param>
      <returns vsli:raw="The integer portion of a number.">数値の整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">数値の 8 進値を表す文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な数式または <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">数値の 8 進値を表す文字列です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">数値を表す <see langword="String" /> 型の値を返します。</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">必須です。 任意の有効な数式を含む <see langword="Object" /> 型の値。</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">数値の <see langword="String" /> 表現です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> が指定されていません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> が数値型ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">適切な型の数値として文字列に含まれる数を返します。</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="String" /> 式、<see langword="Object" /> 変数、または <see langword="Char" /> 値。 <paramref name="Expression" /> が <see langword="Object" /> 型の場合に、その値が <see langword="String" /> に変換できる必要があります。または <see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">適切な型で表された、文字列に含まれる数値。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> が大きすぎます。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> は <see langword="String" /> に変換できない <see langword="Object" /> 型の式です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">適切な型の数値として文字列に含まれる数を返します。</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="String" /> 式、<see langword="Object" /> 変数、または <see langword="Char" /> 値。 <paramref name="Expression" /> が <see langword="Object" /> 型の場合に、その値が <see langword="String" /> に変換できる必要があります。または <see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">適切な型で表された、文字列に含まれる数値。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> が大きすぎます。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> は <see langword="String" /> に変換できない <see langword="Object" /> 型の式です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">適切な型の数値として文字列に含まれる数を返します。</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="String" /> 式、<see langword="Object" /> 変数、または <see langword="Char" /> 値。 <paramref name="Expression" /> が <see langword="Object" /> 型の場合に、その値が <see langword="String" /> に変換できる必要があります。または <see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">適切な型で表された、文字列に含まれる数値。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> が大きすぎます。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> は <see langword="String" /> に変換できない <see langword="Object" /> 型の式です。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">
        <see langword="DateAndTime" /> モジュールには、日付と時刻の操作に使用されるプロシージャとプロパティが含まれています。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">指定された時間間隔を加算した日付と時刻を含む値を返します。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">必須です。 加算する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">必須です。 加算する時間間隔を表す浮動小数点式。 これは、正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) とすることができます。 <paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。 その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">必須です。 時間間隔を加算する日時を表す式。 <paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">指定された時間間隔を加算した日付と時刻を含む値。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> が無効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">指定された時間間隔を加算した日付と時刻を含む値を返します。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">必須です。 加算する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">必須です。 加算する時間間隔を表す浮動小数点式。 <paramref name="Number" /> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。 <paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。 その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">必須です。 時間間隔を加算する日時を表す式。 <paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">指定された時間間隔を加算した日付と時刻を含む値。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> が無効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値を返します。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">必須です。 <paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">必須です。 計算で使用する 1 番目の日付/時刻の値。</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">必須です。 計算で使用する 2 番目の日付/時刻の値。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">任意。 週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">任意。 年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値を返します。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">必須です。 <paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">必須です。 計算で使用する 1 番目の日付/時刻の値。</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">必須です。 計算で使用する 2 番目の日付/時刻の値。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">任意。 週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">任意。 年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値を返します。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">必須です。 返される日付/時刻値の一部を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">必須です。 評価する <see langword="Date" /> 値。</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">任意。 週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">任意。 年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値の値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> が無効です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">特定の <see langword="Date" /> 型値の中の指定された要素を含む値を返します。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">必須です。 返される日付/時刻値の一部を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">必須です。 評価する <see langword="Date" /> 値。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">任意。 週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">任意。 年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値の値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" /> が無効です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">必須です。 1 から 9999 の整数式。 ただし、この範囲より小さい値も受け入れられます。 <paramref name="Year" /> が 0 ～ 99 の場合、下の「解説」で説明しているように、1930 ～ 2029 年として解釈されます。 <paramref name="Year" /> が 1 未満の場合、現在の年からその値が減算されます。</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">必須です。 1 から 12 の整数式。 ただし、この範囲外の値も受け入れられます。 <paramref name="Month" /> の値は 1 だけオフセットされた後、計算対象の年の 1 月に加算されます。 つまり、(<paramref name="Month" /> - 1) が 1 月に加算されます。 年は必要に応じて再計算されます。 この処理による結果の例を次に示します。 
<paramref name="Month" /> が 1 の場合、結果は計算対象の年の 1 月になります。  
<paramref name="Month" /> が 0 の場合、結果は前年の 12 月になります。  
If <paramref name="Month" /> が -1 の場合、結果は前年の 11 月になります。  
<paramref name="Month" /> が 13 の場合、結果は翌年の 1 月になります。</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">必須です。 1 から 31 の整数式。 ただし、この範囲外の値も受け入れられます。 <paramref name="Day" /> の値は 1 だけオフセットされた後、計算対象の月の最初の日に加算されます。 つまり、(<paramref name="Day" /> - 1) がその月の最初の日に加算されます。 必要に応じて月と年が再計算されます。 この処理による結果の例を次に示します。 
<paramref name="Day" /> が 1 の場合、結果は計算対象の月の最初の日になります。  
<paramref name="Day" /> が 0 の場合、結果は前月の末日になります。  
<paramref name="Day" /> が -1 の場合、結果は前月の末日の前日になります。  
<paramref name="Day" /> が現在の月の末日を過ぎている場合、結果は翌月の適切な日になります。 たとえば、<paramref name="Month" /> が 4 で <paramref name="Day" /> が 31 の場合、結果は 5 月 1 日になります。</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">指定された年、月、日を表す <see langword="Date" /> 値であり、時刻情報は午前 0 時 (00:00:00) に設定されます。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">システムの現在の日付を表す文字列値を返すか設定します。</summary>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">システムの現在の日付を表す文字列値を返すか設定します。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">
        <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> の値を設定するのに使用する無効な形式。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">文字列で表した日付情報を含む <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">必須です。 1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す文字列式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">文字列で表した日付情報を含む <see langword="Date" /> 値であり、時刻情報は午前 0 時 (00:00:00) に設定されます。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" /> に無効な時刻情報が含まれています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">日付を表す 1 から 31 の整数値を返します。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">必須です。 日を抽出する <see langword="Date" /> 値。</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">日付を表す 1 から 31 の整数値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">時刻を表す 0 から 23 の整数値を返します。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">必須です。 時を抽出する <see langword="Date" /> 値。</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">時刻を表す 0 から 23 の整数値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">分を表す 0 から 59 の整数値を返します。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">必須です。 分を抽出する <see langword="Date" /> 値。</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">分を表す 0 から 59 の整数値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">月を表す 1 から 12 の整数値を返します。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">必須です。 月を抽出する <see langword="Date" /> 値。</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">月を表す 1 から 12 の整数値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">指定された月の名前を含む文字列値を返します。</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">必須です。 数値 (1 ～ 13) による月の指定です。1 は 1 月を示し、12 は 12 月を示します。 13 か月カレンダーでは値 13 を使用できます。 システムで 12 か月カレンダーを使用しているとき、<paramref name="Month" /> に 13 を指定すると、<c>MonthName</c> からは空の文字列が返されます。</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">任意。 月の名前を省略する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は、<see langword="False" /> です。</param>
      <returns vsli:raw="A string value containing the name of the specified month.">指定された月の名前を含む文字列値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" /> が 1 より小さいか、または 13 を超えています。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">ご利用のシステムに従った現在の日付と時刻を含む日付型の値を返します。</summary>
      <returns vsli:raw="The current date and time according to your system.">システムに従った現在の日付と時刻。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">秒を表す 0 から 59 の整数値を返します。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">必須です。 秒を抽出する <see langword="Date" /> 値。</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">秒を表す 0 から 59 の整数値。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see cref="T:System.Double" />) の値を返します。</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">午前0時から経過した秒数を表す値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">必須です。 0 から 23 の整数式。 ただし、この範囲外の値も受け入れられます。</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">必須です。 0 から 59 の整数式。 ただし、この範囲外の値も受け入れられます。 計算される時には <paramref name="Minute" />  の値が加算されるため、負の値を指定するとその時からさかのぼる分数が指定されます。</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">必須です。 0 から 59 の整数式。 ただし、この範囲外の値も受け入れられます。 算出される分には <paramref name="Second" />  の値が加算されるため、負の値を指定するとその分からさかのぼる秒数が指定されます。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">引数が -2,147,483,648 ～ 2,147,483,647 の範囲外です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">計算された時刻が負の 24 時間より小さくなっています。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">システムの現在の時刻を表す文字列値を返すか設定します。</summary>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">システムの現在の時刻を表す文字列値を返すか設定します。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">
        <see langword="TimeString" /> の値を設定するのに使用する無効な形式。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">必須です。 1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す文字列式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">文字列で表した時刻情報を含む <see langword="Date" /> 値であり、日付情報は 1 年 1 月 1 日に設定されます。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" /> に無効な日付情報が含まれています。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">曜日を表す数値を含む整数値を返します。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">必須です。 曜日を調べる <see langword="Date" /> 値。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">任意。 週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。 指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</param>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">曜日を表す数値を含む整数値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" /> が 0 より小さいか、または 7 を超えています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">指定された曜日の名前を含んでいる文字列値を返します。</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">必須です。 Integer。 曜日を指定する 1 ～ 7 の数値。1 は週の最初の曜日を表し、7 は週の最後の曜日を表します。 最初と最後の曜日は、<paramref name="FirstDayOfWeekValue" /> の設定により決まります。</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">任意。 曜日の名前を省略するかどうかを示す <see langword="Boolean" /> 値。 省略した場合、既定値の <see langword="False" /> が使用され、曜日の名前は省略されません。</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">任意。 週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。 指定しない場合は、<see langword="FirstDayOfWeek.System" /> が使用されます。</param>
      <returns vsli:raw="A string value containing the name of the specified weekday.">指定された曜日の名前を含んでいる文字列値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" /> が 1 より小さいか 7 を超えています。または <paramref name="FirstDayOfWeekValue" /> が 0 より小さいか 7 を超えています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">年を表す 1 から 9999 の整数値を返します。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">必須です。 年を抽出する <see langword="Date" /> 値。</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">年を表す 1 から 9999 の整数値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">
        <see langword="FormatDateTime" /> 関数を呼び出すときに、日付の表示方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">実数の場合は、日付と時刻を表示します。 数値に小数部分がない場合は、日付のみを表示します。 数値に整数部分がない場合は、時刻のみを表示します。 日付と時刻の表示は、コンピューターの地域の設定によって決定されます。 このメンバーは、Visual Basic 定数の <see langword="vbGeneralDate" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">コンピューターの地域の設定に指定されている長い日付形式を使用して日付を表示します。 このメンバーは、Visual Basic 定数の <see langword="vbLongDate" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">コンピューターの地域の設定に指定されている長い時刻形式を使用して時刻を表示します。 このメンバーは、Visual Basic 定数の <see langword="vbLongTime" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">コンピューターの地域の設定に指定されている短い日付形式を使用して日付を表示します。 このメンバーは、Visual Basic 定数の <see langword="vbShortDate" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">コンピューターの地域の設定に指定されている短い時刻形式を使用して時刻を表示します。 このメンバーは、Visual Basic 定数の <see langword="vbShortTime" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">日付関連の関数を呼び出すときに使用する、日付の間隔の決定方法と形式の設定方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">日 (1 ～ 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">年間通算日 (1 ～ 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">時 (0 ～ 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">分 (0 ～ 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">月 (1 ～ 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">四半期 (1 ～ 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">秒 (0 ～ 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">曜日 (1 ～ 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">週 (1 ～ 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">Year</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>サウンドを再生するためのメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>システム クロックから現在の現地時刻と世界協定時刻 (グリニッジ標準時に相当します) にアクセスするためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>コンピューターの現在のローカルな日付と時刻を UTC (GMT) で表した <see langword="Date" /> オブジェクトを取得します。</summary>
      <returns>現在の日付と時刻を UTC (GMT) で表す <see langword="Date" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>このコンピューターの現在のローカルな日付と時刻を表す <see langword="Date" /> を取得します。</summary>
      <returns>現在のローカルな日付と時刻を表す <see langword="Date" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>コンピューターのシステム タイマーに基づくミリ秒数を取得します。</summary>
      <returns>コンピューターのシステム タイマーに基づくミリ秒数を保持する <see langword="Integer" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>オーディオ、時計、キーボード、ファイル システムなどのコンピューター コンポーネントを操作するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>サウンドを再生するためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Audio" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>クリップボードを操作するためのメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Clipboard" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>キーボードの現在の状態 (現在、押されているキーなど) にアクセスするためのプロパティのほか、キーストロークをアクティブ ウィンドウに送信するためのメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Keyboard" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>ローカル コンピューターに接続されたマウスの形式と構成に関する情報を取得するためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Mouse" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>コンピューターのシリアル ポートにアクセスするためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>
        <see langword="My.Computer.Ports" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>コンピューターのメモリ、読み込まれたアセンブリ、名前、オペレーティング システムに関する情報を取得するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>コンピューターの空き物理メモリの合計サイズを取得します。</summary>
      <returns>コンピューターの空き物理メモリのバイト数を保持する <see langword="ULong" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>コンピューターの空き仮想アドレス空間の合計サイズを取得します。</summary>
      <returns>コンピューターの空き仮想アドレス空間のバイト数を保持する <see langword="ULong" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>オペレーティング システムにインストールされた現在の UI カルチャを取得します。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> オブジェクトは、コンピューターにインストールされた UI カルチャを表します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>コンピューターで使用されているオペレーティング システムのプラットフォーム ID を取得します。</summary>
      <returns>コンピューターで使用されているオペレーティング システムのプラットフォーム ID を保持する <see langword="String" />。<see cref="T:System.PlatformID" /> 列挙体のメンバー名から選択されます。</returns>
      <exception cref="T:System.ExecutionEngineException">アプリケーションがオペレーティング システムのプラットフォーム情報を取得できません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>コンピューターで使用されているオペレーティング システムのバージョンを取得します。</summary>
      <returns>オペレーティング システムの現在のバージョン番号を保持する <see langword="String" />。</returns>
      <exception cref="T:System.ExecutionEngineException">アプリケーションがオペレーティング システムのバージョン情報を取得できません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>コンピューターの物理メモリの合計サイズを取得します。</summary>
      <returns>コンピューターの物理メモリのバイト数を保持する <see langword="ULong" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>コンピューターの仮想アドレス空間の合計サイズを取得します。</summary>
      <returns>コンピューターで利用可能な仮想アドレス空間のバイト数を保持する <see langword="ULong" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>現在どのキーが押されているかなど、キーボードの現在の状態にアクセスするためのプロパティを提供します。また、キーストロークを作業中のウィンドウに送るメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>ローカル コンピューターに接続されたマウスの形式と構成に関する情報を取得するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>コンピューターの接続先ネットワークと対話するためのプロパティ、イベント、およびメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Network" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>
        <see langword="My.Application.NetworkAvailabilityChanged" /> イベントおよび <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="networkAvailable">アプリケーションからネットワークを利用できるかどうかを示す <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>アプリケーションからネットワークを利用できるかどうかを示す値を取得します。</summary>
      <returns>アプリケーションからネットワークを利用できるかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>コンピューターのシリアル ポートにアクセスするためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>オーディオ、時計、キーボード、ファイル システムなどのコンピューター コンポーネントを操作するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>システム時計から現在の現地時刻および世界協定時刻 (グリニッジ標準時と同じ) にアクセスするためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Clock" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>ドライブ、ファイル、およびディレクトリを操作するためのプロパティとメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.FileSystem" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>コンピューターのメモリ、読み込まれているアセンブリ、コンピューター名、オペレーティング システムなどに関する情報を取得するためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Info" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>コンピューター名を取得します。</summary>
      <returns>このコンピューターの名前を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>コンピューターの接続先ネットワークと対話するためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Network" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>レジストリを操作するためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Registry" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">財務関連のメソッドを呼び出すときに、支払い期日を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">日付の間隔の最初の日が期日になります。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">日付の間隔の最後の日が期日になります。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">
        <see langword="ErrObject" /> モジュールに含まれているプロパティおよびプロシージャを使用して、<see langword="Err" /> オブジェクトによる実行時エラーの識別と処理を実行します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">
        <see langword="Err" /> オブジェクトのプロパティ設定をすべてクリアします。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">エラーに関連する説明文字列を含む <see langword="String" /> 型の式を返すか、または設定します。 読み取り/書き込み。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">エラーに関連する説明文字列を含む <see langword="String" /> 型の式を返すか、または設定します。 読み取り/書き込み。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">最後に実行されたステートメントの行番号を示す整数を取得します。</summary>
      <returns vsli:raw="The line number of the last executed statement.">最後に実行されたステートメントの行番号。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">発生したエラーを表す例外を返します。</summary>
      <returns vsli:raw="The exception representing the error that occurred.">発生したエラーを表す例外。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">ダイナミック リンク ライブラリ (DLL) の呼び出しによって生成されたシステム エラー コードを取得します。</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">ダイナミックリンクライブラリ (DLL) への呼び出しによって生成されたシステムエラーコード。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">エラーを示す数値を返すか、または設定します。 読み取り/書き込み。</summary>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">エラーを示す数値を返すか、または設定します。 読み取り/書き込み。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" /> が 65535 より大きい値です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">実行時エラーを生成します。<see langword="Error" /> ステートメントの代わりに使用できます。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">必須です。 エラーの性質を識別する <see langword="Long" /> 型の整数。 Visual Basic エラーの番号は 0 から 65535 の範囲です。0 から 512 はシステム エラー用に予約されています。513 から 65535 はユーザー定義エラーに使用できます。 クラス モジュールの <see langword="Number" /> プロパティに固有のエラー コードを設定する場合は、エラー コード番号を <see langword="vbObjectError" /> 定数に追加する必要があります。 たとえば、エラー番号 513 を生成するには、<c>vbObjectError + 513</c> を <see langword="Number" /> プロパティに割り当てます。</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">任意。 エラーが生成されたオブジェクトまたはアプリケーションを指定する <see langword="String" /> 型の式。 オブジェクトに対してこのプロパティを設定する場合は、<c>project</c>.<c>class</c> の形式を使用します。 <paramref name="Source" /> が指定されていない場合は、現在の Visual Basic プロジェクトのプロセス ID が使用されます。</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">任意。 エラーを説明する <see langword="String" /> 型の式。 省略した場合、<see langword="Number" /> プロパティの値が調べられます。 Visual Basic 実行時エラー コードに対応する可能性がある場合、<see langword="Error" /> 関数によって返される文字列は <see langword="Description" /> プロパティとして使用されます。 <see langword="Number" /> プロパティに対応する Visual Basic エラーがなかった場合は、"アプリケーション定義エラーまたはオブジェクト定義エラー" メッセージが使用されます。</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">任意。 このエラーのヘルプが含まれているヘルプ ファイルへの絶対パス。 省略した場合、Visual Basic は Visual Basic ヘルプ ファイルの完全修飾されたドライブ、パス、およびファイル名を使用します。</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">任意。 エラーのヘルプを提供する <paramref name="HelpFile" /> 内のトピックを識別するコンテキスト ID。 省略した場合、<see langword="Number" /> プロパティに対応するエラーの Visual Basic ヘルプ ファイルのコンテキスト ID が使用されます (存在する場合)。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">ファイル アクセス用の関数を呼び出すときに、使用するファイル属性を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">ファイルは前回のバックアップ以降に変更されています。 このメンバーは、Visual Basic 定数の <see langword="vbArchive" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">ディレクトリまたはフォルダー。 このメンバーは、Visual Basic 定数の <see langword="vbDirectory" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">非表示。 このメンバーは、Visual Basic 定数の <see langword="vbHidden" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">通常 (<see langword="Dir" /> および <see langword="SetAttr" /> の既定)。 このファイルには特殊文字は適用されません。 このメンバーは、Visual Basic 定数の <see langword="vbNormal" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">読み取り専用。 このメンバーは、Visual Basic 定数の <see langword="vbReadOnly" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">システム ファイル。 このメンバーは、Visual Basic 定数の <see langword="vbSystem" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">ボリューム ラベル。 この属性は、<see langword="SetAttr" /> では使用できません。 このメンバーは、Visual Basic 定数の <see langword="vbVolume" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">削除対象のディレクトリ内にファイルまたはディレクトリが存在する場合の処理を指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">ディレクトリとそのディレクトリの内容を削除します。 既定モード。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">ディレクトリが空でない場合、<see cref="T:System.IO.IOException" /> がスローされます。 この例外の <see langword="Data" /> プロパティには、削除できなかったファイルの一覧が格納されます。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">テキスト フィールドが区切り形式か固定幅形式かを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">フィールドが区切り形式であることを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">フィールドが固定幅形式であることを示します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">ドライブ、ファイル、ディレクトリを操作するためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">2 つのパスを結合し、適切な形式のパスを返します。</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />。 結合する 1 つ目のパス。</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />。 結合する 2 つ目のパス。</param>
      <returns vsli:raw="The combination of the specified paths.">指定されたパスの組み合わせ。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> または <paramref name="relativePath" /> のパスの形式が正しくありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">ディレクトリの内容を別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">ディレクトリの内容のコピー先の場所。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">コピー先のファイルは存在しますが、アクセスできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">ディレクトリの内容を別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">ディレクトリの内容のコピー先の場所。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">コピー先のファイルは存在しますが、アクセスできません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">ディレクトリの内容を別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">ディレクトリの内容のコピー先の場所。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">操作中にユーザーが [キャンセル] をクリックした場合の処理を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">コピー先のファイルは存在しますが、アクセスできません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">ディレクトリの内容を別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">ディレクトリの内容のコピー先の場所。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">コピー先のファイルは存在しますが、アクセスできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">コピーするファイル。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">ファイルのコピー先となる場所。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">コピー先のディレクトリにある同じ名前のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">コピーするファイル。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">ファイルのコピー先となる場所。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">コピーするファイル。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">ファイルのコピー先となる場所。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">操作中にユーザーが [キャンセル] をクリックした場合の処理を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">コピーするファイル。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">ファイルのコピー先となる場所。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">ディレクトリを作成します。</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">ディレクトリの名前および場所。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">ディレクトリ名が不正な場合。 たとえば、無効な文字が含まれているか、空白のみであることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">ディレクトリ名が長すぎます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">ディレクトリ名にコロン (":") だけが指定されている場合</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">作成するディレクトリの親ディレクトリが読み取り専用です。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">ユーザーがディレクトリを作成するためのアクセス許可を保持していません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">現在のディレクトリを取得または設定します。</summary>
      <returns vsli:raw="The current directory for file I/O operations.">ファイル I/O 操作の現在のディレクトリ。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">パスが無効です。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">ディレクトリを削除します。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">削除するディレクトリ。</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">削除対象のディレクトリ内にファイルまたはディレクトリが存在する場合の処理を指定します。 既定値は <see langword="DeleteDirectoryOption.DeleteAllContents" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">ディレクトリを削除します。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">削除するディレクトリ。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">ディレクトリを削除します。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">削除するディレクトリ。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">ユーザーが [キャンセル] をクリックした場合に例外をスローするかどうかを指定します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">ファイルを削除します。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">削除対象のファイルの名前とパス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">ファイルを削除します。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">削除対象のファイルの名前とパス。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">ファイルを削除します。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">削除対象のファイルの名前とパス。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">ユーザーが操作を取り消し、かつ <paramref name="onUserCancel" /> が <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> に設定されています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">指定されたディレクトリが存在する場合、<see langword="True" /> を返します。</summary>
      <param name="directory" vsli:raw="Path of the directory.">ディレクトリのパス。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">ディレクトリが存在する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 パラメーターがディレクトリではなく名前とファイルのパスを表していた場合は、このメソッドも <see langword="False" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">利用可能なすべてのドライブ名の読み取り専用コレクションを返します。</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">
        <see cref="T:System.IO.DriveInfo" /> オブジェクトとして使用できるすべてのドライブの読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">指定されたファイルが存在する場合、<see langword="True" /> を返します。</summary>
      <param name="file" vsli:raw="Name and path of the file.">ファイルの名前とパス。</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">ファイルが存在する場合は <see langword="True" /> を返します。それ以外の場合は <see langword="False" /> を返します。 パラメーターがファイルではなくディレクトリのパスを表していた場合は、このメソッドも <see langword="False" /> を返します。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">ファイル名がバックスラッシュ (\) で終わっています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory" vsli:raw="The directory to be searched.">検索するディレクトリ。</param>
      <param name="containsText" vsli:raw="The search text.">検索文字列。</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="True" /> です。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\.&lt;/code&gt; である) ことが考えられます。</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory" vsli:raw="The directory to be searched.">検索するディレクトリ。</param>
      <param name="containsText" vsli:raw="The search text.">検索文字列。</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="True" /> です。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">検索に使用するパターン。</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\.&lt;/code&gt; である) ことが考えられます。</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</summary>
      <param name="directory" vsli:raw="Name and path of directory.">ディレクトリの名前とパス。</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</summary>
      <param name="directory" vsli:raw="Name and path of directory.">ディレクトリの名前とパス。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">名前の検索に使用するパターン。</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">指定したワイルドカード文字の中に、<see langword="Nothing" />、空の文字列、または空白のみが含まれています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">指定したパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを返します。</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />。 ディレクトリのパス。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">指定されたパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">ディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">指定したドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクトを返します。</summary>
      <param name="drive" vsli:raw="Drive to be examined.">確認するドライブ。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">指定されたドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="drive" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">指定したファイルの <see cref="T:System.IO.FileInfo" /> オブジェクトを返します。</summary>
      <param name="file" vsli:raw="Name and path of the file.">ファイルの名前とパス。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">指定されたファイルの <see cref="T:System.IO.FileInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">パス名が不適切である場合。 たとえば、無効な文字が含まれている場合や、空白のみの場合などがあります。 ファイル名の末尾にスラッシュ記号が付いています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">パス文字列の途中にコロンが含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">パスが長すぎます。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">当該ファイルに対して、ユーザーがアクセス制御リスト (ACL: access control list) のアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory" vsli:raw="Directory to be searched.">検索するディレクトリ。</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">検索対象のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> が既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory" vsli:raw="Directory to be searched.">検索するディレクトリ。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">検索に使用するパターン。</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">検索対象のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> が既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">指定されたパスからファイル名を解析し、取り出します。</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">必須です。 解析対象のパス。 <see langword="String" />。</param>
      <returns vsli:raw="The file name from the specified path.">指定されたパスのファイル名部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">指定されたパスの親パスを返します。</summary>
      <param name="path" vsli:raw="Path to be examined.">確認するパス。</param>
      <returns vsli:raw="The parent path of the provided path.">指定されたパスの親パス。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">パスがルート パスであるため、親パスが存在しません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">一意な名前を持つ 0 バイトの一時ファイルをディスク上に作成し、そのファイルへの完全パスを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">一時ファイルの完全パスを保持する <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">移動先がルート ディレクトリであるか、移動元と移動先のパスが同じです。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されており、ファイルのサブディレクトリをコピーできません。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、操作を完了できませんでした。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">既存のディレクトリを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">移動するファイルのパス。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">ファイルの移動先となるディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">移動するファイルのパス。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">ファイルの移動先となるディレクトリのパス。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">移動するファイルのパス。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">ファイルの移動先となるディレクトリのパス。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合に、ユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">移動するファイルのパス。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">ファイルの移動先となるディレクトリのパス。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">フィールドの幅。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">フィールドの区切り記号。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">
        <see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</summary>
      <param name="file" vsli:raw="File to be read.">読み取るファイル。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">指定されたファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">
        <see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</summary>
      <param name="file" vsli:raw="File to be read.">読み取るファイル。</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">ファイルの内容に使用されるエンコーディング。 既定値は ASCII です。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">指定されたファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">
        <see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</summary>
      <param name="file" vsli:raw="File to be written to.">書き込み先のファイル。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">ファイル名の末尾にスラッシュが付いています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">
        <see cref="T:System.IO.StreamWriter" /> を開いて指定されたファイルに書き込みます。</summary>
      <param name="file" vsli:raw="File to be written to.">書き込み先のファイル。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">ファイルへの書き込み時に使用するエンコーディング。 既定値は ASCII です。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">ファイル名の末尾にスラッシュが付いています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">テキスト ファイルの内容をバイト配列として返します。</summary>
      <param name="file" vsli:raw="File to be read.">読み取るファイル。</param>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">ファイルの内容を保持する <see langword="Byte" /> 配列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">テキスト ファイルの内容を <see langword="String" /> として返します。</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">読み取るファイルの名前とパス。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">ファイルの内容を保持する <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">テキスト ファイルの内容を <see langword="String" /> として返します。</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">読み取るファイルの名前とパス。</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">ファイルの読み取り時に使用する文字エンコーディング。 既定値は、UTF-8 です。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">ファイルの内容を保持する <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">ディレクトリ名を変更します。</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">名前を変更するディレクトリのパスおよび名前。</param>
      <param name="newName" vsli:raw="New name for directory.">ディレクトリの新しい名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> は <see langword="Nothing" />です。  
または 
 <paramref name="newName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">
        <paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">ファイル名を変更します。</summary>
      <param name="file" vsli:raw="File to be renamed.">名前を変更するファイル。</param>
      <param name="newName" vsli:raw="New name of file.">新しいファイル名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" /> にパス情報が含まれているか、末尾にバックスラッシュ (\) が付いています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> は <see langword="Nothing" />です。  
または 
 <paramref name="newName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">
        <paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">バイナリ ファイルにデータを書き込みます。</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">書き込み先のファイルのパスと名前。</param>
      <param name="data" vsli:raw="Data to be written to the file.">ファイルに書き込むデータ。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">ファイルにテキストを書き込みます。</summary>
      <param name="file" vsli:raw="File to be written to.">書き込み先のファイル。</param>
      <param name="text" vsli:raw="Text to be written to file.">ファイルに書き込まれるテキスト。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">ファイルにテキストを書き込みます。</summary>
      <param name="file" vsli:raw="File to be written to.">書き込み先のファイル。</param>
      <param name="text" vsli:raw="Text to be written to file.">ファイルに書き込まれるテキスト。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">ファイルへの書き込み時に使用するエンコーディングを指定します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">
        <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> メソッドが、指定された形式で行を解析できなかった場合にスローされる例外です。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を格納する <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造体。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">指定したエラー メッセージを使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A message that describes the error.">エラーについて説明するメッセージ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">エラーを説明する <see cref="T:System.String" />。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">現在の例外の原因である <see cref="T:System.Exception" /> オブジェクト。 <see cref="P:System.Exception.InnerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">指定したエラー メッセージと、行番号を使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message for the exception.">例外のメッセージ。</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">形式に誤りのある行の行番号。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">エラー メッセージ、行番号、およびこの例外の原因である内部例外への参照を指定して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message for the exception.">例外のメッセージ。</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">形式に誤りのある行の行番号。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">現在の例外の原因である <see cref="T:System.Exception" />。 <see cref="P:System.Exception.InnerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">例外に関する情報を使用して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を格納する <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造体。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">形式に誤りのある行の行番号を取得します。</summary>
      <returns vsli:raw="The line number of the malformed line.">形式に誤りのある行の行番号。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">現在の例外の文字列形式を作成して返します。</summary>
      <returns vsli:raw="A string representation of the current exception.">現在の例外の文字列形式。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">ファイルを完全に削除するか、ごみ箱に移動するかを指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">ファイルまたはディレクトリを完全に削除します。 既定モード。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">ファイルまたはディレクトリをごみ箱に送ります。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">すべてのディレクトリまたは最上位レベルのディレクトリの、いずれを探索するのかを指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">指定されたディレクトリと、そこに含まれるすべてのサブディレクトリを検索します。 既定モード。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">指定されたディレクトリだけを検索し、サブディレクトリを検索から除外します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">一般的に参照されるディレクトリにアクセスするためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">
        <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> クラスの新しいインスタンスを返します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">すべてのユーザー用の Application Data ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the Application Data directory for the all users.">すべてのユーザー用の Application Data ディレクトリへのパス。</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">システム環境変数およびユーザー環境変数へのアクセスを制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">現在のユーザー用の Application Data ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the Application Data directory for the current user.">現在のユーザー用の Application Data ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">デスクトップ ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the Desktop directory.">デスクトップ ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">マイ ドキュメント ディレクトリを指すパス名を取得します。</summary>
      <returns vsli:raw="The path to the My Documents directory.">マイ ドキュメント ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">My Music ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the My Music directory.">マイ ミュージック ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">My Pictures ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the My Pictures directory.">マイ ピクチャ ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">Program Files ディレクトリへのパスを取得します。</summary>
      <returns vsli:raw="The path to the Program Files directory.">Program Filesディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">Programs ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the Programs directory.">Programs ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">Temp ディレクトリへのパス名を取得します。</summary>
      <returns vsli:raw="The path to the Temp directory.">Temp ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">構造化テキスト ファイルの解析に使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 解析するストリーム。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> から読み取ることができません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 解析するストリーム。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 ファイルからエンコーディングを判断できない場合に使用する文字エンコーディング。 既定値は <see cref="P:System.Text.Encoding.UTF8" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> または <paramref name="defaultEncoding" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> から読み取ることができません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 解析するストリーム。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 ファイルからエンコーディングを判断できない場合に使用する文字エンコーディング。 既定値は <see cref="P:System.Text.Encoding.UTF8" /> です。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />。 ファイルの先頭にあるバイト順序マークを検索するかどうかを示します。 既定値は <see langword="True" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> または <paramref name="defaultEncoding" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> から読み取ることができません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 解析するストリーム。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 ファイルからエンコーディングを判断できない場合に使用する文字エンコーディング。 既定値は <see cref="P:System.Text.Encoding.UTF8" /> です。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />。 ファイルの先頭にあるバイト順序マークを検索するかどうかを示します。 既定値は <see langword="True" /> です。</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />。 <see langword="TextFieldParser" /> オブジェクトを閉じるときに、<paramref name="stream" /> を開いたままにするかどうかを指定します。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> または <paramref name="defaultEncoding" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> から読み取ることができません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />。 解析する <see cref="T:System.IO.TextReader" /> ストリーム。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" /> が <see langword="Nothing" /> です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />。 解析するファイルの絶対パス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" /> が空の文字列です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />。 解析するファイルの絶対パス。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 ファイルからエンコーディングを判断できない場合に使用する文字エンコーディング。 既定値は <see cref="P:System.Text.Encoding.UTF8" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> が空の文字列であるか、<paramref name="defaultEncoding" /> が <see langword="Nothing" /> です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />。 解析するファイルの絶対パス。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 ファイルからエンコーディングを判断できない場合に使用する文字エンコーディング。 既定値は <see cref="P:System.Text.Encoding.UTF8" /> です。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />。 ファイルの先頭にあるバイト順序マークを検索するかどうかを示します。 既定値は <see langword="True" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> が空の文字列であるか、<paramref name="defaultEncoding" /> が <see langword="Nothing" /> です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">現在の <see langword="TextFieldParser" /> オブジェクトを閉じます。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">コメント トークンを定義します。 コメント トークンとは、コメント行であることを示すために、行頭に配置される文字列です。コメント トークンの配置された行は、パーサーによって無視されます。</summary>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトのすべてのコメント トークンを格納する文字列配列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">コメント トークンに空白が含まれています。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">テキスト ファイルの区切り記号を定義します。</summary>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトのすべてのフィールド区切り記号を格納する文字列配列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">区切り記号の値は、改行文字、空の文字列、または <see langword="Nothing" /> に設定されています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトによって使用されているリソースを解放します。</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">ブール型。 マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="True" />。アンマネージド リソースだけを解放する場合は <see langword="False" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">現在のカーソル位置とファイルの終端との間に、空行またはコメント行以外のデータが存在しない場合、<see langword="True" /> を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">読み取るデータが他にない場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">直前に発生した <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外の原因となった行を返します。</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">直前に発生した <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外の原因となった行。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">直前の <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外が発生した行の番号を返します。</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">直前の <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外が発生した行の番号。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">解析するテキスト ファイルの各列の幅を表します。</summary>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">解析するテキスト ファイルの各列の幅を格納する整数配列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">配列の最後のエントリ以外の場所で、幅の値がゼロ以下です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトがガベージ コレクションにより収集される前にリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">区切り記号入りファイルを解析する場合に、フィールドが引用符で囲まれているかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">フィールドが引用符で囲まれている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">現在の行番号を返します。ストリームから取り出す文字がなくなった場合は -1 を返します。</summary>
      <returns vsli:raw="The current line number.">現在の行番号。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">カーソルを進めずに、指定された文字数を読み込みます。</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">
        <see langword="Int32" />。 読み取る文字数。 必須です。</param>
      <returns vsli:raw="A string that contains the specified number of characters read.">指定数の読み取られた文字を格納する文字列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> が 0 未満です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">現在行のすべてのフィールドを読み込んで文字列の配列として返し、次のデータが格納されている行にカーソルを進めます。</summary>
      <returns vsli:raw="An array of strings that contains field values for the current line.">現在の行のフィールド値を格納する文字列の配列。</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">指定された形式を使ってフィールドを解析できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">現在の行を文字列として返し、カーソルを次の行に進めます。</summary>
      <returns vsli:raw="The current line from the file or stream.">ファイルまたはストリームの現在の行。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">テキスト ファイルの残りの部分を読み込み、文字列として返します。</summary>
      <returns vsli:raw="The remaining text from the file or stream.">ファイルまたはストリームの残りのテキスト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">リーダーの区切り記号を指定された値に設定し、フィールドの種類を <see langword="Delimited" /> に設定します。</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">
        <see langword="String" /> 型の配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">区切り記号の長さが 0 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">リーダーの区切り記号を指定の値に設定します。</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">
        <see langword="Integer" /> の配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトによって使用されているリソースを解放します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">解析対象のファイルが区切り形式か固定幅形式かを示します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">解析対象のファイルが区切り形式か固定幅形式かを示す <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 値。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">フィールド値から前後の空白をトリムするかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">フィールド値から前後の空白をトリムする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">ユーザーが操作の途中で [キャンセル] をクリックした場合に、例外をスローするかどうかを指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">ユーザーによって [キャンセル] がクリックされても何もしません。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">ユーザーによって [キャンセル] がクリックされた場合に、例外をスローします。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">ファイルまたはディレクトリをコピー、削除、または移動する際、ダイアログ ボックスを表示するかどうかを指定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">プログレス ダイアログ ボックスおよびすべてのエラー ダイアログ ボックスを表示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">エラー ダイアログ ボックスだけを表示し、プログレス ダイアログ ボックスは非表示にします。 既定モード。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileSystem" /> モジュールに含まれるプロシージャを使って、ファイル、ディレクトリ、またはフォルダー、およびシステムの操作を実行します。 <see langword="My" /> 機能を使用すると、<see langword="FileSystem" /> モジュールを使用した場合よりファイル I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">現在のディレクトリまたはフォルダーを変更します。 <see langword="My" /> 機能を使用すると、<see langword="ChDir" /> 関数を使用した場合より I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />」を参照してください。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">必須です。 新しい既定ディレクトリまたはフォルダーになるディレクトリまたはフォルダーを識別する文字列式です。 <paramref name="Path" /> にはドライブを含めることができます。 ドライブを指定しない場合、<see langword="ChDir" /> は現在のドライブの既定ディレクトリまたは既定フォルダーを変更します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" /> が空です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定されたドライブが無効です。または利用できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">現在のドライブを変更します。</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">必須です。 既存のドライブを指定する文字列式。 長さ 0 の文字列 ("") を指定した場合、現在のドライブは変更されません。 <paramref name="Drive" /> 引数が複数の文字で構成される文字列の場合、<see langword="ChDrive" /> は先頭の文字だけを使用します。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定されたドライブが無効です。または利用できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">現在のドライブを変更します。</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">必須です。 既存のドライブを指定する文字列式。 長さ 0 の文字列 ("") を指定した場合、現在のドライブは変更されません。 <paramref name="Drive" /> 引数が複数の文字で構成される文字列の場合、<see langword="ChDrive" /> は先頭の文字だけを使用します。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定されたドライブが無効です。または利用できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">現在のパスを表す文字列を返します。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> を使用すると、<see langword="CurDir" /> を使用した場合よりも、ファイル I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />」を参照してください。</summary>
      <returns vsli:raw="A string representing the current path.">現在のパスを表す文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">現在のパスを表す文字列を返します。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> を使用すると、<see langword="CurDir" /> を使用した場合よりも、ファイル I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />」を参照してください。</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">任意。 既存のドライブを指定する <see langword="Char" /> 式です。 ドライブが指定されていない場合、または <paramref name="Drive" /> が長さ 0 の文字列 ("") である場合は、<see langword="CurDir" /> により現在のドライブのパスが返されます。</param>
      <returns vsli:raw="A string representing the current path.">現在のパスを表す文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">指定パターンまたはファイル属性と一致するファイル名、ディレクトリ名、フォルダー名を表す文字列、またはドライブのボリューム ラベルを表す文字列を返します。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> を使用すると、<see langword="Dir" /> 関数を使用した場合より I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />」を参照してください。</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">指定されたパターンまたはファイル属性と一致するファイル名、ディレクトリ名、フォルダー名を表す文字列、またはドライブのボリューム ラベルを表す文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">指定パターンまたはファイル属性と一致するファイル名、ディレクトリ名、フォルダー名を表す文字列、またはドライブのボリューム ラベルを表す文字列を返します。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> を使用すると、<see langword="Dir" /> 関数を使用した場合より I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />」を参照してください。</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">任意。 ファイル名、ディレクトリまたはフォルダー名、あるいはドライブ ボリューム ラベルを指定する文字列式です。 <paramref name="PathName" /> が見つからない場合は、長さ 0 の文字列 (<see langword="&quot;&quot;" />) が返されます。</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">任意。 値がファイル属性を指定する列挙式または数式。 省略した場合、<see langword="Dir" /> は、<paramref name="Pathname" /> に一致する、属性のないファイルを返します。</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">指定されたパターンまたはファイル属性と一致するファイル名、ディレクトリ名、フォルダー名を表す文字列、またはドライブのボリューム ラベルを表す文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">
        <see langword="True" /> モードまたはシーケンシャル <see langword="Random" /> モードで開いたファイルの現在位置がファイルの末尾に達している場合、ブール値 <see langword="Input" /> を返します。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">必須です。 有効なファイル番号が含まれている <see langword="Integer" /> 型の値。</param>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">
        <see langword="True" /> モードまたはシーケンシャル <see langword="Random" /> モードで開いたファイルの現在位置がファイルの末尾に達している場合、ブール値 <see langword="Input" /> です。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">
        <see langword="FileOpen" /> 関数を使用して開いたファイルのファイル モードを表す列挙体を返します。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> を使用すると、<see langword="FileAttr" /> 関数を使用した場合より I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">必須です。 <see langword="Integer" />。 任意の有効なファイル数。</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">次の列挙型値は、ファイルのアクセス モードを示します。 
  [値] 
  モード 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">
        <see langword="FileOpen" /> 関数で開いたファイルへの入出力を終了して、ファイルを閉じます。 <see langword="My" /> を使用すると、ファイル I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">任意。 閉じる対象となる、0 以上のチャネルで構成されるパラメーター配列。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> は存在しません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">ファイルをコピーします。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> を使用すると、<see langword="FileCopy" /> を使用した場合よりも、ファイル I/O 操作の生産性およびパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />」を参照してください。</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">必須です。 コピーするファイルの名前を指定する文字列式です。 <paramref name="Source" /> には、コピー先ファイルのディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">必須です。 コピー先のファイルの名前を指定する文字列式です。 <paramref name="Destination" /> には、コピー先ファイルのディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> または <paramref name="Destination" /> が無効であるか、指定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">ファイルは既に開いています。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">ファイルが存在しません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">ファイルへの書き込み日時を示す <see langword="Date" /> 値を返します。 <see langword="My" /> 機能を使用すると、<see langword="FileDateTime" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />」を参照してください。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">必須です。 ファイル名を指定する文字列式です。 <paramref name="PathName" /> には、ディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">ファイルの作成日時または最終変更日時を示す <see langword="Date" /> 値を返します。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" /> が無効です。またはワイルドカードを含んでいます。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">対象のファイルが存在しません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">任意。 文字列を書き込む場合のみ適用します。 配列を動的として扱うかどうか、およびサイズと境界を表す配列記述子が必要かどうかを指定します。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">任意。 文字列を書き込む場合のみ適用します。 長さを表す文字列に対して 2 バイトの記述子を書き込むかどうかを指定します。 既定値は、<see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">任意。 文字列を書き込む場合のみ適用します。 長さを表す文字列に対して 2 バイトの記述子を書き込むかどうかを指定します。 既定値は、<see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。 <see langword="My" /> 機能を使用すると、<see langword="FileGet" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開いたディスク ファイルからデータを読み込んで変数に格納します。  <see langword="My" /> 機能を使用すると、<see langword="FileGetObject" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必須です。 データの読み込み先となる有効な変数名。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">任意。 読み込みを開始する位置の、レコード数 (<see langword="Random" /> モードのファイル) またはバイト数 (<see langword="Binary" /> モードのファイル)。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">ファイルの長さをバイト数で指定する値を返します。 <see langword="My" /> 機能を使用すると、<see langword="FileLen" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />」を参照してください。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">必須です。 ファイルを指定する文字列式です。 <paramref name="PathName" /> には、ディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <returns vsli:raw="The length of a file in bytes.">バイト単位のファイルの長さです。</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">ファイルが存在しません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">ファイルを開いて入出力を行います。 <see langword="My" /> 機能を使用すると、<see langword="FileOpen" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">必須です。 任意の有効なファイル数。 <see langword="FreeFile" /> 関数を使用して、次に使用できるファイル番号を取得します。</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">必須です。 ファイル名を指定する文字列式。ディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">必須です。 ファイル モード (<see langword="Append" />、<see langword="Binary" />、<see langword="Input" />、<see langword="Output" />、または <see langword="Random" />) を指定する列挙体。 詳細については、「<see cref="T:Microsoft.VisualBasic.OpenMode" />」を参照してください。</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">任意。 開いているファイルで許可されている操作 (<see langword="Read" />、<see langword="Write" />、または <see langword="ReadWrite" />) を示す列挙体。 既定値は <see langword="ReadWrite" /> です。 詳細については、「<see cref="T:Microsoft.VisualBasic.OpenAccess" />」を参照してください。</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">任意。 他のプロセスによって開かれたファイルで許可されていない操作 (<see langword="Shared" />、<see langword="Lock Read" />、<see langword="Lock Write" />、および <see langword="Lock Read Write" />) を指定する列挙体。 既定値は <see langword="Lock Read Write" /> です。 詳細については、「<see cref="T:Microsoft.VisualBasic.OpenShare" />」を参照してください。</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">任意。 32,767 以下の値 (バイト単位)。 ランダム アクセス ファイルの場合は、レコード長を表します。 シーケンシャル ファイルの場合は、バッファー内の文字数を表します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">レコード長が、-1 ではない負の値です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" /> が既に開かれています。または <paramref name="FileName" /> が無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">任意。 文字列を書き込む場合のみ適用します。 配列を動的として扱うかどうか、および長さを表す文字列の配列記述子を書き込むかどうかを指定します。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">任意。 文字列を書き込む場合のみ適用します。 長さを表す文字列に対して 2 バイトの記述子を書き込むかどうかを指定します。 既定値は、<see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">任意。 文字列を書き込む場合のみ適用します。 長さを表す文字列に対して 2 バイトの記述子を書き込むかどうかを指定します。 既定値は、<see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。 <see langword="My" /> 機能を使用すると、<see langword="FilePut" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> は &lt; 1 で、-1 と等しくありません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">変数の内容をディスク上のファイルに書き込みます。  <see langword="My" /> 機能を使用すると、<see langword="FilePutObject" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必須です。 ディスクに書き込まれるデータを保持する有効な変数の名前。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">任意。 書き込みを始めるレコード番号 (<see langword="Random" /> モードのファイル) またはバイト位置 (<see langword="Binary" /> モードのファイル)。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="FileOpen" /> 関数を使用して開いたファイルに出力行の桁数を割り当てます。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">必須です。 改行される前に 1 行に表示できる文字数を表す 0 から 255 の範囲の数式。 <paramref name="RecordWidth" /> が 0 の場合は、行の長さに制限がないことを示します。 <paramref name="RecordWidth" /> の既定値は 0 です。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="Integer" /> 関数で使用できる次のファイル番号を表す <see langword="FileOpen" /> 値を返します。</summary>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="FileOpen" /> 関数で使用できる次のファイル番号を表す整数値。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">使用中のファイルが 255 個を超えています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">ファイル、ディレクトリ、またはフォルダーの属性を表す <see langword="FileAttribute" /> 型の値を返します。 <see langword="My" /> 機能を使用すると、<see langword="FileAttribute" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">必須です。 ファイル、ディレクトリ、またはフォルダーの名前を指定する文字列式です。 <paramref name="PathName" /> には、ディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <returns vsli:raw="A bitwise combination of the enumeration values.">列挙値のビットごとの組み合わせ。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" /> が無効です。またはワイルドカードを含んでいます。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">対象のファイルが存在しません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">開いているシーケンシャル ファイルからデータを読み込み、そのデータを変数に代入します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必須です。 ファイルから読み込まれた値を割り当てられた変数。配列変数やオブジェクト変数は指定できません。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="String" /> モードまたは <see langword="Input" /> モードで開いたファイルから読み取る文字を表す文字列型 (<see langword="Binary" />) の値を返します。 <see langword="My" /> 機能を使用すると、<see langword="InputString" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">必須です。 読み込む文字数を指定する有効な任意の数式。</param>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">
        <see langword="Input" /> モードまたは <see langword="Binary" /> モードで開いたファイルからの文字が格納された文字列です。 <see langword="My" /> 機能を使用すると、<see langword="InputString" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> は存在しません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" /> は &lt; 0 または &gt; 214 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">ファイルをディスクから削除します。 <see langword="My" /> 機能を使用すると、<see langword="Kill" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">必須です。 削除する 1 つ以上のファイル名を指定する文字列式です。 <paramref name="PathName" /> には、ディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">対象のファイルが開かれています。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">対象のファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">アクセス許可は拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">開かれたシーケンシャル ファイルから 1 行を読み込み、<see langword="String" /> 変数に割り当てます。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">開かれたシーケンシャル ファイルから 1 行を読み込み、<see langword="String" /> 変数に割り当てます。</returns>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">ファイルの終端に達しました。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> は存在しません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">開かれたファイル内の現在の読み込みと書き込みの位置を指定する値を返します。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">必須です。 有効な任意の <see langword="Integer" /> 型のファイル番号。</param>
      <returns vsli:raw="The current read/write position in an open file.">開かれたファイル内の現在の読み取り/書き込み位置です。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 関数を使用して開かれたファイルの全部または一部に対して、他のプロセスからのアクセスを制御します。 <see langword="My" /> 機能を使用すると、<see langword="Lock" /> および <see langword="Unlock" /> を使用するよりもファイル I/O 処理の生産性とパフォーマンスが格段に向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 関数を使用して開かれたファイルの全部または一部に対して、他のプロセスからのアクセスを制御します。 <see langword="My" /> 機能を使用すると、<see langword="Lock" /> および <see langword="Unlock" /> を使用するよりもファイル I/O 処理の生産性とパフォーマンスが格段に向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">任意。 ロックまたはアンロックされる唯一のレコードまたはバイトの番号。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 関数を使用して開かれたファイルの全部または一部に対して、他のプロセスからのアクセスを制御します。 <see langword="My" /> 機能を使用すると、<see langword="Lock" /> および <see langword="Unlock" /> を使用するよりもファイル I/O 処理の生産性とパフォーマンスが格段に向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">任意。 ロックまたはアンロックされる最初のレコードまたはバイトの番号。</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">任意。 ロックまたはアンロックされる最後のレコードまたはバイトの番号。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileOpen" /> 関数を使用して開かれたファイルのサイズをバイト単位で返します。 <see langword="My" /> 機能を使用すると、<see langword="LOF" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">必須です。 有効なファイル番号が格納された整数です。</param>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">
        <see langword="FileOpen" /> 関数を使用して開かれたファイルのサイズ (バイト単位)。 <see langword="My" /> 機能を使用すると、<see langword="LOF" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">新しいディレクトリを作成します。 <see langword="My" /> 機能を使用すると、<see langword="MkDir" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />」を参照してください。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">必須です。 作成されるディレクトリを識別する文字列式です。 <paramref name="Path" /> にはドライブを含めることができます。 ドライブを指定しない場合、<see langword="MkDir" /> は現在のドライブに新しいディレクトリを作成します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> が指定されていません。または空です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">アクセス許可は拒否されました。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">ディレクトリが既に存在しています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">表示形式データをシーケンシャル ファイルに書き込みます。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">任意。 ファイルへ書き込む 0 個以上のコンマで区切られた式。  
<paramref name="Output" /> 引数の設定は以下の通りです。 
 <see langword="T:System.IO.IOException" />:ファイル モードが無効です。  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> が存在しません。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">表示形式データをシーケンシャル ファイルに書き込みます。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">任意。 ファイルへ書き込む 0 個以上のコンマで区切られた式。  
<paramref name="Output" /> 引数の設定は以下の通りです。 
 <see langword="T:System.IO.IOException" />:ファイル モードが無効です。  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> が存在しません。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">ディスク ファイルまたはディレクトリの名前を変更します。 <see langword="My" /> 機能を使用すると、<see langword="Rename" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">必須です。 既存のファイルの名前と場所を指定する文字列式です。 <paramref name="OldPath" /> には、ファイルのディレクトリおよびドライブを含めることができます。</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">必須です。 新しいファイルの名前と場所を指定する文字列式です。 <paramref name="NewPath" /> には、出力先のディレクトリおよびドライブを含めることができます。 <paramref name="NewPath" /> には、既に存在しているファイル名は指定できません。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">パスが無効です。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">
        <paramref name="OldPath" /> ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">異なるデバイスには名前を変更できません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileOpen" /> 関数を使用して開いたすべてのディスク ファイルを閉じます。 <see langword="My" /> 機能を使用すると、<see langword="Reset" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">既存のディレクトリを削除します。 <see langword="My" /> 機能を使用すると、<see langword="RmDir" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />」を参照してください。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">必須です。 削除するディレクトリまたはフォルダーを識別する文字列式です。 <paramref name="Path" /> にはドライブを含めることができます。 ドライブを指定しない場合、<see langword="RmDir" /> は現在のドライブのディレクトリを削除します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> が指定されていません。または空です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">対象のディレクトリにファイルが存在しています。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">ディレクトリが存在していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Long" /> 関数を使用して開いたファイル内の現在の読み込み位置または書き込み位置を示す <see langword="FileOpen" /> を返します。また、<see langword="FileOpen" /> 関数で開いたファイルの、次に読み込みまたは書き込みを行う位置を設定します。 <see langword="My" /> 機能を使用すると、<see langword="Seek" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">必須です。 有効なファイル番号が含まれている <see langword="Integer" /> 型の値。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="Long" /> 関数を使用して開いたファイル内の現在の読み込み位置または書き込み位置を示す <see langword="FileOpen" />。または、<see langword="FileOpen" /> 関数を使用して開いたファイルの、次に読み込みまたは書き込みを行う位置を設定します。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Long" /> 関数を使用して開いたファイル内の現在の読み込み位置または書き込み位置を示す <see langword="FileOpen" /> を返します。また、<see langword="FileOpen" /> 関数で開いたファイルの、次に読み込みまたは書き込みを行う位置を設定します。 <see langword="My" /> 機能を使用すると、<see langword="Seek" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">必須です。 有効なファイル番号が含まれている <see langword="Integer" /> 型の値。</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">必須です。 次の読み書き操作が発生する場所を示す 1 から 2,147,483,647 の範囲の数値。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">ファイルの属性情報を設定します。 <see langword="My" /> 機能を使用すると、<see langword="SetAttr" /> よりもファイル I/O 処理の生産性とパフォーマンスが向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">必須です。 ファイル名を指定する文字列式です。 <paramref name="PathName" /> にはディレクトリまたはフォルダー、およびドライブを含めることができます。</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">必須です。 定数式または数式の合計がファイル属性を指定する場合の定数式または数式。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">
        <paramref name="Attribute" /> の型が無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">
        <see langword="Print" /> 関数または <see langword="PrintLine" /> 関数と共に使用し、出力の位置を移動させます。</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">必須です。 リストの次の式を表示または出力する前に挿入する空白の数。</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">
        <see langword="Print" /> 関数または <see langword="PrintLine" /> 関数と共に使用し、出力の位置を移動させます。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 関数または <see langword="PrintLine" /> 関数と共に使用し、出力の位置を移動させます。</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 関数または <see langword="PrintLine" /> 関数と共に使用し、出力の位置を移動させます。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 関数または <see langword="PrintLine" /> 関数と共に使用し、出力の位置を移動させます。</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">任意。 リスト内の次の式を表示または出力する前に移動する先の列番号。 省略した場合、<see langword="TAB" /> は挿入位置を次の印字領域の最初に移動します。</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 関数または <see langword="PrintLine" /> 関数と共に使用し、出力の位置を移動させます。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 関数を使用して開かれたファイルの全部または一部に対して、他のプロセスからのアクセスを制御します。 <see langword="My" /> 機能を使用すると、<see langword="Lock" /> および <see langword="Unlock" /> を使用するよりもファイル I/O 処理の生産性とパフォーマンスが格段に向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 関数を使用して開かれたファイルの全部または一部に対して、他のプロセスからのアクセスを制御します。 <see langword="My" /> 機能を使用すると、<see langword="Lock" /> および <see langword="Unlock" /> を使用するよりもファイル I/O 処理の生産性とパフォーマンスが格段に向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">任意。 ロックまたはアンロックされる唯一のレコードまたはバイトの番号。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 関数を使用して開かれたファイルの全部または一部に対して、他のプロセスからのアクセスを制御します。 <see langword="My" /> 機能を使用すると、<see langword="Lock" /> および <see langword="Unlock" /> を使用するよりもファイル I/O 処理の生産性とパフォーマンスが格段に向上します。 詳細については、「<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />」を参照してください。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必須です。 任意の有効なファイル数。</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">任意。 ロックまたはアンロックされる最初のレコードまたはバイトの番号。</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">任意。 ロックまたはアンロックされる最後のレコードまたはバイトの番号。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">シーケンシャル ファイルにデータを書き込みます。 <see langword="Write" /> を使用して書き込まれたデータは通常、<see langword="Input" /> を使用してファイルから読み込まれます。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">必須です。 任意の有効なファイル数を含む <see langword="Integer" /> 式。</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">任意。 ファイルへ書き込む 1 個以上のコンマで区切られた式。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">ファイル モードが無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">シーケンシャル ファイルにデータを書き込みます。 <see langword="Write" /> を使用して書き込まれたデータは通常、<see langword="Input" /> を使用してファイルから読み込まれます。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">必須です。 任意の有効なファイル数を含む <see langword="Integer" /> 式。</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">任意。 ファイルへ書き込む 1 個以上のコンマで区切られた式。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">
        <see langword="Financial" /> モジュールに含まれるプロシージャを使って、財務関連の操作を実行します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">倍率逓減法などの指定した方法を使用して算出された、特定の期における資産の減価償却費を示す値を返します。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必須です。 資産を購入した時点での価格です。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必須です。 耐用年数が終了した時点での資産の価値です。</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">必須です。 資産の耐用年数です。</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">必須です。 減価償却費を計算する期です。</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">任意。 減価償却率です。 省略した場合は、2 (倍率逓減法) を指定したものと見なされます。</param>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">倍率逓減法などの指定した方法を使用して算出された、特定の期における資産の減価償却費です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" /> &lt;= 0、<paramref name="Salvage" /> &lt; 0、<paramref name="Period" /> &lt;= 0、または <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいて、投資の将来価値を指定する値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必須です。 投資期間を通じての一定の利率です。 たとえば、10% の年率 (APR) で自動車ローンを利用する際、毎月の支払いを指定した場合の月々の利率は 0.1/12 (0.0083) になります。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必須です。 投資期間全体での支払い回数の合計です。 たとえば、4 年間、月々分割払い自動車ローンを利用した場合、合計で 4 × 12 (= 48) の返済期間があることになります。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">必須です。 毎回の支払い額です。 通常、支払い額には元金と利息が含まれます。支払い額を投資期間内に変更することはできません。</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">任意。 現在の投資額、つまり将来行われる一連の支払いを現時点で一括支払いした場合の合計金額です。 たとえば、自動車を購入するために資金を借り入れた場合、ローン金額は、毎月の返済の対象となる貸手にとっての現在価値を表します。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 各期の期末に支払う場合は <see langword="DueDate.EndOfPeriod" /> を、各期の期首に支払う場合は <see langword="DueDate.BegOfPeriod" /> をそれぞれ引数に指定します。 省略した場合は、<see langword="DueDate.EndOfPeriod" /> を指定したものと見なされます。</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいた投資の将来価値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいて、特定の期に支払う金利を指定する値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必須です。 投資期間を通じての一定の利率です。 たとえば、10% の年率 (APR) で自動車ローンを利用する際、毎月の支払いを指定した場合の月々の利率は 0.1/12 (0.0083) になります。</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">必須です。 金利支払い額を求める期を示す、1 から <paramref name="NPer" /> の範囲です。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必須です。 投資期間全体での支払い回数の合計です。 たとえば、4 年間、月々分割払い自動車ローンを利用した場合、合計で 4 × 12 (= 48) の返済期間があることになります。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必須です。 現在の投資額、つまり将来行われる一連の支払いや受け取りを現時点で一括した場合の合計金額です。 たとえば、自動車を購入するために資金を借り入れた場合、ローン金額は、毎月の返済の対象となる貸手にとっての現在価値を表します。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">任意。 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支です。 たとえば、ローンの将来価値は 0 です。最終支払い後の価値であるためです。 ただし、子供の教育費のため、18 年間かけて 50 万円を貯金する場合、この 50 万円は将来価値になります。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 この引数には、支払期末に支払う場合は <c>DueDate.EndOfPeriod</c> を、期首に支払う場合は <c>DueDate.BegOfPeriod</c> を指定する必要があります。 省略した場合は、<c>DueDate.EndOfPeriod</c> と見なされます。</param>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいて、特定の期に支払う金利です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" /> &lt;= 0 または <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">一連の定期的なキャッシュ フロー (支払いと受け取り) の内部利益率を指定する値を返します。</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必須です。 キャッシュ フローの値を示す <see langword="Double" /> 型の配列。 配列には、負の値 (支払い額) と正の値 (受け取り額) が少なくとも 1 つずつ含まれている必要があります。</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">任意。 <see langword="IRR" /> 関数によって返される推定値を示すオブジェクト。 省略した場合、<paramref name="Guess" /> に 0.1 (10%) を指定したものと見なされます。</param>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">一連の定期的なキャッシュ フロー (支払いと受け取り) の内部利益率です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">配列引数の値が無効または <paramref name="Guess" /> &lt;= -1 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">一連の定期的なキャッシュ フロー (支払いと受け取り) の修正内部利益率を指定する値を返します。</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必須です。 キャッシュ フローの値を示す <see langword="Double" /> 型の配列。 配列には、負の値 (支払い額) と正の値 (受け取り額) が少なくとも 1 つずつ含まれている必要があります。</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">必須です。 支払い額に対する利率です。</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">必須です。 現金の再投資に対する受け取り利率です。</param>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">一連の定期的なキャッシュ フロー (支払いと受け取り) の修正内部利益率です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> のランクが 1 ではない、<paramref name="FinanceRate" /> = -1、または <paramref name="ReinvestRate" /> = -1。</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">0 による除算が行われました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいて、投資に必要な期間を指定する値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必須です。 投資期間を通じての一定の利率です。 たとえば、10% の年率 (APR) で自動車ローンを利用する際、毎月の支払いを指定した場合の月々の利率は 0.1/12 (0.0083) になります。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">必須です。 毎回の支払い額です。 通常、支払い額には元金と利息が含まれます。支払い額を投資期間内に変更することはできません。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必須です。 現在の投資額、つまり将来行われる一連の支払いや受け取りを現時点で一括した場合の合計金額です。 たとえば、自動車を購入するために資金を借り入れた場合、ローン金額は、毎月の返済の対象となる貸手にとっての現在価値を表します。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">任意。 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支です。 たとえば、ローンの将来価値は 0 です。最終支払い後の価値であるためです。 ただし、子供の教育費のため、18 年間かけて 50 万円を貯金する場合、この 50 万円は将来価値になります。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 この引数には、支払期末に支払う場合は <c>DueDate.EndOfPeriod</c> を、期首に支払う場合は <c>DueDate.BegOfPeriod</c> を指定する必要があります。 省略した場合は、<c>DueDate.EndOfPeriod</c> と見なされます。</param>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいた、投資に必要な期間です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" /> = 0 かつ <paramref name="Pmt" /> = 0 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">一連の定期的なキャッシュ フロー (支払いと受け取り) および公定歩合に基づいて、出資の正味現在価値を指定する値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">必須です。 投資期間を通じて一定である公定歩合であり、小数点を使用して示されます。</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必須です。 キャッシュ フローの値を示す <see langword="Double" /> 型の配列。 配列には、負の値 (支払い額) と正の値 (受け取り額) が少なくとも 1 つずつ含まれている必要があります。</param>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">一連の定期的なキャッシュ フロー (支払いと受け取り) および公定歩合に基づいて、出資の正味現在価値です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> が <see langword="Nothing" />、<paramref name="ValueArray" /> のランクが &lt;&gt; 1、または <paramref name="Rate" /> = -1 です</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいて、投資に必要な定期支払い額を指定する値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必須です。 投資期間を通じての一定の利率です。 たとえば、10% の年率 (APR) で自動車ローンを利用する際、毎月の支払いを指定した場合の月々の利率は 0.1/12 (0.0083) になります。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">必須です。 投資期間全体での支払い回数の合計です。 たとえば、4 年間、月々分割払い自動車ローンを利用した場合、合計で 4 × 12 (= 48) の返済期間があることになります。</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必須です。 現在の投資額、つまり将来行われる一連の支払いを現時点で一括支払いした場合の合計金額です。 たとえば、自動車を購入するために資金を借り入れた場合、ローン金額は、毎月の返済の対象となる貸手にとっての現在価値を表します。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">任意。 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支です。 たとえば、ローンの将来価値は 0 です。最終支払い後の価値であるためです。 ただし、子供の教育費のため、18 年間かけて 50 万円を貯金する場合、この 50 万円は将来価値になります。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 この引数には、支払期末に支払う場合は <c>DueDate.EndOfPeriod</c> を、期首に支払う場合は <c>DueDate.BegOfPeriod</c> を指定する必要があります。 省略した場合は、<c>DueDate.EndOfPeriod</c> と見なされます。</param>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づく、投資に必要な定期支払い額です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいて、指定された期間の元金の支払いを示す値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必須です。 投資期間を通じての一定の利率です。 たとえば、10% の年率 (APR) で自動車ローンを利用する際、毎月の支払いを指定した場合の月々の利率は 0.1/12 (0.0083) になります。</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">必須です。 金利支払い額を求める期を示す、1 から <paramref name="NPer" /> の範囲です。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必須です。 投資期間全体での支払い回数の合計です。 たとえば、4 年間、月々分割払い自動車ローンを利用した場合、合計で 4 × 12 (= 48) の返済期間があることになります。</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必須です。 将来行われる一連の支払いや受け取りを現時点で一括した場合の合計金額です。 たとえば、自動車を購入するために資金を借り入れた場合、ローン金額は、毎月の返済の対象となる貸手にとっての現在価値を表します。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">任意。 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支です。 たとえば、ローンの将来価値は 0 です。最終支払い後の価値であるためです。 ただし、子供の教育費のため、18 年間かけて 50 万円を貯金する場合、この 50 万円は将来価値になります。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 この引数には、支払期末に支払う場合は <c>DueDate.EndOfPeriod</c> を、期首に支払う場合は <c>DueDate.BegOfPeriod</c> を指定する必要があります。 省略した場合は、<c>DueDate.EndOfPeriod</c> と見なされます。</param>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">定期的な定額の支払いおよび一定した利率に基づいた、指定された期間の元金の支払いです。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" /> &lt;=0 または <paramref name="Per" /> &gt; <paramref name="NPer" /> です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">将来の定期的な定額の支払いおよび一定した利率に基づいて、投資の現在価値を指定する値を返します。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必須です。 投資期間を通じての一定の利率です。 たとえば、10% の年率 (APR) で自動車ローンを利用する際、毎月の支払いを指定した場合の月々の利率は 0.1/12 (0.0083) になります。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">必須です。 投資期間全体での支払い回数の合計です。 たとえば、4 年間、月々分割払い自動車ローンを利用した場合、4 × 12 (= 48) の返済期間があることになります。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">必須です。 毎回の支払い額です。 通常、支払い額には元金と利息が含まれます。支払い額を投資期間内に変更することはできません。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">任意。 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支です。 たとえば、ローンの将来価値は 0 です。最終支払い後の価値であるためです。 ただし、子供の教育費のため、18 年間かけて 50 万円を貯金する場合、この 50 万円は将来価値になります。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 この引数には、支払期末に支払う場合は <c>DueDate.EndOfPeriod</c> を、期首に支払う場合は <c>DueDate.BegOfPeriod</c> を指定する必要があります。 省略した場合は、<c>DueDate.EndOfPeriod</c> と見なされます。</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">将来の定期的な定額の支払いおよび一定した利率に基づいた、投資の現在価値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">投資期間を通じての利率を指定する値を返します。</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">必須です。 投資期間全体での支払い回数の合計です。 たとえば、4 年間、月々分割払い自動車ローンを利用した場合、合計で 4 × 12 (= 48) の返済期間があることになります。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">必須です。 毎回の支払い額です。 通常、支払い額には元金と利息が含まれます。支払い額を投資期間内に変更することはできません。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必須です。 現在の投資額、つまり将来行われる一連の支払いや受け取りを現時点で一括した場合の合計金額です。 たとえば、自動車を購入するために資金を借り入れた場合、ローン金額は、毎月の返済の対象となる貸手にとっての現在価値を表します。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">任意。 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支です。 たとえば、ローンの将来価値は 0 です。最終支払い後の価値であるためです。 ただし、子供の教育費のため、18 年間かけて 50 万円を貯金する場合、この 50 万円は将来価値になります。 省略した場合は、0 と見なされます。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">任意。 支払い期日を示すオブジェクト型 <see cref="T:Microsoft.VisualBasic.DueDate" /> の値。 この引数には、支払期末に支払う場合は <c>DueDate.EndOfPeriod</c> を、期首に支払う場合は <c>DueDate.BegOfPeriod</c> を指定する必要があります。 省略した場合は、<c>DueDate.EndOfPeriod</c> と見なされます。</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">任意。 <see langword="Rate" /> によって返される推定値です。 省略した場合、<paramref name="Guess" /> に 0.1 (10%) を指定したものと見なされます。</param>
      <returns vsli:raw="The interest rate per period for an annuity.">投資期間を通じての利率です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" /> &lt;= 0 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">定額法を用いて資産の 1 期あたりの減価償却費を示す値を返します。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必須です。 資産を購入した時点での価格です。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必須です。 耐用年数が終了した時点での資産の価値です。</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">必須です。 資産の耐用年数です。</param>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">定額法を用いて算出される、資産の 1 期あたりの減価償却費です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0 です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">定額逓減法を使用して、指定した期の減価償却費を示す値を返します。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必須です。 資産を購入した時点での価格です。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必須です。 耐用年数が終了した時点での資産の価値です。</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">必須です。 資産の耐用年数です。</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">必須です。 減価償却費を計算する期です。</param>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">定額逓減法を使用した、指定した期の減価償却費です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" /> &lt; 0、<paramref name="Period" /> &gt; <paramref name="Life" />、または <paramref name="Period" /> &lt;=0 です。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">日付関連の関数を呼び出すときに使用する、1 週間の最初の日を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">金曜日。このメンバーは、Visual Basic の定数 <see langword="vbFriday" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">月曜日。このメンバーは、Visual Basic の定数 <see langword="vbMonday" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">土曜日。このメンバーは、Visual Basic の定数 <see langword="vbSaturday" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">日曜日 (既定)。このメンバーは、Visual Basic の定数 <see langword="vbSunday" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">システム設定で指定された週の最初の曜日。このメンバーは、Visual Basic の定数 <see langword="vbUseSystemDayOfWeek" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">木曜日。このメンバーは、Visual Basic の定数 <see langword="vbThursday" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">火曜日。このメンバーは、Visual Basic の定数 <see langword="vbTuesday" /> と等価です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">水曜日。このメンバーは、Visual Basic の定数 <see langword="vbWednesday" /> と等価です。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">日付関連の関数を呼び出すときに使用する、1 年の最初の週を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">7 日のうち少なくとも 4 日が新年度に含まれる週。 このメンバーは、Visual Basic 定数の <see langword="vbFirstFourDays" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">1 週間全体が新年度に含まれる最初の週。 このメンバーは、Visual Basic 定数の <see langword="vbFirstFullWeek" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">1 月 1 日を含む週 (既定値)。 このメンバーは、Visual Basic 定数の <see langword="vbFirstJan1" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">年の最初の週としてシステムで指定された週。 このメンバーは、Visual Basic 定数の <see langword="vbUseSystem" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">
        <see langword="HideModuleNameAttribute" /> 属性がモジュールに適用された場合は、モジュールに必要な修飾だけを使用してモジュール メンバーにアクセスできます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">
        <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> 属性の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">
        <see langword="Information" /> モジュールに含まれるプロシージャを使って、情報の取得、テスト、検証を行います。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">ランタイム エラーに関する情報を格納します。</summary>
      <returns vsli:raw="Contains information about run-time errors.">ランタイム エラーに関する情報を格納します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">変数が配列を参照しているかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">必須です。 <see langword="Object" /> 変数。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">変数が配列を参照しているかどうかを示す <see langword="Boolean" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">式が有効な <see langword="Boolean" /> 値を表しているかどうかを示す <see langword="Date" /> 値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">式が有効な <see langword="Boolean" /> 値を表しているかどうかを示す <see langword="Date" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">式が <see cref="T:System.DBNull" /> クラスに評価されるかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">式が <see cref="T:System.DBNull" /> クラスに評価されるかどうかを示す <see langword="Boolean" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">式が例外の種類かどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">式が例外の種類かどうかを示す <see langword="Boolean" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">式にオブジェクトが割り当てられていないかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">式にオブジェクトが割り当てられていないかどうかを示す <see langword="Boolean" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">式が数値として評価できるかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">式が数値として評価できるかどうかを示す <see langword="Boolean" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">式が参照型に評価されるかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必須です。 整数型 (<see langword="Object" />) の式を指定します。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">式が参照型に評価されるかどうかを示す <see langword="Boolean" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">配列内の指定された次元における最も小さいインデックスを返します。</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">必須です。 任意のデータ型の配列です。 ある次元で最も小さいインデックスを探す対象となる配列です。</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">任意。 <see langword="Integer" />。 最も小さいインデックスが返される次元です。 1 番目の次元の場合は 1、2 番目の次元の場合は 2 という形で指定します。 <paramref name="Rank" /> を省略した場合、1 が使用されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />。 指定した次元に設定できるインデックスの最小値です。 <paramref name="Array" /> が初期化されていれば、たとえばそれが長さ 0 の文字列のときなど要素を含んでいない場合でも、<see langword="LBound" /> は常に 0 を返します。 <paramref name="Array" /> が <see langword="Nothing" /> の場合、<see langword="LBound" /> は <see cref="T:System.ArgumentNullException" /> をスローします。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> が 1 未満か、<paramref name="Rank" /> が <paramref name="Array" /> のランクを超えています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">指定したカラー番号に対応する RGB カラー コードを表す <see langword="Integer" /> 値を返します。</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">必須です。 0 から 15 の範囲の整数値。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">指定したカラー番号に対応する RGB カラー コードを表す <see langword="Integer" /> 値を返します。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" /> が 0 ～ 15 (両端を含む) の範囲内の値ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">赤、緑、青の色要素のセットを受け取り、RGB カラー値を表す <see langword="Integer" /> 値を返します。</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">必須です。 赤の色要素の輝度を表す、0 から 255 の範囲の <see langword="Integer" /> 値です。</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">必須です。 緑の色要素の輝度を表す、0 から 255 の範囲の <see langword="Integer" /> 値です。</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">必須です。 青の色要素の輝度を表す、0 から 255 の範囲の <see langword="Integer" /> 値です。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">赤、緑、青の色要素のセットを受け取り、RGB カラー値を表す <see langword="Integer" /> 値を返します。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />、<paramref name="Blue" /> または <paramref name="Red" /> が 0 ～ 255 (両端を含む) の範囲内の値ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">変数のシステム データ型名を含む <see langword="String" /> 値を返します。</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">必須です。 Visual Basic の型名を含む <see langword="String" /> 変数です。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">変数のシステム データ型名を含む <see langword="String" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">変数に関するデータ型情報を含む <see langword="String" /> 値を返します。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必須です。 <see langword="Object" /> 変数。 <see langword="Option Strict" /> が <see langword="Off" /> の場合、構造体以外の任意のデータ型の変数を渡すことができます。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">変数に関するデータ型情報を含む <see langword="String" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">配列内の指定された次元における最も大きいインデックスを返します。</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">必須です。 任意のデータ型の配列です。 ある次元で最も大きいインデックスを探す対象となる配列です。</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">任意。 <see langword="Integer" />。 最も大きいインデックスが返される次元です。 1 番目の次元の場合は 1、2 番目の次元の場合は 2 という形で指定します。 <paramref name="Rank" /> を省略した場合、1 が使用されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />。 指定した次元に設定できるインデックスの最大値です。 <paramref name="Array" /> に要素が 1 つしかない場合、<see langword="UBound" /> は 0 を返します。 <paramref name="Array" /> に要素が存在しない場合 (長さ 0 の文字列の場合など)、<see langword="UBound" /> は -1 を返します。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> が 1 未満か、<paramref name="Rank" /> が <paramref name="Array" /> のランクを超えています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">変数のデータ型の分類を含む <see langword="Integer" /> 値を返します。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必須です。 <see langword="Object" /> 変数。 <see langword="Option Strict" /> が <see langword="Off" /> の場合、構造体以外の任意のデータ型の変数を渡すことができます。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">変数のデータ型の分類を含む <see langword="Integer" /> 値を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">変数の Visual Basic データ型名を含む <see langword="String" /> 値を返します。</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">必須です。 共通言語ランタイムにより使用される型名を含む <see langword="String" /> 変数。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">変数の Visual Basic データ型名を含む <see langword="String" /> 値を返します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see langword="Interaction" /> モジュールに含まれるプロシージャを使って、オブジェクト、アプリケーション、システムと対話します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">コンピューターのスピーカーを鳴らします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">オブジェクトに対してメソッドを実行するか、オブジェクトのプロパティを設定または取得します。</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">必須です。 <see langword="Object" />。 プロパティまたはメソッドを公開しているオブジェクトへのポインターです。</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">必須です。 <see langword="String" />。 オブジェクトのプロパティまたはメソッドの名前を含む文字列式です。</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">必須です。 呼び出されるプロシージャの型を表す、<see cref="T:Microsoft.VisualBasic.CallType" /> 型の列挙体のメンバーです。 <see langword="CallType" /> の値は、<see langword="Method" />、<see langword="Get" />、<see langword="Set" /> のいずれかになります。</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">任意。 <see langword="ParamArray" />。 呼び出されるプロパティまたはメソッドに渡される引数を格納するパラメーター配列です。</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">オブジェクトに対してメソッドを実行するか、オブジェクトのプロパティを設定または取得します。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">
        <paramref name="UseCallType" /> の値が無効です。<see langword="Method" />、<see langword="Get" />、または <see langword="Set" /> のいずれかを指定してください。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">COM オブジェクトへの参照を作成して返します。 Visual Basic では、クラスが COM コンポーネントとして明示的に公開されない限り、<see langword="CreateObject" /> を使用してそのクラスのインスタンスを作成することはできません。</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">必須です。 <see langword="String" />。 作成するオブジェクトのプログラム ID。</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">任意。 <see langword="String" />。 オブジェクトが作成されるネットワーク サーバーの名前。 <paramref name="ServerName" /> が空の文字列 ("") の場合、ローカル コンピューターが使用されます。</param>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">COM オブジェクトへの参照を作成して返します。 Visual Basic では、クラスが COM コンポーネントとして明示的に公開されない限り、<see langword="CreateObject" /> を使用してそのクラスのインスタンスを作成することはできません。</returns>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">サーバーを利用できません。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">指定された型のオブジェクトが存在していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">式の評価に応じて、2 つのオブジェクトのうち 1 つを返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">必須です。 <see langword="Boolean" />。 評価する式。</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">必須です。 <see langword="Object" />。 <paramref name="Expression" /> が <see langword="True" /> に評価された場合に返されます。</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">必須です。 <see langword="Object" />。 <paramref name="Expression" /> が <see langword="False" /> に評価された場合に返されます。</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">式の評価に応じて、2 つのオブジェクトのうち 1 つを返します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">
        <see langword="MsgBox" /> 関数によって返され、メッセージ ボックスのどのボタンが押されたかを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">[中止] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbAbort" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">[キャンセル] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbCancel" />に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">[無視] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbIgnore" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">[いいえ] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbNo" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">[OK] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbOK" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">[再試行] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbRetry" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">[はい] ボタンが押されました。 このメンバーは、Visual Basic 定数の <see langword="vbYes" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">
        <see langword="MsgBox" /> 関数を呼び出すときに表示するボタンを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">[中止]、[再試行]、[無視] ボタン。 このメンバーは、Visual Basic 定数の <see langword="vbAbortRetryIgnore" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">アプリケーション モーダルのメッセージ ボックス。 このメンバーは、Visual Basic 定数の <see langword="vbApplicationModal" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">重要メッセージ。 このメンバーは、Visual Basic 定数の <see langword="vbCritical" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">最初のボタンは既定値です。 このメンバーは、Visual Basic 定数の <see langword="vbDefaultButton1" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">2 番目のボタンは既定値です。 このメンバーは、Visual Basic 定数の <see langword="vbDefaultButton2" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">3 番目のボタンは既定値です。 このメンバーは、Visual Basic 定数の <see langword="vbDefaultButton3" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">警告メッセージ。 このメンバーは、Visual Basic 定数の <see langword="vbExclamation" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">情報メッセージ。 このメンバーは、Visual Basic 定数の <see langword="vbInformation" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">ヘルプ テキスト。 このメンバーは、Visual Basic 定数の <see langword="vbMsgBoxHelp" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">右端揃えのテキスト。 このメンバーは、Visual Basic 定数の <see langword="vbMsgBoxRight" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">右から左に読むテキスト (ヘブライ語やアラビア語のシステム)。 このメンバーは、Visual Basic 定数の <see langword="vbMsgBoxRtlReading" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">前景のメッセージ ボックス ウィンドウ。 このメンバーは、Visual Basic 定数の <see langword="vbMsgBoxSetForeground" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">[OK] と [キャンセル] ボタン。 このメンバーは、Visual Basic 定数の <see langword="vbOKCancel" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">[OK] ボタンのみ (既定値)。 このメンバーは、Visual Basic 定数の <see langword="vbOKOnly" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">警告クエリ。 このメンバーは、Visual Basic 定数の <see langword="vbQuestion" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">[再試行] と [キャンセル] ボタン。 このメンバーは、Visual Basic 定数の <see langword="vbRetryCancel" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">システム モーダルのメッセージ ボックス。 このメンバーは、Visual Basic 定数の <see langword="vbSystemModal" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">[はい] と [いいえ] ボタン。 このメンバーは、Visual Basic 定数の <see langword="vbYesNo" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">[はい]、 [いいえ]、[キャンセル] ボタン。 このメンバーは、Visual Basic 定数の <see langword="vbYesNoCancel" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">この属性は、Visual Basic の <see langword="My.Forms" /> と <see langword="My.WebServices" /> をサポートします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">この属性は、Visual Basic の <see langword="My.Forms" /> と <see langword="My.WebServices" /> をサポートします。</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />。 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> プロパティを初期化します。 コンパイラは、この型から派生するクラスのアクセサー プロパティを生成します。</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />。 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> プロパティを初期化します。 型のインスタンスを作成するクラスのメソッドを指定します。</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />。 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> プロパティを初期化します。 型のインスタンスを破棄するクラスのメソッドを指定します。</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />。 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> プロパティを初期化します。 クラスの既定のインスタンスを返すプロパティの名前を指定します。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">このプロパティは、Visual Basic の <see langword="My" /> をサポートします。</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">型のインスタンスを作成するクラスのメソッドを指定します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">このプロパティは、Visual Basic の <see langword="My" /> をサポートします。</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">クラスの既定のインスタンスを返すプロパティの名前を指定します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">このプロパティは、Visual Basic の <see langword="My" /> をサポートします。</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">型のインスタンスを破棄するクラスのメソッドを指定します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">このプロパティは、Visual Basic の <see langword="My" /> をサポートします。</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">コンパイラがアクセサー プロパティを生成する型の名前を指定します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>クリップボードを操作するためのメソッドを提供します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>ドライブ、ファイル、ディレクトリを操作するためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>2 つのパスを結合し、適切な形式のパスを返します。</summary>
      <param name="baseDirectory">
        <see langword="String" />。 結合する 1 つ目のパス。</param>
      <param name="relativePath">
        <see langword="String" />。 結合する 2 つ目のパス。</param>
      <returns>指定されたパスの組み合わせ。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> または <paramref name="relativePath" /> のパスの形式が正しくありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">操作中にユーザーが [キャンセル] をクリックした場合の処理を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー先のディレクトリにある同じ名前のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">操作中にユーザーが [キャンセル] をクリックした場合の処理を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>ディレクトリを作成します。</summary>
      <param name="directory">ディレクトリの名前および場所。</param>
      <exception cref="T:System.ArgumentException">ディレクトリ名が不正な場合。 たとえば、無効な文字が含まれているか、空白のみであることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">ディレクトリ名が長すぎます。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (":") だけが指定されている場合</exception>
      <exception cref="T:System.IO.IOException">作成するディレクトリの親ディレクトリが読み取り専用です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがディレクトリを作成するためのアクセス許可を保持していません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>現在のディレクトリを取得または設定します。</summary>
      <returns>ファイル I/O 操作の現在のディレクトリ。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが無効です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>ディレクトリを削除します。</summary>
      <param name="directory">削除するディレクトリ。</param>
      <param name="onDirectoryNotEmpty">削除対象のディレクトリ内にファイルまたはディレクトリが存在する場合の処理を指定します。 既定値は <see langword="DeleteDirectoryOption.DeleteAllContents" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>ディレクトリを削除します。</summary>
      <param name="directory">削除するディレクトリ。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ディレクトリを削除します。</summary>
      <param name="directory">削除するディレクトリ。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <param name="onUserCancel">ユーザーが [キャンセル] をクリックした場合に例外をスローするかどうかを指定します。</param>
      <exception cref="T:System.ArgumentException">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>ファイルを削除します。</summary>
      <param name="file">削除対象のファイルの名前とパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>ファイルを削除します。</summary>
      <param name="file">削除対象のファイルの名前とパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ファイルを削除します。</summary>
      <param name="file">削除対象のファイルの名前とパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを [ごみ箱] に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <param name="onUserCancel">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消し、かつ <paramref name="onUserCancel" /> が <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> に設定されています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>指定されたディレクトリが存在する場合、<see langword="True" /> を返します。</summary>
      <param name="directory">ディレクトリのパス。</param>
      <returns>ディレクトリが存在する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>利用可能なすべてのドライブ名の読み取り専用コレクションを返します。</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> オブジェクトとして使用できるすべてのドライブの読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>指定されたファイルが存在する場合、<see langword="True" /> を返します。</summary>
      <param name="file">ファイルの名前とパス。</param>
      <returns>ファイルが存在する場合は <see langword="True" /> を返します。それ以外の場合は <see langword="False" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">ファイル名がバックスラッシュ (\) で終わっています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="containsText">検索文字列。</param>
      <param name="ignoreCase">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="True" /> です。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <returns>指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\.&lt;/code&gt; である) ことが考えられます。</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="containsText">検索文字列。</param>
      <param name="ignoreCase">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="True" /> です。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="fileWildcards">検索に使用するパターン。</param>
      <returns>指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\.&lt;/code&gt; である) ことが考えられます。</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</summary>
      <param name="directory">ディレクトリの名前とパス。</param>
      <returns>指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</summary>
      <param name="directory">ディレクトリの名前とパス。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="wildcards">名前の検索に使用するパターン。</param>
      <returns>指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">指定したワイルドカード文字の中に、<see langword="Nothing" />、空の文字列、または空白のみが含まれています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>指定したパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを返します。</summary>
      <param name="directory">
        <see langword="String" />。 ディレクトリのパス。</param>
      <returns>指定されたパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>指定したドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクトを返します。</summary>
      <param name="drive">確認するドライブ。</param>
      <returns>指定されたドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>指定したファイルの <see cref="T:System.IO.FileInfo" /> オブジェクトを返します。</summary>
      <param name="file">ファイルの名前とパス。</param>
      <returns>指定されたファイルの <see cref="T:System.IO.FileInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">パス名が不適切である場合。 たとえば、無効な文字が含まれている場合や、空白のみの場合などがあります。 ファイル名の末尾にスラッシュ記号が付いています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.NotSupportedException">パス文字列の途中にコロンが含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスが長すぎます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当該ファイルに対して、ユーザーがアクセス制御リスト (ACL: access control list) のアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <returns>指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">検索対象のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> が既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="wildcards">検索に使用するパターン。</param>
      <returns>指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">検索対象のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> が既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>指定されたパスからファイル名を解析し、取り出します。</summary>
      <param name="path">必須です。 解析対象のパス。 <see langword="String" />。</param>
      <returns>指定されたパスのファイル名部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>指定されたパスの親パスを返します。</summary>
      <param name="path">確認するパス。</param>
      <returns>指定されたパスの親パス。</returns>
      <exception cref="T:System.ArgumentException">パスがルート パスであるため、親パスが存在しません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>一意な名前を持つ 0 バイトの一時ファイルをディスク上に作成し、そのファイルへの完全パスを返します。</summary>
      <returns>一時ファイルの完全パスを保持する <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先がルート ディレクトリであるか、移動元と移動先のパスが同じです。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されており、ファイルのサブディレクトリをコピーできません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、操作を完了できませんでした。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="overwrite">既存のディレクトリを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合に、ユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <returns>指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <param name="fieldWidths">フィールドの幅。</param>
      <returns>指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <param name="delimiters">フィールドの区切り記号。</param>
      <returns>指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>
        <see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</summary>
      <param name="file">読み取るファイル。</param>
      <returns>ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定されたファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>
        <see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</summary>
      <param name="file">読み取るファイル。</param>
      <param name="encoding">ファイルの内容に使用されるエンコーディング。 既定値は ASCII です。</param>
      <returns>ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定されたファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>
        <see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <returns>指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">ファイル名の末尾にスラッシュが付いています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>
        <see cref="T:System.IO.StreamWriter" /> を開いて指定されたファイルに書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="encoding">ファイルへの書き込み時に使用するエンコーディング。 既定値は ASCII です。</param>
      <returns>指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">ファイル名の末尾にスラッシュが付いています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>テキスト ファイルの内容をバイト配列として返します。</summary>
      <param name="file">読み取るファイル。</param>
      <returns>ファイルの内容を保持する <see langword="Byte" /> 配列。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>テキスト ファイルの内容を <see langword="String" /> として返します。</summary>
      <param name="file">読み取るファイルの名前とパス。</param>
      <returns>ファイルの内容を保持する <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>テキスト ファイルの内容を <see langword="String" /> として返します。</summary>
      <param name="file">読み取るファイルの名前とパス。</param>
      <param name="encoding">ファイルの読み取り時に使用する文字エンコーディング。 既定値は、UTF-8 です。</param>
      <returns>ファイルの内容を保持する <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>ディレクトリ名を変更します。</summary>
      <param name="directory">名前を変更するディレクトリのパスおよび名前。</param>
      <param name="newName">ディレクトリの新しい名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> は <see langword="Nothing" />です。  
または 
 <paramref name="newName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>ファイル名を変更します。</summary>
      <param name="file">名前を変更するファイル。</param>
      <param name="newName">新しいファイル名。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> にパス情報が含まれているか、末尾にバックスラッシュ (\) が付いています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。  

または - 
<paramref name="newName" /> は、<see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>頻繁に参照されるディレクトリにアクセスするためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>このプロパティは、コンピューターの <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>バイナリ ファイルにデータを書き込みます。</summary>
      <param name="file">書き込み先のファイルのパスと名前。</param>
      <param name="data">ファイルに書き込むデータ。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>ファイルにテキストを書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="text">ファイルに書き込まれるテキスト。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> は <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>ファイルにテキストを書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="text">ファイルに書き込まれるテキスト。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="encoding">ファイルへの書き込み時に使用するエンコーディングを指定します。 既定値は、UTF-8 です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" /> です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>レジストリを操作するためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>一般的に参照されるディレクトリにアクセスするためのプロパティを提供します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>すべてのユーザー用の Application Data ディレクトリへのパス名を取得します。</summary>
      <returns>すべてのユーザー用の Application Data ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>現在のユーザー用の Application Data ディレクトリへのパス名を取得します。</summary>
      <returns>現在のユーザー用の Application Data ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>デスクトップ ディレクトリへのパス名を取得します。</summary>
      <returns>デスクトップ ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>マイ ドキュメント ディレクトリを指すパス名を取得します。</summary>
      <returns>マイ ドキュメント ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>My Music ディレクトリへのパス名を取得します。</summary>
      <returns>マイ ミュージック ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>My Pictures ディレクトリへのパス名を取得します。</summary>
      <returns>マイ ピクチャ ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Program Files ディレクトリへのパスを取得します。</summary>
      <returns>Program Filesディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Programs ディレクトリへのパス名を取得します。</summary>
      <returns>Programs ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Temp ディレクトリへのパス名を取得します。</summary>
      <returns>Temp ディレクトリへのパス。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">ファイル アクセス用の関数を呼び出すときにファイルを開く方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">読み取りアクセスおよび書き込みアクセスが許可されます。 既定値です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">読み取りアクセスが許可されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">読み取りアクセスおよび書き込みアクセスが許可されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">書き込みアクセスが許可されます。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">ファイル アクセス用の関数を呼び出すときにファイルを開く方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">ファイルは追加のために開かれました。 既定モード。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">ファイルはバイナリ アクセスのために開かれました。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">ファイルは読み取りアクセスのために開かれました。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">ファイルは書き込みアクセスのために開かれました。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">ファイルはランダム アクセスのために開かれました。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">ファイル アクセス用の関数を呼び出すときにファイルを開く方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />。 既定値です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">他のプロセスはファイルを読み取ることはできません。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">他のプロセスはファイルの読み取りや書き込みを行うことはできません。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">他のプロセスはファイルに書き込むことはできません。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">任意のプロセスがファイルの読み取りや書き込みを行うことができます。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">このクラスは、Visual Basic の <see langword="Print" /> 関数および <see langword="PrintLine" /> 関数をサポートします。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">このフィールドは、Visual Basic の <see langword="Print" /> 関数および <see langword="PrintLine" /> 関数をサポートします。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">
        <see langword="Strings" /> モジュールに含まれるプロシージャを使って、文字列操作を実行します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">文字に対応する文字コードを表す整数値を返します。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="Char" /> 型または <see langword="String" /> 型の式。 <paramref name="String" /> が <see langword="String" /> 型の式である場合は、文字列の最初の文字のみが入力に使用されます。 <paramref name="String" /> が <see langword="Nothing" /> であるか、文字を含んでいない場合は、<see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The character code corresponding to a character.">文字に対応する文字コードです。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">文字に対応する文字コードを表す整数値を返します。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="Char" /> 型または <see langword="String" /> 型の式。 <paramref name="String" /> が <see langword="String" /> 型の式である場合は、文字列の最初の文字のみが入力に使用されます。 <paramref name="String" /> が <see langword="Nothing" /> であるか、文字を含んでいない場合は、<see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The character code corresponding to a character.">文字に対応する文字コードです。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">文字に対応する文字コードを表す整数値を返します。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="Char" /> 型または <see langword="String" /> 型の式。 <paramref name="String" /> が <see langword="String" /> 型の式である場合は、文字列の最初の文字のみが入力に使用されます。 <paramref name="String" /> が <see langword="Nothing" /> であるか、文字を含んでいない場合は、<see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The character code corresponding to a character.">文字に対応する文字コードです。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">文字に対応する文字コードを表す整数値を返します。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必須です。 任意の有効な <see langword="Char" /> 型または <see langword="String" /> 型の式。 <paramref name="String" /> が <see langword="String" /> 型の式である場合は、文字列の最初の文字のみが入力に使用されます。 <paramref name="String" /> が <see langword="Nothing" /> であるか、文字を含んでいない場合は、<see cref="T:System.ArgumentException" /> エラーが発生します。</param>
      <returns vsli:raw="The character code corresponding to a character.">文字に対応する文字コードです。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">指定された文字コードに対応する文字を返します。</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">必須です。 文字の <c>code point</c> (文字コード) を表す <see langword="Integer" /> 型の式。</param>
      <returns vsli:raw="The character associated with the specified character code.">指定された文字コードに対応する文字です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">
        <see langword="Chr" /> の <paramref name="CharCode" /> は、&lt; 0 または &gt; 255。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">指定された文字コードに対応する文字を返します。</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">必須です。 文字の <c>code point</c> (文字コード) を表す <see langword="Integer" /> 型の式。</param>
      <returns vsli:raw="The character associated with the specified character code.">指定された文字コードに対応する文字です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">
        <see langword="ChrW" /> の <paramref name="CharCode" /> は、&lt; -32768 または &gt; 65535。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">指定されたフィルター条件に基づいた文字列 (<see langword="String" />) 配列のサブセットを含むゼロ ベースの配列を返します。</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">必須です。 検索対象の文字列の 1 次元配列。</param>
      <param name="Match" vsli:raw="Required. String to search for.">必須です。 検索する文字列。</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">任意。 戻り値の部分文字列に <paramref name="Match" /> を含むか含まないかを指定する <see langword="Boolean" /> 値。 <paramref name="Include" /> が <see langword="True" /> の場合、<see langword="Filter" /> 関数は、部分文字列として <paramref name="Match" /> を含む配列のサブセットを返します。 <paramref name="Include" /> が <see langword="False" /> の場合、<see langword="Filter" /> 関数は、部分文字列として <paramref name="Match" /> を含まない配列のサブセットを返します。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">任意。 使用する文字列比較の種類を示す数値。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">指定されたフィルター条件に基づいた文字列 (<see langword="String" />) 配列のサブセットを含むゼロ ベースの配列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> が <see langword="Nothing" /> であるか、1 次元の配列ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">指定されたフィルター条件に基づいた文字列 (<see langword="String" />) 配列のサブセットを含むゼロ ベースの配列を返します。</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">必須です。 検索対象の文字列の 1 次元配列。</param>
      <param name="Match" vsli:raw="Required. String to search for.">必須です。 検索する文字列。</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">任意。 戻り値の部分文字列に <paramref name="Match" /> を含むか含まないかを指定する <see langword="Boolean" /> 値。 <paramref name="Include" /> が <see langword="True" /> の場合、<see langword="Filter" /> 関数は、部分文字列として <paramref name="Match" /> を含む配列のサブセットを返します。 <paramref name="Include" /> が <see langword="False" /> の場合、<see langword="Filter" /> 関数は、部分文字列として <paramref name="Match" /> を含まない配列のサブセットを返します。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">任意。 使用する文字列比較の種類を示す数値。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">指定されたフィルター条件に基づいた文字列 (<see langword="String" />) 配列のサブセットを含むゼロ ベースの配列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> が <see langword="Nothing" /> であるか、1 次元の配列ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">書式指定文字列 (<see langword="String" />) 式に含まれる指示に従って書式設定された文字列を返します。</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">必須です。 任意の有効な式。</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">任意。 有効な名前の付いた、またはユーザー定義による <see langword="String" /> 型の書式指定式</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">書式指定文字列 (<see langword="String" />) 式に含まれる指示に従って書式設定された文字列です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">システムの [コントロール パネル] で定義されている通貨記号を使って通貨形式の文字列に書式設定して返す文字列処理関数です。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必須です。 書式指定される式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">任意。 表示される小数点以下の桁数を示す数値。 既定値は -1 です。これは、コンピューターの地域設定が使用されることを示しています。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">任意。 小数値の先頭の 0 を表示するかどうかを示す <see cref="T:Microsoft.VisualBasic.TriState" /> 列挙体。 値については、「解説」を参照してください。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">任意。 負の値をかっこで囲むかどうかを示す <see cref="T:Microsoft.VisualBasic.TriState" /> 列挙体。 値については、「解説」を参照してください。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">任意。 コンピューターの地域設定で指定されている桁区切り記号を使用して数値を区切るかどうかを示す <see cref="T:Microsoft.VisualBasic.TriState" /> 列挙体。 値については、「解説」を参照してください。</param>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">システムのコントロール パネルで定義された通貨記号を使用して、通貨の値に形式が変換された式です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">小数点以下の桁数が 99 を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">型が数字ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">日時の値を表す文字列式を返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">必須です。 書式設定する <see langword="Date" /> 型の式。</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">任意。 使用する日付/時刻形式を示す数値。 省略した場合は、<see langword="DateFormat.GeneralDate" /> が使用されます。</param>
      <returns vsli:raw="A string expression representing a date/time value.">日時の値を表す文字列式です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">
        <paramref name="NamedFormat" /> の設定が有効ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">数値形式の文字列に書式設定して返す文字列処理関数です。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必須です。 書式指定される式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">任意。 表示される小数点以下の桁数を示す数値。 既定値は -1 です。これは、コンピューターの地域設定が使用されることを示しています。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">任意。 小数値の先頭の 0 を表示するかどうかを示す <see cref="T:Microsoft.VisualBasic.TriState" /> 定数。 値については、「設定」を参照してください。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">任意。 負の値をかっこで囲むかどうかを示す <see cref="T:Microsoft.VisualBasic.TriState" /> 定数。 値については、「設定」を参照してください。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">任意。 ロケール設定で指定されている桁区切り記号を使用して、数値を区切るかどうかを表す <see cref="T:Microsoft.VisualBasic.TriState" /> 定数を指定します。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="An expression formatted as a number.">数値に形式が変換された式です。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">型が数字ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">パーセント記号 (%) が付加されたパーセント形式 (100 で乗算した) の文字列に書式設定して返す文字列処理関数です。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必須です。 書式指定される式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">任意。 小数点以下に表示する桁数を表す数値を指定します。 既定値は -1 であり、ロケール設定が使用されることを示しています。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">任意。 小数点の左側のゼロを表示するかどうかを表す <see cref="T:Microsoft.VisualBasic.TriState" /> 定数を指定します。 値については、「設定」を参照してください。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">任意。 負の値をかっこで囲むかどうかを表す <see cref="T:Microsoft.VisualBasic.TriState" /> 定数を指定します。 値については、「設定」を参照してください。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">任意。 ロケール設定で指定されている桁区切り記号を使用して、数値を区切るかどうかを表す <see cref="T:Microsoft.VisualBasic.TriState" /> 定数を指定します。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">末尾に % 文字を付けた割合の値 (100 を乗算) に形式が変換された式です。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">型が数字ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">指定された文字列の指定されたインデックス位置にある文字を表す <see langword="Char" /> 値を返します。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型の式。</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 <paramref name="str" /> から取り出す部分の文字を指定する (1 から始まる) インデックス。</param>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">指定された文字列の指定されたインデックス位置にある文字を表す <see langword="Char" /> 値。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" /> が <see langword="Nothing" />、<paramref name="Index" /> &lt; 1、または <paramref name="Index" /> が <paramref name="str" /> の最後の文字のインデックスよりも大きいです。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">ある文字列の中から指定した文字列を検索し、最初に見つかった文字列の開始位置を示す整数型の値を返します。</summary>
      <param name="Start" vsli:raw="Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.">任意。 各検索の開始位置を設定する数式。 省略した場合、検索は最初の文字位置から開始されます。 開始インデックスは 1 から始まっています。</param>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">必須です。 検索対象の <see langword="String" /> 型の式。</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">必須です。 検索対象の <see langword="String" /> 型の式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">任意。 文字列比較の種類を指定します。 <paramref name="Compare" /> が省略されている場合、<see langword="Option Compare" /> 設定により比較の種類を決定します。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  InStr の戻り値 
 
                <paramref name="String1" /> の長さが 0、または <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> の長さが 0、または <see langword="Nothing" /><paramref name="start" /><paramref name="String2" /> が見つかりません。 
  0 
 
                <paramref name="String2" /> が内部にある <paramref name="String1" /> 一致する文字列の開始位置 
 
                <paramref name="Start" /> &gt; <paramref name="String1" /> の長さ 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">ある文字列の中から指定した文字列を検索し、最初に見つかった文字列の開始位置を示す整数型の値を返します。</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">必須です。 検索対象の <see langword="String" /> 型の式。</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">必須です。 検索対象の <see langword="String" /> 型の式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">任意。 文字列比較の種類を指定します。 <paramref name="Compare" /> が省略されている場合、<see langword="Option Compare" /> 設定により比較の種類を決定します。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  InStr の戻り値 
 
                <paramref name="String1" /> の長さが 0、または <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> の長さが 0、または <see langword="Nothing" /> 既定では最初の文字の位置となる、検索の開始位置です。  

 
                <paramref name="String2" /> が見つかりません。 
  0 
 
                <paramref name="String2" /> が内部にある <paramref name="String1" /> 一致する文字列の開始位置</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">ある文字列の中から指定された文字列を最後の文字位置から検索を開始し、最初に見つかった文字位置 (先頭からその位置までの文字数) を返します。</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">必須です。 検索対象の文字列式。</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">必須です。 検索対象の文字列式。</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">任意。 文字列の左側から開始して、各検索に対して 1 から始まる開始位置を設定する数式。 <paramref name="Start" /> を省略した場合は -1 が使用されます。この値は、検索が最後の文字位置から開始されることを示しています。 検索は右から左へと行われます。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">任意。 部分文字列を評価する場合に使用する比較の種類を示す数値。 省略した場合、バイナリ比較が実行されます。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  InStrRev の戻り値 
 
                <paramref name="StringCheck" /> が長さ 0 の文字列 ("") のとき 
  0 
 
                <paramref name="StringMatch" /> が長さ 0 の文字列 ("") のとき 
 
                <paramref name="Start" /><paramref name="StringMatch" /> が見つかりません。 
  0 
 
                <paramref name="StringMatch" /> が内部にある <paramref name="StringCheck" /> 文字列の先頭から検索して最初に文字列が見つかった位置  

 
                <paramref name="Start" /> が <paramref name="StringMatch" /> の長さよりも大きいとき 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 または <paramref name="Start" /> &lt; -1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">配列に含まれる多数の部分文字列を結合して作成される文字列を返します。</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">必須です。 結合する部分文字列を含む 1 次元配列。</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">任意。 返された文字列内の部分文字列を区切るために使用される任意の文字列。 省略した場合は、空白文字 (" ") が使用されます。 <paramref name="Delimiter" /> が長さ 0 の文字列 ("") または <see langword="Nothing" /> の場合、リスト内のすべてのアイテムが区切り文字なしで連結されます。</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">配列に含まれる多数の部分文字列を結合して作成される文字列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> が 1 次元ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">配列に含まれる多数の部分文字列を結合して作成される文字列を返します。</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">必須です。 結合する部分文字列を含む 1 次元配列。</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">任意。 返された文字列内の部分文字列を区切るために使用される任意の文字列。 省略した場合は、空白文字 (" ") が使用されます。 <paramref name="Delimiter" /> が長さ 0 の文字列 ("") または <see langword="Nothing" /> の場合、リスト内のすべてのアイテムが区切り文字なしで連結されます。</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">配列に含まれる多数の部分文字列を結合して作成される文字列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> が 1 次元ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">小文字に変換した文字列または文字を返します。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型または <see langword="Char" /> 型の式。</param>
      <returns vsli:raw="A string or character converted to lowercase.">小文字に変換した文字列または文字を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">小文字に変換した文字列または文字を返します。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型または <see langword="Char" /> 型の式。</param>
      <returns vsli:raw="A string or character converted to lowercase.">小文字に変換した文字列または文字を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">指定された文字数を含む文字列を返します。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">必須です。 左端の文字が返される <see langword="String" /> 型の式。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 返す文字の数を示す数式。 0 を指定すると、長さ 0 の文字列 ("") が返されます。 <paramref name="str" /> 内の文字数以上を指定すると、文字列全体が返されます。</param>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">文字列の左側から数えて、指定された文字数を含んでいる文字列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列内の文字数または変数を格納するために必要な公称バイト数を表す整数を返します。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任意の有効な <see langword="String" /> 型の式または変数名。 <paramref name="Expression" /> の型が <see langword="Object" /> である場合、<see langword="Len" /> 関数は、その型が <see langword="FilePut" /> 関数によってファイルに書き込まれるときのサイズを返します。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">文字列の文字数、または変数の格納に必要なバイト数のいずれかを含んでいる整数値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">指定の文字列が含まれている文字列を左寄せで指定の長さに調整して返します。</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">必須です。 整数型 (<see langword="String" />) の式を指定します。 変数の名前を指定します。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 返される文字列の長さを指定します。</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">指定の長さに調整された指定の文字列が含まれている左寄せの文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">指定された文字列から、先頭の空白を除いたコピー (<see langword="LTrim" />)、後続の空白を除いたコピー (<see langword="RTrim" />)、または先頭と後続の空白を除いたコピー (<see langword="Trim" />) を格納する文字列を返します。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">指定された文字列から、先頭の空白を除いたコピー (<see langword="LTrim" />)、後続の空白を除いたコピー (<see langword="RTrim" />)、または先頭と後続の空白を除いたコピー (<see langword="Trim" />) を格納する文字列です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">文字列の指定の位置から始まるすべての文字を含む文字列を返します。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">必須です。 文字が返される <see langword="String" /> 型の式。</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 返す文字の開始位置。 <paramref name="Start" /> の値が <paramref name="str" /> 内の文字数よりも大きい場合、<see langword="Mid" /> 関数は長さ 0 の文字列 ("") を返します。 <paramref name="Start" /> は 1 から始まります。</param>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">文字列の指定の位置から始まるすべての文字を含む文字列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 または <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">文字列の指定の位置から始まる指定の数の文字を含む文字列を返します。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">必須です。 文字が返される <see langword="String" /> 型の式。</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 返す文字の開始位置。 <paramref name="Start" /> の値が <paramref name="str" /> 内の文字数よりも大きい場合、<see langword="Mid" /> 関数は長さ 0 の文字列 ("") を返します。 <paramref name="Start" /> は 1 から始まります。</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">任意。 整数型 (<see langword="Integer" />) の式を指定します。 返される文字数。 省略した場合、またはテキスト内の <paramref name="Length" /> の文字数 (位置 <paramref name="Start" /> の文字を含む) よりも少なかった場合は、開始位置から文字列の末尾までのすべての文字が返されます。</param>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">文字列の指定の位置から始まる指定の数の文字を含む文字列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 または <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">指定された文字列の一部を指定された回数分別の部分文字列で置換した文字列を返します。</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">必須です。 置換する部分文字列を含む文字列式。</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">必須です。 検索する部分文字列。</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">必須です。 置換する部分文字列。</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">任意。 置換に使用される部分文字列を開始する、<paramref name="Expression" /> 内の位置。 <see langword="Replace" /> の戻り値は、<paramref name="Start" /> で始まる、適切な置換を行った文字列です。 省略した場合、1 が使用されます。</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">任意。 置換する部分文字列の数。 省略した場合、既定値は -1 となります。この値は、すべての候補が置換されることを示しています。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">任意。 部分文字列を評価する場合に使用する比較の種類を示す数値。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="Replace" /> 関数の戻り値は次のとおりです。  
  If 
  Replace の戻り値 
 <paramref name="Find" /> の長さが 0、または <see langword="Nothing" /><paramref name="Expression" /> のコピー<paramref name="Replace" /> が長さ 0 の文字列 ("") のとき 
  <paramref name="Expression" /> の出現しない <paramref name="Find" /> のコピー<paramref name="Expression" /> の長さが 0 か <see langword="Nothing" />、または <paramref name="Start" /> の値が <paramref name="Expression" /> の長さよりも大きいとき<see langword="Nothing" /><paramref name="Count" /> が 0 のとき 
  <paramref name="Expression" /> のコピー</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; -1 または <paramref name="Start" /> &lt;= 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">文字列の右端から指定された文字数分の文字列を返します。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">必須です。 右端の文字が返される <see langword="String" /> 型の式。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">必須です。 <see langword="Integer" />。 返す文字の数を示す数式。 0 を指定すると、長さ 0 の文字列 ("") が返されます。 <paramref name="str" /> 内の文字数以上を指定すると、文字列全体が返されます。</param>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">文字列の右端から指定された文字数分の文字列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">文字列と長さが指定され、その長さに調整された文字列右揃えにして文字列を返します。</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">必須です。 整数型 (<see langword="String" />) の式を指定します。 変数の名前を指定します。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 返される文字列の長さを指定します。</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">指定の長さに調整された指定の文字列が含まれている右寄せの文字列です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">指定された文字列から、先頭の空白を除いたコピー (<see langword="LTrim" />)、後続の空白を除いたコピー (<see langword="RTrim" />)、または先頭と後続の空白を除いたコピー (<see langword="Trim" />) を格納する文字列を返します。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">指定された文字列から、先頭の空白を除いたコピー (<see langword="LTrim" />)、後続の空白を除いたコピー (<see langword="RTrim" />)、または先頭と後続の空白を除いたコピー (<see langword="Trim" />) を格納する文字列です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">指定された数のスペースから成る文字列を返します。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 文字列に必要な空白の数。</param>
      <returns vsli:raw="A string consisting of the specified number of spaces.">指定された数のスペースから成る文字列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">部分文字列ごとに区切られた文字列からゼロ ベースの 1 次元配列を作成し、返します。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">必須です。 部分文字列および区切り記号を含む <see langword="String" /> 型の式。</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">任意。 文字列の区切りを識別するために使用する任意の 1 文字。 <paramref name="Delimiter" /> が省略された場合、空白文字 (" ") が区切り記号として使用されます。</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">任意。 入力文字列を分割する場合の部分文字列の最大数。 既定値の -1 は、<paramref name="Delimiter" /> 文字列が出現するたびに入力文字列が分割されることを示しています。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">任意。 部分文字列を評価する場合に使用する比較を示す数値。 値については、「設定」を参照してください。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">
        <see langword="String" /> 配列 <paramref name="Expression" /> が長さ 0 の文字列 ("") の場合、<see langword="Split" /> は、長さ 0 の文字列を含む単一要素の配列を返します。 <paramref name="Delimiter" /> が長さ 0 の文字列である場合、または <paramref name="Expression" /> に Delimiter がない場合に、<see langword="Split" /> は <paramref name="Expression" /> 型の文字列を含む単一要素の配列を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">文字列比較の結果により、-1、0、または 1 のいずれかを返します。</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型の式。</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型の式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">任意。 文字列比較の種類を指定します。 <paramref name="Compare" /> が省略されている場合、<see langword="Option Compare" /> 設定により比較の種類を決定します。</param>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="StrComp" /> 関数の戻り値は次のとおりです。  
  If 
  StrComp の戻り値 
 <paramref name="String1" /> が <paramref name="String2" /> よりも先に来る -1 
 <paramref name="String1" /> と <paramref name="String2" /> は等価です。 0 
 <paramref name="String1" /> が <paramref name="String2" /> の後に来る 1</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">
        <paramref name="Compare" /> の値が無効です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">指定に従って変換された文字列型の値を返します。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">必須です。 変換する <see langword="String" /> 型の式。</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">必須です。 <see cref="T:Microsoft.VisualBasic.VbStrConv" /> のメンバー。 実行する比較の種類を指定する列挙値。</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">任意。 システム <see langword="LocaleID" /> 値と異なる場合の <see langword="LocaleID" /> 値。 既定値は、システムの <see langword="LocaleID" /> です。</param>
      <returns vsli:raw="A string converted as specified.">指定どおりに変換された文字列です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">
        <paramref name="LocaleID" /> の値がサポートされていない、<paramref name="Conversion" /> が &lt; 0 または &gt; 2048、あるいは変換の方法が指定されたロケールでサポートされていない。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">指定された文字が指定された回数繰り返されている文字列型またはオブジェクト型の値を返します。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 取得する文字列の長さ。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 有効な <see langword="Char" /> 型、<see langword="String" /> 型、または <see langword="Object" /> 型の式。 式の最初の文字だけが使用されます。 文字の型が <see langword="Object" /> である場合は、<see langword="Char" /> 値または <see langword="String" /> 値を含む必要があります。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">指定された文字が指定された回数繰り返されている文字列型またはオブジェクト型の値です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> が 0 以下の数字、または <paramref name="Character" /> の型が無効。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> は <see langword="Nothing" />です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">指定された文字が指定された回数繰り返されている文字列型またはオブジェクト型の値を返します。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 取得する文字列の長さ。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 有効な <see langword="Char" /> 型、<see langword="String" /> 型、または <see langword="Object" /> 型の式。 式の最初の文字だけが使用されます。 文字の型が <see langword="Object" /> である場合は、<see langword="Char" /> 値または <see langword="String" /> 値を含む必要があります。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">指定された文字が指定された回数繰り返されている文字列型またはオブジェクト型の値です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> が 0 以下の数字、または <paramref name="Character" /> の型が無効。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> は <see langword="Nothing" />です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">指定された文字が指定された回数繰り返されている文字列型またはオブジェクト型の値を返します。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必須です。 整数型 (<see langword="Integer" />) の式を指定します。 取得する文字列の長さ。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必須です。 有効な <see langword="Char" /> 型、<see langword="String" /> 型、または <see langword="Object" /> 型の式。 式の最初の文字だけが使用されます。 文字の型が <see langword="Object" /> である場合は、<see langword="Char" /> 値または <see langword="String" /> 値を含む必要があります。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">指定された文字が指定された回数繰り返されている文字列型またはオブジェクト型の値です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> が 0 以下の数字、または <paramref name="Character" /> の型が無効。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> は <see langword="Nothing" />です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">指定された文字列の文字の並び順を逆にした文字列を返します。</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">必須です。 文字の順序を逆にする文字列式。 <paramref name="Expression" /> が長さ 0 の文字列 ("") である場合、長さ 0 の文字列が返されます。</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">指定された文字列の文字の並び順を逆にした文字列です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">指定された文字列から、先頭の空白を除いたコピー (<see langword="LTrim" />)、後続の空白を除いたコピー (<see langword="RTrim" />)、または先頭と後続の空白を除いたコピー (<see langword="Trim" />) を格納する文字列を返します。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型の式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">指定された文字列から、先頭の空白を除いたコピー (<see langword="LTrim" />)、後続の空白を除いたコピー (<see langword="RTrim" />)、または先頭と後続の空白を除いたコピー (<see langword="Trim" />) を格納する文字列です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">指定された文字列を大文字に変換して文字列型または char 型の値を返します。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型または <see langword="Char" /> 型の式。</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">指定された文字列が大文字に変換されている文字列型または char 型の値です。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">指定された文字列を大文字に変換して文字列型または char 型の値を返します。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必須です。 任意の有効な <see langword="String" /> 型または <see langword="Char" /> 型の式。</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">指定された文字列が大文字に変換されている文字列型または char 型の値です。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">このクラスは、Visual Basic の <see langword="Print" /> 関数および <see langword="PrintLine" /> 関数をサポートします。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">このフィールドは、Visual Basic の <see langword="Print" /> 関数および <see langword="PrintLine" /> 関数をサポートします。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">数値書式指定関数を呼び出すときに、ブール値を示すか、または既定の値を使用する必要があるかどうかを示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">False。 このメンバーの数値は 0 です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">True。 このメンバーの数値は -1 です。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">既定の設定。 このメンバーの数値は -2 です。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">
        <see langword="VarType" /> 関数が返すバリアント オブジェクトの型を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">Array 型。 このメンバーは、Visual Basic 定数の <see langword="vbArray" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />。 (<see langword="True" /> または <see langword="False" />)。このメンバーは、Visual Basic 定数の <see langword="vbBoolean" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />。 (0 ～ 255)。このメンバーは、Visual Basic 定数の <see langword="vbByte" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />。 (0 ～ 65535)。このメンバーは、Visual Basic 定数の <see langword="vbChar" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">Currency 型。 このメンバーは、Visual Basic 定数の <see langword="vbCurrency" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject 型。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />。 (0001 年 1 月 1 日 0:00:00 ～ 9999 年 12 月 31 日 11:59:59 PM)。このメンバーは、Visual Basic 定数の <see langword="vbDate" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />。 (小数部分を持たない数値の場合は 0 ～ +/-79,228,162,514,264,337,593,543,950,335、小数点以下 28 桁の数値の場合は 0 ～ +/-7.9228162514264337593543950335。絶対値の最小値は、0 を除いた場合、+/-0.0000000000000000000000000001)。このメンバーは、Visual Basic 定数の <see langword="vbDecimal" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />。 (負の値の場合は -1.79769313486231E+308 ～ -4.94065645841247E-324。正の値の場合は 4.94065645841247E-324 ～ 1.79769313486231E+308)。このメンバーは、Visual Basic 定数の <see langword="vbDouble" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">NULL 参照。 このメンバーは、Visual Basic 定数の <see langword="vbEmpty" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />。 (–2,147,483,648 ～ 2,147,483,647)。このメンバーは、Visual Basic 定数の <see langword="vbInteger" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />。 (–9,223,372,036,854, 775,808 ～ 9,223,372,036,854,775,807)。このメンバーは、Visual Basic 定数の <see langword="vbLong" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">NULL オブジェクト。 このメンバーは、Visual Basic 定数の <see langword="vbNull" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">
        <see langword="Object" /> 型の変数には任意の値を格納できます。 このメンバーは、Visual Basic 定数の <see langword="vbObject" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />。 (–32,768 ～ 32,767)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />。 (負の値の場合は -3.402823E+38 ～ -1.401298E-45。正の値の場合は 1.401298E-45 ～ 3.402823E+38)。このメンバーは、Visual Basic 定数の <see langword="vbSingle" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />。 (0 個～約 20 億個の Unicode 文字)。このメンバーは、Visual Basic 定数の <see langword="vbString" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">ユーザー定義型。 構造体の各メンバーの範囲はデータ型によって決まり、他のメンバーの範囲とは関係しません。 このメンバーは、Visual Basic 定数の <see langword="vbUserDefinedType" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />。 このメンバーは、Visual Basic 定数の <see langword="vbVariant" /> に相当します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">構造体または非ローカル変数に含まれる配列を固定長の配列として扱うことを示します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">
        <see langword="Bounds" /> プロパティの値を初期化します。</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">配列の最初の次元のサイズを表す上限フィールドの値を初期化します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">
        <see langword="Bounds" /> プロパティの値を初期化します。</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">配列の最初の次元のサイズを表す上限フィールドの値を初期化します。</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">配列の 2 番目の次元のサイズを表す上限フィールドの値を初期化します。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">配列の範囲を返します。</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">配列の範囲を表す整数配列を含みます。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">配列のサイズを返します。</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">配列内の要素の数を表す整数を含みます。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">文字列を固定長と見なして扱うことを示します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">
        <see langword="SizeConst" /> フィールドの値を初期化します。</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">固定長文字列の長さ。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">文字列の長さを取得します。</summary>
      <returns vsli:raw="The length of the string.">文字列の長さ。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">
        <see langword="VbMath" /> モジュールに含まれるプロシージャを使って、数値演算を実行します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">乱数ジェネレーターを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">乱数ジェネレーターを初期化します。</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">任意。 <see langword="Object" /> または任意の有効な数式。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">型 <see langword="Single" /> の乱数を返します。</summary>
      <returns vsli:raw="The next random number in the sequence.">乱数系列の次の乱数を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">型 <see langword="Single" /> の乱数を返します。</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">任意。 <see langword="Single" /> 値または任意の有効な <see langword="Single" /> 型の式。</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">数値が 0 未満の場合、Rnd は <paramref name="Number" /> をシードとして使用して、毎回同じ数値を生成します。 数値が 0 よりも大きい場合、Rnd はシーケンスの次の乱数を生成します。 数値が 0 の場合、Rnd は最後に生成された数値を生成します。 数値が指定されていない場合、Rnd はシーケンスの次の乱数を生成します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">
        <see langword="StrConv" /> 関数の呼び出しで実行する変換の種類を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">文字列内のカタカナ文字をひらがな文字に変換します。 日本語ロケールのみに適用されます。 このメンバーは、Visual Basic 定数の <see langword="vbHiragana" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">文字列内のひらがな文字をカタカナ文字に変換します。 日本語ロケールのみに適用されます。 このメンバーは、Visual Basic 定数の <see langword="vbKatakana" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">大文字/小文字についてファイル システム規則に従った文字列を、言語規則に従った文字列に変換します。 このメンバーは、Visual Basic 定数の <see langword="vbLinguisticCasing" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">文字列を小文字に変換します。 このメンバーは、Visual Basic 定数の <see langword="vbLowerCase" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">文字列内の横幅の広い (全角) 文字を、横幅の狭い (半角) 文字に変換します。 アジアのロケールに適用されます。 このメンバーは、Visual Basic 定数の <see langword="vbNarrow" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">変換は行われません。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">文字列内の各単語の最初の文字を大文字に変換します。 このメンバーは、Visual Basic 定数の <see langword="vbProperCase" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">文字列を簡体字中国語に変換します。 このメンバーは、Visual Basic 定数の <see langword="vbSimplifiedChinese" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">文字列を繁体字中国語に変換します。 このメンバーは、Visual Basic 定数の <see langword="vbTraditionalChinese" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">文字列を大文字に変換します。 このメンバーは、Visual Basic 定数の <see langword="vbUpperCase" /> に相当します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">文字列内の横幅の狭い (半角) 文字を、横幅の広い (全角) 文字に変換します。 アジアのロケールに適用されます。 このメンバーは、Visual Basic 定数の <see langword="vbWide" /> に相当します。 変換では、入力文字が既に全角であっても、正規形 C が使われる場合があります。 たとえば、文字列 "は゛" (既に全角です) は "ば" に正規化されます。 Unicode の正規形をご覧ください。</summary>
    </member>
  </members>
</doc>