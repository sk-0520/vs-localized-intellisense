<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Security</name>
  </assembly>
  <members>
    <member name="T:System.Net.Security.AuthenticatedStream">
      <summary>ストリームを介して資格情報を渡し、クライアント サーバー アプリケーションの認証を要求または実行するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
        <see cref="T:System.Net.Security.AuthenticatedStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.AuthenticatedStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen">この <see cref="T:System.Net.Security.AuthenticatedStream" /> オブジェクトを閉じると、<paramref name="innerStream" /> も閉じられるかどうかを示す <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> が <see langword="null" /> です。  

または - 
<paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Security.AuthenticatedStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.DisposeAsync">
      <summary>
        <see cref="T:System.Net.Security.AuthenticatedStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</summary>
      <returns>非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <summary>この <see cref="T:System.Net.Security.AuthenticatedStream" /> がデータの送受信に使用するストリームを取得します。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <summary>認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <summary>この <see cref="T:System.Net.Security.AuthenticatedStream" /> を使用して送信するデータが暗号化されるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <summary>サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>クライアントとサーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsServer">
      <summary>接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>ローカル エンドポイントが、認証されたクライアント サーバー接続のサーバー側として認証されている場合は <see langword="true" />。ローカル エンドポイントがクライアントとして認証されている場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <summary>このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <summary>この <see cref="T:System.Net.Security.AuthenticatedStream" /> がデータの送受信に使用するストリームが、開いたままになっているかどうかを示す値を取得します。</summary>
      <returns>内部ストリームが開いたままになっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Security.CipherSuitesPolicy">
      <summary>許可されている暗号スイートを指定します。</summary>
    </member>
    <member name="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})">
      <summary>クライアントまたはサーバーの認証に使用できる <see cref="T:System.Net.Security.CipherSuitesPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowedCipherSuites">ネゴシエーションに対してこのポリシーで許可されている暗号スイートのコレクション。</param>
      <exception cref="T:System.PlatformNotSupportedException">プラットフォームは、OpenSSL 1.1.1 以降の Linux システムまたは macOS ではありません。</exception>
    </member>
    <member name="P:System.Net.Security.CipherSuitesPolicy.AllowedCipherSuites">
      <summary>このポリシーでネゴシエーションに対して許可されている暗号スイートのコレクションとして <see cref="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})" /> コンストラクターに渡された有効な暗号スイートのサブセットを取得します。</summary>
      <returns>ネゴシエーションにこのポリシーで許可されている暗号スイートのコレクション。</returns>
    </member>
    <member name="T:System.Net.Security.EncryptionPolicy">
      <summary>使用する暗号化ポリシーです。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <summary>暗号化の使用が推奨される場合に、サーバーの同意があれば NULL 暗号 (暗号化なし) の使用を許可します。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <summary>他のエンドポイントが NULL 暗号を処理できる場合、暗号化の使用を許可せず、NULL 暗号の使用を要求します。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <summary>暗号化を必要とし、NULL 暗号の使用を一切許可しません。</summary>
    </member>
    <member name="T:System.Net.Security.LocalCertificateSelectionCallback">
      <summary>認証に使用するローカルの SSL (Secure Sockets Layer) 証明書を選択します。</summary>
      <param name="sender">この検証のステータス情報を格納するオブジェクト。</param>
      <param name="targetHost">クライアントが指定したホスト サーバー。</param>
      <param name="localCertificates">ローカルの証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="remoteCertificate">リモート側の認証に使用される証明書。</param>
      <param name="acceptableIssuers">リモート側が受け入れることのできる証明書発行者の <see cref="T:System.String" /> 配列。</param>
      <returns>SSL 接続の確立に使用する <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="T:System.Net.Security.NegotiateStream">
      <summary>クライアント サーバー通信で Negotiate セキュリティ プロトコルを使用してクライアントの認証と (オプションで) サーバーの認証を行うストリームを提供します。</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <summary>指定した <see cref="T:System.IO.Stream" /> を使用して <see cref="T:System.Net.Security.NegotiateStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.NegotiateStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.NegotiateStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.NegotiateStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen">この <see cref="T:System.Net.Security.NegotiateStream" /> を閉じても、<paramref name="innerStream" /> が影響を受けないことを示す場合は <see langword="true" />。この <see cref="T:System.Net.Security.NegotiateStream" /> を閉じると、<paramref name="innerStream" /> も閉じられることを示す場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> は <see langword="null" />です。  

または - 
<paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報およびチャネル バインディングが使用されます。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> が <see langword="null" /> です。  

または - 
<paramref name="credential" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> が <see langword="null" /> です。  

または - 
<paramref name="credential" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報を使用します。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報と認証オプションを使用します。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> が null です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報およびチャネル バインディングが使用されます。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> が <see langword="null" /> です。  

または - 
<paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> は <see langword="null" />です。  

または - 
<paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報を使用します。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報と認証オプションを使用します。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> が null です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</summary>
      <param name="credential">サーバーの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した拡張保護ポリシーが使用されます。</summary>
      <param name="policy">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</summary>
      <param name="credential">サーバーの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した拡張保護ポリシーが使用されます。</summary>
      <param name="policy">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 このメソッドはブロックしません。</summary>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報およびチャネル バインディングが使用されます。 このメソッドはブロックしません。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。  

または - 
<paramref name="targetName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。 このメソッドはブロックしません。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。  

または - 
<paramref name="targetName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報を使用します。 このメソッドはブロックしません。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。  

または - 
<paramref name="targetName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報と認証オプションを使用します。 このメソッドはブロックしません。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。  

または - 
<paramref name="targetName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 このメソッドはブロックしません。</summary>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。 このメソッドはブロックしません。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。 このメソッドはブロックしません。</summary>
      <param name="credential">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または -

 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した拡張保護ポリシーが使用されます。 このメソッドはブロックしません。</summary>
      <param name="policy">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.NotSupportedException">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</summary>
      <param name="buffer">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count">ストリームから読み取る最大バイト数。</param>
      <param name="asyncCallback">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> が 0 未満です。  
または 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
または 
 <paramref name="offset" /> に <paramref name="count" /> を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。  

または -

 暗号化が使用されていますが、データを復号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</summary>
      <param name="buffer">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count">
        <paramref name="buffer" /> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</param>
      <param name="asyncCallback">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。  

または -

 暗号化が使用されていますが、データを暗号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanRead">
      <summary>基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanSeek">
      <summary>基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanTimeout">
      <summary>基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanWrite">
      <summary>基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Security.NegotiateStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.DisposeAsync">
      <summary>
        <see cref="T:System.Net.Security.NegotiateStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</summary>
      <returns>非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中のクライアント認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中の認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <summary>
        <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで開始された、非同期の読み取り操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <returns>基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで asyncResult が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中の読み取り操作がありません。

または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <summary>
        <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで開始された、非同期の書き込み操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで asyncResult が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中の書き込み操作がありません。

または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Flush">
      <summary>バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <summary>サーバーでクライアントの資格情報を使用する方法を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値のいずれか 1 つ。</returns>
      <exception cref="T:System.InvalidOperationException">認証に失敗したか、認証が行われていません。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <summary>認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <summary>この <see cref="T:System.Net.Security.NegotiateStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <summary>サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsServer">
      <summary>この <see cref="T:System.Net.Security.NegotiateStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>ローカル エンドポイントが、認証される接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsSigned">
      <summary>このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Length">
      <summary>基になるストリームの長さを取得します。</summary>
      <returns>基になるストリームの長さを指定する <see cref="T:System.Int64" />。</returns>
      <exception cref="T:System.NotSupportedException">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Position">
      <summary>基になるストリーム内の現在位置を取得または設定します。</summary>
      <returns>基になるストリーム内の現在の位置を指定する <see cref="T:System.Int64" />。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティの設定は、サポートされていません。  
または 
基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>このストリームからデータを読み取り、指定した配列に格納します。</summary>
      <param name="buffer">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count">ストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</param>
      <returns>基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作は既に実行されています。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <summary>読み取り操作がブロックしてデータを待機する時間を取得または設定します。</summary>
      <returns>読み取り操作が失敗するまでの経過時間を指定する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <summary>この認証されたストリームを共有するリモート側の ID に関する情報を取得します。</summary>
      <returns>リモート エンドポイントの ID を示す <see cref="T:System.Security.Principal.IIdentity" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">認証に失敗したか、認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
        <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset">この値は無視されます。</param>
      <param name="origin">この値は無視されます。</param>
      <returns>常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
      <exception cref="T:System.NotSupportedException">シークは、<see cref="T:System.Net.Security.NegotiateStream" /> でサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <summary>基になるストリームの長さを設定します。</summary>
      <param name="value">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</summary>
      <param name="buffer">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count">
        <paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />。  
または 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
または 
 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。  

または -

 暗号化が使用されていますが、データを暗号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <summary>書き込み操作がブロックしてデータを待機する時間を取得または設定します。</summary>
      <returns>書き込み操作が失敗するまでの経過時間を指定する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="T:System.Net.Security.ProtectionLevel">
      <summary>認証されたストリームに対して要求されるセキュリティ サービスを示します。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <summary>データの暗号化と署名を行い、送信データの機密性と整合性を強化します。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.None">
      <summary>認証だけを行います。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.Sign">
      <summary>データの署名を行い、送信データの整合性を強化します。</summary>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary>認証に使用されるリモートの SSL (Secure Sockets Layer) 証明書を検証します。</summary>
      <param name="sender">この検証のステータス情報を格納するオブジェクト。</param>
      <param name="certificate">リモート側の認証に使用される証明書。</param>
      <param name="chain">リモートの証明書に関連付けられた証明機関のチェーン。</param>
      <param name="sslPolicyErrors">リモートの証明書に関連付けられた 1 つ以上のエラー。</param>
      <returns>指定した証明書が認証に使用できるかどうかを判断する <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="T:System.Net.Security.ServerCertificateSelectionCallback">
      <param name="sender" />
      <param name="hostName" />
    </member>
    <member name="T:System.Net.Security.SslApplicationProtocol" />
    <member name="M:System.Net.Security.SslApplicationProtocol.#ctor(System.Byte[])">
      <param name="protocol" />
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.#ctor(System.String)">
      <param name="protocol" />
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.Equals(System.Net.Security.SslApplicationProtocol)">
      <param name="other" />
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.GetHashCode" />
    <member name="F:System.Net.Security.SslApplicationProtocol.Http11" />
    <member name="F:System.Net.Security.SslApplicationProtocol.Http2" />
    <member name="M:System.Net.Security.SslApplicationProtocol.op_Equality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.op_Inequality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="P:System.Net.Security.SslApplicationProtocol.Protocol" />
    <member name="M:System.Net.Security.SslApplicationProtocol.ToString" />
    <member name="T:System.Net.Security.SslClientAuthenticationOptions" />
    <member name="M:System.Net.Security.SslClientAuthenticationOptions.#ctor" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.AllowRenegotiation" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.ApplicationProtocols" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.CertificateRevocationCheckMode" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.CipherSuitesPolicy">
      <summary>TLS で許可されている暗号スイートを指定します。 <see langword="null" /> に設定すると、オペレーティング システムの既定値が使用されます。 この設定を変更するときは、細心の注意を払ってください。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.ClientCertificates" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.EnabledSslProtocols" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.EncryptionPolicy" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.LocalCertificateSelectionCallback" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.RemoteCertificateValidationCallback" />
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.TargetHost" />
    <member name="T:System.Net.Security.SslServerAuthenticationOptions" />
    <member name="M:System.Net.Security.SslServerAuthenticationOptions.#ctor" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.AllowRenegotiation" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ApplicationProtocols" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.CertificateRevocationCheckMode" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.CipherSuitesPolicy">
      <summary>TLS で許可されている暗号スイートを指定します。 <see langword="null" /> に設定すると、オペレーティング システムの既定値が使用されます。 この設定を変更するときは、細心の注意を払ってください。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ClientCertificateRequired" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.EnabledSslProtocols" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.EncryptionPolicy" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.RemoteCertificateValidationCallback" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" />
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" />
    <member name="T:System.Net.Security.SslStream">
      <summary>Secure Socket Layer (SSL) セキュリティ プロトコルを使用し、サーバーと、オプションでクライアントを認証するクライアント サーバー通信に使用されるストリームを提供します。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary>指定した <see cref="T:System.IO.Stream" /> を使用して <see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> が読み取り可能ではありません。  

または - 
<paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> は <see langword="null" />です。  
または 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
または 
 <paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> は <see langword="null" />です。  

または - 
<paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、および証明書検証デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <param name="userCertificateValidationCallback">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
または 
 <paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> は <see langword="null" />です。  

または - 
<paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary>指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、証明書検証デリゲート、および証明書選択デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <param name="userCertificateValidationCallback">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</param>
      <param name="userCertificateSelectionCallback">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> が読み取り可能ではありません。  

または - 
<paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> は <see langword="null" />です。  
または 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary>指定した <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <param name="userCertificateValidationCallback">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</param>
      <param name="userCertificateSelectionCallback">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</param>
      <param name="encryptionPolicy">使用する <see cref="T:System.Net.Security.EncryptionPolicy" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> が読み取り可能ではありません。  

または - 
<paramref name="innerStream" /> が書き込み可能ではありません。  

または - 
<paramref name="encryptionPolicy" /> が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> は <see langword="null" />です。  

または - 
<paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary>サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary>サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)">
      <param name="sslClientAuthenticationOptions" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <summary>サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary>サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</summary>
      <param name="serverCertificate">サーバーの認証に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
または 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary>指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="enabledSslProtocols">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)">
      <param name="sslServerAuthenticationOptions" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</summary>
      <param name="serverCertificate">サーバーの認証に使用する証明書。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary>指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="enabledSslProtocols">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、サーバーとオプションでクライアントを認証する非同期操作を開始します。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>指定された証明書およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、クライアントによって呼び出されます。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>クライアントによって呼び出され、指定した証明書とセキュリティ プロトコルを使用して、サーバーとオプションでクライアントを認証する非同期操作を開始します。</summary>
      <param name="targetHost">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <summary>サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントとオプションでサーバーを認証する非同期操作を開始します。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  

または 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  
または 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="enabledSslProtocols">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が既に発生しました。  

または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  

または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</summary>
      <param name="buffer">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count">ストリームから読み取る最大バイト数。</param>
      <param name="asyncCallback">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.  
 <paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。  
または 
 <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。  
 または  
 暗号化が使用されていますが、データを復号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</summary>
      <param name="buffer">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count">
        <paramref name="buffer" /> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</param>
      <param name="asyncCallback">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <returns>非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.  
 <paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。  
または 
 <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary>基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary>基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary>基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary>基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary>証明書検証プロセスで、証明書失効リストを照合するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary>この <see cref="T:System.Net.Security.SslStream" /> が使用する一括暗号化アルゴリズムを識別する値を取得します。</summary>
      <returns>この<see cref="T:System.Net.Security.SslStream" />によって使用される一括暗号化アルゴリズムを識別する値。</returns>
      <exception cref="T:System.InvalidOperationException">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary>この <see cref="T:System.Net.Security.SslStream" /> が使用する暗号アルゴリズムの強度を識別する値を取得します。</summary>
      <returns>アルゴリズムの強度をビット単位で指定する <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.DisposeAsync">
      <summary>
        <see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</summary>
      <returns>非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のサーバー認証操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中のサーバー認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中のクライアント認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <summary>
        <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期読み取り操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <returns>基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中の読み取り操作がありません。

または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <summary>
        <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期書き込み操作を終了します。</summary>
      <param name="asyncResult">
        <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">完了する保留中の書き込み操作がありません。

または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary>バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary>メッセージ認証コード (MAC: Message Authentication Code) の生成に使用するアルゴリズムを取得します。</summary>
      <returns>メッセージ認証コード (Mac) を生成するために使用されるアルゴリズム。</returns>
      <exception cref="T:System.InvalidOperationException">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary>このインスタンスが使用するハッシュ アルゴリズムの強度を識別する値を取得します。</summary>
      <returns>
        <see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。 有効値は 128 または 160 です。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsAuthenticated">
      <summary>認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsEncrypted">
      <summary>この <see cref="T:System.Net.Security.SslStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <summary>サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsServer">
      <summary>この <see cref="T:System.Net.Security.SslStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>ローカル エンドポイントが、認証された接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsSigned">
      <summary>このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns>データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary>この <see cref="T:System.Net.Security.SslStream" /> が使用するキー交換アルゴリズムを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary>このインスタンスが使用するキー交換アルゴリズムの強度を識別する値を取得します。</summary>
      <returns>
        <see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary>基になるストリームの長さを取得します。</summary>
      <returns>基になるストリームの長さ。</returns>
      <exception cref="T:System.NotSupportedException">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary>ローカル エンドポイントの認証に使用する証明書を取得します。</summary>
      <returns>認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException">認証に失敗したか、認証が行われていません。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
    <member name="P:System.Net.Security.SslStream.NegotiatedCipherSuite">
      <summary>この接続に対してネゴシエートされた暗号スイートを取得します。</summary>
      <returns>この接続に対してネゴシエートされた暗号スイートを識別する列挙値の1つ。</returns>
      <exception cref="T:System.InvalidOperationException">認証プロセスの完了前に、プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary>基になるストリーム内の現在位置を取得または設定します。</summary>
      <returns>基になるストリームの現在の位置。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティの設定は、サポートされていません。  
または 
基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>このストリームからデータを読み取り、指定した配列に格納します。</summary>
      <param name="buffer">このストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count">このストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</param>
      <returns>読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.  
 <paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。  

または - 
<paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。 内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>このストリームからデータを非同期的に読み取り、それをバイト配列の指定の範囲に格納します。</summary>
      <param name="buffer">このストリームから読み取ったバイトを受け取るバッファー。</param>
      <param name="offset">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count">このストリームから読み取られた最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  
または 
 <paramref name="count" /> が 0 未満です。

または - 
<paramref name="count" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。 内部例外が存在する場合は、チェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>このストリームからデータを非同期的に読み取り、それを指定されたメモリ範囲に格納します。</summary>
      <param name="buffer">このストリームから読み取ったバイトを受け取るバッファー。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。 内部例外が存在する場合は、チェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadByte">
      <summary>
        <see cref="T:System.Net.Security.SslStream" /> から 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。または、ストリームの末尾の場合は -1 を返します。</summary>
      <returns>
        <see langword="Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</returns>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">読み取り操作に失敗しました。 内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary>読み取り操作がブロックしてデータを待機する時間をミリ秒単位で取得または設定します。</summary>
      <returns>同期読み取り操作が失敗するまでの経過時間 (ミリ秒単位)。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary>リモート エンドポイントの認証に使用する証明書を取得します。</summary>
      <returns>認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException">認証に失敗したか、認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
        <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset">この値は無視されます。</param>
      <param name="origin">この値は無視されます。</param>
      <returns>常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
      <exception cref="T:System.NotSupportedException">シークは <see cref="T:System.Net.Security.SslStream" /> オブジェクトでサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary>基になるストリームの長さを設定します。</summary>
      <param name="value">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.ShutdownAsync">
      <summary>この SslStream を終了します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary>この接続の認証に使用するセキュリティ プロトコルを示す値を取得します。</summary>
      <returns>認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary>拡張保護を使用した認証に使用する <see cref="T:System.Net.TransportContext" /> を取得します。</summary>
      <returns>拡張保護に使用するチャネル バインディング トークン (CBT: Channel Binding Token) を格納している <see cref="T:System.Net.TransportContext" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary>このストリームに指定したデータを書き込みます。</summary>
      <param name="buffer">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</summary>
      <param name="buffer">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count">
        <paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.  
 <paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。  
または 
 <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>バイト配列の指定された範囲から、基になるストリームに、データを非同期的に書き込みます。</summary>
      <param name="buffer">基になるストリームに書き込むデータ。</param>
      <param name="offset">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="count">基になるストリームに書き込むバイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="count" /> が 0 未満です。

または 
 <paramref name="count" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>読み取り専用バイト メモリ範囲から基になるストリームにデータを非同期的に書き込みます。</summary>
      <param name="buffer">基になるストリームに書き込むデータ。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
      <exception cref="T:System.InvalidOperationException">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary>書き込み操作がブロックしてデータを待機する時間を取得または設定します。</summary>
      <returns>同期書き込み操作が失敗するまでの経過時間。</returns>
    </member>
    <member name="T:System.Net.Security.TlsCipherSuite">
      <summary>TLS (旧称 SSL) プロトコルの暗号スイートの値を表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_CCM_8_SHA256">
      <summary>TLS_AES_128_CCM_8_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_CCM_SHA256">
      <summary>TLS_AES_128_CCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_GCM_SHA256">
      <summary>TLS_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_256_GCM_SHA384">
      <summary>TLS_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_CHACHA20_POLY1305_SHA256">
      <summary>TLS_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA">
      <summary>TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_EXPORT_WITH_RC4_40_MD5">
      <summary>TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_DH_anon_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_CBC_SHA">
      <summary>TLS_DH_anon_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_CBC_SHA256">
      <summary>TLS_DH_anon_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_GCM_SHA256">
      <summary>TLS_DH_anon_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_CBC_SHA">
      <summary>TLS_DH_anon_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_CBC_SHA256">
      <summary>TLS_DH_anon_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_GCM_SHA384">
      <summary>TLS_DH_anon_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA">
      <summary>TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA">
      <summary>TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_DES_CBC_SHA">
      <summary>TLS_DH_anon_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_RC4_128_MD5">
      <summary>TLS_DH_anon_WITH_RC4_128_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_SEED_CBC_SHA">
      <summary>TLS_DH_anon_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA">
      <summary>TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_CBC_SHA256">
      <summary>TLS_DH_DSS_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_GCM_SHA256">
      <summary>TLS_DH_DSS_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_CBC_SHA256">
      <summary>TLS_DH_DSS_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_GCM_SHA384">
      <summary>TLS_DH_DSS_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_DES_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_SEED_CBC_SHA">
      <summary>TLS_DH_DSS_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary>TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_DH_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_DH_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_CBC_SHA256">
      <summary>TLS_DH_RSA_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_DH_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_DES_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_SEED_CBC_SHA">
      <summary>TLS_DH_RSA_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA">
      <summary>TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_CBC_SHA256">
      <summary>TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_GCM_SHA256">
      <summary>TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_CBC_SHA256">
      <summary>TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_GCM_SHA384">
      <summary>TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_DES_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_SEED_CBC_SHA">
      <summary>TLS_DHE_DSS_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA">
      <summary>TLS_DHE_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA256">
      <summary>TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CCM">
      <summary>TLS_DHE_PSK_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_GCM_SHA256">
      <summary>TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA">
      <summary>TLS_DHE_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA384">
      <summary>TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CCM">
      <summary>TLS_DHE_PSK_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384">
      <summary>TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA">
      <summary>TLS_DHE_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA256">
      <summary>TLS_DHE_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA384">
      <summary>TLS_DHE_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA">
      <summary>TLS_DHE_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary>TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CCM">
      <summary>TLS_DHE_RSA_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CCM_8">
      <summary>TLS_DHE_RSA_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA256">
      <summary>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CCM">
      <summary>TLS_DHE_RSA_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CCM_8">
      <summary>TLS_DHE_RSA_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_DES_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_SEED_CBC_SHA">
      <summary>TLS_DHE_RSA_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_128_CCM_SHA256">
      <summary>TLS_ECCPWD_WITH_AES_128_CCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_128_GCM_SHA256">
      <summary>TLS_ECCPWD_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_256_CCM_SHA384">
      <summary>TLS_ECCPWD_WITH_AES_256_CCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_256_GCM_SHA384">
      <summary>TLS_ECCPWD_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_AES_128_CBC_SHA">
      <summary>TLS_ECDH_anon_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_AES_256_CBC_SHA">
      <summary>TLS_ECDH_anon_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_NULL_SHA">
      <summary>TLS_ECDH_anon_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_RC4_128_SHA">
      <summary>TLS_ECDH_anon_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384">
      <summary>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_NULL_SHA">
      <summary>TLS_ECDH_ECDSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_RC4_128_SHA">
      <summary>TLS_ECDH_ECDSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_ECDH_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384">
      <summary>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_NULL_SHA">
      <summary>TLS_ECDH_RSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_RC4_128_SHA">
      <summary>TLS_ECDH_RSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CCM">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CCM">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_NULL_SHA">
      <summary>TLS_ECDHE_ECDSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_RC4_128_SHA">
      <summary>TLS_ECDHE_ECDSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA">
      <summary>TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA">
      <summary>TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384">
      <summary>TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384">
      <summary>TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA">
      <summary>TLS_ECDHE_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA256">
      <summary>TLS_ECDHE_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA384">
      <summary>TLS_ECDHE_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_RC4_128_SHA">
      <summary>TLS_ECDHE_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384">
      <summary>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_NULL_SHA">
      <summary>TLS_ECDHE_RSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_RC4_128_SHA">
      <summary>TLS_ECDHE_RSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5">
      <summary>TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA">
      <summary>TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5">
      <summary>TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA">
      <summary>TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC4_40_MD5">
      <summary>TLS_KRB5_EXPORT_WITH_RC4_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC4_40_SHA">
      <summary>TLS_KRB5_EXPORT_WITH_RC4_40_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_3DES_EDE_CBC_MD5">
      <summary>TLS_KRB5_WITH_3DES_EDE_CBC_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_KRB5_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_DES_CBC_MD5">
      <summary>TLS_KRB5_WITH_DES_CBC_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_DES_CBC_SHA">
      <summary>TLS_KRB5_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_IDEA_CBC_MD5">
      <summary>TLS_KRB5_WITH_IDEA_CBC_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_IDEA_CBC_SHA">
      <summary>TLS_KRB5_WITH_IDEA_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_RC4_128_MD5">
      <summary>TLS_KRB5_WITH_RC4_128_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_RC4_128_SHA">
      <summary>TLS_KRB5_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_NULL_WITH_NULL_NULL">
      <summary>TLS_NULL_WITH_NULL_NULL 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_DHE_WITH_AES_128_CCM_8">
      <summary>TLS_PSK_DHE_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_DHE_WITH_AES_256_CCM_8">
      <summary>TLS_PSK_DHE_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA">
      <summary>TLS_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA256">
      <summary>TLS_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CCM">
      <summary>TLS_PSK_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CCM_8">
      <summary>TLS_PSK_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_GCM_SHA256">
      <summary>TLS_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA">
      <summary>TLS_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA384">
      <summary>TLS_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CCM">
      <summary>TLS_PSK_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CCM_8">
      <summary>TLS_PSK_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_GCM_SHA384">
      <summary>TLS_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_PSK_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_PSK_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA">
      <summary>TLS_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA256">
      <summary>TLS_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA384">
      <summary>TLS_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_RC4_128_SHA">
      <summary>TLS_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary>TLS_RSA_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5">
      <summary>TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_RC4_40_MD5">
      <summary>TLS_RSA_EXPORT_WITH_RC4_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA">
      <summary>TLS_RSA_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA256">
      <summary>TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_GCM_SHA256">
      <summary>TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA">
      <summary>TLS_RSA_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA384">
      <summary>TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384">
      <summary>TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA">
      <summary>TLS_RSA_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA256">
      <summary>TLS_RSA_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA384">
      <summary>TLS_RSA_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_RC4_128_SHA">
      <summary>TLS_RSA_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA256">
      <summary>TLS_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CCM">
      <summary>TLS_RSA_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CCM_8">
      <summary>TLS_RSA_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256">
      <summary>TLS_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA256">
      <summary>TLS_RSA_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CCM">
      <summary>TLS_RSA_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CCM_8">
      <summary>TLS_RSA_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384">
      <summary>TLS_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>TLS_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>TLS_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>TLS_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>TLS_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary>TLS_RSA_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary>TLS_RSA_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_DES_CBC_SHA">
      <summary>TLS_RSA_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_IDEA_CBC_SHA">
      <summary>TLS_RSA_WITH_IDEA_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_MD5">
      <summary>TLS_RSA_WITH_NULL_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_SHA">
      <summary>TLS_RSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_SHA256">
      <summary>TLS_RSA_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_RC4_128_MD5">
      <summary>TLS_RSA_WITH_RC4_128_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_RC4_128_SHA">
      <summary>TLS_RSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_SEED_CBC_SHA">
      <summary>TLS_RSA_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA">
      <summary>TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA">
      <summary>TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA">
      <summary>TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA">
      <summary>TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA">
      <summary>TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_AES_128_CBC_SHA">
      <summary>TLS_SRP_SHA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_AES_256_CBC_SHA">
      <summary>TLS_SRP_SHA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary>認証ストリームの認証が失敗した場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary>メッセージを指定せずに、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスを逆シリアル化するために必要な情報を格納する <see cref="T:System.Security.Authentication.AuthenticationException" /> インスタンス。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> のインスタンス。</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary>指定したメッセージを使用して、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">認証エラーを説明する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>指定したメッセージと内部例外を使用して、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">認証エラーを説明する <see cref="T:System.String" />。</param>
      <param name="innerException">現在の例外の原因である <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスは、受信クライアント接続を検証するためにサーバーによって使用される拡張保護ポリシーを表します。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> を設定するために必要なデータを格納している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトから、<see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> インスタンス。</param>
      <param name="context">新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> インスタンスに関連付けられているシリアル化ストリームの転送元を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary>拡張保護ポリシーを適用するタイミングを指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary>拡張保護ポリシーを適用するタイミング、および使用するチャネル バインディング トークン (CBT: Channel Binding Token) を指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
      <param name="customChannelBinding">検証に使用するカスタム チャネル バインディングを格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> は <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" /> として指定されます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customChannelBinding" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary>拡張保護ポリシーを適用するタイミング、ポリシーによって適用される保護の種類、およびクライアントのサービス プロバイダー名 (SPN) との照合に使用されるカスタム SPN 一覧を指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
      <param name="protectionScenario">ポリシーによって適用される保護の種類を示す <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 値。</param>
      <param name="customServiceNames">クライアントの SPN との照合に使用されるカスタム SPN リストを格納している <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> は <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" /> として指定されます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames" /> が <see langword="null" /> または空のリストです。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary>拡張保護ポリシーを適用するタイミング、ポリシーによって適用される保護の種類、およびクライアントのサービス プロバイダー名 (SPN) との照合に使用されるカスタム SPN 一覧を指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
      <param name="protectionScenario">ポリシーによって適用される保護の種類を示す <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 値。</param>
      <param name="customServiceNames">クライアントの SPN との照合に使用されるカスタム SPN リストを格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> は <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" /> として指定されます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames" /> が <see langword="null" /> または空のリストです。</exception>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary>検証に使用するカスタム チャネル バインディング トークン (CBT) を取得します。</summary>
      <returns>検証に使用するカスタム チャネル バインディングを格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary>クライアントの サービス プロバイダー名 (SPN) との照合に使用されるカスタム SPN リストを取得します。</summary>
      <returns>クライアントの SPN との照合に使用されるカスタム SPN リストを格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary>オペレーティング システムが拡張保護を使用した統合 Windows 認証をサポートしているかどうかを示します。</summary>
      <returns>オペレーティング システムが拡張保護を使用した統合 Windows 認証をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary>拡張保護ポリシーを適用するタイミングを取得します。</summary>
      <returns>拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary>拡張保護ポリシーによって適用される保護の種類を取得します。</summary>
      <returns>ポリシーによって適用される保護の種類を示す <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 値。</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトをシリアル化するために必要なデータで <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> オブジェクトを設定します。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトのシリアル化されたデータを保持する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> オブジェクト。</param>
      <param name="context">新しい <see cref="T:System.Runtime.Serialization.StreamingContext" /> に関連付けられているシリアル化ストリームの転送先を格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary>拡張保護ポリシー インスタンスの文字列形式を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> インスタンスの表現を格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> インスタンス。</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 列挙体は、<see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> を適用するタイミングを指定します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> は常に適用されます。 拡張保護をサポートしていないクライアントは認証に失敗します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> が適用されることはなく、拡張保護は無効になります。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> が適用されるのは、クライアントとサーバーが拡張保護をサポートしている場合のみです。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 列挙体は、ポリシーによって適用される保護シナリオを指定します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary>トランスポートは、使用されるチャネルの種類に応じて、セキュリティで保護された保護シナリオか標準の保護シナリオのどちらかを選択します。 セキュリティで保護された保護の場合、統合 Windows 認証は、セキュリティで保護されたチャネルにラップされ、サービス プロバイダー名 (SPN: Service Provider Name) 検証が行われていない完全に一致するチャネル バインディング トークン (CBT: Channel Binding Token) を使用します。 標準の保護の場合、統合 Windows 認証は、必要に応じてオプションのチャネル バインディング トークンを使用してセキュリティで保護されたチャネルにラップされ、SPN 検証を必要とします。 したがって、セキュリティで保護されたチャネルを経由して要求が届く場合はチャネル バインディング トークンがチェックされます。それ以外の場合は SPN がチェックされます。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary>統合 Windows 認証は、信頼できるプロキシで終了するセキュリティで保護されたチャネルにラップされ、SPN 検証が必要なチャネル バインディング トークンを使用します。 この場合、CBT が存在する必要がありますが、SPN のチェック中は CTB はチェックされません。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> クラスは、サービス プリンシパル名の読み取り専用コレクションです。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary>既存の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> に基づいて、 <see cref="T:System.Collections.ICollection" />クラスの新しい読み取り専用インスタンスを初期化します。</summary>
      <param name="items">クラスの初期化に使用されるサービス名の指定された値を格納する <see cref="T:System.Collections.ICollection" /> クラスのインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が空です。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains(System.String)">
      <summary>この <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス内に指定した文字列が存在するかどうかを示す値を返します。</summary>
      <param name="searchServiceName">シークする文字列。</param>
      <returns>
        <see cref="T:System.Boolean" /> を返します。  
 <paramref name="searchServiceName" /> パラメーターがこの <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス内で発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary>現在の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を指定された値とマージして、結合領域を包む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を作成します。</summary>
      <param name="serviceNames">マージされるサービス名の指定された値を格納する <see cref="T:System.Collections.IEnumerable" /> クラスのインスタンス。</param>
      <returns>指定された値とマージされる既存の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンスの結合領域を包む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> が空です。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary>現在の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を指定された値とマージして、結合領域を包む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を作成します。</summary>
      <param name="serviceName">クラスの初期化に使用されるサービス名の指定された値を格納する文字列。</param>
      <returns>指定された値とマージされる既存の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンスの結合領域を包む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> が空です。</exception>
    </member>
    <member name="T:System.Security.Authentication.InvalidCredentialException">
      <summary>認証ストリームの認証が失敗してこの認証を再試行できない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor">
      <summary>メッセージを指定せずに、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスを逆シリアル化するために必要な情報を格納する <see cref="T:System.Security.Authentication.InvalidCredentialException" /> インスタンス。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> のインスタンス。</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
      <summary>指定したメッセージを使用して、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">認証エラーを説明する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
      <summary>指定したメッセージと内部例外を使用して、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">認証エラーを説明する <see cref="T:System.String" />。</param>
      <param name="innerException">現在の例外の原因である <see cref="T:System.Exception" />。</param>
    </member>
  </members>
</doc>