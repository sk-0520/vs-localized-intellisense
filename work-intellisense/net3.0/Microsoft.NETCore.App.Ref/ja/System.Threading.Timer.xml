<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Timer</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Timer">
      <summary>指定した間隔で、スレッド プール スレッドでメソッドを実行するための機構を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)">
      <summary>状態オブジェクトとして新しく作成した <see cref="T:System.Threading.Timer" /> を使用して、無制限の期間および無制限の期限を指定して <see cref="T:System.Threading.Timer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callback">実行するメソッドを表す <see cref="T:System.Threading.TimerCallback" /> デリゲート。</param>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <summary>時間間隔を指定するために 32 ビット符号付き整数を使用して、<see langword="Timer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callback">実行するメソッドを表す <see cref="T:System.Threading.TimerCallback" /> デリゲート。</param>
      <param name="state">コールバック メソッドで使用される情報を格納するオブジェクト。または <see langword="null" />。</param>
      <param name="dueTime">
        <paramref name="callback" /> が呼び出される前の遅延時間 (ミリ秒単位) です。 タイマーが開始されないようにするには <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。 0 を指定して、タイマーをすぐに開始します。</param>
      <param name="period">
        <paramref name="callback" /> が呼び出される時間間隔 (ミリ秒単位) です。 周期的なシグナル通知を無効にする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが負の値であり、<see cref="F:System.Threading.Timeout.Infinite" /> と等しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)">
      <summary>時間間隔を計るために 64 ビット符号付き整数を使用して、<see langword="Timer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callback">実行するメソッドを表す <see cref="T:System.Threading.TimerCallback" /> デリゲート。</param>
      <param name="state">コールバック メソッドで使用される情報を格納するオブジェクト。または <see langword="null" />。</param>
      <param name="dueTime">
        <paramref name="callback" /> が呼び出される前の遅延時間 (ミリ秒単位) です。 タイマーが開始されないようにするには <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。 0 を指定して、タイマーをすぐに開始します。</param>
      <param name="period">
        <paramref name="callback" /> が呼び出される時間間隔 (ミリ秒単位) です。 周期的なシグナル通知を無効にする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが負の値であり、<see cref="F:System.Threading.Timeout.Infinite" /> と等しくありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが 4294967294 より大きい値です。</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <summary>時間間隔を計るために <see cref="T:System.TimeSpan" /> 値を使用して、<see langword="Timer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callback">実行するメソッドを表すデリゲート。</param>
      <param name="state">コールバック メソッドで使用される情報を格納するオブジェクト。または <see langword="null" />。</param>
      <param name="dueTime">
        <paramref name="callback" /> パラメーターがそのメソッドを呼び出す前に遅延する時間。 -1 ミリ秒を指定して、タイマーが開始されないようにします。 0 を指定して、タイマーをすぐに開始します。</param>
      <param name="period">
        <paramref name="callback" /> によって参照されるメソッドの呼び出し時間間隔。 -1 ミリ秒を指定して、周期的なシグナル通知を無効にします。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> または <paramref name="period" /> の値のミリ秒数が負の値で <see cref="F:System.Threading.Timeout.Infinite" /> と等しくないか、<see cref="F:System.Int32.MaxValue" /> より大きい値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)">
      <summary>時間間隔を計るために 32 ビット符号なし整数を使用して、<see langword="Timer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callback">実行するメソッドを表すデリゲート。</param>
      <param name="state">コールバック メソッドで使用される情報を格納するオブジェクト。または <see langword="null" />。</param>
      <param name="dueTime">
        <paramref name="callback" /> が呼び出される前の遅延時間 (ミリ秒単位) です。 タイマーが開始されないようにするには <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。 0 を指定して、タイマーをすぐに開始します。</param>
      <param name="period">
        <paramref name="callback" /> が呼び出される時間間隔 (ミリ秒単位) です。 周期的なシグナル通知を無効にする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが負の値であり、<see cref="F:System.Threading.Timeout.Infinite" /> と等しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Threading.Timer.ActiveCount">
      <summary>現在アクティブなタイマーの数を取得します。 アクティブなタイマーは、将来のある時点でティックするように登録されており、まだキャンセルされていません。</summary>
      <returns>現在アクティブなタイマーの数。</returns>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int32,System.Int32)">
      <summary>時間間隔を計るために 32 ビット符号付き整数を使用して、タイマーの開始時刻とメソッドの呼び出しの間隔を変更します。</summary>
      <param name="dueTime">
        <see cref="T:System.Threading.Timer" /> 構築時に指定されたコールバック メソッドを呼び出す前に遅延する時間 (ミリ秒単位)。 タイマーが再開されないようにする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。 0 を指定して、タイマーをすぐに再開します。</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" /> の構築時に指定されたコールバック メソッドを呼び出す間隔の時間 (ミリ秒単位)。 周期的なシグナル通知を無効にする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。</param>
      <returns>タイマーが正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" /> が既に破棄されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが負の値であり、<see cref="F:System.Threading.Timeout.Infinite" /> と等しくありません。</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int64,System.Int64)">
      <summary>時間間隔を計るために 64 ビット符号付き整数を使用して、タイマーの開始時刻とメソッドの呼び出しの間隔を変更します。</summary>
      <param name="dueTime">
        <see cref="T:System.Threading.Timer" /> 構築時に指定されたコールバック メソッドを呼び出す前に遅延する時間 (ミリ秒単位)。 タイマーが再開されないようにする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。 0 を指定して、タイマーをすぐに再開します。</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" /> の構築時に指定されたコールバック メソッドを呼び出す間隔の時間 (ミリ秒単位)。 周期的なシグナル通知を無効にする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。</param>
      <returns>タイマーが正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" /> が既に破棄されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが -1 未満です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが 4294967294 より大きい値です。</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)">
      <summary>時間間隔を計るために <see cref="T:System.TimeSpan" /> 値を使用して、タイマーの開始時刻とメソッドの呼び出しの間隔を変更します。</summary>
      <param name="dueTime">
        <see cref="T:System.TimeSpan" /> は、<see cref="T:System.Threading.Timer" /> の構築時に指定されたコールバック メソッドを呼び出す前に遅延する時間を表します。 タイマーが再開されないようにする -1 を指定します。 0 を指定して、タイマーをすぐに再開します。</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" /> の構築時に指定されたコールバック メソッドを呼び出す時間間隔。 -1 ミリ秒を指定して、周期的なシグナル通知を無効にします。</param>
      <returns>タイマーが正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" /> が既に破棄されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが -1 未満です (ミリ秒単位)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> パラメーターまたは <paramref name="period" /> パラメーターが 4294967294 より大きい値です (ミリ秒単位)。</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)">
      <summary>時間間隔を計るために 32 ビット符号なし整数を使用して、タイマーの開始時刻とメソッドの呼び出しの間隔を変更します。</summary>
      <param name="dueTime">
        <see cref="T:System.Threading.Timer" /> 構築時に指定されたコールバック メソッドを呼び出す前に遅延する時間 (ミリ秒単位)。 タイマーが再開されないようにする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。 0 を指定して、タイマーをすぐに再開します。</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" /> の構築時に指定されたコールバック メソッドを呼び出す間隔の時間 (ミリ秒単位)。 周期的なシグナル通知を無効にする <see cref="F:System.Threading.Timeout.Infinite" /> を指定します。</param>
      <returns>タイマーが正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" /> が既に破棄されています。</exception>
    </member>
    <member name="M:System.Threading.Timer.Dispose">
      <summary>
        <see cref="T:System.Threading.Timer" /> の現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)">
      <summary>
        <see cref="T:System.Threading.Timer" /> の現在のインスタンスによって使用されているすべてのリソースを解放し、タイマーが破棄されたときに通知します。</summary>
      <param name="notifyObject">
        <see langword="Timer" /> が破棄されたことが通知される <see cref="T:System.Threading.WaitHandle" />。</param>
      <returns>関数が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="notifyObject" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Threading.Timer.DisposeAsync">
      <summary>
        <see cref="T:System.Threading.Timer" /> の現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
      <returns>タイマーに関連付けられているすべての作業が終わったときに完了する <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="T:System.Threading.TimerCallback">
      <summary>
        <see cref="T:System.Threading.Timer" /> からの呼び出しを処理するメソッドを表します。</summary>
      <param name="state">このデリゲートで呼び出されたメソッドに関連するアプリケーション固有の情報を格納するオブジェクト、または <see langword="null" />。</param>
    </member>
  </members>
</doc>