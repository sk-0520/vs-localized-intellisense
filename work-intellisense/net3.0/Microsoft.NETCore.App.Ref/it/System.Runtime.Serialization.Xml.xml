<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">Fornisce un meccanismo per il mapping dinamico di tipi a e da rappresentazioni <see langword="xsi:type" /> durante la serializzazione e la deserializzazione.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">Eseguire l'override di questo metodo per eseguire il mapping del nome e dello spazio dei nomi dell'oggetto <see langword="xsi:type" /> specificato a un tipo di contratto dati durante la deserializzazione.</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">Nome <see langword="xsi:type" /> su cui eseguire il mapping.</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">Spazio dei nomi <see langword="xsi:type" /> su cui eseguire il mapping.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Tipo dichiarato nel contratto dati.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Resolver di tipi conosciuti.</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">Tipo al quale sono mappati il nome e lo spazio dei nomi di <see langword="xsi:type" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">Eseguire l'override di questo metodo per eseguire il mapping di un tipo di contratto dati al nome e allo spazio dei nomi di <see langword="xsi:type" /> durante la serializzazione.</summary>
      <param name="type" vsli:raw="The type to map.">Tipo di cui eseguire il mapping.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Tipo dichiarato nel contratto dati.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Resolver di tipi conosciuti.</param>
      <param name="typeName" vsli:raw="The xsi:type name.">Nome di xsi:type.</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">Spazio dei nomi di xsi:type.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il mapping viene eseguito correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">Serializza e deserializza un'istanza di un tipo in un flusso o documento XML usando un contratto dati fornito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato e una raccolta di tipi conosciuti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo e delle impostazioni specificati.</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">Tipo di istanza che viene serializzata o deserializzata.</param>
      <param name="settings" vsli:raw="The serializer settings.">Impostazioni del serializzatore</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato utilizzando l'elemento radice e lo spazio dei nomi XML forniti.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">Nome dell'elemento XML che include il contenuto da serializzare o deserializzare.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">Spazio dei nomi dell'elemento XML che include il contenuto da serializzare o deserializzare.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato. Questo metodo specifica inoltre l'elemento XML radice e lo spazio dei nomi in due parametri di stringa nonché un elenco di tipi conosciuti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="rootName" vsli:raw="The root element name of the content.">Nome dell'elemento radice del contenuto.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">Spazio dei nomi dell'elemento radice.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato utilizzando l'elemento radice e lo spazio dei nomi XML specificati dai parametri di tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome dell'elemento radice del contenuto.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente lo spazio dei nomi dell'elemento radice.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato. Questo metodo specifica inoltre l'elemento XML radice e lo spazio dei nomi in due parametri <see cref="T:System.Xml.XmlDictionaryString" /> nonché un elenco di tipi conosciuti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome dell'elemento radice del contenuto.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente lo spazio dei nomi dell'elemento radice.</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">Interfaccia <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi conosciuti che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">Ottiene il componente utilizzato per eseguire il mapping in modo dinamico di dichiarazioni <see langword="xsi:type" /> a tipi di contratto conosciuti.</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Implementazione della classe <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Ottiene un valore che specifica se ignorare i dati forniti da un'estensione della classe durante la serializzazione o la deserializzazione della classe stessa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per omettere i dati dell'estensione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina se la classe <see cref="T:System.Xml.XmlDictionaryReader" /> è posizionata su un oggetto che può essere deserializzato.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzata per leggere il flusso XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il lettore si trova in corrispondenza dell'elemento iniziale del flusso da leggere. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina se la classe <see cref="T:System.Xml.XmlReader" /> è posizionata su un oggetto che può essere deserializzato.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il flusso XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il lettore si trova in corrispondenza dell'elemento iniziale del flusso da leggere. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Ottiene una raccolta di tipi che possono essere presenti nell'oggetto grafico serializzato utilizzando l'istanza di <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">Classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> contenente tipi previsti passati come tipi conosciuti al costruttore <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">Ottiene il numero massimo di elementi di un oggetto grafico da serializzare o deserializzare.</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Numero massimo di elementi da serializzare o deserializzare. Il valore predefinito è <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">Il numero di elementi supera il valore massimo.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Ottiene un valore che specifica se utilizzare costrutti XML non standard per conservare i dati del riferimento all'oggetto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per mantenere i riferimenti. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Legge il flusso XML con una classe <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato, specifica inoltre se viene eseguito un controllo per verificare il nome dell'oggetto prima di leggerne il valore.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzata per leggere il flusso XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per controllare se il nome dell'oggetto corrisponde al valore del nome radice fornito nel costruttore. In caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Il parametro <paramref name="verifyObjectName" /> viene impostato su <see langword="true" /> e il nome e lo spazio dei nomi dell'elemento non corrispondono ai valori impostati nel costruttore.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Legge un documento o un flusso di documenti XML e restituisce l'oggetto deserializzato.  Il metodo include un parametro che consente di specificare se il nome dell'oggetto deve essere verificato e convalidato e un resolver per il mapping di dichiarazioni <see langword="xsi:type" /> in fase di esecuzione.</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">Lettore XML utilizzato per leggere il contenuto.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per verificare il nome dell'oggetto. In caso contrario <see langword="false" />.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">Implementazione di <see cref="T:System.Runtime.Serialization.DataContractResolver" /> per il mapping di dichiarazioni <see langword="xsi:type" /> a tipi di contratto dati.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Legge il flusso XML con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il flusso XML.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Legge il flusso XML con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato, specifica inoltre se viene eseguito un controllo per verificare il nome dell'oggetto prima di leggerne il valore.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il flusso XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per controllare se il nome dell'oggetto corrisponde al valore del nome radice fornito nel costruttore. In caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Il parametro <paramref name="verifyObjectName" /> viene impostato su <see langword="true" /> e il nome e lo spazio dei nomi dell'elemento non corrispondono ai valori impostati nel costruttore.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">Ottiene un valore che indica se i tipi di sola lettura vengono serializzati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">
        <see langword="true" /> se i tipi di sola lettura vengono serializzati; <see langword="false" /> se tutti i tipi vengono serializzati.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive l'elemento XML di chiusura utilizzando una classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere il flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'elemento XML di chiusura utilizzando una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Scrive tutti i dati dell'oggetto (elemento XML di apertura, contenuto ed elemento di inclusione) in un documento o in un flusso XML utilizzando l'oggetto XmlDictionaryWriter specificato. Il metodo include un resolver per il mapping di dichiarazioni <see langword="xsi:type" /> in fase di esecuzione.</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">Un oggetto XmlDictionaryWriter viene utilizzato per scrivere il contenuto nel documento o nel flusso di dati XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Oggetto che contiene il contenuto da scrivere.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">Implementazione di <see cref="T:System.Runtime.Serialization.DataContractResolver" /> utilizzata per il mapping di dichiarazioni <see langword="xsi:type" /> a contratti dati noti.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive tutti i dati dell'oggetto (elemento XML di apertura, contenuto ed elemento di chiusura) in un documento o flusso XML con una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il documento o flusso XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Oggetto che contiene i dati da scrivere nel flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive il contenuto XML utilizzando un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere il flusso.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Oggetto da scrivere nel flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive il contenuto XML utilizzando un oggetto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il flusso.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Oggetto da scrivere nel flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive l'elemento XML di apertura utilizzando un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'elemento XML di apertura.</param>
      <param name="graph" vsli:raw="The object to write.">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'elemento XML di apertura utilizzando un oggetto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere l'elemento XML di apertura.</param>
      <param name="graph" vsli:raw="The object to write.">Oggetto da scrivere.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">Estende la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> specificando metodi per impostare e ottenere <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">Restituisce il provider di serializzazione surrogato per questo serializzatore.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Serializzatore che viene sostituito.</param>
      <returns vsli:raw="The surrogate serializer.">Serializzatore surrogato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Specifica un provider di serializzazione surrogato per questo <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Serializzatore che viene sostituito.</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">Provider di serializzazione surrogato.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">Specifica le impostazioni del serializzatore del contratto dati.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">Ottiene o imposta il componente utilizzato per eseguire il mapping in modo dinamico di dichiarazioni xsi:type a tipi di contratto conosciuti.</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">Componente utilizzato per eseguire il mapping in modo dinamico di dichiarazioni xsi:type a tipi di contratto conosciuti.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Ottiene o imposta un valore che specifica se ignorare i dati forniti da un'estensione della classe, durante la serializzazione o la deserializzazione della classe stessa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per ignorare i dati forniti da un'estensione della classe, durante la serializzazione o la deserializzazione della classe stessa. in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Ottiene o imposta una raccolta di tipi che possono essere presenti nel grafico di oggetti serializzato utilizzando l'istanza di DataContractSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Raccolta di tipi che possono essere presenti nel grafico di oggetti serializzato utilizzando l'istanza di DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Ottiene o imposta il numero massimo di elementi nell'oggetto grafico da serializzare o deserializzare.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Numero massimo di elementi di un oggetto grafico da serializzare o deserializzare.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Ottiene o imposta un valore che specifica se utilizzare costrutti XML non standard per conservare i dati del riferimento all'oggetto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per utilizzare costrutti XML non standard per conservare i dati del riferimento all'oggetto. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Ottiene o imposta il nome radice dell'oggetto selezionato.</summary>
      <returns vsli:raw="The root name of the selected object.">Nome radice dell'oggetto selezionato.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">Ottiene o imposta lo spazio dei nomi radice per l'oggetto specificato.</summary>
      <returns vsli:raw="The root namespace for the specified object.">Spazio dei nomi radice per l'oggetto specificato.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Ottiene o imposta un valore che specifica se serializzare i tipi di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per serializzare i tipi di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Rappresenta le opzioni che possono essere impostate per una classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">Ottiene la raccolta dei tipi che possono essere rilevati durante la serializzazione o la deserializzazione.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Raccolta <see langword="KnownTypes" /> contenente tipi che possono essere rilevati durante la serializzazione o la deserializzazione. Le rappresentazioni dello schema XML vengono esportate per tutti i tipi specificati in questa raccolta dalla classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">Archivia dati da un contratto dati con versione che è stato esteso mediante l'aggiunta di membri nuovi.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">Fornisce una struttura di dati in cui archiviare dati aggiuntivi rilevati da <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> durante la deserializzazione di un tipo contrassegnato con l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">Ottiene o imposta la struttura che contiene dati aggiuntivi.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">Classe <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> che contiene dati non riconosciuti come appartenenti al contratto dati.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">Fornisce la classe di base utilizzata per serializzare oggetti come flussi o documenti XML. Questa classe è astratta.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">Ottiene un valore che specifica se l'oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> è posizionato su un elemento XML che può essere letto.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il flusso o il documento XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il lettore può leggere i dati. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">Ottiene un valore che specifica se l'oggetto <see cref="T:System.Xml.XmlReader" /> è posizionato su un elemento XML che può essere letto.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il flusso o il documento XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il lettore è posizionato sull'elemento iniziale. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">Legge il flusso o documento XML con una classe <see cref="T:System.IO.Stream" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">Oggetto <see cref="T:System.IO.Stream" /> utilizzato per leggere il flusso o documento XML.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Legge il flusso o documento XML con una classe <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il documento XML.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Legge il flusso o il documento XML con un oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato. Consente inoltre di specificare se il serializzatore è in grado di leggere i dati prima di effettuare un tentativo di lettura.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il documento XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">Specificare <see langword="true" /> per verificare se il nome e lo spazio dei nomi dell'elemento XML finale corrispondono al nome e allo spazio dei nomi radice. In caso contrario, specificare <see langword="false" /> per ignorare la verifica.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Legge il flusso o documento XML con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il flusso o il documento XML.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Legge il flusso o il documento XML con un oggetto <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato. Consente inoltre di specificare se il serializzatore è in grado di leggere i dati prima di effettuare un tentativo di lettura.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il documento o il flusso XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">Specificare <see langword="true" /> per verificare se il nome e lo spazio dei nomi dell'elemento XML finale corrispondono al nome e allo spazio dei nomi radice. Specificare <see langword="false" /> per ignorare la verifica.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive la fine dei dati dell'oggetto come un elemento XML finale nel documento o flusso XML con una classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il documento o il flusso XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive la fine dei dati dell'oggetto come un elemento XML finale nel documento o flusso XML con una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento o il flusso XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Scrive il contenuto completo (inizio, contenuto e fine) dell'oggetto nel documento XML o nel flusso con l'oggetto specificato <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">Oggetto <see cref="T:System.IO.Stream" /> utilizzato per scrivere il documento o flusso XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Oggetto che contiene i dati da scrivere nel flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive il contenuto completo (inizio, contenuto e fine) dell'oggetto nel documento XML o nel flusso con l'oggetto specificato <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il contenuto nel documento o flusso XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Oggetto che contiene il contenuto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive il contenuto completo (inizio, contenuto e fine) dell'oggetto nel documento XML o nel flusso con l'oggetto specificato <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento o il flusso XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Oggetto che contiene il contenuto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive soltanto il contenuto dell'oggetto nel documento o flusso XML utilizzando la classe <see cref="T:System.Xml.XmlDictionaryWriter" /> specificata.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il documento o il flusso XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Oggetto che contiene il contenuto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive soltanto il contenuto dell'oggetto nel documento o flusso XML con la classe <see cref="T:System.Xml.XmlWriter" /> specificata.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento o il flusso XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Oggetto che contiene il contenuto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive l'inizio dei dati dell'oggetto come un elemento XML iniziale utilizzando la classe <see cref="T:System.Xml.XmlDictionaryWriter" /> specificata.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'inizio dei dati dell'oggetto come un elemento XML iniziale utilizzando la classe <see cref="T:System.Xml.XmlWriter" /> specificata.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Oggetto <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">problema con l'istanza da serializzare.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">Contiene metodi per la lettura e la scrittura di dati XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">Genera un tipo di schema predefinito in base al nome del tipo specificato e lo aggiunge al set di schemi specificato.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> alla quale aggiungere il tipo di schema generato.</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome del tipo al quale assegnare lo schema.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argomento <paramref name="schemas" /> o <paramref name="typeQName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">Legge un set di nodi XML dal lettore specificato e restituisce il risultato.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per la lettura.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Matrice di tipo <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="xmlReader" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">Durante la lettura è stato rilevato un nodo <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">Scrive i nodi forniti utilizzando il writer specificato.</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">Oggetto <see cref="T:System.Xml.XmlWriter" /> utilizzato per la scrittura.</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">Matrice di tipo <see cref="T:System.Xml.XmlNode" /> da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="xmlWriter" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">Quando si specifica una classe che rappresenta un contratto dati e dei metadati che rappresentano un membro del contratto, viene prodotta una query XPath per il membro.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">Crea una query XPath da un contratto dati utilizzando il tipo di contratto dati, la matrice di elementi dei metadati, l'elemento di primo livello e gli spazi dei nomi specificati.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Tipo che rappresenta un contratto dati.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Metadati generati utilizzando il metodo <see cref="Overload:System.Type.GetMember" /> della classe <see cref="T:System.Type" /> che punta al membro dati specifico utilizzato per generare la query.</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">Elemento di primo livello nella query XPath.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Spazi dei nomi XML e relativi prefissi individuati nel contratto dati.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  

Query XPath generata dai dati relativi a tipo e membro.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">Crea una query XPath da un contratto dati usando il tipo di contratto dati, la matrice di elementi dei metadati e gli spazi dei nomi specificati.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Tipo che rappresenta un contratto dati.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Metadati generati utilizzando il metodo <see cref="Overload:System.Type.GetMember" /> della classe <see cref="T:System.Type" /> che punta al membro dati specifico utilizzato per generare la query.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Spazi dei nomi XML e relativi prefissi individuati nel contratto dati.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  

Query XPath generata dai dati relativi a tipo e membro.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">Consente la trasformazione di un set di tipi .NET Framework usati in contratti dati in un file XML Schema (con estensione xsd).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> con il set di schemi specificato.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene gli schemi da esportare.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">Ottiene un valore che indica se il set di tipi CLR contenuto in un set di assembly può essere esportato.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di <see cref="T:System.Reflection.Assembly" /> contenente gli assembly con i tipi da esportare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i tipi possono essere esportati. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">Ottiene un valore che indica se il set di tipi CLR (Common Language Runtime ) contenuto in un'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> può essere esportato.</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i tipi specificati da esportare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i tipi possono essere esportati. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">Ottiene un valore che indica se il tipo CLR (Commom Language Runtime) specificato può essere esportato.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">Tipo <see cref="T:System.Type" /> da esportare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo può essere esportato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">Trasforma i tipi inclusi nella raccolta di assembly specificata.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> (di <see cref="T:System.Reflection.Assembly" />) contenente i tipi da esportare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="assemblies" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Un assembly <see cref="T:System.Reflection.Assembly" /> della raccolta è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">Trasforma i tipi inclusi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> passato a questo metodo.</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> (di <see cref="T:System.Type" />) contenente i tipi da esportare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="types" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Un tipo della raccolta è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">Trasforma il tipo .NET Framework specificato in uno schema XSD (XML Definition Language).</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">Tipo <see cref="T:System.Type" /> da trasformare in un tipo di XML Schema.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Restituisce il nome e lo spazio dei nomi di primo livello per <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">Tipo <see cref="T:System.Type" /> per cui eseguire la query.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il nome e lo spazio dei nomi di primo livello per il tipo <see cref="T:System.Type" /> specifico che viene scritto nel flusso durante la scrittura di questo oggetto.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">Restituisce il tipo di XML Schema per il tipo specificato.</summary>
      <param name="type" vsli:raw="The type to return a schema for.">Tipo per il quale restituire uno schema.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">Oggetto <see cref="T:System.Xml.Schema.XmlSchemaType" /> contenente il tipo di XML Schema.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Restituisce il nome e lo spazio dei nomi del contratto per <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">Tipo <see cref="T:System.Type" /> esportato.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il nome di contratto e lo spazio dei nomi del tipo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'argomento <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">Ottiene o imposta un oggetto <see cref="T:System.Runtime.Serialization.ExportOptions" /> contenente le opzioni che è possibile impostare per l'operazione di esportazione.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">Classe <see cref="T:System.Runtime.Serialization.ExportOptions" /> che contiene opzioni utilizzate per personalizzare l'esportazione di tipi in schemi.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">Ottiene la raccolta di XML Schema esportati.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">Classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> che contiene gli schemi trasformati dal set di tipi CLR dopo la chiamata al metodo <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">Contiene proprietà e metodi che, in caso di implementazione tramite <see cref="T:System.Xml.XmlDictionaryWriter" />, consentono di elaborare frammenti XML.</summary>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">Ottiene un valore che indica se <see cref="T:System.Xml.XmlDictionaryWriter" /> è in grado di elaborare frammenti XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryWriter" /> è in grado di elaborare frammenti XML. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">Termina l'elaborazione di un frammento XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">Avvia l'elaborazione di un frammento XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">Se <see langword="true" />, qualsiasi spazio dei nomi dichiarato fuori dal frammento viene dichiarato di nuovo se utilizzato al suo interno, se <see langword="false" /> gli spazi dei nomi non vengono dichiarati di nuovo.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">Scrive un frammento XML nel flusso sottostante del writer.</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">Buffer in cui scrivere.</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale scrivere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte da scrivere nel <paramref name="buffer" />.</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">Rappresenta un'interfaccia che può essere implementata da classi che forniscono flussi.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">Ottiene un flusso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Oggetto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">Rilascia un flusso da restituire come output.</summary>
      <param name="stream" vsli:raw="The stream being released.">Flusso rilasciato.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">Fornisce i metodi per reinizializzare un reader binario per leggere un nuovo documento.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">Reinizializza il reader binario utilizzando il buffer di input specificato.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> da utilizzare.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">Reinizializza il reader binario utilizzando il flusso di input specificato.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> da utilizzare.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">Specifica i requisiti di implementazione per i writer binari XML che derivano da questa interfaccia.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">Specifica i requisiti di inizializzazione per i writer binari XML che implementano questo metodo.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlDictionary" /> da usare.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlBinaryWriterSession" /> da usare.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il flusso viene chiuso al termine dal writer. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">Una <see langword="interface" /> che definisce il contratto che un dizionario Xml deve implementare perché venga utilizzato dalle implementazioni <see cref="T:System.Xml.XmlDictionaryReader" /> e <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Tenta di cercare una voce nel dizionario.</summary>
      <param name="key" vsli:raw="Key to look up.">Chiave da cercare.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Se la <paramref name="key" /> è definita, la <see cref="T:System.Xml.XmlDictionaryString" /> è mappata sulla chiave. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la chiave è presente nel dizionario. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Controlla se nel dizionario esiste un valore di stringa specificato.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valore della stringa controllato.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryString" /> corrispondente, se trovato. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore si trova nel dizionario. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Controlla se nel dizionario esiste l'elemento <see cref="T:System.Xml.XmlDictionaryString" /> specificato.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">
        <see cref="T:System.Xml.XmlDictionaryString" /> oggetto della ricerca.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryString" /> corrispondente, se trovato. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryString" /> è presente nel dizionario. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">Specifica i requisiti di implementazione per i reader di testo XML che derivano da questa interfaccia.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">Specifica i requisiti di inizializzazione per i reader di testo XML che leggono un buffer.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Codifica dei caratteri del flusso.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">Specifica i requisiti di inizializzazione per i reader di testo XML che leggono un flusso.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Codifica dei caratteri del flusso.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">Specifica i requisiti di implementazione per i writer di testo XML che derivano da questa interfaccia.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">Specifica i requisiti di inizializzazione per i writer di testo XML che implementano questo metodo.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Codifica dei caratteri del flusso.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il flusso viene chiuso al termine dal writer. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">
        <see langword="delegate" /> per un metodo di callback alla chiusura del reader.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> che genera l'evento <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">Identificatore univoco ottimizzato per GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">Crea una nuova istanza di questa classe con un nuovo GUID univoco.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crea una nuova istanza di questa classe utilizzando una matrice di byte che rappresenta un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matrice di byte che rappresenta un <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> fornisce meno di 16 byte validi.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crea una nuova istanza di questa classe partendo da un offset all'interno di una matrice di <see langword="byte" /> che rappresenta un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matrice di <see langword="byte" /> che rappresenta un <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Posizione dell'offset all'interno della matrice di <see langword="byte" /> che rappresenta un <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> minore di zero o maggiore della lunghezza della matrice.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> e <paramref name="offset" /> forniscono meno di 16 byte validi.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">Crea una nuova istanza di questa classe partendo da un offset all'interno di <see langword="char" /> utilizzando un numero specificato di voci.</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matrice di <see langword="char" /> che rappresenta un <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Posizione dell'offset all'interno della matrice di <see langword="char" /> che rappresenta un <see cref="T:System.Guid" />.</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">Numero di voci della matrice da utilizzare, partendo da <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> minore di zero o maggiore della lunghezza della matrice.
-oppure-
<paramref name="count" /> minore di zero o maggiore della lunghezza della matrice meno <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> è uguale a zero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crea una nuova istanza di questa classe utilizzando un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Oggetto <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">Crea una nuova istanza di questa classe utilizzando un a stringa.</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Stringa utilizzata per generare <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">La lunghezza di <paramref name="value" /> è zero.</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Ottiene la lunghezza della rappresentazione di stringa di <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Lunghezza della rappresentazione di stringa di <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Testa se un oggetto è uguale a questa proprietà <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto è uguale a questo <see cref="T:System.Xml.UniqueId" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Crea una rappresentazione in codice hash di questo <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Rappresentazione in codice hash sotto forma di numero intero di questo <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Indica se <see cref="T:System.Xml.UniqueId" /> è un <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.UniqueId" /> è un <see cref="T:System.Guid" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Esegue l'override dell'operatore di uguaglianza per testare l'uguaglianza di due <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Primo oggetto <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Secondo oggetto <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="true" /> se i due <see cref="T:System.Xml.UniqueId" /> sono uguali o se sono entrambi <see langword="null" />, <see langword="false" /> se non sono uguali o se solo uno di essi è <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Esegue l'override dell'operatore di uguaglianza per testare la disuguaglianza di due <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Primo oggetto <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Secondo oggetto <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'operatore di uguaglianza sottoposto a override restituisce <see langword="false" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">Inserisce il valore di <see cref="T:System.Xml.UniqueId" /> in una matrice di <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">Matrice di <see langword="char" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Posizionarsi nella matrice di <see langword="char" /> per iniziare a inserire il valore di <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Numero di voci nella matrice di <see langword="char" /> riempita con <see cref="T:System.Xml.UniqueId" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> minore di zero o maggiore della lunghezza della matrice.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> e <paramref name="offset" /> forniscono meno di 16 byte validi.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">Visualizza il valore di <see cref="T:System.Xml.UniqueId" /> in formato stringa.</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Rappresentazione di stringa del valore di <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">Tenta di ottenere il valore di <see cref="T:System.Xml.UniqueId" /> come <see cref="T:System.Guid" /> e di archiviarlo nella matrice di byte definita con l'offset specificato.</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matrice di <see langword="byte" /> che conterrà il <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Posizionarsi nella matrice di <see langword="byte" /> per iniziare a inserire il valore di <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore memorizzato in questa istanza di <see cref="T:System.Xml.UniqueId" /> è un <see cref="T:System.Guid" />. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> minore di zero o maggiore della lunghezza della matrice.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> e <paramref name="offset" /> forniscono meno di 16 byte validi.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tenta di ottenere il valore di <see cref="T:System.Xml.UniqueId" /> come <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">
        <see cref="T:System.Guid" /> se l'esito è positivo. In caso contrario <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se UniqueId rappresenta un <see cref="T:System.Guid" />. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> e <paramref name="offset" /> forniscono meno di 16 byte validi.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">Consente di gestire in modo dinamico le stringhe ottimizzate.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">Crea un elemento <see cref="T:System.Xml.XmlDictionaryString" /> dai parametri di input e lo aggiunge a una raccolta interna.</summary>
      <param name="id" vsli:raw="The key value.">Valore della chiave.</param>
      <param name="value" vsli:raw="The value.">Valore.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">Oggetto <see cref="T:System.Xml.XmlDictionaryString" /> appena creato aggiunto a una raccolta interna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">Esiste già una voce con chiave = <paramref name="id" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">Cancella tutto il contenuto della raccolta interna.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">Controlla se nella raccolta interna è presente una voce che corrisponde a una chiave.</summary>
      <param name="key" vsli:raw="The key to search on.">Chiave in base alla quale effettuare la ricerca.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando viene eseguita la restituzione del metodo, contiene una stringa se viene trovata una voce; in caso contrario, <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stata rilevata una voce corrispondente alla <paramref name="key" />. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Controlla se la raccolta interna contiene una voce che corrisponde a un valore.</summary>
      <param name="value" vsli:raw="The value to search for.">Valore da cercare.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando viene eseguita la restituzione del metodo, contiene una stringa se viene trovata una voce; in caso contrario, <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stata rilevata una voce corrispondente alla <paramref name="value" />. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Controlla se la raccolta interna contiene una voce che corrisponde a un valore.</summary>
      <param name="value" vsli:raw="The value to search for.">Valore da cercare.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando viene eseguita la restituzione del metodo, contiene una stringa se viene trovata una voce; in caso contrario, <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stata rilevata una voce corrispondente alla <paramref name="value" />. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">Consente di utilizzare un dizionario dinamico per comprimere le stringhe comuni che vengono visualizzate in un messaggio e mantengono lo stato.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">Crea un'istanza di questa classe.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">Cancella le raccolte interne.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">Tenta di aggiungere un elemento <see cref="T:System.Xml.XmlDictionaryString" /> alla raccolta interna.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">Oggetto <see cref="T:System.Xml.XmlDictionaryString" /> da aggiungere.</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">Chiave di <see cref="T:System.Xml.XmlDictionaryString" /> che è stata aggiunta correttamente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile aggiungere la stringa; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">Esiste già una voce con chiave = <paramref name="key" />.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Implementa un dizionario usato per ottimizzare le implementazioni del reader/writer XML di Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlDictionary" /> vuoto.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">Crea un <see cref="T:System.Xml.XmlDictionary" /> con una capacità iniziale.</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">Dimensione iniziale del dizionario.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Aggiunge una stringa a <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">Stringa da aggiungere al dizionario.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">
        <see cref="T:System.Xml.XmlDictionaryString" /> che è stata aggiunta.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Ottiene un <see cref="T:System.Xml.IXmlDictionary" /><see langword="static" /> vuoto.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">
        <see cref="T:System.Xml.IXmlDictionary" />
        <see langword="static" /> vuoto.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Tenta di cercare una voce nel dizionario.</summary>
      <param name="key" vsli:raw="Key to look up.">Chiave da cercare.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Se la <paramref name="key" /> è definita, la <see cref="T:System.Xml.XmlDictionaryString" /> è mappata sulla chiave. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la chiave è presente nel dizionario. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Controlla se nel dizionario esiste un valore di stringa specificato.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valore della stringa controllato.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryString" /> corrispondente, se trovato. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore si trova nel dizionario. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Controlla se nel dizionario esiste l'elemento <see cref="T:System.Xml.XmlDictionaryString" /> specificato.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">
        <see cref="T:System.Xml.XmlDictionaryString" /> oggetto della ricerca.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryString" /> corrispondente, se trovato. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryString" /> è presente nel dizionario. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">Classe <see langword="abstract" /> che Windows Communication Foundation (WCF) deriva da <see cref="T:System.Xml.XmlReader" /> per eseguire la serializzazione e la deserializzazione.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">Crea un'istanza di questa classe.  Richiamata solo dalle relative classi derivate.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Questa proprietà restituisce sempre <see langword="false" />. Le relative classi derivate possono eseguire l'override per restituire <see langword="true" /> se supportano la canonizzazione.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">Restituisca il valore <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Le quote che si applicano a questa operazione.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> è <see langword="null" />.
In alternativa
<paramref name="offset" /> è minore di zero o maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> è minore di zero o maggiore della lunghezza del buffer meno l'offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlDictionary" /> da usare.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlBinaryReaderSession" /> da usare.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> è minore di zero o maggiore della lunghezza del buffer meno l'offset.
-oppure-
<paramref name="offset" /> è minore di zero o maggiore della lunghezza del buffer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlDictionary" /> da usare.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlBinaryReaderSession" /> da usare.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> è minore di zero o maggiore della lunghezza del buffer meno l'offset.
-oppure-
<paramref name="offset" /> è minore di zero o maggiore della lunghezza del buffer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Le quote che si applicano a questa operazione.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> è minore di zero o maggiore della lunghezza del buffer meno l'offset.
In alternativa
<paramref name="offset" /> è minore di zero o maggiore della lunghezza del buffer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Le quote che si applicano a questa operazione.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Le quote che si applicano a questa operazione.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="quotas" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Le quote che si applicano a questa operazione.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> da utilizzare.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> da utilizzare.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che può leggere il formato XML binario di .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Le quote che si applicano a questa operazione.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> da un <see cref="T:System.Xml.XmlReader" /> esistente.</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">Possibili codifica di caratteri dell'input.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Le quote da applicare a questo reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Possibili codifiche di caratteri dell'input.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Tipo Content-Type MIME del messaggio.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Le quote da applicare a questo reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Possibili codifiche di caratteri dell'input.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Tipo Content-Type MIME del messaggio.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare al reader.</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">Dimensione massima consentita del buffer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Possibili codifiche di caratteri dell'input.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Le quote da applicare a questo reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">Possibile codifica di caratteri del flusso.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Le quote da applicare a questo reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Possibili codifiche di caratteri del flusso.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Tipo Content-Type MIME del messaggio.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Le quote da applicare a questo reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Possibili codifiche di caratteri del flusso.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Tipo Content-Type MIME del messaggio.</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">Il tipo MIME del messaggio.</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare al reader.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> che legge codice XML in formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Possibili codifiche di caratteri del flusso.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Le quote da applicare a questo reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">L'oggetto <see cref="T:System.Text.Encoding" /> che specifica le proprietà di codifica da applicare.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Le quote applicate al reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Le quote applicate al reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">L'oggetto <see cref="T:System.Text.Encoding" /> che specifica le proprietà di codifica da applicare.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Le quote applicate al reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">Questo metodo non è ancora implementato.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Sempre</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">Quando sottoposto a override in una classe derivata, ottiene il valore di un attributo.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> che rappresenta il nome locale dell'attributo.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> che rappresenta lo spazio dei nomi dell'attributo.</param>
      <returns vsli:raw="The value of the attribute.">Valore dell'attributo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">Ottiene nomi non atomizzati.</summary>
      <param name="localName" vsli:raw="The local name.">Nome locale.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">Spazio dei nomi per il <paramref name="localName" /> locale.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Ottiene l'indice del nome locale del nodo corrente all'interno di una matrice di nomi.</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">La matrice di stringhe dei nomi locali in cui cercare.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Spazio dei nomi del nodo corrente.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">Indice del nome locale del nodo corrente all'interno di una matrice di nomi.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> o uno dei nomi nella matrice che è <see langword="null" />.
In alternativa
<paramref name="namespaceUri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Ottiene l'indice del nome locale del nodo corrente all'interno di una matrice di nomi.</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">La matrice <see cref="T:System.Xml.XmlDictionaryString" /> dei nomi locali in cui cercare.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Spazio dei nomi del nodo corrente.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">Indice del nome locale del nodo corrente all'interno di una matrice di nomi.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> o uno dei nomi nella matrice che è <see langword="null" />.
In alternativa
<paramref name="namespaceUri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Controlla se il parametro <paramref name="localName" /> è il nome locale del nodo corrente.</summary>
      <param name="localName" vsli:raw="The local name of the current node.">Nome locale del nodo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="localName" /> corrisponde al nome locale del nodo corrente, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Controlla se il parametro <paramref name="localName" /> è il nome locale del nodo corrente.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">
        <see cref="T:System.Xml.XmlDictionaryString" /> che rappresenta il nome locale del nodo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="localName" /> corrisponde al nome locale del nodo corrente, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Controlla se il parametro <paramref name="namespaceUri" /> è lo spazio dei nomi del nodo corrente.</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Spazio dei nomi del nodo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="namespaceUri" /> corrisponde allo spazio dei nomi del nodo corrente, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Controlla se il parametro <paramref name="namespaceUri" /> è lo spazio dei nomi del nodo corrente.</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">Spazio dei nomi del nodo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="namespaceUri" /> corrisponde allo spazio dei nomi del nodo corrente, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">Controlla se il lettore è posizionato all'inizio di una matrice. Questa classe restituisce <see langword="false" />, ma classi derivate che hanno il concetto di matrici possono restituire <see langword="true" />.</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Tipo del nodo, se è valido, in caso contrario <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il reader è posizionato all'inizio di un nodo della matrice, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">Testa se il primo tag è un tag iniziale o un tag di elemento vuoto e se il nome locale e lo spazio dei nomi URI corrispondono a quelli del nodo corrente.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> che rappresenta il nome locale dell'attributo.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> che rappresenta lo spazio dei nomi dell'attributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il primo tag nella matrice è un tag iniziale o un tag di elemento vuoto e corrisponde a <paramref name="localName" /> e <paramref name="namespaceUri" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">Testa se il nodo corrente è un nodo di testo.</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">Tipo del nodo da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo di nodo è <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" /> o <see cref="F:System.Xml.XmlNodeType.Attribute" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">Testa se il nodo del contenuto corrente è un elemento di inizio o un elemento vuoto.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">Testa se il nodo del contenuto corrente è un elemento di inizio o un elemento vuoto e se la proprietà <see cref="P:System.Xml.XmlReader.Name" /> dell'elemento corrisponde all'argomento specificato.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">La proprietà <see cref="P:System.Xml.XmlReader.Name" /> dell'elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">Testa se il nodo del contenuto corrente è un elemento di inizio o un elemento vuoto e se le proprietà <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> dell'elemento corrispondono agli argomenti specificati.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">Testa se il nodo del contenuto corrente è un elemento di inizio o un elemento vuoto e se le proprietà <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> dell'elemento corrispondono all'argomento specificato.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">Ottiene i valori di quota che si applicano all'istanza corrente di questa classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> che si applica all'istanza corrente di questa classe.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Boolean" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.DateTime" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Decimal" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Double" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Guid" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Legge occorrenze ripetute di numeri interi <see langword="short" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">La matrice nella quale vengono inseriti i numeri interi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Numero di numeri integer da inserire nella matrice.</param>
      <returns vsli:raw="The number of integers put in the array.">Numero di numeri integer inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Legge occorrenze ripetute di numeri integer in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">La matrice nella quale vengono inseriti i numeri interi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Numero di numeri integer da inserire nella matrice.</param>
      <returns vsli:raw="The number of integers put in the array.">Numero di numeri integer inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Legge occorrenze ripetute di numeri interi <see langword="long" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">La matrice nella quale vengono inseriti i numeri interi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Numero di numeri integer da inserire nella matrice.</param>
      <returns vsli:raw="The number of integers put in the array.">Numero di numeri integer inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Legge occorrenze ripetute di numeri <see langword="float" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">La matrice nella quale vengono inseriti i numeri in virgola mobile.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Numero di numeri in virgola mobile da inserire nella matrice.</param>
      <returns vsli:raw="The umber of float numbers put in the array.">Numero di numeri in virgola mobile inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.TimeSpan" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Boolean" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.DateTime" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Decimal" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">Legge occorrenze ripetute di tipi di nodi <see cref="T:System.Double" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Guid" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Legge occorrenze ripetute di numeri interi <see langword="short" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">La matrice nella quale vengono inseriti i numeri interi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Numero di numeri integer da inserire nella matrice.</param>
      <returns vsli:raw="The number of integers put in the array.">Numero di numeri integer inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Legge occorrenze ripetute di numeri integer in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">La matrice nella quale vengono inseriti i numeri interi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Numero di numeri integer da inserire nella matrice.</param>
      <returns vsli:raw="The number of integers put in the array.">Numero di numeri integer inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Legge occorrenze ripetute di numeri interi <see langword="long" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">La matrice nella quale vengono inseriti i numeri interi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Numero di numeri integer da inserire nella matrice.</param>
      <returns vsli:raw="The number of integers put in the array.">Numero di numeri integer inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Legge occorrenze ripetute di numeri <see langword="float" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">La matrice nella quale vengono inseriti i numeri in virgola mobile.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Numero di numeri in virgola mobile da inserire nella matrice.</param>
      <returns vsli:raw="The number of float numbers put in the array.">Numero dei numeri in virgola mobile inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.TimeSpan" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">La matrice nella quale sono inseriti i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Numero di nodi da inserire nella matrice.</param>
      <returns vsli:raw="The number of nodes put in the array.">Numero di nodi inseriti nella matrice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Boolean" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Matrice <see cref="T:System.Boolean" /> dei nodi <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Legge occorrenze ripetute di nodi <see cref="T:System.Boolean" /> in una matrice tipizzata.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Matrice <see cref="T:System.Boolean" /> dei nodi <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">Converte il contenuto di un nodo in un tipo specificato.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">
        <see cref="T:System.Type" /> del valore da restituire.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">Oggetto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizzato per risolvere qualsiasi prefisso di spazio dei nomi correlato al tipo di conversione. Può essere usato ad esempio per la conversione di un oggetto <see cref="T:System.Xml.XmlQualifiedName" /> in <c>xs:string</c>. Questo valore può essere un riferimento null.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenuto del testo concatenato o valore dell'attributo convertito nel tipo specificato.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Legge il contenuto e restituisce byte binari decodificati Base64.</summary>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Una matrice di byte che contiene i byte binari decodificati Base64.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">La dimensione della matrice è maggiore della quota MaxArrayLength per questo reader.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Legge il contenuto e restituisce i byte binari decodificati <see langword="BinHex" />.</summary>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Una matrice di byte che contiene i byte binari decodificati <see langword="BinHex" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">La dimensione della matrice è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Legge il contenuto e restituisce i byte binari decodificati <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">Lunghezza massima della matrice.</param>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Una matrice di byte che contiene i byte binari decodificati <see langword="BinHex" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">La dimensione della matrice è maggiore di <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">Legge il contenuto in una matrice <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">Matrice nella quale vengono inseriti i caratteri.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">Numero di caratteri da inserire nella matrice.</param>
      <returns vsli:raw="Number of characters read.">Numero di caratteri letti.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">Converte il contenuto di un nodo in <see langword="decimal" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">Rappresentazione <see langword="decimal" /> del contenuto del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">Converte il contenuto di un nodo in <see langword="float" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">Rappresentazione <see langword="float" /> del contenuto del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">Converte il contenuto di un nodo in <see langword="guid" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">Rappresentazione <see langword="guid" /> del contenuto del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">Converte il contenuto di un nodo in una rappresentazione del nome completo.</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Parte <see cref="P:System.Xml.XmlReader.LocalName" /> del nome completo (parametro <see langword="out" />).</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Parte <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del nome completo (parametro <see langword="out" />).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">Converte il contenuto di un nodo in una stringa.</summary>
      <returns vsli:raw="The node content in a string representation.">Contenuto del nodo in una rappresentazione stringa.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">Converte il contenuto di un nodo in una stringa.</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">Lunghezza massima della stringa.</param>
      <returns vsli:raw="Node content in string representation.">Contenuto del nodo in una rappresentazione stringa.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Converte il contenuto di un nodo in una stringa.</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">La matrice di stringhe con cui confrontare il contenuto.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Indice della voce in <paramref name="strings" /> che corrisponde al contenuto.</param>
      <returns vsli:raw="The node content in a string representation.">Contenuto del nodo in una rappresentazione stringa.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> è <see langword="null" />.
In alternativa
Una voce in <paramref name="strings" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Converte il contenuto di un nodo in una stringa.</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">Matrice di oggetti <see cref="T:System.Xml.XmlDictionaryString" /> con cui confrontare il contenuto.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Indice della voce in <paramref name="strings" /> che corrisponde al contenuto.</param>
      <returns vsli:raw="The node content in a string representation.">Contenuto del nodo in una rappresentazione stringa.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> è <see langword="null" />.
-oppure-
Una voce in <paramref name="strings" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Converte il contenuto di un nodo in <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">Rappresentazione <see cref="T:System.TimeSpan" /> del contenuto del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">Converte il contenuto di un nodo a un identificatore univoco.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Il contenuto del nodo rappresentato come identificatore univoco.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Converte il contenuto di un nodo in una matrice <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Il contenuto del nodo rappresentato come matrice <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Converte il contenuto di un nodo in una matrice <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Il contenuto del nodo rappresentato come matrice <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Converte il contenuto di un nodo in una matrice <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Il contenuto del nodo rappresentato come matrice <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Converte il contenuto di un nodo in una matrice <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Il contenuto del nodo rappresentato come matrice <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Converte il contenuto di un nodo in una matrice <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Il contenuto del nodo rappresentato come matrice <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Converte il contenuto di un nodo in una matrice <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Il contenuto del nodo rappresentato come matrice <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">Converte il contenuto di un nodo in una matrice di byte Base64.</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">Il contenuto del nodo rappresentato come una matrice di byte Base 64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Converte il contenuto di un nodo in una matrice di byte <see langword="BinHex" />.</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Il contenuto del nodo rappresentato da una matrice di byte <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">L'elemento non è nel formato valido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">L'elemento non è nel formato valido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Converte il contenuto di un elemento in un numero in virgola mobile (<see cref="T:System.Single" />).</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Contenuto del nodo rappresentato come numero in virgola mobile (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">L'elemento non è nel formato valido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">L'elemento non è nel formato valido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Converte il contenuto di un elemento in un numero intero (<see cref="T:System.Int32" />).</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Il contenuto del nodo rappresentato come un numero intero (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Converte il contenuto di un elemento in un numero intero lungo (<see cref="T:System.Int64" />).</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Il contenuto del nodo rappresentato come un numero intero lungo (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Converte il contenuto di un elemento in un <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Il contenuto del nodo rappresentato come un <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">Converte il contenuto di un elemento in un identificatore univoco.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Il contenuto del nodo rappresentato come identificatore univoco.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">L'elemento non è nel formato valido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">L'elemento non è nel formato valido.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">Verifica se il nodo corrente è un elemento e fa avanzare il reader al nodo successivo.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> restituisce <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">Verifica se il nodo corrente è un elemento con il <paramref name="name" /> specificato e fa avanzare il lettore al nodo successivo.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nome completo dell'elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> restituisce <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Verifica se il nodo corrente è un elemento con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati e fa avanzare il lettore al nodo successivo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> restituisce <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Verifica se il nodo corrente è un elemento con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati e fa avanzare il lettore al nodo successivo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> restituisce <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matrice di istanze della classe <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matrice di istanze della classe <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri interi <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Matrice di numeri interi <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri interi <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Matrice di numeri interi <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri interi (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Matrice di numeri interi (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri interi (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Matrice di numeri interi (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri interi <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Matrice di numeri interi <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri interi <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Matrice di numeri interi <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Matrice di numeri <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice di numeri <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Matrice di numeri <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Verifica se il nodo corrente è un elemento con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati e fa avanzare il lettore al nodo successivo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">Legge il contenuto del nodo corrente in una stringa.</summary>
      <returns vsli:raw="A string that contains the contents of the current node.">Stringa che contiene il contenuto del nodo corrente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Impossibile leggere il contenuto del nodo corrente.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Superata la lunghezza della stringa massima consentita.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">Legge il contenuto del nodo corrente in una stringa con una lunghezza massima specificata.</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">Lunghezza della stringa massima consentita.</param>
      <returns vsli:raw="A string that contains the contents of the current node.">Stringa che contiene il contenuto del nodo corrente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Impossibile leggere il contenuto del nodo corrente.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Superata la lunghezza della stringa massima consentita.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Matrice <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Legge il contenuto di una serie di nodi con il <paramref name="localName" /> e <paramref name="namespaceUri" /> specificati in una matrice <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Matrice <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">Non implementato.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Il buffer da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <returns vsli:raw="Not implemented.">Non implementato.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Sempre</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">Questo metodo non è ancora implementato.</summary>
      <param name="stream" vsli:raw="The stream to read from.">Flusso da cui leggere.</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">Determina se i commenti sono inclusi.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Prefissi da includere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Sempre</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implementato in questa class, (restituisce sempre <see langword="false" />). Può essere sottoposto a override nelle classi derivate.</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">Restituisce 0, a meno che non venga sottoposto a override in una classe derivata.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a meno che non venga sottoposto a override in una classe derivata.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implementato in questa class, (restituisce sempre <see langword="false" />). Può essere sottoposto a override nelle classi derivate.</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">Restituisce 0, a meno che non venga sottoposto a override in una classe derivata.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a meno che non venga sottoposto a override in una classe derivata.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implementato in questa class, (restituisce sempre <see langword="false" />). Può essere sottoposto a override nelle classi derivate.</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">Restituisce <see langword="null" />, a meno che non venga sottoposto a override in una classe derivata. .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a meno che non venga sottoposto a override in una classe derivata.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implementato in questa class, (restituisce sempre <see langword="false" />). Può essere sottoposto a override nelle classi derivate.</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Restituisce <see langword="null" />, a meno che non venga sottoposto a override in una classe derivata.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a meno che non venga sottoposto a override in una classe derivata.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implementato in questa class, (restituisce sempre <see langword="false" />). Può essere sottoposto a override nelle classi derivate.</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Restituisce <see langword="null" />, a meno che non venga sottoposto a override in una classe derivata.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a meno che non venga sottoposto a override in una classe derivata.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">Contiene valori di quota configurabili per XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">Crea una nuova istanza di questa classe.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">Imposta le proprietà su un'istanza della quota passata, in base ai valori in questa istanza.</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">Istanza <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> in cui copiare i valori.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">Tentativo di impostare (<see langword="set" />) il valore. I valori di quota, tuttavia, sono in sola lettura per l'istanza passata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Ciò che viene passato nelle <paramref name="quotas" /> di destinazione è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">Ottiene un'istanza di questa classe con tutte le proprietà impostate sui valori massimi.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> con le proprietà impostate su <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">Ottiene o imposta la lunghezza massima consentita della matrice.</summary>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">Lunghezza massima consentita della matrice. Il valore predefinito è 16384.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentativo di impostare (<see langword="set" />) il valore. I valori di quota di questa istanza, tuttavia, sono in sola lettura.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentativo di impostare (<see langword="set" />) il valore su minore di zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">Ottiene o imposta i byte massimi consentiti restituiti per ogni lettura.</summary>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">Byte massimi consentiti restituiti per ogni lettura. Il valore predefinito è 4096.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentativo di impostare (<see langword="set" />) il valore. I valori di quota di questa istanza, tuttavia, sono in sola lettura.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentativo di impostare (<see langword="set" />) il valore su minore di zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">Ottiene o imposta la profondità massima dei nodi annidati.</summary>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">Profondità massima dei nodi annidati. Il valore predefinito è 32;</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">Tentativo di impostare (<see langword="set" />) il valore. I valori di quota di questa istanza sono in sola lettura.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">Tentativo di impostare (<see langword="set" />) il valore su minore di zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">Ottiene o imposta i caratteri massimi consentiti in un nome di tabella.</summary>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">Caratteri massimi consentiti in un nome di tabella. Il valore predefinito è 16384.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentativo di impostare (<see langword="set" />) il valore. I valori di quota di questa istanza, tuttavia, sono in sola lettura.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentativo di impostare (<see langword="set" />) il valore su minore di zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">Ottiene o imposta la lunghezza massima della stringa restituita dal reader.</summary>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">Lunghezza massima della stringa restituita dal reader. Il valore predefinito è 8192.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tentativo di impostare (<see langword="set" />) il valore. I valori di quota di questa istanza, tuttavia, sono in sola lettura.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tentativo di impostare (<see langword="set" />) il valore su minore di zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Ottiene le quote modificate per <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Quote modificate per <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">Enumera i valori di quota configurabili per XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">Specifica la lunghezza massima consentita della matrice.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">Specifica i byte massimi consentiti restituiti per ogni lettura.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">Specifica la profondità massima dei nodi annidati.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">Specifica i caratteri massimi consentiti in un nome di tabella.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">Specifica la lunghezza massima della stringa restituita dal lettore.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Rappresenta una voce memorizzata in un <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">Crea un'istanza di questa classe.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">
        <see cref="T:System.Xml.IXmlDictionary" /> contenente questa istanza.</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">Stringa che rappresenta il valore della voce del dizionario.</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">Valore Integer che rappresenta la chiave della voce del dizionario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Rappresenta l'elemento <see cref="T:System.Xml.IXmlDictionary" /> passato al costruttore di questa istanza di <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">
        <see cref="T:System.Xml.IXmlDictionary" /> per questa voce del dizionario.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Ottiene un elemento <see cref="T:System.Xml.XmlDictionaryString" /> che rappresenta la stringa vuota.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">
        <see cref="T:System.Xml.XmlDictionaryString" /> rappresenta la stringa vuota.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">Ottiene la chiave con valore intero per questa istanza della classe.</summary>
      <returns vsli:raw="The integer key for this instance of the class.">Chiave con valore intero per questa istanza della classe.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">Visualizza una rappresentazione testo di questo oggetto.</summary>
      <returns vsli:raw="The string value for this instance of the class.">Valore della stringa per questa istanza della classe.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">Ottiene il valore della stringa per questa istanza della classe.</summary>
      <returns vsli:raw="The string value for this instance of the class.">Valore della stringa per questa istanza della classe.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">Rappresenta una classe astratta che Windows Communication Foundation (WCF) deriva da <see cref="T:System.Xml.XmlWriter" /> per eseguire la serializzazione e la deserializzazione.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Questa proprietà restituisce sempre <see langword="false" />. Le relative classi derivate possono eseguire l'override per restituire <see langword="true" /> se supportano la canonizzazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare come dizionario condiviso.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare come dizionario condiviso.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlBinaryWriterSession" /> da usare.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Il flusso da cui eseguire la lettura.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> da utilizzare come dizionario condiviso.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Oggetto <see cref="T:System.Xml.XmlBinaryWriterSession" /> da usare.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il flusso viene chiuso al termine dal writer; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> da un <see cref="T:System.Xml.XmlWriter" /> esistente.</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive codice XML in formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Codifica dei caratteri del flusso.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Numero massimo di byte memorizzato nel buffer del writer.</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">Attributo nell'intestazione SOAP di ContentType.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive codice XML in formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Codifica dei caratteri del flusso.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Numero massimo di byte memorizzato nel buffer del writer.</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">Content-Type della parte MIME che contiene InfoSet.</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">Limite MIME nel messaggio.</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">URI Content-ID della parte MIME che contiene InfoSet.</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">Se <see langword="true" />, per scrivere le intestazioni dei messaggi.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il flusso viene chiuso al termine dal writer; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML di testo.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML di testo.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">Codifica dei caratteri dell'output.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crea un'istanza di <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive in formato XML di testo.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Codifica dei caratteri del flusso.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il flusso viene chiuso al termine dal writer; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Istanza di <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">Se implementato da una classe derivata, arresta la canonizzazione avviata dalla chiamata <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> corrispondente.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Il metodo non è ancora implementato.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">Una volta eseguita l'implementazione da una classe derivata, avvia la conversione in formato canonico.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Flusso in cui scrivere.</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per includere commenti, in caso contrario, <see langword="false" />.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Prefissi da includere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Il metodo non è ancora implementato.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the data.">Matrice che contiene i dati.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of values to write from the array.">Numero di valori da scrivere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
-oppure-
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Scrive nodi da una matrice <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matrice che contiene i nodi.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Indice iniziale della matrice.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Numero di nodi da ottenere dalla matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> è &lt; 0 o di lunghezza &gt; <paramref name="array" />.
In alternativa
<paramref name="count" /> è &lt; 0 o della lunghezza di &gt; <paramref name="array" /> meno <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Scrive un nome qualificato e un valore dell'attributo.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">Prefisso dell'attributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nome locale dell'attributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI dello spazio dei nomi dell'attributo.</param>
      <param name="value" vsli:raw="The attribute.">Attributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Scrive un nome qualificato e un valore dell'attributo.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nome locale dell'attributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI dello spazio dei nomi dell'attributo.</param>
      <param name="value" vsli:raw="The attribute.">Attributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Codifica in modo asincrono i byte binari specificati come valori Base64 e scrive il testo risultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matrice di byte da codificare.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posizione nel buffer che indica l'inizio dei byte da scrivere.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Numero di byte da scrivere.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Attività che rappresenta l'operazione asincrona <see langword="WriteBase64" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">È stato chiamato un metodo della classe <see cref="T:System.Xml.XmlDictionaryWriter" /> prima del completamento di un'operazione asincrona precedente. In questo caso, viene generata l'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio "È già in corso un'operazione asincrona".
-oppure-
È stato chiamato un metodo asincrono della classe <see cref="T:System.Xml.XmlDictionaryWriter" /> senza l'impostazione del flag <see cref="P:System.Xml.XmlWriterSettings.Async" /> su <see langword="true" />. In questo caso, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio "Per utilizzare i metodi asincroni, impostare XmlWriterSettings.Async su true".</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Scrive un elemento con un contenuto di testo.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Prefisso dell'elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="value" vsli:raw="The element content.">Contenuto dell'elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Scrive un elemento con un contenuto di testo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <param name="value" vsli:raw="The element content.">Contenuto dell'elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Scrive il nodo XML corrente da un oggetto <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per copiare gli attributi predefiniti dalla classe <see langword="XmlReader" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Scrive il nodo XML corrente da un oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per copiare gli attributi predefiniti dalla classe <see cref="T:System.Xml.XmlReader" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Scrive il nome completo dello spazio dei nomi. Questo metodo esegue la ricerca del prefisso incluso nell'ambito dello spazio dei nomi specificato.</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">Nome locale del nome completo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">URI dello spazio dei nomi del nome completo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">Scrive l'inizio di un attributo con il prefisso, il nome locale e l'URI dello spazio dei nomi specificati.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Prefisso dello spazio dei nomi.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nome locale dell'attributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI dello spazio dei nomi dell'attributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">Scrive l'inizio di un attributo con il nome locale e l'URI dello spazio dei nomi specificati.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nome locale dell'attributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI dello spazio dei nomi dell'attributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Scrive il tag di inizio specificato e lo associa allo spazio dei nomi e al prefisso indicati.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Prefisso dell'elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Il writer viene chiuso.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">Scrive il tag di inizio specificato e lo associa allo spazio dei nomi indicato.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nome locale dell'elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI dello spazio dei nomi dell'elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Il writer viene chiuso.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">Scrive il contenuto di testo specificato.</summary>
      <param name="value" vsli:raw="The text to write.">Testo da scrivere.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">Scrive il nodo di testo sul quale un <see cref="T:System.Xml.XmlDictionaryReader" /> è attualmente posizionato.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> da cui ottenere il valore testo.</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il reader è posizionato su un valore dell'attributo o su un contenuto dell'elemento; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Scrive un valore <see cref="T:System.Guid" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">Valore <see cref="T:System.Guid" /> da scrivere.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Scrive un valore <see cref="T:System.TimeSpan" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">Valore <see cref="T:System.TimeSpan" /> da scrivere.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Scrive un valore da un oggetto <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Valore <see cref="T:System.Xml.IStreamProvider" /> da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> restituisce un oggetto flusso <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">È stato chiamato un metodo della classe <see cref="T:System.Xml.XmlDictionaryWriter" /> prima del completamento di un'operazione asincrona precedente. In questo caso, viene generata l'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio "È già in corso un'operazione asincrona".</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">Scrive un valore di ID univoco.</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">Valore di ID univoco da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Scrive un valore <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Valore <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">In modo asincrono scrive un valore da <see cref="T:System.Xml.IStreamProvider" /> .</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Valore <see cref="T:System.Xml.IStreamProvider" /> da scrivere.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">Attività che rappresenta l'operazione asincrona <see langword="WriteValue" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">È stato chiamato un metodo della classe <see cref="T:System.Xml.XmlDictionaryWriter" /> prima del completamento di un'operazione asincrona precedente. In questo caso, viene generata l'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio "È già in corso un'operazione asincrona".
In alternativa
È stato chiamato un metodo asincrono della classe <see cref="T:System.Xml.XmlDictionaryWriter" /> senza l'impostazione del flag <see cref="P:System.Xml.XmlWriterSettings.Async" /> su <see langword="true" />. In questo caso, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio "Per utilizzare i metodi asincroni, impostare XmlWriterSettings.Async su true".</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">Scrive un attributo XML standard nel nodo corrente.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nome locale dell'attributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valore dell'attributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">Scrive un attributo XML nel nodo corrente.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nome locale dell'attributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valore dell'attributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Scrive un attributo di dichiarazione dello spazio dei nomi.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Prefisso associato allo spazio dei nomi specificato.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">Spazio dei nomi a cui è associato il prefisso.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Scrive un attributo di dichiarazione dello spazio dei nomi.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Prefisso associato allo spazio dei nomi specificato.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">Spazio dei nomi a cui è associato il prefisso.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> è <see langword="null" />.</exception>
    </member>
  </members>
</doc>