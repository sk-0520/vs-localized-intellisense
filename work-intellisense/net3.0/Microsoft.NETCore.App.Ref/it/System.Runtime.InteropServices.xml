<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.InteropServices</name>
  </assembly>
  <members>
    <member name="T:System.DataMisalignedException">
      <summary vsli:raw="The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.">L'eccezione generata quando viene eseguita la lettura o la scrittura di un'unità di dati da o in un indirizzo che non è un multiplo delle dimensioni dei dati. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.DataMisalignedException" />.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class using the specified error message.">Inizializza una nuova istanza della classe <see cref="T:System.DataMisalignedException" /> utilizzando un messaggio di errore specificato.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that describes the error. The content of &lt;paramref name=&quot;message&quot; /&gt; is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Oggetto <see cref="T:System.String" /> che descrive l'errore. Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class using the specified error message and underlying exception.">Inizializza una nuova istanza della classe <see cref="T:System.DataMisalignedException" /> utilizzando il messaggio di errore specificato e l'eccezione sottostante.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that describes the error. The content of &lt;paramref name=&quot;message&quot; /&gt; is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Oggetto <see cref="T:System.String" /> che descrive l'errore. Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt;. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che è la causa della generazione dell'oggetto <see cref="T:System.DataMisalignedException" /> corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.DllNotFoundException">
      <summary vsli:raw="The exception that is thrown when a DLL specified in a DLL import cannot be found.">Eccezione che viene generata quando non è possibile individuare un file DLL specificato in un'importazione di file DLL.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with default properties.">Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with a specified error message.">Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con un messaggio di errore specificato.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.IO.UnmanagedMemoryAccessor">
      <summary vsli:raw="Provides random access to unmanaged blocks of memory from managed code.">Fornisce l'accesso casuale a blocchi di memoria non gestiti da codice gestito.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class with a specified buffer, offset, and capacity.">Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryAccessor" /> con un valore specificato di buffer, offset e capacità.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">Buffer che deve contenere la funzione di accesso.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">Byte in corrispondenza del quale iniziare la funzione di accesso.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">Dimensione, in byte, della memoria da allocare.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">La somma di <paramref name="offset" /> e <paramref name="capacity" /> è maggiore di <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="offset" /> o <paramref name="capacity" /> è minore di zero.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">
        <paramref name="offset" /> e <paramref name="capacity" /> devono disporsi attorno all'estremità superiore dello spazio di indirizzi.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class with a specified buffer, offset, capacity, and access right.">Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryAccessor" /> con un valore specificato di buffer, offset, capacità e diritto di accesso.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">Buffer che deve contenere la funzione di accesso.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">Byte in corrispondenza del quale iniziare la funzione di accesso.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">Dimensione, in byte, della memoria da allocare.</param>
      <param name="access" vsli:raw="The type of access allowed to the memory. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Tipo di accesso consentito alla memoria. Il valore predefinito è <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">La somma di <paramref name="offset" /> e <paramref name="capacity" /> è maggiore di <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="offset" /> o <paramref name="capacity" /> è minore di zero.  
-oppure- 
 <paramref name="access" /> non è un valore di enumerazione <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">
        <paramref name="offset" /> e <paramref name="capacity" /> devono disporsi attorno all'estremità superiore dello spazio di indirizzi.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanRead">
      <summary vsli:raw="Determines whether the accessor is readable.">Determina se la funzione di accesso è leggibile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is readable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la funzione di accesso è leggibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanWrite">
      <summary vsli:raw="Determines whether the accessory is writable.">Determina se funzione di accesso è scrivibile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is writable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la funzione di accesso è scrivibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.Capacity">
      <summary vsli:raw="Gets the capacity of the accessor.">Ottiene la capacità della funzione di accesso.</summary>
      <returns vsli:raw="The capacity of the accessor.">Capacità della funzione di accesso.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.IO.UnmanagedMemoryAccessor" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary vsli:raw="Sets the initial values for the accessor.">Imposta i valori iniziali per la funzione di accesso.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">Buffer che deve contenere la funzione di accesso.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">Byte in corrispondenza del quale iniziare la funzione di accesso.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">Dimensione, in byte, della memoria da allocare.</param>
      <param name="access" vsli:raw="The type of access allowed to the memory. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Tipo di accesso consentito alla memoria. Il valore predefinito è <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">La somma di <paramref name="offset" /> e <paramref name="capacity" /> è maggiore di <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="offset" /> o <paramref name="capacity" /> è minore di zero.  
-oppure- 
 <paramref name="access" /> non è un valore di enumerazione <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">
        <paramref name="offset" /> e <paramref name="capacity" /> devono disporsi attorno all'estremità superiore dello spazio di indirizzi.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.IsOpen">
      <summary vsli:raw="Determines whether the accessor is currently open by a process.">Determina se la funzione di accesso è attualmente aperta da un processo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la funzione di accesso è aperta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)">
      <summary vsli:raw="Reads a structure of type &lt;paramref name=&quot;T&quot; /&gt; from the accessor into a provided reference.">Legge una struttura di tipo <paramref name="T" /> dalla funzione di accesso in un riferimento fornito.</summary>
      <param name="position" vsli:raw="The position in the accessor at which to begin reading.">Posizione nella funzione di accesso da cui iniziare la lettura.</param>
      <param name="structure" vsli:raw="The structure to contain the read data.">Struttura per contenere i dati letti.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Tipo di struttura.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read in a structure of type &lt;paramref name=&quot;T&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;T&quot; /&gt; is a value type that contains one or more reference types.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere una struttura di tipo <paramref name="T" />.  
-oppure- 
 <see langword="T" /> è un tipo di valore che contiene uno o più tipi di riferimento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads structures of type &lt;paramref name=&quot;T&quot; /&gt; from the accessor into an array of type &lt;paramref name=&quot;T&quot; /&gt;.">Legge strutture di tipo <paramref name="T" /> dalla funzione di accesso in una matrice di tipo <paramref name="T" />.</summary>
      <param name="position" vsli:raw="The number of bytes in the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <param name="array" vsli:raw="The array to contain the structures read from the accessor.">Matrice per contenere le strutture lette dalla funzione di accesso.</param>
      <param name="offset" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; in which to place the first copied structure.">Indice in <paramref name="array" /> nel quale posizionare la prima struttura copiata.</param>
      <param name="count" vsli:raw="The number of structures of type &lt;c&gt;T&lt;/c&gt; to read from the accessor.">Numero di strutture di tipo <c>T</c> da leggere dalla funzione di accesso.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Tipo di struttura.</typeparam>
      <returns vsli:raw="The number of structures read into &lt;paramref name=&quot;array&quot; /&gt;. This value can be less than &lt;paramref name=&quot;count&quot; /&gt; if there are fewer structures available, or zero if the end of the accessor is reached.">Numero di strutture lette in <paramref name="array" />. Questo valore può essere inferiore a <paramref name="count" /> se ci sono meno strutture disponibili o zero se viene raggiunta la fine della funzione di accesso.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to contain &lt;paramref name=&quot;count&quot; /&gt; of structures (starting from &lt;paramref name=&quot;position&quot; /&gt;).">
        <paramref name="array" /> non dispone delle dimensioni sufficienti per contenere <paramref name="count" /> di strutture (a partire da <paramref name="position" />).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)">
      <summary vsli:raw="Reads a Boolean value from the accessor.">Legge un valore booleano dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> o <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)">
      <summary vsli:raw="Reads a byte value from the accessor.">Legge un valore byte dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)">
      <summary vsli:raw="Reads a character from the accessor.">Legge un carattere dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)">
      <summary vsli:raw="Reads a decimal value from the accessor.">Legge un valore decimale dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The decimal to read is invalid.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.  
-oppure- 
Il numero decimale da leggere non è valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)">
      <summary vsli:raw="Reads a double-precision floating-point value from the accessor.">Restituisce un valore a virgola mobile con precisione doppia dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)">
      <summary vsli:raw="Reads a 16-bit integer from the accessor.">Legge un intero a 16 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)">
      <summary vsli:raw="Reads a 32-bit integer from the accessor.">Legge un intero a 32 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)">
      <summary vsli:raw="Reads a 64-bit integer from the accessor.">Legge un intero a 64 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)">
      <summary vsli:raw="Reads an 8-bit signed integer from the accessor.">Legge un intero con segno a 8 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)">
      <summary vsli:raw="Reads a single-precision floating-point value from the accessor.">Restituisce un valore a virgola mobile con precisione singola dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)">
      <summary vsli:raw="Reads an unsigned 16-bit integer from the accessor.">Legge un intero senza segno a 16 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)">
      <summary vsli:raw="Reads an unsigned 32-bit integer from the accessor.">Legge un intero senza segno a 32 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)">
      <summary vsli:raw="Reads an unsigned 64-bit integer from the accessor.">Legge un intero senza segno a 64 bit dalla funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns vsli:raw="The value that was read.">Valore letto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)">
      <summary vsli:raw="Writes a Boolean value into the accessor.">Scrive un valore booleano nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)">
      <summary vsli:raw="Writes a byte value into the accessor.">Scrive un valore byte nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)">
      <summary vsli:raw="Writes a character into the accessor.">Scrive un carattere nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)">
      <summary vsli:raw="Writes a decimal value into the accessor.">Scrive un valore decimale nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The decimal is invalid.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.  
In alternativa 
Il numero decimale non è valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Double&quot; /&gt; value into the accessor.">Scrive un valore <see langword="Double" /> nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)">
      <summary vsli:raw="Writes a 16-bit integer into the accessor.">Scrive un intero a 16 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)">
      <summary vsli:raw="Writes a 32-bit integer into the accessor.">Scrive un intero a 32 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)">
      <summary vsli:raw="Writes a 64-bit integer into the accessor.">Scrive un intero a 64 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after position to write a value.">Non ci sono abbastanza byte dopo la posizione per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)">
      <summary vsli:raw="Writes an 8-bit integer into the accessor.">Scrive un intero a 8 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Single&quot; /&gt; into the accessor.">Scrive un valore <see langword="Single" /> nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)">
      <summary vsli:raw="Writes an unsigned 16-bit integer into the accessor.">Scrive un intero senza segno a 16 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)">
      <summary vsli:raw="Writes an unsigned 32-bit integer into the accessor.">Scrive un intero senza segno a 32 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)">
      <summary vsli:raw="Writes an unsigned 64-bit integer into the accessor.">Scrive un intero senza segno a 64 bit nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)">
      <summary vsli:raw="Writes a structure into the accessor.">Scrive una struttura nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="structure" vsli:raw="The structure to write.">Struttura da scrivere.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Tipo di struttura.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes in the accessor after &lt;paramref name=&quot;position&quot; /&gt; to write a structure of type &lt;paramref name=&quot;T&quot; /&gt;.">Non ci sono abbastanza byte nella funzione di accesso dopo <paramref name="position" /> per scrivere una struttura di tipo <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes structures from an array of type &lt;paramref name=&quot;T&quot; /&gt; into the accessor.">Scrive strutture da una matrice di tipo <paramref name="T" /> nella funzione di accesso.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="array" vsli:raw="The array to write into the accessor.">Matrice da scrivere nella funzione di accesso.</param>
      <param name="offset" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; to start writing from.">Indice in <paramref name="array" /> a partire dal quale iniziare la scrittura.</param>
      <param name="count" vsli:raw="The number of structures in &lt;paramref name=&quot;array&quot; /&gt; to write.">Numero di strutture in <paramref name="array" /> da scrivere.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Tipo di struttura.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes in the accessor after &lt;paramref name=&quot;position&quot; /&gt; to write the number of structures specified by &lt;paramref name=&quot;count&quot; /&gt;.">Non ci sono abbastanza byte nella funzione di accesso dopo <paramref name="position" /> per scrivere il numero di strutture specificato da <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.  
-oppure- 
 <paramref name="offset" /> o <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="T:System.IO.UnmanagedMemoryStream">
      <summary>Fornisce l'accesso a blocchi di memoria non gestiti da codice gestito.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" />.</summary>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando la posizione e la dimensione di memoria specificate.</summary>
      <param name="pointer">Puntatore a una posizione di memoria non gestita.</param>
      <param name="length">Lunghezza della memoria da usare.</param>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="pointer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="length" /> è minore di zero.  
-oppure- 
Il valore <paramref name="length" /> è sufficientemente grande da causare un overflow.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando la posizione, la lunghezza e la quantità totale di memoria e i valori di accesso ai file specificati.</summary>
      <param name="pointer">Puntatore a una posizione di memoria non gestita.</param>
      <param name="length">Lunghezza della memoria da usare.</param>
      <param name="capacity">Quantità totale di memoria assegnata al flusso.</param>
      <param name="access">Uno dei valori di <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="pointer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="length" /> è minore di zero.  
In alternativa 
Il valore <paramref name="capacity" /> è minore di zero.  
In alternativa 
Il valore <paramref name="length" /> è maggiore del valore <paramref name="capacity" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> in un buffer sicuro, con un valore specificato di offset e lunghezza.</summary>
      <param name="buffer">Buffer che deve contenere il flusso di memoria non gestita.</param>
      <param name="offset">Posizione di byte nel buffer in corrispondenza della quale avviare il flusso di memoria non gestita.</param>
      <param name="length">Lunghezza del flusso di memoria non gestita.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> in un buffer sicuro, con un valore specificato di offset, lunghezza e accesso ai file.</summary>
      <param name="buffer">Buffer che deve contenere il flusso di memoria non gestita.</param>
      <param name="offset">Posizione di byte nel buffer in corrispondenza della quale avviare il flusso di memoria non gestita.</param>
      <param name="length">Lunghezza del flusso di memoria non gestita.</param>
      <param name="access">La modalità di accesso ai file al flusso di memoria non gestito.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanRead">
      <summary>Ottiene un valore che indica se il flusso supporta la lettura.</summary>
      <returns>
        <see langword="false" /> se l'oggetto è stato creato da un costruttore con parametro <paramref name="access" /> che non include la lettura del flusso e se il flusso è chiuso; in caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanSeek">
      <summary>Ottiene un valore che indica se il flusso supporta la ricerca.</summary>
      <returns>
        <see langword="false" /> se il flusso è chiuso; in caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanWrite">
      <summary>Ottiene un valore che indica se il flusso supporta la scrittura.</summary>
      <returns>
        <see langword="false" /> se l'oggetto è stato creato da un costruttore con un valore di parametro <paramref name="access" /> che supporta la scrittura, se è stato creato da un costruttore senza parametri oppure se il flusso è chiuso; in caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Capacity">
      <summary>Ottiene la lunghezza (dimensione) del flusso o la quantità totale di memoria assegnata al flusso (capacità).</summary>
      <returns>La dimensione o la capacità del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.UnmanagedMemoryStream" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Flush">
      <summary>Esegue l'override del metodo <see cref="M:System.IO.Stream.Flush" /> in modo che non venga effettuata alcuna operazione.</summary>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Esegue l'override del metodo <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> in modo che, se specificato, l'operazione venga annullata, ma non vengano eseguite altre azioni.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando un puntatore a una posizione di memoria non gestita.</summary>
      <param name="pointer">Puntatore a una posizione di memoria non gestita.</param>
      <param name="length">Lunghezza della memoria da usare.</param>
      <param name="capacity">Quantità totale di memoria assegnata al flusso.</param>
      <param name="access">Uno dei valori di <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="pointer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="length" /> è minore di zero.  
In alternativa 
Il valore <paramref name="capacity" /> è minore di zero.  
In alternativa 
Il valore <paramref name="length" /> è sufficientemente grande da causare un overflow.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> in un buffer sicuro, con un valore specificato di offset, lunghezza e accesso ai file.</summary>
      <param name="buffer">Buffer che deve contenere il flusso di memoria non gestita.</param>
      <param name="offset">Posizione di byte nel buffer in corrispondenza della quale avviare il flusso di memoria non gestita.</param>
      <param name="length">Lunghezza del flusso di memoria non gestita.</param>
      <param name="access">La modalità di accesso ai file al flusso di memoria non gestito.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Length">
      <summary>Ottiene la lunghezza dei dati in un flusso.</summary>
      <returns>La lunghezza dei dati nel flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Position">
      <summary>Ottiene o imposta la posizione corrente nel flusso.</summary>
      <returns>Posizione corrente all'interno del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La posizione viene impostata su un valore minore di zero oppure la posizione è maggiore del campo <see cref="F:System.Int32.MaxValue" /> o restituisce un overflow durante l'aggiunta al puntatore corrente.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.PositionPointer">
      <summary>Ottiene o imposta un puntatore byte al flusso in base alla posizione corrente nel flusso.</summary>
      <returns>Puntatore byte.</returns>
      <exception cref="T:System.IndexOutOfRangeException">La posizione corrente è maggiore della capacità del flusso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La posizione che si sta tentando di impostare non è una posizione valida nel flusso corrente.</exception>
      <exception cref="T:System.IO.IOException">Si sta tentando di impostare il puntatore su un valore inferiore alla posizione iniziale del flusso.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso è stato inizializzato per l'uso con <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. La proprietà <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> è valida solo per flussi inizializzati con un puntatore <see cref="T:System.Byte" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge il numero di byte specificato in una matrice specificata.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di byte specificata con i valori compresi tra <paramref name="offset" /> e (<paramref name="offset" /> + <paramref name="count" /> - 1) sostituiti con i byte letti dall'origine corrente. Questo parametro viene passato non inizializzato.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> in corrispondenza del quale iniziare l'archiviazione dei dati letti dal flusso corrente.</param>
      <param name="count">Numero massimo di byte da leggere dal flusso corrente.</param>
      <returns>Numero complessivo di byte letti nel buffer. È possibile che questo numero sia inferiore a quello dei byte richiesti se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la lettura.  
-oppure- 
La proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> è impostata su <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="buffer" /> viene impostato su <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di zero.  
-oppure- 
Il parametro <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza della matrice del buffer meno il parametro <paramref name="offset" /> è minore del parametro <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Span{System.Byte})">
      <summary>Legge tutti i byte di questo flusso di memoria non gestita nell'intervallo di byte specificato.</summary>
      <param name="destination">Quando questo metodo viene restituito, l'intervallo contiene tutti i byte provenienti dal flusso di memoria non gestita.</param>
      <returns>Numero complessivo di byte letti nella destinazione.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modalità asincrona il numero di byte specificato nella matrice specificata.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono i byte del flusso di memoria non gestita nell'area di memoria.</summary>
      <param name="buffer">Al termine del metodo asincrono, questa area di memoria contiene tutti i byte letti dal flusso di memoria non gestita.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona e incapsula il numero totale di byte letti nel buffer.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadByte">
      <summary>Legge un byte dal flusso e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</summary>
      <returns>Byte senza segno di cui è stato eseguito il cast a un tipo <see cref="T:System.Int32" /> o -1 se alla fine del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la lettura.  
In alternativa
 La posizione corrente è alla fine del flusso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Imposta la posizione corrente del flusso corrente sul valore dato.</summary>
      <param name="offset">Punto rispetto a <c>origin</c> da cui avviare la ricerca.</param>
      <param name="loc">Specifica l'inizio, la fine o la posizione corrente come punto di riferimento per <c>origin</c>, usando un valore di tipo <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Nuova posizione all'interno del flusso.</returns>
      <exception cref="T:System.IO.IOException">È stato eseguito un tentativo di ricerca prima dell'inizio del flusso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="offset" /> è maggiore della dimensione massima del flusso.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="loc" /> non è valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)">
      <summary>Imposta la lunghezza di un flusso al valore specificato.</summary>
      <param name="value">Lunghezza del flusso.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la scrittura.  
-oppure- 
È stato eseguito un tentativo di scrittura nel flusso e la proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> è <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="value" /> specificato supera la capacità del flusso.  
-oppure- 
Il parametro <paramref name="value" /> specificato è negativo.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Scrive un blocco di byte nel flusso corrente usando dati da un buffer.</summary>
      <param name="buffer">Matrice di byte da cui copiare i byte nel flusso corrente.</param>
      <param name="offset">Offset nel buffer da cui avviare la copia dei byte nel flusso corrente.</param>
      <param name="count">Numero di byte da scrivere nel flusso corrente.</param>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la scrittura.  
In alternativa 
È stato eseguito un tentativo di scrittura nel flusso e la proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> è <see langword="false" />.  
-oppure- 
Il valore <paramref name="count" /> è maggiore della capacità del flusso.  
-oppure- 
La posizione è alla fine della capacità del flusso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Uno dei parametri specificati è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="offset" /> meno la lunghezza del parametro <paramref name="buffer" /> è minore del parametro <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Scrive un blocco di byte nel flusso di memoria non gestita corrente usando i dati dell'intervallo di byte specificato.</summary>
      <param name="source">Intervallo di byte da cui copiare i byte nel flusso di memoria non gestita corrente.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un intervallo di byte nel flusso corrente, fa avanzare la posizione corrente all'interno del flusso in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)">
      <summary>Scrive un byte nella posizione corrente all'interno del flusso di file.</summary>
      <param name="value">Valore byte scritto nel flusso.</param>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la scrittura.  
-oppure- 
È stato eseguito un tentativo di scrittura nel flusso e la proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> è <see langword="false" />.  
In alternativa 
La posizione corrente è alla fine della capacità del flusso.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="value" /> fornito provoca il superamento della capacità massima del flusso.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IDispatchConstantAttribute">
      <summary vsli:raw="Indicates that the default value for the attributed field or parameter is an instance of &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;, where the &lt;see cref=&quot;P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Indica che il valore predefinito per il campo o il parametro con attributi è un'istanza di <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />, in cui la proprietà <see cref="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject" /> è <see langword="null" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IDispatchConstantAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.CompilerServices.IDispatchConstantAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.IDispatchConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IDispatchConstantAttribute.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;IDispatch&quot; /&gt; constant stored in this attribute.">Ottiene la costante <see langword="IDispatch" /> memorizzata in questo attributo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;IDispatch&quot; /&gt; constant stored in this attribute. Only &lt;see langword=&quot;null&quot; /&gt; is allowed for an &lt;see langword=&quot;IDispatch&quot; /&gt; constant value.">Costante <see langword="IDispatch" /> memorizzata in questo attributo. <see langword="null" /> è l'unico valore consentito per un valore della costante <see langword="IDispatch" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IUnknownConstantAttribute">
      <summary vsli:raw="Indicates that the default value for the attributed field or parameter is an instance of &lt;see cref=&quot;T:System.Runtime.InteropServices.UnknownWrapper&quot; /&gt;, where the &lt;see cref=&quot;P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;. This class cannot be inherited.">Indica che il valore predefinito per il campo o il parametro con attributi è un'istanza di <see cref="T:System.Runtime.InteropServices.UnknownWrapper" />, in cui la proprietà <see cref="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject" /> è <see langword="null" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IUnknownConstantAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.CompilerServices.IUnknownConstantAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.IUnknownConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IUnknownConstantAttribute.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;IUnknown&quot; /&gt; constant stored in this attribute.">Ottiene la costante <see langword="IUnknown" /> memorizzata in questo attributo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;IUnknown&quot; /&gt; constant stored in this attribute. Only &lt;see langword=&quot;null&quot; /&gt; is allowed for an &lt;see langword=&quot;IUnknown&quot; /&gt; constant value.">Costante <see langword="IUnknown" /> memorizzata in questo attributo. <see langword="null" /> è l'unico valore consentito per un valore della costante <see langword="IUnknown" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
      <summary vsli:raw="Allows an unmanaged method to call a managed method.">Consente a un metodo non gestito di chiamare un metodo gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ArrayWithOffset">
      <summary vsli:raw="Encapsulates an array and an offset within the specified array.">Incapsula una matrice e un offset all'interno della matrice specificata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; structure.">Inizializza una nuova istanza della struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="array" vsli:raw="A managed array.">Matrice gestita.</param>
      <param name="offset" vsli:raw="The offset in bytes, of the element to be passed through platform invoke.">Offset in byte dell'elemento da passare mediante chiamata alla piattaforma.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than 2 gigabytes (GB).">La matrice è maggiore di 2 GB.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object matches the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object.">Indica se l'oggetto specificato corrisponde alla struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> corrente.</summary>
      <param name="obj" vsli:raw="Object to compare with this instance.">Oggetto da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto corrisponde a questa struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object matches the current instance.">Indica se l'oggetto specificato <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> corrisponde all'istanza corrente.</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with this instance.">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object matches the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l’oggetto specificato <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />corrisponde all'istanza corrente; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetArray">
      <summary vsli:raw="Returns the managed array referenced by this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt;.">Restituisce la matrice gestita cui questa struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> fa riferimento.</summary>
      <returns vsli:raw="The managed array this instance references.">Matrice gestita cui questa istanza fa riferimento.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetHashCode">
      <summary vsli:raw="Returns a hash code for this value type.">Restituisce un codice hash per questo tipo di valore.</summary>
      <returns vsli:raw="The hash code for this instance.">Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetOffset">
      <summary vsli:raw="Returns the offset provided when this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; was constructed.">Restituisce l'offset fornito al momento della costruzione di questa struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns vsli:raw="The offset for this instance.">Offset per questa istanza.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; objects have the same value.">Determina se due oggetti <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> specificati hanno lo stesso valore.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;b&quot; /&gt; parameter.">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="b" />.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;a&quot; /&gt; parameter.">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;a&quot; /&gt; is the same as the value of &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="a" /> è uguale al valore di <paramref name="b" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; objects no not have the same value.">Determina se due oggetti <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> specificati non hanno lo stesso valore.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;b&quot; /&gt; parameter.">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="b" />.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;a&quot; /&gt; parameter.">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;a&quot; /&gt; is not the same as the value of &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="a" /> non è uguale al valore di <paramref name="b" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AutomationProxyAttribute">
      <summary vsli:raw="Specifies whether the type should be marshaled using the Automation marshaler or a custom proxy and stub.">Specifica se il marshalling del tipo deve essere effettuato mediante il gestore di marshalling di Automazione oppure un proxy e uno stub personalizzati.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AutomationProxyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.AutomationProxyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.AutomationProxyAttribute" />.</summary>
      <param name="val" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class should be marshaled using the Automation Marshaler; &lt;see langword=&quot;false&quot; /&gt; if a proxy stub marshaler should be used.">Il valore è <see langword="true" />, se il marshalling della classe deve essere effettuato utilizzando il gestore di marshalling di automazione; <see langword="false" />, se è necessario utilizzare un gestore di marshalling di stub proxy.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.AutomationProxyAttribute.Value">
      <summary vsli:raw="Gets a value indicating the type of marshaler to use.">Ottiene un valore che indica il tipo di gestore di marshalling da utilizzare.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class should be marshaled using the Automation Marshaler; &lt;see langword=&quot;false&quot; /&gt; if a proxy stub marshaler should be used.">Il valore è <see langword="true" />, se il marshalling della classe deve essere effettuato utilizzando il gestore di marshalling di automazione; <see langword="false" />, se è necessario utilizzare un gestore di marshalling di stub proxy.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.BestFitMappingAttribute">
      <summary vsli:raw="Controls whether Unicode characters are converted to the closest matching ANSI characters.">Controlla se i caratteri Unicode vengono convertiti nei caratteri ANSI corrispondenti più vicini.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BestFitMappingAttribute&quot; /&gt; class set to the value of the &lt;see cref=&quot;P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping&quot; /&gt; property.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" /> impostata sul valore della proprietà <see cref="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" />.</summary>
      <param name="BestFitMapping" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that best-fit mapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per indicare che è abilitato il mapping più appropriato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping">
      <summary vsli:raw="Gets the best-fit mapping behavior when converting Unicode characters to ANSI characters.">Ottiene il comportamento di mapping più appropriato quando si convertono i caratteri Unicode in caratteri ANSI.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if best-fit mapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se è attivato il mapping più appropriato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI '?' character.">Abilita o disabilita la generazione di un'eccezione su un carattere Unicode di cui non è possibile eseguire il mapping convertito in un carattere ANSI "?".</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.BStrWrapper">
      <summary vsli:raw="Marshals data of type &lt;see langword=&quot;VT_BSTR&quot; /&gt; from managed to unmanaged code. This class cannot be inherited.">Esegue il marshalling dei dati di tipo <see langword="VT_BSTR" /> dal codice gestito al codice non gestito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> con l'oggetto <see cref="T:System.Object" /> specificato.</summary>
      <param name="value" vsli:raw="The object to wrap and marshal as &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Oggetto da includere e sottoporre a marshalling come <see langword="VT_BSTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> con l'oggetto <see cref="T:System.String" /> specificato.</summary>
      <param name="value" vsli:raw="The object to wrap and marshal as &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Oggetto da includere e sottoporre a marshalling come <see langword="VT_BSTR" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BStrWrapper.WrappedObject">
      <summary vsli:raw="Gets the wrapped &lt;see cref=&quot;T:System.String&quot; /&gt; object to marshal as type &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.String" /> incluso da sottoporre a marshalling come tipo <see langword="VT_BSTR" />.</summary>
      <returns vsli:raw="The object that is wrapped by &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt;.">Oggetto di cui è stato eseguito il wrapping da <see cref="T:System.Runtime.InteropServices.BStrWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CallingConvention">
      <summary vsli:raw="Specifies the calling convention required to call methods implemented in unmanaged code.">Specifica la convenzione di chiamata necessaria per chiamare i metodi implementati nel codice non gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
      <summary vsli:raw="The caller cleans the stack. This enables calling functions with &lt;see langword=&quot;varargs&quot; /&gt;, which makes it appropriate to use for methods that accept a variable number of parameters, such as &lt;see langword=&quot;Printf&quot; /&gt;.">Il chiamante esegue la pulizia dello stack. Questa operazione attiva funzioni chiamanti con <see langword="varargs" />, pertanto può essere utilizzata per metodi che accettano un numero variabile di parametri, ad esempio <see langword="Printf" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.FastCall">
      <summary vsli:raw="This calling convention is not supported.">Questa convenzione di chiamata non è supportata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.StdCall">
      <summary vsli:raw="The callee cleans the stack.">Il chiamato esegue la pulizia dello stack. Si tratta della convenzione predefinita per chiamare funzioni non gestite tramite platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
      <summary vsli:raw="The first parameter is the &lt;see langword=&quot;this&quot; /&gt; pointer and is stored in register ECX. Other parameters are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.">Il primo parametro è il puntatore <see langword="this" /> ed è archiviato in ECX del Registro di sistema. Altri parametri vengono inseriti nello stack. Questa convenzione di chiamata viene utilizzata per chiamare metodi su classi esportate da una DLL non gestita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Winapi">
      <summary vsli:raw="This member is not actually a calling convention, but instead uses the default platform calling convention.">In realtà il membro non è una convenzione di chiamata, ma utilizza la convenzione di chiamata predefinita di platform invoke. In Windows, ad esempio, l'impostazione predefinita è <see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" />, mentre in Windows CE .NET è <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceAttribute">
      <summary vsli:raw="Indicates the type of class interface to be generated for a class exposed to COM, if an interface is generated at all.">Indica il tipo di interfaccia di classe da generare per una classe esposta a COM, se viene generata un'interfaccia.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; enumeration value.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> con il valore di enumerazione <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> specificato.</summary>
      <param name="classInterfaceType" vsli:raw="Describes the type of interface that is generated for a class.">Descrive il tipo di interfaccia generata per una classe.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; enumeration member.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> specificato.</summary>
      <param name="classInterfaceType" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; values that describes the type of interface that is generated for a class.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> che descrive il tipo di interfaccia generato per una classe.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; value that describes which type of interface should be generated for the class.">Ottiene il valore <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> che descrive il tipo di interfaccia che deve essere generato per la classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; value that describes which type of interface should be generated for the class.">Valore <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> che descrive il tipo di interfaccia che deve essere generato per la classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceType">
      <summary vsli:raw="Identifies the type of class interface that is generated for a class.">Identifica il tipo di interfaccia di classe generata per una classe.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
      <summary vsli:raw="&lt;para&gt;Indicates that the class only supports late binding for COM clients. A &lt;see langword=&quot;dispinterface&quot; /&gt; for the class is automatically exposed to COM clients on request. The type library produced by Tlbexp.exe (Type Library Exporter) does not contain type information for the &lt;see langword=&quot;dispinterface&quot; /&gt; in order to prevent clients from caching the DISPIDs of the interface. The &lt;see langword=&quot;dispinterface&quot; /&gt; does not exhibit the versioning problems described in &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; because clients can only late-bind to the interface.&lt;/para&gt;&lt;para&gt;This is the default setting for &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;.&lt;/para&gt;">Indica che la classe supporta solo l'associazione tardiva dei client COM. Una <see langword="dispinterface" /> per la classe viene esposta automaticamente ai client COM su richiesta. La libreria dei tipi prodotta da Tlbexp.exe (utilità di esportazione della libreria dei tipi) non contiene informazioni sui tipi per <see langword="dispinterface" /> allo scopo di impedire ai client di memorizzare nella cache i DISPID dell'interfaccia. La <see langword="dispinterface" /> non mostra i problemi di controllo delle versioni descritti in <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> perché i client possono eseguire soltanto l'associazione tardiva all'interfaccia.
Questa è l'impostazione predefinita per <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
      <summary vsli:raw="Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using &lt;see langword=&quot;AutoDual&quot; /&gt; is strongly discouraged because of the versioning limitations described in &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;.">Indica che un'interfaccia di classe duale viene generata automaticamente per la classe ed esposta a COM. Le informazioni sul tipo sono prodotte per l'interfaccia di classe e pubblicate nella libreria dei tipi. L'utilizzo di <see langword="AutoDual" /> è fortemente sconsigliato a causa delle limitazioni nel controllo delle versioni descritte in <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.None">
      <summary vsli:raw="&lt;para&gt;Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the &lt;see langword=&quot;IDispatch&quot; /&gt; interface. This is the recommended setting for &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;. Using &lt;see langword=&quot;ClassInterfaceType.None&quot; /&gt; is the only way to expose functionality through interfaces implemented explicitly by the class.&lt;/para&gt;&lt;para&gt;Tlbexp.exe (Type Library Exporter) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. In .NET Framework 2.0 and later versions, you can specify the default interface exposed to COM by using the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&quot; /&gt; attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes &lt;see langword=&quot;_Object&quot; /&gt; as the default interface if neither the class nor its base classes implement interfaces.&lt;/para&gt;">Indica che per la classe non viene generata alcuna interfaccia di classe. Se nessuna interfaccia viene implementata in modo esplicito, la classe può fornire solo accesso ad associazione tardiva tramite l'interfaccia <see langword="IDispatch" />. Si tratta dell'impostazione consigliata per <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />. L'utilizzo di <see langword="ClassInterfaceType.None" /> è l'unico modo per l'esporre la funzionalità tramite interfacce implementate in modo esplicito dalla classe.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CoClassAttribute">
      <summary vsli:raw="Specifies the class identifier of a coclass imported from a type library.">Specifica l'identificatore di classe di una coclasse importata da una libreria dei tipi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CoClassAttribute&quot; /&gt; with the class identifier of the original coclass.">Inizializza la nuova istanza di <see cref="T:System.Runtime.InteropServices.CoClassAttribute" /> con l'ID di classe della coclasse originale.</summary>
      <param name="coClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class identifier of the original coclass.">Oggetto <see cref="T:System.Type" /> che contiene l'identificatore di classe della coclasse originale.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
      <summary vsli:raw="Gets the class identifier of the original coclass.">Ottiene l'identificatore di classe della coclasse originale.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the class identifier of the original coclass.">Oggetto <see cref="T:System.Type" /> che contiene l'identificatore di classe della coclasse originale.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAliasNameAttribute">
      <summary vsli:raw="Indicates the COM alias for a parameter or field type.">Indica l'alias COM per un tipo di parametro o campo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAliasNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAliasNameAttribute&quot; /&gt; class with the alias for the attributed field or parameter.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComAliasNameAttribute" /> con l'alias del parametro o del campo con attributi.</summary>
      <param name="alias" vsli:raw="The alias for the field or parameter as found in the type library when it was imported.">L'alias del campo o del parametro così come riportato nella libreria dei tipi al momento dell'importazione.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAliasNameAttribute.Value">
      <summary vsli:raw="Gets the alias for the field or parameter as found in the type library when it was imported.">Ottiene l'alias del campo o del parametro così come riportato nella libreria dei tipi al momento dell'importazione.</summary>
      <returns vsli:raw="The alias for the field or parameter as found in the type library when it was imported.">L'alias del campo o del parametro così come riportato nella libreria dei tipi al momento dell'importazione.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAwareEventInfo">
      <summary vsli:raw="Permits late-bound registration of an event handler.">Consente la registrazione ad associazione tardiva di un gestore eventi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; class by using the specified type and a name of the event on the type.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> utilizzando il tipo specificato e un nome dell'evento nel tipo.</summary>
      <param name="type" vsli:raw="The type of object.">Tipo di oggetto.</param>
      <param name="eventName" vsli:raw="The name of an event on &lt;paramref name=&quot;type&quot; /&gt;.">Nome di un evento in <paramref name="type" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Attaches an event handler to a COM object.">Associa un gestore dell'evento a un oggetto COM.</summary>
      <param name="target" vsli:raw="The target object that the event delegate should bind to.">Oggetto di destinazione al quale deve essere associato il delegato dell'evento.</param>
      <param name="handler" vsli:raw="The event delegate.">Delegato dell'evento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
      <summary vsli:raw="Gets the attributes for this event.">Ottiene gli attributi per questo evento.</summary>
      <returns vsli:raw="The read-only attributes for this event.">Attributi di sola lettura per questo evento.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
      <summary vsli:raw="Gets the class that declares this member.">Ottiene la classe che dichiara questo membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object for the class that declares this member.">Oggetto <see cref="T:System.Type" /> per la classe che dichiara questo membro.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
      <summary vsli:raw="Gets the method that was used to add an event handler delegate to the event source.">Ottiene il metodo utilizzato per aggiungere un delegato del gestore dell'evento all'origine evento.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per restituire metodi non pubblici; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The method that was used to add an event handler delegate to the event source.">Metodo utilizzato per aggiungere un delegato del gestore dell'evento all'origine evento.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">
        <paramref name="nonPublic" /> è <see langword="true" /> e il metodo utilizzato per aggiungere un delegato del gestore eventi non è pubblico, ma il chiamante non dispone dell'autorizzazione per la reflection su metodi non pubblici.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.">Se sottoposto a override in una classe derivata, ottiene una matrice contenente tutti gli attributi personalizzati applicati a questo membro.</summary>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.">Matrice contenente tutti gli attributi personalizzati o matrice che non dispone di alcun elemento se non è stato definito alcun attributo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This member belongs to a type that is loaded into the reflection-only context. See How to: Load Assemblies into the Reflection-Only Context.">Questo membro appartiene a un tipo caricato nel contesto Reflection-Only. Vedere: Procedura: Caricare assembly nel contesto Reflection-Only.</exception>
      <exception cref="T:System.TypeLoadException" vsli:raw="A custom attribute type cannot be loaded.">Non è possibile caricare un tipo di attributo personalizzato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.">Se sottoposto a override in una classe derivata, ottiene una matrice contenente tutti gli attributi personalizzati del tipo specificato applicati a questo membro.</summary>
      <param name="attributeType" vsli:raw="The attribute type to search for. Only attributes that are assignable to this type can be returned.">Tipo di attributo da cercare. Possono venire restituiti solo gli attributi assegnabili a questo tipo.</param>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.">Matrice contenente tutti gli attributi personalizzati del tipo specificato o matrice che non dispone di alcun elemento se non è stato definito alcun attributo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;attributeType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attributeType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This member belongs to a type that is loaded into the reflection-only context. See How to: Load Assemblies into the Reflection-Only Context">Questo membro appartiene a un tipo caricato nel contesto Reflection-Only. Vedere How to: Caricare assembly nel contesto Reflection-Only</exception>
      <exception cref="T:System.TypeLoadException" vsli:raw="A custom attribute type cannot be loaded.">Non è possibile caricare un tipo di attributo personalizzato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributesData">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Reflection.CustomAttributeData&quot; /&gt; objects for the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt;.">Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> per l'oggetto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />corrente.</summary>
      <returns vsli:raw="A generic list of &lt;see cref=&quot;T:System.Reflection.CustomAttributeData&quot; /&gt; objects representing data about the attributes that have been applied to the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt;.">Elenco generico di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> corrente.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetOtherMethods(System.Boolean)">
      <summary vsli:raw="Returns the public or non-public methods that have been associated with an event in metadata.">Restituisce i metodi pubblici o non pubblici associati a un evento nei metadati.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per includere i metodi non pubblici; in caso contrario,<see langword="false" />.</param>
      <returns vsli:raw="An array representing the methods that have been associated with the event in metadata. If there are no such methods, an empty array is returned.">Matrice che rappresenta i metodi associati all'evento nei metadati. In assenza di metodi con queste caratteristiche, viene restituita una matrice vuota.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, returns the method that was called when the event was raised.">Se sottoposto a override in una classe derivata, restituisce il metodo chiamato quando è stato generato l'evento.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per restituire metodi non pubblici; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The object that was called when the event was raised.">Oggetto chiamato quando è stato generato l'evento.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">
        <paramref name="nonPublic" /> è <see langword="true" /> e il metodo utilizzato per aggiungere un delegato del gestore eventi non è pubblico, ma il chiamante non dispone dell'autorizzazione per la reflection su metodi non pubblici.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, retrieves the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object for removing a method of the event.">Se sottoposto a override in una classe derivata, recupera l'oggetto <see cref="T:System.Reflection.MethodInfo" /> per la rimozione di un metodo dell'evento.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per restituire metodi non pubblici; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The method that was used to remove an event handler delegate from the event source.">Metodo utilizzato per rimuovere un delegato del gestore dell'evento dall'origine eventi.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">
        <paramref name="nonPublic" /> è <see langword="true" /> e il metodo utilizzato per aggiungere un delegato del gestore eventi non è pubblico, ma il chiamante non dispone dell'autorizzazione per la reflection su metodi non pubblici.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
      <summary vsli:raw="Indicates whether one or more instances of the specified attribute are applied to this member.">Indica se una o più istanze dell'attributo specificato sono applicate al membro.</summary>
      <param name="attributeType" vsli:raw="The attribute type to search for.">Tipo di attributo da cercare.</param>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified attribute has been applied to this member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'attributo specificato è stato applicato a questo membro. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken">
      <summary vsli:raw="Gets the metadata token associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Ottiene il token di metadati associato all'oggetto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> corrente.</summary>
      <returns vsli:raw="A 32-bit Integer that represents the metadata token.">Intero A 32 bit che rappresenta il token di metadati.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Module">
      <summary vsli:raw="Gets the module associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Ottiene il modulo associato all'oggetto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> corrente.</summary>
      <returns vsli:raw="The module associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Modulo associato all'oggetto corrente <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> .</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
      <summary vsli:raw="Gets the name of the current member.">Ottiene il nome del membro corrente.</summary>
      <returns vsli:raw="The name of this member.">Nome del membro.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
      <summary vsli:raw="Gets the class object that was used to initialize this instance.">Ottiene l'oggetto classe utilizzato per inizializzare questa istanza.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that was used to initialize the current object.">Oggetto <see cref="T:System.Type" /> utilizzato per inizializzare l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Detaches an event handler from a COM object.">Scollega un gestore eventi da un oggetto COM.</summary>
      <param name="target" vsli:raw="The target object that the event delegate is bound to.">Oggetto di destinazione a cui è associato il delegato dell'evento.</param>
      <param name="handler" vsli:raw="The event delegate.">Delegato dell'evento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The event does not have a public &lt;see langword=&quot;remove&quot; /&gt; accessor.">L'evento non ha una funzione di accesso <see langword="remove" /> pubblica.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The handler that was passed in cannot be used.">Non è possibile usare il gestore passato.</exception>
      <exception cref="T:System.Reflection.TargetException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; and the event is not static.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; is not declared on the target.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch &lt;see cref=&quot;T:System.Exception&quot; /&gt; instead.">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione <see cref="T:System.Exception" />.  


            

 Il parametro <paramref name="target" /> è <see langword="null" /> e l'evento non è statico.  
In alternativa 
L'oggetto <see cref="T:System.Reflection.EventInfo" /> non è dichiarato nella destinazione.</exception>
      <exception cref="T:System.MethodAccessException" vsli:raw="The caller does not have access permission to the member.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.MemberAccessException&quot; /&gt;, instead.">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione della classe di base, <see cref="T:System.MemberAccessException" />.  


            

 Il chiamante non ha l'autorizzazione necessaria per accedere al membro.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute">
      <summary vsli:raw="Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.">Indica a un client COM che tutte le classi della versione corrente di un assembly sono compatibili con le classi della versione precedente.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComCompatibleVersionAttribute&quot; /&gt; class with the major version, minor version, build, and revision numbers of the assembly.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute" /> con i numeri di versione principale e secondaria, di build e di revisione dell'assembly.</summary>
      <param name="major" vsli:raw="The major version number of the assembly.">Numero della versione principale dell'assembly.</param>
      <param name="minor" vsli:raw="The minor version number of the assembly.">Numero della versione secondaria dell'assembly.</param>
      <param name="build" vsli:raw="The build number of the assembly.">Numero di build dell'assembly.</param>
      <param name="revision" vsli:raw="The revision number of the assembly.">Numero di revisione dell'assembly.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber">
      <summary vsli:raw="Gets the build number of the assembly.">Ottiene il numero di build dell'assembly.</summary>
      <returns vsli:raw="The build number of the assembly.">Numero di build dell'assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the assembly.">Ottiene il numero della versione principale dell'assembly.</summary>
      <returns vsli:raw="The major version number of the assembly.">Numero della versione principale dell'assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the assembly.">Ottiene il numero della versione secondaria dell'assembly.</summary>
      <returns vsli:raw="The minor version number of the assembly.">Numero della versione secondaria dell'assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber">
      <summary vsli:raw="Gets the revision number of the assembly.">Ottiene il numero di revisione dell'assembly.</summary>
      <returns vsli:raw="The revision number of the assembly.">Numero di revisione dell'assembly.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComConversionLossAttribute">
      <summary vsli:raw="Indicates that information was lost about a class or interface when it was imported from a type library to an assembly.">Indica che le informazioni relative a una classe o a un'interfaccia sono state perse durante l'importazione da una libreria dei tipi in un assembly.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComConversionLossAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComConversionLossAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see langword="ComConversionLossAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
      <summary vsli:raw="Specifies a default interface to expose to COM. This class cannot be inherited.">Specifica un'interfaccia predefinita da esporre a COM. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; object as the default interface exposed to COM.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute" /> con l'oggetto <see cref="T:System.Type" /> specificato impostato come interfaccia predefinita esposta a COM.</summary>
      <param name="defaultInterface" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value indicating the default interface to expose to COM.">Valore <see cref="T:System.Type" /> che indica l'interfaccia predefinita da esporre a COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies the default interface to expose to COM.">Ottiene l'oggetto <see cref="T:System.Type" /> che specifica l'interfaccia predefinita da esporre a COM.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies the default interface to expose to COM.">Oggetto <see cref="T:System.Type" /> che specifica l'interfaccia predefinita da esporre a COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
      <summary vsli:raw="Identifies the source interface and the class that implements the methods of the event interface that is generated when a coclass is imported from a COM type library.">Identifica l'interfaccia di origine e la classe che implementa i metodi dell'interfaccia eventi generata quando si importa una coclasse da una libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComEventInterfaceAttribute&quot; /&gt; class with the source interface and event provider class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> con la classe dell'interfaccia di origine e del provider di eventi.</summary>
      <param name="SourceInterface" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the original source interface from the type library. COM uses this interface to call back to the managed class.">
        <see cref="T:System.Type" /> che contiene l'originale interfaccia di origine della libreria dei tipi. COM utilizza questa interfaccia per richiamare la classe gestita.</param>
      <param name="EventProvider" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class that implements the methods of the event interface.">
        <see cref="T:System.Type" /> che contiene la classe che implementa i metodi dell'interfaccia eventi.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
      <summary vsli:raw="Gets the class that implements the methods of the event interface.">Ottiene la classe che implementa i metodi dell'interfaccia eventi.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class that implements the methods of the event interface.">
        <see cref="T:System.Type" /> che contiene la classe che implementa i metodi dell'interfaccia eventi.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
      <summary vsli:raw="Gets the original source interface from the type library.">Ottiene l'originale interfaccia di origine dalla libreria dei tipi.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the source interface.">
        <see cref="T:System.Type" /> contenente l'interfaccia di origine.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventsHelper">
      <summary vsli:raw="Provides methods that enable .NET delegates that handle events to be added and removed from COM objects.">Fornisce metodi che consentono l'aggiunta e la rimozione dagli oggetti COM di delegati di .NET Framework che gestiscono gli eventi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Combine(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the invocation list of events originating from a COM object.">Aggiunge un delegato all'elenco chiamate di eventi che provengono da un oggetto COM.</summary>
      <param name="rcw" vsli:raw="The COM object that triggers the events the caller would like to respond to.">Oggetto COM che lancia gli eventi ai quali il chiamante vorrebbe rispondere.</param>
      <param name="iid" vsli:raw="The identifier of the source interface used by the COM object to trigger events.">Identificatore dell'interfaccia di origine utilizzata dall'oggetto COM per lanciare gli eventi.</param>
      <param name="dispid" vsli:raw="The dispatch identifier of the method on the source interface.">Identificatore di invio del metodo sull'interfaccia di origine.</param>
      <param name="d" vsli:raw="The delegate to invoke when the COM event is fired.">Delegato da richiamare al lancio dell'evento COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Remove(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the invocation list of events originating from a COM object.">Rimuove un delegato dall'elenco chiamate di un evento generato da un oggetto COM.</summary>
      <param name="rcw" vsli:raw="The COM object the delegate is attached to.">Oggetto COM a cui il delegato è associato.</param>
      <param name="iid" vsli:raw="The identifier of the source interface used by the COM object to trigger events.">Identificatore dell'interfaccia di origine utilizzata dall'oggetto COM per lanciare gli eventi.</param>
      <param name="dispid" vsli:raw="The dispatch identifier of the method on the source interface.">Identificatore di invio del metodo sull'interfaccia di origine.</param>
      <param name="d" vsli:raw="The delegate to remove from the invocation list.">Delegato da rimuovere dall'elenco delle chiamate.</param>
      <returns vsli:raw="The delegate that was removed from the invocation list.">Delegato rimosso dall'elenco delle chiamate.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.COMException">
      <summary vsli:raw="The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.">Eccezione generata quando viene restituito un HRESULT non riconosciuto da una chiamata a un metodo COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with default values.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that supplies the contextual information about the source or destination.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che fornisce le informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con un messaggio specificato.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified message and error code.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con un messaggio e il codice di errore specificati.</summary>
      <param name="message" vsli:raw="The message that indicates the reason the exception occurred.">Messaggio che indica il motivo per il quale è stata generata l'eccezione.</param>
      <param name="errorCode" vsli:raw="The error code (HRESULT) value associated with this exception.">Valore del codice di errore (HRESULT) associato a questa eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.ToString">
      <summary vsli:raw="Converts the contents of the exception to a string.">Converte il contenuto dell'eccezione in una stringa.</summary>
      <returns vsli:raw="A string containing the &lt;see cref=&quot;P:System.Exception.HResult&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;, and &lt;see cref=&quot;P:System.Exception.StackTrace&quot; /&gt; properties of the exception.">Stringa contenente le proprietà <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" /> e <see cref="P:System.Exception.StackTrace" /> dell'eccezione.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComImportAttribute">
      <summary vsli:raw="Indicates that the attributed type was previously defined in COM.">Indica che il tipo a cui è stato applicato l'attributo è stato definito in precedenza in COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComImportAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComImportAttribute&quot; /&gt;.">Inizializza una nuova istanza dell'oggetto <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComInterfaceType">
      <summary vsli:raw="Identifies how to expose an interface to COM.">Identifica come esporre un'interfaccia a COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual">
      <summary vsli:raw="Indicates that the interface is exposed to COM as a dual interface, which enables both early and late binding. &lt;see cref=&quot;F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual&quot; /&gt; is the default value.">Indica che l'interfaccia viene esposta a COM come interfaccia duale, consentendo così l'associazione anticipata e tardiva. <see cref="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual" /> è il valore predefinito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch">
      <summary vsli:raw="Indicates that an interface is exposed to COM as a dispinterface, which enables late binding only.">Indica che un'interfaccia viene esposta a COM come interfaccia dispatch, consentendo così solo l'associazione tardiva.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIInspectable">
      <summary vsli:raw="Indicates that an interface is exposed to COM as a Windows Runtime interface.">Indica che un'interfaccia viene esposta a COM come interfaccia Windows Runtime.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown">
      <summary vsli:raw="Indicates that an interface is exposed to COM as an interface that is derived from IUnknown, which enables only early binding.">Indica che un'interfaccia viene esposta a COM come interfaccia derivante da IUnknown, consentendo così solo l'associazione anticipata.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComMemberType">
      <summary vsli:raw="Describes the type of a COM member.">Descrive il tipo di un membro COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.Method">
      <summary vsli:raw="The member is a normal method.">Il membro è un metodo normale.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropGet">
      <summary vsli:raw="The member gets properties.">Il membro ottiene le proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropSet">
      <summary vsli:raw="The member sets properties.">Il membro imposta le proprietà.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute">
      <summary vsli:raw="Specifies the method to call when you register an assembly for use from COM; this enables the execution of user-written code during the registration process.">Specifica il metodo da chiamare quando si registra un assembly per l'utilizzo in COM; questo metodo consente l'esecuzione di codice scritto dall'utente durante la procedura di registrazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComRegisterFunctionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
      <summary vsli:raw="Identifies a list of interfaces that are exposed as COM event sources for the attributed class.">Identifica un elenco di interfacce esposte come origini di eventi COM per la classe con attributi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the name of the event source interface.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con il nome dell'interfaccia di origine eventi.</summary>
      <param name="sourceInterfaces" vsli:raw="A null-delimited list of fully qualified event source interface names.">Elenco delimitato da valori null di nomi completi di interfacce di origine eventi.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the type to use as a source interface.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con il tipo da utilizzare come interfaccia di origine.</summary>
      <param name="sourceInterface" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the source interface.">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con i tipi da utilizzare come interfacce di origine.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine predefinita.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Inizializza una nuova istanza della classe <see langword="ComSourceInterfacesAttribute" /> con i tipi da utilizzare come interfacce di origine.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine predefinita.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
      <param name="sourceInterface3" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con i tipi da utilizzare come interfacce di origine.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine predefinita.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
      <param name="sourceInterface3" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
      <param name="sourceInterface4" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
      <summary vsli:raw="Gets the fully qualified name of the event source interface.">Ottiene il nome completo dell'interfaccia di origine eventi.</summary>
      <returns vsli:raw="The fully qualified name of the event source interface.">Nome completo dell'interfaccia di origine eventi.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary vsli:raw="Specifies the requested behavior when setting up an advise sink or a caching connection with an object.">Specifica il comportamento richiesto durante l'impostazione di un sink di notifica o una connessione con memorizzazione nella cache con un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary vsli:raw="For data advisory connections, assures accessibility to data.">Per connessioni consultive di dati, assicura l'accessibilità ai dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary vsli:raw="For data advisory connections (&lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt;), this flag requests the data object not to send data when it calls &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;.">Per le connessioni consultive di dati (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />), questo flag richiede che l'oggetto dati non invii i dati quando chiama <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary vsli:raw="Requests that the object make only one change notification or cache update before deleting the connection.">Richiede che l'oggetto effettui una sola notifica di modifica o aggiornamento della cache prima di eliminare la connessione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary vsli:raw="Requests that the object not wait for the data or view to change before making an initial call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; (for data or view advisory connections) or updating the cache (for cache connections).">Richiede che l'oggetto non attenda la modifica dei dati o della visualizzazione prima di effettuare una chiamata iniziale al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (per connessioni consultive di dati o visualizzazione) o aggiornare la cache (per connessioni cache).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary vsli:raw="This value is used by DLL object applications and object handlers that perform the drawing of their objects.">Questo valore viene utilizzato dalle applicazioni di oggetti DLL e gestori di oggetti che disegnano i propri oggetti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary vsli:raw="Synonym for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN&quot; /&gt;, which is used more often.">Sinonimo di <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, utilizzato più spesso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary vsli:raw="For cache connections, this flag updates the cached representation only when the object containing the cache is saved.">Per le connessioni cache, questo flag aggiorna la rappresentazione nella cache solo quando viene salvato l'oggetto contenente la cache.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS">
      <summary vsli:raw="Stores the parameters that are used during a moniker binding operation.">Archivia i parametri usati durante un'operazione di associazione del moniker.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct">
      <summary vsli:raw="Specifies the size, in bytes, of the &lt;see langword=&quot;BIND_OPTS&quot; /&gt; structure.">Specifica la dimensione, in byte, della struttura <see langword="BIND_OPTS" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline">
      <summary vsli:raw="Indicates the amount of time (clock time in milliseconds, as returned by the &lt;see langword=&quot;GetTickCount&quot; /&gt; function) that the caller specified to complete the binding operation.">Indica la quantità di tempo (tempo di clock in millisecondi, restituito dalla funzione <see langword="GetTickCount" />) specificata dal chiamante per completare l'operazione di associazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags">
      <summary vsli:raw="Controls aspects of moniker binding operations.">Controlla gli aspetti delle operazioni di associazione del moniker.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode">
      <summary vsli:raw="Represents flags that should be used when opening the file that contains the object identified by the moniker.">Rappresenta i flag da utilizzare all'apertura del file che contiene l'oggetto identificato dal moniker.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BINDPTR">
      <summary vsli:raw="Contains a pointer to a bound-to &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure, &lt;see cref=&quot;T:System.Runtime.InteropServices.VARDESC&quot; /&gt; structure, or an &lt;see langword=&quot;ITypeComp&quot; /&gt; interface.">Contiene un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> o <see cref="T:System.Runtime.InteropServices.VARDESC" /> associata o a un'interfaccia <see langword="ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc">
      <summary vsli:raw="Represents a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure.">Rappresenta un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp">
      <summary vsli:raw="Represents a pointer to an &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeComp&quot; /&gt; interface.">Rappresenta un puntatore a un'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc">
      <summary vsli:raw="Represents a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.VARDESC&quot; /&gt; structure.">Rappresenta un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
      <summary vsli:raw="Identifies the calling convention used by a method described in a METHODDATA structure.">Identifica la convenzione di chiamata usata da un metodo descritto in una struttura METHODDATA.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL">
      <summary vsli:raw="Indicates that the C declaration (CDECL) calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata CDECL (C Declaration).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL">
      <summary vsli:raw="Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata MACPASCAL (Macintosh Pascal).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX">
      <summary vsli:raw="Indicates the end of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.CALLCONV&quot; /&gt; enumeration.">Indica la fine dell'enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL">
      <summary vsli:raw="Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata CDECL MPW (Macintosh Programmers' Workbench).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL">
      <summary vsli:raw="Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata PASCAL MPW (Macintosh Programmers' Workbench).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL">
      <summary vsli:raw="Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata MSCPASCAL (MSC Pascal).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL">
      <summary vsli:raw="Indicates that the Pascal calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata Pascal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED">
      <summary vsli:raw="This value is reserved for future use.">Questo valore è riservato per l'uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL">
      <summary vsli:raw="Indicates that the standard calling convention (STDCALL) is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata standard (STDCALL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL">
      <summary vsli:raw="Indicates that the standard SYSCALL calling convention is used for a method.">Indica che per un metodo viene usata la convenzione di chiamata SYSCALL standard.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CONNECTDATA">
      <summary vsli:raw="Describes a connection that exists to a given connection point.">Descrive una connessione esistente in un determinato punto di connessione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie">
      <summary vsli:raw="Represents a connection token that is returned from a call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt;.">Rappresenta un token di connessione restituito da una chiamata a <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk">
      <summary vsli:raw="Represents a pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface on a connected advisory sink. The caller must call &lt;see langword=&quot;IUnknown::Release&quot; /&gt; on this pointer when the &lt;see langword=&quot;CONNECTDATA&quot; /&gt; structure is no longer needed.">Rappresenta un puntatore all'interfaccia <see langword="IUnknown" /> su un sink consultivo connesso. Il chiamante deve chiamare <see langword="IUnknown::Release" /> su questo puntatore quando la struttura <see langword="CONNECTDATA" /> non è più necessaria.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary vsli:raw="Specifies the direction of the data flow in the &lt;paramref name=&quot;dwDirection&quot; /&gt; parameter of the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; method. This determines the formats that the resulting enumerator can enumerate.">Specifica la direzione del flusso di dati nel parametro <paramref name="dwDirection" /> del metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />. Determina i formati che possono essere enumerati dall'enumeratore risultante.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary vsli:raw="Requests that &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; supply an enumerator for the formats that can be specified in &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;.">Richiede che il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> fornisca un enumeratore per i formati che è possibile specificare nel metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary vsli:raw="Requests that &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; supply an enumerator for the formats that can be specified in &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;.">Richiede che il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> fornisca un enumeratore per i formati che è possibile specificare nel metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DESCKIND">
      <summary vsli:raw="Identifies the type description being bound to.">Identifica la descrizione del tipo da associare.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_FUNCDESC">
      <summary vsli:raw="Indicates that a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure was returned.">Indica che è stata restituita una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
      <summary vsli:raw="Indicates that an &lt;see langword=&quot;IMPLICITAPPOBJ&quot; /&gt; was returned.">Indica che è stato restituito un oggetto <see langword="IMPLICITAPPOBJ" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_MAX">
      <summary vsli:raw="Indicates an end-of-enumeration marker.">Indica un marcatore di fine enumerazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_NONE">
      <summary vsli:raw="Indicates that no match was found.">Indica che non è stata trovata alcuna corrispondenza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_TYPECOMP">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;TYPECOMP&quot; /&gt; was returned.">Indica che è stato restituito un oggetto <see langword="TYPECOMP" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_VARDESC">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;VARDESC&quot; /&gt; was returned.">Indica che è stato restituito un oggetto <see langword="VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DISPPARAMS">
      <summary vsli:raw="Contains the arguments passed to a method or property by &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Contiene gli argomenti passati a un metodo o una proprietà tramite <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cArgs">
      <summary vsli:raw="Represents the count of arguments.">Rappresenta il numero di argomenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cNamedArgs">
      <summary vsli:raw="Represents the count of named arguments.">Rappresenta il numero di argomenti denominati</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgdispidNamedArgs">
      <summary vsli:raw="Represents the dispatch IDs of named arguments.">Rappresenta gli ID dispatch degli argomenti denominati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgvarg">
      <summary vsli:raw="Represents a reference to the array of arguments.">Rappresenta un riferimento alla matrice di argomenti.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary vsli:raw="Specifies the desired data or view aspect of the object when drawing or getting data.">Specifica l'aspetto desiderato dei dati o della visualizzazione dell'oggetto durante il disegno o il recupero dei dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary vsli:raw="A representation of an object that lets that object be displayed as an embedded object inside a container. This value is typically specified for compound document objects. The presentation can be provided for the screen or printer.">Rappresentazione di un oggetto che consente la visualizzazione dell'oggetto stesso come incorporato all'interno di un contenitore. Questo valore è in genere specificato per gli oggetti documento compositi. La presentazione può essere fornita per lo schermo o la stampante.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary vsli:raw="A representation of an object on the screen as though it were printed to a printer using the Print command from the File menu. The described data may represent a sequence of pages.">Rappresentazione di un oggetto sullo schermo come se fosse stampato da una stampante scegliendo Stampa dal menu File. I dati descritti possono rappresentare una sequenza di pagine.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary vsli:raw="An iconic representation of an object.">Rappresentazione in formato di icona di un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary vsli:raw="A thumbnail representation of an object that lets that object be displayed in a browsing tool. The thumbnail is approximately a 120 by 120 pixel, 16-color (recommended), device-independent bitmap potentially wrapped in a metafile.">Rappresentazione in formato anteprima di un oggetto che consente la visualizzazione dell'oggetto stesso in uno strumento di esplorazione. L'anteprima è una bitmap di circa 120 per 120 pixel, a 16 colori (consigliato), indipendente dal dispositivo, di cui può essere eseguito il wrapping in un metafile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC">
      <summary vsli:raw="Contains the type description and process transfer information for a variable, function, or a function parameter.">Contiene la descrizione del tipo e le informazioni sul trasferimento del processo per una variabile, una funzione o un parametro di funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.desc">
      <summary vsli:raw="Contains information about an element.">Contiene informazioni relative a un elemento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION">
      <summary vsli:raw="Contains information about an element.">Contiene informazioni relative a un elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.idldesc">
      <summary vsli:raw="Contains information for remoting the element.">Contiene informazioni per la gestione remota dell'elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.paramdesc">
      <summary vsli:raw="Contains information about the parameter.">Contiene informazioni relative al parametro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.tdesc">
      <summary vsli:raw="Identifies the type of the element.">Identifica il tipo dell'elemento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.EXCEPINFO">
      <summary vsli:raw="Describes the exceptions that occur during &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Descrive le eccezioni che si verificano durante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrDescription">
      <summary vsli:raw="Describes the error intended for the customer.">Descrive l'errore destinato al cliente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrHelpFile">
      <summary vsli:raw="Contains the fully-qualified drive, path, and file name of a Help file that contains more information about the error.">Contiene l'unità, il percorso e il nome di file completi di un file della Guida contenente ulteriori informazioni sull'errore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrSource">
      <summary vsli:raw="Indicates the name of the source of the exception. Typically, this is an application name.">Indica il nome dell'origine dell'eccezione. In genere, corrisponde al nome di un'applicazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.dwHelpContext">
      <summary vsli:raw="Indicates the Help context ID of the topic within the Help file.">Indica l'ID del contesto dell'argomento all'interno del file della Guida.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pfnDeferredFillIn">
      <summary vsli:raw="Represents a pointer to a function that takes an &lt;see cref=&quot;T:System.Runtime.InteropServices.EXCEPINFO&quot; /&gt; structure as an argument and returns an HRESULT value. If deferred fill-in is not desired, this field is set to &lt;see langword=&quot;null&quot; /&gt;.">Rappresenta un puntatore a una funzione che accetta una struttura <see cref="T:System.Runtime.InteropServices.EXCEPINFO" /> come argomento e restituisce un valore HRESULT. Se non è desiderato il riempimento rinviato, questo campo è impostato su <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pvReserved">
      <summary vsli:raw="This field is reserved; it must be set to &lt;see langword=&quot;null&quot; /&gt;.">Il campo è riservato e deve essere impostato su <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.scode">
      <summary vsli:raw="A return value describing the error.">Valore restituito che descrive l'errore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wCode">
      <summary vsli:raw="Represents an error code identifying the error.">Rappresenta un codice di errore che identifica l'errore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wReserved">
      <summary vsli:raw="This field is reserved; it must be set to 0.">Il campo è riservato e deve essere impostato su 0.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FILETIME">
      <summary vsli:raw="Represents the number of 100-nanosecond intervals since January 1, 1601. This structure is a 64-bit value.">Rappresenta il numero di intervalli da 100 nanosecondi trascorsi dal 1 gennaio 1601. Questa struttura è un valore a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwHighDateTime">
      <summary vsli:raw="Specifies the high 32 bits of the &lt;see langword=&quot;FILETIME&quot; /&gt;.">Specifica i 32 bit alti di <see langword="FILETIME" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwLowDateTime">
      <summary vsli:raw="Specifies the low 32 bits of the &lt;see langword=&quot;FILETIME&quot; /&gt;.">Specifica i 32 bit bassi di <see langword="FILETIME" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary vsli:raw="Represents a generalized Clipboard format.">Rappresenta un formato degli Appunti generalizzato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary vsli:raw="Specifies the particular clipboard format of interest.">Specifica un determinato formato degli Appunti di interesse.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary vsli:raw="Specifies one of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DVASPECT&quot; /&gt; enumeration constants that indicates how much detail should be contained in the rendering.">Specifica una delle costanti di enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> che indica la quantità di dettagli che deve essere contenuta nel rendering.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary vsli:raw="Specifies part of the aspect when the data must be split across page boundaries.">Specifica parte dell'aspetto quando è necessario dividere i dati attraverso i limiti di pagina.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary vsli:raw="Specifies a pointer to a &lt;see langword=&quot;DVTARGETDEVICE&quot; /&gt; structure containing information about the target device that the data is being composed for.">Specifica un puntatore a una struttura <see langword="DVTARGETDEVICE" /> contenente informazioni sulla periferica di destinazione per la quale vengono composti i dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary vsli:raw="Specifies one of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; enumeration constants, which indicates the type of storage medium used to transfer the object's data.">Specifica una delle costanti di enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, che indica il tipo di supporto di archiviazione utilizzato per trasferire i dati dell'oggetto.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCDESC">
      <summary vsli:raw="Defines a function description.">Definisce una descrizione della funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.callconv">
      <summary vsli:raw="Specifies the calling convention of a function.">Specifica la convenzione di chiamata di una funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParams">
      <summary vsli:raw="Counts the total number of parameters.">Conta il numero totale di parametri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParamsOpt">
      <summary vsli:raw="Counts the optional parameters.">Conta i parametri opzionali.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cScodes">
      <summary vsli:raw="Counts the permitted return values.">Conta i valori restituiti consentiti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.elemdescFunc">
      <summary vsli:raw="Contains the return type of the function.">Contiene il tipo restituito della funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.funckind">
      <summary vsli:raw="Specifies whether the function is virtual, static, or dispatch-only.">Specifica se la funzione è virtual, static o solo dispatch.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.invkind">
      <summary vsli:raw="Specifies the type of a property function.">Specifica il tipo di una funzione di proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgelemdescParam">
      <summary vsli:raw="Indicates the array of &lt;see cref=&quot;F:System.Runtime.InteropServices.ELEMDESC&quot; /&gt;.">Indica la dimensione di <see cref="F:System.Runtime.InteropServices.FUNCDESC.cParams" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgscode">
      <summary vsli:raw="Stores the count of errors a function can return on a 16-bit system.">Memorizza il numero di errori che una funzione può restituire su un sistema a 16 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.memid">
      <summary vsli:raw="Identifies the function member ID.">Identifica l'ID del membro funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.oVft">
      <summary vsli:raw="Specifies the offset in the VTBL for &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL&quot; /&gt;.">Specifica l'offset nella VTBL per <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.wFuncFlags">
      <summary vsli:raw="Indicates the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCFLAGS&quot; /&gt; of a function.">Indica il <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> di una funzione.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCFLAGS">
      <summary vsli:raw="Identifies the constants that define the properties of a function.">Identifica le costanti che definiscono le proprietà di una funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FBINDABLE">
      <summary vsli:raw="The function that supports data binding.">Funzione che supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
      <summary vsli:raw="The function that best represents the object. Only one function in a type can have this attribute.">Funzione che meglio rappresenta l'oggetto. L'attributo può essere applicato solo a una funzione in un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type of &quot;abc&quot;. If such a member is found, and is flagged as an accessor function for an element of the default collection, a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.">Consente un'ottimizzazione nella quale il compilatore ricerca un membro denominato "xyz" sul tipo di "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione di accesso per un elemento dell'insieme predefinito, viene generata una chiamata alla funzione del membro. È consentito sui membri nelle interfacce dispatch e nelle interfacce, ma non sui moduli.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
      <summary vsli:raw="The function that is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE&quot; /&gt; must also be set.">Funzione che viene visualizzata dall'utente come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FHIDDEN">
      <summary vsli:raw="The function should not be displayed to the user, although it exists and is bindable.">La funzione non deve essere visualizzata all'utente, anche se è disponibile ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
      <summary vsli:raw="Mapped as individual bindable properties.">Mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
      <summary vsli:raw="The property appears in an object browser, but not in a properties browser.">La proprietà viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
      <summary vsli:raw="Tags the interface as having default behaviors.">Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
      <summary vsli:raw="When set, any call to a method that sets the property results first in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;. The implementation of &lt;see langword=&quot;OnRequestEdit&quot; /&gt; determines if the call is allowed to set the property.">Quando è impostato, qualsiasi chiamata a un metodo che imposta la proprietà determina anzitutto una chiamata a <see langword="IPropertyNotifySink::OnRequestEdit" />. L'implementazione di <see langword="OnRequestEdit" /> determina se alla chiamata è consentito impostare la proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
      <summary vsli:raw="The function should not be accessible from macro languages. This flag is intended for system-level functions or functions that type browsers should not display.">La funzione non deve essere accessibile dai linguaggi macro. Il flag è destinato alle funzioni a livello di sistema o alle funzioni che non devono essere visualizzate dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FSOURCE">
      <summary vsli:raw="The function returns an object that is a source of events.">La funzione restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
      <summary vsli:raw="The type information member is the default member for display in the user interface.">Il membro delle informazioni sul tipo è il membro predefinito per la visualizzazione nell'interfaccia utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
      <summary vsli:raw="The function supports &lt;see langword=&quot;GetLastError&quot; /&gt;. If an error occurs during the function, the caller can call &lt;see langword=&quot;GetLastError&quot; /&gt; to retrieve the error code.">La funzione supporta <see langword="GetLastError" />. Se si verifica un errore durante la funzione, il chiamante può chiamare <see langword="GetLastError" /> per recuperare il codice di errore.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCKIND">
      <summary vsli:raw="Defines how to access a function.">Definisce come accedere a una funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_DISPATCH">
      <summary vsli:raw="The function can be accessed only through &lt;see langword=&quot;IDispatch&quot; /&gt;.">Alla funzione è possibile accedere solo mediante <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_NONVIRTUAL">
      <summary vsli:raw="The function is accessed by &lt;see langword=&quot;static&quot; /&gt; address and takes an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">La funzione è accessibile tramite un indirizzo <see langword="static" /> e accetta un puntatore <see langword="this" /> implicito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_PUREVIRTUAL">
      <summary vsli:raw="The function is accessed through the virtual function table (VTBL), and takes an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">La funzione è accessibile tramite la tabella di funzioni virtual (VTBL) e assume un puntatore <see langword="this" /> implicito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_STATIC">
      <summary vsli:raw="The function is accessed by &lt;see langword=&quot;static&quot; /&gt; address and does not take an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">La funzione è accessibile tramite un indirizzo <see langword="static" /> e non accetta un puntatore <see langword="this" /> implicito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_VIRTUAL">
      <summary vsli:raw="The function is accessed in the same way as &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL&quot; /&gt;, except the function has an implementation.">L'accesso alla funzione avviene in modo identico a <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL" />, ad eccezione del fatto che essa dispone di un'implementazione.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary vsli:raw="Provides a managed definition of the &lt;see langword=&quot;IAdviseSink&quot; /&gt; interface.">Fornisce una definizione gestita dell'interfaccia <see langword="IAdviseSink" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has changed from the running state to the loaded state.  This method is called by a server.">Notifica a tutti i sink consultivi registrati la modifica dello stato dell'oggetto da in esecuzione a caricato.  Questo metodo viene chiamato da un server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Notifies all data objects currently registered advisory sinks that data in the object has changed.">Notifica a tutti i sink consultivi attualmente registrati degli oggetti dati che i dati nell'oggetto sono stati modificati.</summary>
      <param name="format" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt;, passed by reference, which describes the format, target device, rendering, and storage information of the calling data object.">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che descrive informazioni relative a formato, dispositivo di destinazione, rendering e archiviazione dell'oggetto dati chiamante.</param>
      <param name="stgmedium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;, passed by reference, which defines the storage medium (global memory, disk file, storage object, stream object, Graphics Device Interface (GDI) object, or undefined) and ownership of that medium for the calling data object.">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passato per riferimento, che definisce il supporto di archiviazione (memoria globale, file su disco, oggetto di archiviazione, oggetto flusso, oggetto GDI (Graphics Device Interface) o supporto non definito) e la proprietà di tale supporto per l'oggetto dati chiamante.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has been renamed. This method is called by a server.">Notifica a tutti i sink consultivi registrati che l'oggetto è stato rinominato. Questo metodo viene chiamato da un server.</summary>
      <param name="moniker" vsli:raw="A pointer to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on the new full moniker of the object.">Puntatore all'interfaccia <see langword="IMoniker" /> sul nuovo moniker completo dell'oggetto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has been saved. This method is called by a server.">Notifica a tutti i sink consultivi registrati che l'oggetto è stato salvato. Questo metodo viene chiamato da un server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary vsli:raw="Notifies an object's registered advisory sinks that its view has changed. This method is called by a server.">Notifica ai sink consultivi registrati di un oggetto che la visualizzazione è stata modificata. Questo metodo viene chiamato da un server.</summary>
      <param name="aspect" vsli:raw="The aspect, or view, of the object. Contains a value taken from the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DVASPECT&quot; /&gt; enumeration.">Aspetto, o visualizzazione, dell'oggetto. Contiene un valore ricavato dall'enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />.</param>
      <param name="index" vsli:raw="The portion of the view that has changed. Currently, only -1 is valid.">Parte della visualizzazione modificata. Attualmente, è valido solo il valore -1.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IBindCtx">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IBindCtx" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary vsli:raw="Enumerates the strings that are the keys of the internally maintained table of contextual object parameters.">Enumera le stringhe che sono le chiavi della tabella gestita internamente dei parametri degli oggetti contestuali.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the object parameter enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore del parametro dell'oggetto. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary vsli:raw="Returns the current binding options stored in the current bind context.">Restituisce le opzioni di associazione correnti archiviate nel contesto di associazione corrente.</summary>
      <param name="pbindopts" vsli:raw="A pointer to the structure to receive the binding options.">Puntatore alla struttura per ricevere le opzioni di associazione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)">
      <summary vsli:raw="Looks up the given key in the internally maintained table of contextual object parameters and returns the corresponding object, if one exists.">Cerca la chiave specificata nella tabella gestita internamente dei parametri degli oggetti contestuali e restituisce l'oggetto corrispondente, se disponibile.</summary>
      <param name="pszKey" vsli:raw="The name of the object to search for.">Nome dell'oggetto di cui eseguire la ricerca.</param>
      <param name="ppunk" vsli:raw="When this method returns, contains the object interface pointer. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il puntatore all'interfaccia dell'oggetto. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
      <summary vsli:raw="Returns access to the Running Object Table (ROT) relevant to this binding process.">Restituisce l'accesso alla tabella degli oggetti in esecuzione (ROT, Running Object Table) relativa a questo processo di associazione.</summary>
      <param name="pprot" vsli:raw="When this method returns, contains a reference to the Running Object Table (ROT). This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla tabella ROT. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)">
      <summary vsli:raw="Registers the passed object as one of the objects that has been bound during a moniker operation and that should be released when the operation is complete.">Registra l'oggetto passato come uno degli oggetti associati durante un'operazione di moniker e che deve essere liberato al completamento dell'operazione.</summary>
      <param name="punk" vsli:raw="The object to register for release.">Oggetto da registrare per il rilascio.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)">
      <summary vsli:raw="Registers the specified object pointer under the specified name in the internally maintained table of object pointers.">Registra il puntatore all'oggetto specificato sotto il nome specificato nella tabella gestita internamente dei puntatori all'oggetto.</summary>
      <param name="pszKey" vsli:raw="The name to register &lt;paramref name=&quot;punk&quot; /&gt; with.">Nome con il quale registrare il parametro <paramref name="punk" />.</param>
      <param name="punk" vsli:raw="The object to register.">Oggetto da registrare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects">
      <summary vsli:raw="Releases all the objects currently registered with the bind context by using the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)&quot; /&gt; method.">Libera tutti gli oggetti correntemente registrati con il contesto di associazione mediante il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)">
      <summary vsli:raw="Removes the object from the set of registered objects that need to be released.">Rimuove l'oggetto dall'insieme di oggetti registrati che devono essere liberati.</summary>
      <param name="punk" vsli:raw="The object to unregister for release.">Oggetto di cui annullare la registrazione per il rilascio.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)">
      <summary vsli:raw="Revokes the registration of the object currently found under the specified key in the internally maintained table of contextual object parameters, if that key is currently registered.">Revoca la registrazione dell'oggetto correntemente trovato sotto la chiave specificata nella tabella gestita internamente dei parametri degli oggetti contestuali, se tale chiave è attualmente registrata.</summary>
      <param name="pszKey" vsli:raw="The key to unregister.">Chiave di cui annullare la registrazione.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the specified key was successfully removed from the table; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Valore <see langword="S_OK" /><see langword="HRESULT" /> se la rimozione della chiave specificata dalla tabella è stata completata; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary vsli:raw="Stores a block of parameters in the bind context. These parameters will apply to later &lt;see langword=&quot;UCOMIMoniker&quot; /&gt; operations that use this bind context.">Archivia un blocco di parametri nel contesto di associazione. Questi parametri verranno applicati alle successive operazioni <see langword="UCOMIMoniker" /> che utilizzeranno questo contesto di associazione.</summary>
      <param name="pbindopts" vsli:raw="The structure containing the binding options to set.">Struttura contenente le opzioni di associazione da impostare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IConnectionPoint&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IConnectionPoint" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)">
      <summary vsli:raw="Establishes an advisory connection between the connection point and the caller's sink object.">Stabilisce una connessione consultiva tra il punto di connessione e l'oggetto sink del chiamante.</summary>
      <param name="pUnkSink" vsli:raw="A reference to the sink to receive calls for the outgoing interface managed by this connection point.">Riferimento al sink per ricevere le chiamate per l'interfaccia in uscita gestita da questo punto di connessione.</param>
      <param name="pdwCookie" vsli:raw="When this method returns, contains the connection cookie. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il cookie di connessione. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary vsli:raw="Creates an enumerator object for iteration through the connections that exist to this connection point.">Crea un oggetto enumeratore per lo scorrimento delle connessioni esistenti fino a questo punto di connessione.</summary>
      <param name="ppEnum" vsli:raw="When this method returns, contains the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary vsli:raw="Returns the IID of the outgoing interface managed by this connection point.">Restituisce l'IID dell'interfaccia in uscita gestita da questo punto di connessione.</summary>
      <param name="pIID" vsli:raw="When this parameter returns, contains the IID of the outgoing interface managed by this connection point. This parameter is passed uninitialized.">Quando termina, questo parametro contiene l'IID dell'interfaccia in uscita gestita da questo punto di connessione. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface pointer to the connectable object that conceptually owns this connection point.">Recupera il puntatore dell'interfaccia <see langword="IConnectionPointContainer" /> all'oggetto collegabile che concettualmente è proprietario di questo punto di connessione.</summary>
      <param name="ppCPC" vsli:raw="When this parameter returns, contains the connectable object's &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface. This parameter is passed uninitialized.">Quando termina, questo parametro contiene l'interfaccia <see langword="IConnectionPointContainer" /> dell'oggetto collegabile. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Unadvise(System.Int32)">
      <summary vsli:raw="Terminates an advisory connection previously established through the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt; method.">Termina una connessione consultiva precedentemente stabilita tramite il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
      <param name="dwCookie" vsli:raw="The connection cookie previously returned from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt; method.">Cookie di connessione precedentemente restituito dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IConnectionPointContainer" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary vsli:raw="Creates an enumerator of all the connection points supported in the connectable object, one connection point per IID.">Crea un enumeratore di tutti i punti di connessione supportati nell'oggetto collegabile, un punto di connessione per ciascun IID.</summary>
      <param name="ppEnum" vsli:raw="When this method returns, contains the interface pointer of the enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il puntatore a interfaccia dell'enumeratore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)">
      <summary vsli:raw="Asks the connectable object if it has a connection point for a particular IID, and if so, returns the &lt;see langword=&quot;IConnectionPoint&quot; /&gt; interface pointer to that connection point.">Chiede all'oggetto collegabile se contiene un punto di connessione per un particolare IID e, in caso affermativo, restituisce al punto di connessione il puntatore all'interfaccia <see langword="IConnectionPoint" />.</summary>
      <param name="riid" vsli:raw="A reference to the outgoing interface IID whose connection point is being requested.">Riferimento all'IID di interfaccia in uscita il cui punto di connessione è richiesto.</param>
      <param name="ppCP" vsli:raw="When this method returns, contains the connection point that manages the outgoing interface &lt;paramref name=&quot;riid&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il punto di connessione che gestisce il parametro <paramref name="riid" /> dell'interfaccia in uscita. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IDataObject&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IDataObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary vsli:raw="Creates a connection between a data object and an advisory sink. This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.">Crea una connessione tra un oggetto dati e un sink consultivo. Questo metodo viene chiamato da un oggetto che supporta un sink consultivo e attiva tale sink per ricevere una notifica delle modifiche nei dati dell'oggetto.</summary>
      <param name="pFormatetc" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passata per riferimento, che definisce formato, periferica di destinazione, aspetto e supporto che verranno utilizzati per notifiche future.</param>
      <param name="advf" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ADVF&quot; /&gt; values that specifies a group of flags for controlling the advisory connection.">Uno dei valori di <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> che specifica un gruppo di flag per il controllo della connessione consultiva.</param>
      <param name="adviseSink" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IAdviseSink&quot; /&gt; interface on the advisory sink that will receive the change notification.">Puntatore all'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> nel sink consultivo che riceverà la notifica della modifica.</param>
      <param name="connection" vsli:raw="When this method returns, contains a pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection by passing it to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)&quot; /&gt;. If this value is zero, the connection was not established. This parameter is passed uninitialized.">Quando termina, il metodo contiene un puntatore a un token DWORD che identifica la connessione. È possibile utilizzare questo token in un secondo momento per eliminare la connessione consultiva passandolo al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Se il valore è zero, la connessione non è stata stabilita. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The advisory connection was created.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; E_NOTIMPL&lt;/term&gt;&lt;description&gt; This method is not implemented on the data object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; There is an invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; There is an invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_ADVISENOTSUPPORTED&lt;/term&gt;&lt;description&gt; The data object does not support change notification.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue: 
  Value 
  Description 
  S_OK 
  La connessione consultiva è stata creata.  
  E_NOTIMPL 
  Questo metodo non è implementato nell'oggetto dati.  
  DV_E_LINDEX 
  È presente un valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  DV_E_FORMATETC 
  È presente un valore non valido per il parametro <paramref name="pFormatetc" />.  
  OLE_E_ADVISENOTSUPPORTED 
  L'oggetto dati non supporta la notifica delle modifiche.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary vsli:raw="Destroys a notification connection that had been previously established.">Elimina definitivamente una connessione di notifica stabilita in precedenza.</summary>
      <param name="connection" vsli:raw="A DWORD token that specifies the connection to remove. Use the value returned by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)&quot; /&gt; when the connection was originally established.">Token DWORD che specifica la connessione da rimuovere. Usare il valore restituito da <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quando è stata originariamente stabilita la connessione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary vsli:raw="Creates an object that can be used to enumerate the current advisory connections.">Crea un oggetto che può essere utilizzato per enumerare le connessioni consultive correnti.</summary>
      <param name="enumAdvise" vsli:raw="When this method returns, contains an &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&quot; /&gt; that receives the interface pointer to the new enumerator object. If the implementation sets &lt;paramref name=&quot;enumAdvise&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;, there are no connections to advisory sinks at this time. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> che riceve il puntatore a interfaccia per il nuovo oggetto enumeratore. Se l'implementazione imposta <paramref name="enumAdvise" /> su <see langword="null" />, non sono attualmente presenti connessioni a sink consultivi. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="This method supports the standard return value E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The enumerator object is successfully instantiated or there are no connections.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_ADVISENOTSUPPORTED&lt;/term&gt;&lt;description&gt; This object does not support advisory notifications.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Questo metodo supporta il valore restituito standard E_OUTOFMEMORY, nonché quanto riportato di seguito:  
  Value  

  Description  

  S_OK  

  Viene creata un'istanza dell'oggetto enumeratore o non sono presenti connessioni.  

  OLE_E_ADVISENOTSUPPORTED  

  Questo oggetto non supporta le notifiche consultive.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary vsli:raw="Creates an object for enumerating the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures for a data object. These structures are used in calls to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;.">Crea un oggetto per l'enumerazione delle strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> per un oggetto dati. Queste strutture sono utilizzate nelle chiamate al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DATADIR&quot; /&gt; values that specifies the direction of the data.">Uno dei valori di <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> che specifica la direzione dei dati.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The enumerator object was successfully created.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; E_NOTIMPL&lt;/term&gt;&lt;description&gt; The direction specified by the &lt;paramref name=&quot;direction&quot; /&gt; parameter is not supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_S_USEREG&lt;/term&gt;&lt;description&gt; Requests that OLE enumerate the formats from the registry.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Questo metodo supporta i valori restituiti standard E_INVALIDARG e E_OUTOFMEMORY, nonché quanto riportato di seguito: 
  Value 
  Description 
  S_OK 
  L'oggetto enumeratore è stato creato correttamente.  
  E_NOTIMPL 
  La direzione specificata dal parametro <paramref name="direction" /> non è supportata.  
  OLE_S_USEREG 
  Richiede l'enumerazione OLE dei formati dal Registro di sistema.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary vsli:raw="Provides a standard &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure that is logically equivalent to a more complex structure. Use this method to determine whether two different &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures would return the same data, removing the need for duplicate rendering.">Fornisce una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> standard logicamente equivalente a una struttura più complessa. Utilizzare questo metodo per determinare se due strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> diverse restituiscono gli stessi dati, eliminando la necessità di rendering duplicati.</summary>
      <param name="formatIn" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; member is not significant in this case and should be ignored.">Un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione che il chiamante desidera utilizzare per recuperare dati in una chiamata successiva quale <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Il membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> non è significativo in questo caso e deve essere ignorato.</param>
      <param name="formatOut" vsli:raw="When this method returns, contains a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure that contains the most general information possible for a specific rendering, making it canonically equivalent to &lt;c&gt;formatetcIn&lt;/c&gt;. The caller must allocate this structure and the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)&quot; /&gt; method must fill in the data. To retrieve data in a subsequent call such as &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;, the caller uses the supplied value of &lt;paramref name=&quot;formatOut&quot; /&gt;, unless the value supplied is &lt;see langword=&quot;null&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the method returns &lt;see langword=&quot;DATA_S_SAMEFORMATETC&quot; /&gt;. The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; member is not significant in this case and should be ignored. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> che include le informazioni più generali possibili per un rendering specifico, che lo rendono equivalente in modo canonico a <c>formatetcIn</c>. Il chiamante deve allocare questa struttura e il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> deve inserire i dati. Per recuperare dati in una chiamata successiva quale <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, il chiamante utilizza il valore fornito di <paramref name="formatOut" />, a meno che il valore fornito non sia <see langword="null" />. Questo valore è <see langword="null" /> se il metodo restituisce <see langword="DATA_S_SAMEFORMATETC" />. Il membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> non è significativo in questo caso e deve essere ignorato. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The returned &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure is different from the one that was passed.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DATA_S_SAMEFORMATETC&lt;/term&gt;&lt;description&gt; The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures are the same and &lt;see langword=&quot;null&quot; /&gt; is returned in the &lt;paramref name=&quot;formatOut&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; There is an invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; There is an invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_NOTRUNNING&lt;/term&gt;&lt;description&gt; The application is not running.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue: 
  Value 
  Description 
  S_OK 
  La struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> restituita è diversa da quella passata.  
  DATA_S_SAMEFORMATETC 
  Le strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> sono uguali e nel parametro <paramref name="formatOut" /> viene restituito <see langword="null" />.  
  DV_E_LINDEX 
  È presente un valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  DV_E_FORMATETC 
  È presente un valore non valido per il parametro <paramref name="pFormatetc" />.  
  OLE_E_NOTRUNNING 
  L'applicazione non è in esecuzione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Obtains data from a source data object. The &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; method, which is called by a data consumer, renders the data described in the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure and transfers it through the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure. The caller then assumes responsibility for releasing the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure.">Ottiene i dati da un oggetto dati di origine. Il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, chiamato da un consumer di dati, esegue il rendering dei dati descritti nella struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> specificata e li trasferisce mediante la struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> specificata. Il chiamante si assume la responsabilità del rilascio della struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data. It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per il passaggio di dati. È possibile specificare più supporti utilizzando l'operatore booleano OR, consentendo al metodo di scegliere il supporto ottimale tra quelli specificati.</param>
      <param name="medium" vsli:raw="When this method returns, contains a pointer to the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure that indicates the storage medium containing the returned data through its &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed&quot; /&gt; member, and the responsibility for releasing the medium through the value of its &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member. If &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the receiver of the medium is responsible for releasing it; otherwise, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; points to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface on the appropriate object so its &lt;see langword=&quot;Release&quot; /&gt; method can be called. The medium must be allocated and filled in by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un puntatore alla struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> che indica il supporto di archiviazione contenente i dati restituiti mediante il membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> e la responsabilità del rilascio del supporto mediante il valore del relativo membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il ricevente del supporto è responsabile del rilascio; in caso contrario <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> punta all'interfaccia <see langword="IUnknown" /> nell'oggetto appropriato per consentire la chiamata al metodo <see langword="Release" /> relativo. È necessario che il supporto sia allocato e compilato dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Obtains data from a source data object. This method, which is called by a data consumer, differs from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; method in that the caller must allocate and free the specified storage medium.">Ottiene i dati da un oggetto dati di origine. Questo metodo, chiamato da un consumer di dati, si differenzia dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> in quanto il chiamante deve allocare e liberare il supporto di archiviazione specificato.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt;, and only the following &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; values are valid: &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE&quot; /&gt;, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM&quot; /&gt;, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL&quot; /&gt;, or &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE&quot; /&gt;.">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per il passaggio di dati. È possibile specificare un solo supporto in <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> e sono validi solo i seguenti valori di <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> o <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;, passed by reference, that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. The caller must also free the medium. The implementation of this method must always supply a value of &lt;see langword=&quot;null&quot; /&gt; for the &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure that this parameter points to.">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passato per riferimento, che definisce il supporto di archiviazione contenente i dati di cui è in corso il trasferimento. È necessario che il supporto sia allocato dal chiamante e compilato dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Il chiamante deve anche liberare il supporto. L'implementazione di questo metodo deve sempre fornire un valore <see langword="null" /> per il membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> della struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> alla quale punta il parametro.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary vsli:raw="Determines whether the data object is capable of rendering the data described in the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure. Objects attempting a paste or drop operation can call this method before calling &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; to get an indication of whether the operation may be successful.">Determina se l'oggetto dati è in grado di eseguire il rendering dei dati descritti nella struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Gli oggetti che tentano un'operazione di inserimento o rilascio possono chiamare questo metodo prima di chiamare <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> per ottenere indicazioni relative alla riuscita dell'operazione.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use for the query.">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per la query.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; A subsequent call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; would probably be successful.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; An invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; An invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_TYMED&lt;/term&gt;&lt;description&gt; An invalid &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed&quot; /&gt; value.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_DVASPECT&lt;/term&gt;&lt;description&gt; An invalid &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect&quot; /&gt; value.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_NOTRUNNING&lt;/term&gt;&lt;description&gt; The application is not running.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue: 
  Value 
  Description 
  S_OK 
  Una successiva chiamata al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> avrà probabilmente esito positivo.  
  DV_E_LINDEX 
  Valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  DV_E_FORMATETC 
  Valore non valido per il parametro <paramref name="pFormatetc" />.  
  DV_E_TYMED 
  Valore di <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> non valido.  
  DV_E_DVASPECT 
  Valore di <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> non valido.  
  OLE_E_NOTRUNNING 
  L'applicazione non è in esecuzione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary vsli:raw="Transfers data to the object that implements this method. This method is called by an object that contains a data source.">Trasferisce i dati all'oggetto che implementa il metodo. Questo metodo viene chiamato da un oggetto contenente un'origine dati.</summary>
      <param name="formatIn" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passata per riferimento, che definisce il formato utilizzato dall'oggetto dati nell'interpretazione dei dati contenuti nel supporto di archiviazione.</param>
      <param name="medium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure, passed by reference, that defines the storage medium in which the data is being passed.">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passata per riferimento, che definisce il supporto di archiviazione in cui vengono passati i dati.</param>
      <param name="release" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the data object called, which implements &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;, owns the storage medium after the call returns. This means that the data object must free the medium after it has been used by calling the &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; function. &lt;see langword=&quot;false&quot; /&gt; to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.">
        <see langword="true" /> per specificare che l'oggetto dati chiamato, il quale implementa il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, è proprietario del supporto di archiviazione al termine della chiamata. L'oggetto dati deve pertanto liberare il supporto dopo l'utilizzo chiamando la funzione <see langword="ReleaseStgMedium" />. <see langword="false" /> per specificare che il chiamante mantiene la proprietà del supporto di archiviazione e che l'oggetto dati chiamato utilizza tale supporto solo per la durata della chiamata.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLDESC">
      <summary vsli:raw="Contains information needed for transferring a structure element, parameter, or function return value between processes.">Contiene le informazioni necessarie per il trasferimento di un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved">
      <summary vsli:raw="Reserved; set to &lt;see langword=&quot;null&quot; /&gt;.">Riservato; impostato su <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags">
      <summary vsli:raw="Indicates an &lt;see cref=&quot;T:System.Runtime.InteropServices.IDLFLAG&quot; /&gt; value describing the type.">Indica un valore <see cref="T:System.Runtime.InteropServices.IDLFLAG" /> che descrive il tipo.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLFLAG">
      <summary vsli:raw="Describes how to transfer a structure element, parameter, or function return value between processes.">Descrive come trasferire un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FIN">
      <summary vsli:raw="The parameter passes information from the caller to the callee.">Il parametro passa informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FLCID">
      <summary vsli:raw="The parameter is the local identifier of a client application.">Il parametro è l'identificatore locale di un'applicazione client.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FOUT">
      <summary vsli:raw="The parameter returns information from the callee to the caller.">Il parametro restituisce informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FRETVAL">
      <summary vsli:raw="The parameter is the return value of the member.">Il parametro è il valore restituito del membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_NONE">
      <summary vsli:raw="Does not specify whether the parameter passes or receives information.">Non specifica se il parametro passa o riceve informazioni.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumConnectionPoints&quot; /&gt; interface.">Gestisce la definizione dell'interfaccia <see langword="IEnumConnectionPoints" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of &lt;see langword=&quot;IConnectionPoint&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Numero di riferimenti <see langword="IConnectionPoint" />da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alle connessioni enumerate. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of connections enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando termina, questo metodo contiene un riferimento al numero effettivo di connessioni enumerate in <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnections">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumConnections&quot; /&gt; interface.">Gestisce la definizione dell'interfaccia <see langword="IEnumConnections" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.CONNECTDATA&quot; /&gt; structures to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Numero di strutture <see cref="T:System.Runtime.InteropServices.CONNECTDATA" /> da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alle connessioni enumerate. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of connections enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando termina, questo metodo contiene un riferimento al numero effettivo di connessioni enumerate in <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IEnumFORMATETC&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IEnumFORMATETC" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current enumerator.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione dell'enumeratore corrente.</summary>
      <param name="newEnum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Numero di riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; references. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento ai riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of references enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al numero effettivo di riferimenti enumerati in <paramref name="rgelt" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">HRESULT con il valore <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumMoniker&quot; /&gt; interface.">Gestisce la definizione dell'interfaccia <see langword="IEnumMoniker" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of monikers to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Numero di moniker da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated monikers. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento ai moniker enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of monikers enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando termina, questo metodo contiene un riferimento al numero effettivo di moniker enumerati in <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IEnumSTATDATA&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IEnumSTATDATA" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current enumerator.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione dell'enumeratore corrente.</summary>
      <param name="newEnum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STATDATA&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Numero di riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" />da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STATDATA&quot; /&gt; references. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento ai riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this parameter returns, contains a reference to the actual number of references enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo parametro contiene un riferimento al numero effettivo di riferimenti enumerati in <paramref name="rgelt" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">HRESULT con il valore <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumString">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumString&quot; /&gt; interface.">Gestisce la definizione dell'interfaccia <see langword="IEnumString" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of strings to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Numero di stringhe da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated strings. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alle stringhe enumerate. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of strings enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando termina, questo metodo contiene un riferimento al numero effettivo di stringhe enumerate in <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumVARIANT&quot; /&gt; interface.">Gestisce la definizione dell'interfaccia <see langword="IEnumVARIANT" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT&quot; /&gt; reference to the newly created enumerator.">Riferimento <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT" /> all'enumeratore appena creato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to return in &lt;c&gt;rgelt&lt;/c&gt;.">Numero di elementi da restituire in <c>rgelt</c>.</param>
      <param name="rgVar" vsli:raw="When this method returns, contains a reference to the enumerated elements. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento agli elementi enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of elements enumerated in &lt;c&gt;rgelt&lt;/c&gt;.">Quando termina, questo metodo contiene un riferimento al numero effettivo di elementi enumerati in <c>rgelt</c>.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Riporta all'inizio la sequenza di enumerazione.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">HRESULT con il valore <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Numero di elementi da saltare nell'enumerazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMoniker">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IMoniker&quot; /&gt; interface, with COM functionality from &lt;see langword=&quot;IPersist&quot; /&gt; and &lt;see langword=&quot;IPersistStream&quot; /&gt;.">Fornisce la definizione gestita dell'interfaccia <see langword="IMoniker" />, con funzionalità COM da <see langword="IPersist" /> e <see langword="IPersistStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary vsli:raw="Uses the moniker to bind to the object that it identifies.">Utilizza il moniker per l'associazione all'oggetto che identifica.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context object used in this binding operation.">Riferimento all'interfaccia <see langword="IBindCtx" /> sull'oggetto del contesto di associazione utilizzato in questa operazione di associazione.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="riidResult" vsli:raw="The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies.">Identificatore di interfaccia (IID) che il client intende utilizzare per comunicare con l'oggetto identificato dal moniker.</param>
      <param name="ppvResult" vsli:raw="When this method returns, contains a reference to the interface requested by &lt;paramref name=&quot;riidResult&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'interfaccia richiesta da <paramref name="riidResult" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary vsli:raw="Retrieves an interface pointer to the storage that contains the object identified by the moniker.">Recupera un puntatore di interfaccia all'archiviazione che contiene l'oggetto identificato dal moniker.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context object used during this binding operation.">Riferimento all'interfaccia <see langword="IBindCtx" /> sull'oggetto del contesto di associazione utilizzato in questa operazione di associazione.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="riid" vsli:raw="The interface identifier (IID) of the storage interface requested.">Identificatore di interfaccia (IID) dell'interfaccia di memoria richiesta.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the interface requested by &lt;paramref name=&quot;riid&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'interfaccia richiesta da <paramref name="riid" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Creates a new moniker based on the common prefix that this moniker shares with another moniker.">Crea un nuovo moniker in base al prefisso comune che il moniker condivide con un altro.</summary>
      <param name="pmkOther" vsli:raw="A reference to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on another moniker to compare with the current moniker for a common prefix.">Riferimento all'interfaccia <see langword="IMoniker" /> su un altro moniker per il confronto con il moniker corrente per individuare un prefisso comune.</param>
      <param name="ppmkPrefix" vsli:raw="When this method returns, contains the moniker that is the common prefix of the current moniker and &lt;paramref name=&quot;pmkOther&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il moniker con il prefisso comune del moniker corrente e <paramref name="pmkOther" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Combines the current moniker with another moniker, creating a new composite moniker.">Combina il moniker corrente con un altro, creando un nuovo moniker composito.</summary>
      <param name="pmkRight" vsli:raw="A reference to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on a moniker to append to the end of the current moniker.">Riferimento all'interfaccia <see langword="IMoniker" /> su un moniker da aggiungere alla fine del moniker corrente.</param>
      <param name="fOnlyIfNotGeneric" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the caller requires a nongeneric composition. The operation proceeds only if &lt;paramref name=&quot;pmkRight&quot; /&gt; is a moniker class that the current moniker can combine with in some way other than forming a generic composite. &lt;see langword=&quot;false&quot; /&gt; to indicate that the method can create a generic composite if necessary.">
        <see langword="true" /> per indicare che il chiamante richiede una composizione non generica. L'operazione prosegue solo se <paramref name="pmkRight" /> è una classe di moniker con cui può essere combinato il moniker corrente in un modo che non comporti la creazione di un composto generico. <see langword="false" /> per indicare che il metodo può creare un composto generico, se necessario.</param>
      <param name="ppmkComposite" vsli:raw="When this method returns, contains a reference to the resulting composite moniker. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al moniker composto risultante. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.">Fornisce un puntatore a un enumeratore in grado di enumerare i componenti di un moniker composito.</summary>
      <param name="fForward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate the monikers from left to right. &lt;see langword=&quot;false&quot; /&gt; to enumerate from right to left.">
        <see langword="true" /> per enumerare i moniker da sinistra a destra. <see langword="false" /> per enumerare i moniker da destra a sinistra.</param>
      <param name="ppenumMoniker" vsli:raw="When this method returns, contains a reference to the enumerator object for the moniker. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'oggetto enumeratore per il moniker. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)">
      <summary vsli:raw="Retrieves the class identifier (CLSID) of an object.">Recupera l'identificatore di classe (CLSID) di un oggetto.</summary>
      <param name="pClassID" vsli:raw="When this method returns, contains the CLSID. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il CLSID. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
      <summary vsli:raw="Gets the display name, which is a user-readable representation of the current moniker.">Ottiene il nome visualizzato, ossia una rappresentazione del moniker corrente leggibile dall'utente.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this operation.">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="ppszDisplayName" vsli:raw="When this method returns, contains the display name string. This parameter is passed uninitialized.">Quando termina, questo metodo contiene la stringa del nome visualizzato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)">
      <summary vsli:raw="Returns the size, in bytes, of the stream needed to save the object.">Restituisce la dimensione, in byte, del flusso necessario per salvare l'oggetto.</summary>
      <param name="pcbSize" vsli:raw="When this method returns, contains a &lt;see langword=&quot;long&quot; /&gt; value indicating the size, in bytes, of the stream needed to save this object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un valore <see langword="long" /> che indica la dimensione, in byte, del flusso necessario per salvare l'oggetto. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Provides a number representing the time that the object identified by the current moniker was last changed.">Fornisce un numero che rappresenta l'ora dell'ultima modifica apportata all'oggetto identificato dal moniker corrente.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="pFileTime" vsli:raw="When this method returns, contains the time of the last change. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'ora dell'ultima modifica. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)">
      <summary vsli:raw="Calculates a 32-bit integer using the internal state of the moniker.">Calcola un intero a 32 bit utilizzando lo stato interno del moniker.</summary>
      <param name="pdwHash" vsli:raw="When this method returns, contains the hash value for this moniker. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il valore hash del moniker. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Provides a moniker that, when composed to the right of the current moniker or one of similar structure, composes to nothing.">Fornisce un moniker che, quando composto a destra del moniker corrente o di uno con struttura analoga, risulta in una composizione nulla.</summary>
      <param name="ppmk" vsli:raw="When this method returns, contains a moniker that is the inverse of the current moniker. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il moniker inverso del moniker corrente. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty">
      <summary vsli:raw="Checks the object for changes since it was last saved.">Verifica se l'oggetto ha subito modifiche dall'ultimo salvataggio.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the object has changed; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Valore <see langword="S_OK" /><see langword="HRESULT" /> se l'oggetto è stato modificato; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Compares the current moniker with a specified moniker and indicates whether they are identical.">Confronta il moniker corrente con un moniker specificato e indica se sono identici.</summary>
      <param name="pmkOtherMoniker" vsli:raw="A reference to the moniker to use for comparison.">Riferimento al moniker da utilizzare per il confronto.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the monikers are identical; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Valore <see langword="S_OK" /><see langword="HRESULT" /> se i moniker sono identici; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Determines whether the object that is identified by the current moniker is currently loaded and running.">Determina se l'oggetto identificato dal moniker corrente è attualmente caricato e in esecuzione.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker if the current moniker is part of a composite.">Riferimento al moniker alla sinistra del moniker corrente, se il moniker corrente fa parte di un composto.</param>
      <param name="pmkNewlyRunning" vsli:raw="A reference to the moniker most recently added to the Running Object Table (ROT).">Riferimento al moniker aggiunto di recente alla tabella degli oggetti in esecuzione (ROT, Running Object Table).</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is running; an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is not running; or an &lt;see langword=&quot;E_UNEXPECTED&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Valore <see langword="S_OK" /><see langword="HRESULT" /> se il moniker è in esecuzione, un valore <see langword="S_FALSE" /><see langword="HRESULT" /> se il moniker non è in esecuzione, oppure un valore <see langword="E_UNEXPECTED" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)">
      <summary vsli:raw="Indicates whether this moniker is of one of the system-supplied moniker classes.">Indica se il moniker corrente è uno dei moniker delle classi di moniker fornite dal sistema.</summary>
      <param name="pdwMksys" vsli:raw="When this method returns, contains a pointer to an integer that is one of the values from the &lt;see langword=&quot;MKSYS&quot; /&gt; enumeration, and refers to one of the COM moniker classes. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un puntatore a un intero che corrisponde a uno dei valori nell'enumerazione <see langword="MKSYS" /> e fa riferimento a una delle classi di moniker COM. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is a system moniker; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Valore <see langword="S_OK" /><see langword="HRESULT" /> se si tratta di un moniker di sistema; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)">
      <summary vsli:raw="Initializes an object from the stream where it was previously saved.">Inizializza un oggetto dal flusso in cui è stato salvato in precedenza.</summary>
      <param name="pStm" vsli:raw="The stream that the object is loaded from.">Flusso dal quale viene caricato l'oggetto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Reads as many characters of the specified display name as the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)&quot; /&gt; understands and builds a moniker corresponding to the portion read.">Legge il numero massimo di caratteri del nome visualizzato specificato che il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" /> è in grado di comprendere e compila un moniker corrispondente alla porzione letta.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker that has been built from the display name up to this point.">Riferimento al moniker compilato dal nome visualizzato fino a questo punto.</param>
      <param name="pszDisplayName" vsli:raw="A reference to the string containing the remaining display name to parse.">Riferimento alla stringa contenente il nome visualizzato rimanente da analizzare.</param>
      <param name="pchEaten" vsli:raw="When this method returns, contains the number of characters that were consumed in parsing &lt;paramref name=&quot;pszDisplayName&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il numero di caratteri utilizzati nell'analisi di <paramref name="pszDisplayName" />. Questo parametro viene passato non inizializzato.</param>
      <param name="ppmkOut" vsli:raw="When this method returns, contains a reference to the moniker that was built from &lt;paramref name=&quot;pszDisplayName&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al moniker compilato da <paramref name="pszDisplayName" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Returns a reduced moniker, which is another moniker that refers to the same object as the current moniker but can be bound with equal or greater efficiency.">Restituisce un moniker ridotto, ovvero un altro moniker che fa riferimento allo stesso oggetto del moniker corrente, ma la cui associazione può avere pari o maggiore efficienza.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context to use in this binding operation.">Riferimento all'interfaccia <see langword="IBindCtx" /> nel contesto di associazione da utilizzare in questa operazione.</param>
      <param name="dwReduceHowFar" vsli:raw="A value that specifies how far the current moniker should be reduced.">Valore che specifica il grado di riduzione del moniker corrente.</param>
      <param name="ppmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker.">Riferimento al moniker alla sinistra del moniker corrente.</param>
      <param name="ppmkReduced" vsli:raw="When this method returns, contains a reference to the reduced form of the current moniker, which can be &lt;see langword=&quot;null&quot; /&gt; if an error occurs or if the current moniker is reduced to nothing. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla forma ridotta del moniker corrente, che può essere <see langword="null" /> se si verifica un errore o se il moniker corrente è ridotto a nulla. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Supplies a moniker that, when appended to the current moniker (or one with a similar structure), yields the specified moniker.">Fornisce un moniker che, quando aggiunto a quello corrente o a uno con struttura analoga, produce il moniker specificato.</summary>
      <param name="pmkOther" vsli:raw="A reference to the moniker to which a relative path should be taken.">Riferimento al moniker per il quale deve essere adottato un percorso relativo.</param>
      <param name="ppmkRelPath" vsli:raw="When this method returns, contains a reference to the relative moniker. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al moniker relativo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
      <summary vsli:raw="Saves an object to the specified stream.">Salva un oggetto nel flusso specificato.</summary>
      <param name="pStm" vsli:raw="The stream to which the object is saved.">Flusso nel quale viene salvato l'oggetto.</param>
      <param name="fClearDirty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to clear the modified flag after the save is complete; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per cancellare il flag modificato al termine del salvataggio. In caso contrario, <see langword="false" /></param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS">
      <summary vsli:raw="Defines the attributes of an implemented or inherited interface of a type.">Definisce gli attributi di un'interfaccia implementata o ereditata di un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULT">
      <summary vsli:raw="The interface or dispinterface represents the default for the source or sink.">L'interfaccia o interfaccia dispatch è quella predefinita per l'origine o sink.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULTVTABLE">
      <summary vsli:raw="Sinks receive events through the virtual function table (VTBL).">I sink ricevono gli eventi tramite la tabella di funzioni virtual (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FRESTRICTED">
      <summary vsli:raw="The member should not be displayed or programmable by users.">Il membro non dovrebbe essere visualizzabile o programmabile dagli utenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FSOURCE">
      <summary vsli:raw="This member of a coclass is called rather than implemented.">Questo membro di una coclasse viene chiamato piuttosto che implementato.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND">
      <summary vsli:raw="Specifies how to invoke a function by &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Specifica come richiamare una funzione mediante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_FUNC">
      <summary vsli:raw="The member is called using a normal function invocation syntax.">Il membro viene chiamato utilizzando una normale sintassi di chiamata delle funzioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYGET">
      <summary vsli:raw="The function is invoked using a normal property access syntax.">La funzione viene richiamata utilizzando una normale sintassi di accesso alle proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUT">
      <summary vsli:raw="The function is invoked using a property value assignment syntax.">La funzione viene richiamata utilizzando una sintassi di assegnazione di valori a una proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUTREF">
      <summary vsli:raw="The function is invoked using a property reference assignment syntax.">La funzione viene richiamata utilizzando una sintassi di assegnazione di riferimenti a una proprietà.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IPersistFile">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IPersistFile&quot; /&gt; interface, with functionality from &lt;see langword=&quot;IPersist&quot; /&gt;.">Fornisce la definizione gestita dell'interfaccia <see langword="IPersistFile" /> con funzionalità da <see langword="IPersist" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)">
      <summary vsli:raw="Retrieves the class identifier (CLSID) of an object.">Recupera l'identificatore di classe (CLSID) di un oggetto.</summary>
      <param name="pClassID" vsli:raw="When this method returns, contains a reference to the CLSID. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al CLSID. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)">
      <summary vsli:raw="Retrieves either the absolute path to the current working file of the object or, if there is no current working file, the default file name prompt of the object.">Recupera il percorso assoluto del file di lavoro corrente dell'oggetto oppure, se non è presente alcun file di lavoro corrente, la richiesta del nome file predefinito dell'oggetto.</summary>
      <param name="ppszFileName" vsli:raw="When this method returns, contains the address of a pointer to a zero-terminated string containing the path for the current file, or the default file name prompt (such as *.txt). This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'indirizzo di un puntatore a una stringa con terminazione zero contenente il percorso del file corrente oppure la richiesta del nome file predefinito (ad esempio *.txt). Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty">
      <summary vsli:raw="Checks an object for changes since it was last saved to its current file.">Verifica se un oggetto è stato modificato dall'ultimo salvataggio nel file corrente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the file has changed since it was last saved; &lt;see langword=&quot;S_FALSE&quot; /&gt; if the file has not changed since it was last saved.">
        <see langword="S_OK" /> se il file è stato modificato dall'ultimo salvataggio; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)">
      <summary vsli:raw="Opens the specified file and initializes an object from the file contents.">Apre il file specificato e inizializza un oggetto dal contenuto del file.</summary>
      <param name="pszFileName" vsli:raw="A zero-terminated string containing the absolute path of the file to open.">Stringa con terminazione zero che contiene il percorso assoluto del file da aprire.</param>
      <param name="dwMode" vsli:raw="A combination of values from the &lt;see langword=&quot;STGM&quot; /&gt; enumeration to indicate the access mode in which to open &lt;paramref name=&quot;pszFileName&quot; /&gt;.">Combinazione di valori dall'enumerazione <see langword="STGM" /> per indicare la modalità di accesso con cui aprire <paramref name="pszFileName" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)">
      <summary vsli:raw="Saves a copy of the object into the specified file.">Salva una copia dell'oggetto nel file specificato.</summary>
      <param name="pszFileName" vsli:raw="A zero-terminated string containing the absolute path of the file to which the object is saved.">Stringa con terminazione zero che contiene il percorso assoluto del file nel quale è salvato l'oggetto.</param>
      <param name="fRemember" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to used the &lt;paramref name=&quot;pszFileName&quot; /&gt; parameter as the current working file; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per utilizzare il parametro <paramref name="pszFileName" /> come file di lavoro corrente; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)">
      <summary vsli:raw="Notifies the object that it can write to its file.">Indica all'oggetto che può scrivere nel relativo file.</summary>
      <param name="pszFileName" vsli:raw="The absolute path of the file where the object was previously saved.">Percorso assoluto del file nel quale l'oggetto è stato precedentemente salvato.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IRunningObjectTable&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="IRunningObjectTable" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Enumerates the objects currently registered as running.">Enumera gli oggetti correntemente registrati come oggetti in esecuzione.</summary>
      <param name="ppenumMoniker" vsli:raw="When this method returns, contains the new enumerator for the Running Object Table (ROT). This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nuovo enumeratore per la tabella degli oggetti in esecuzione (ROT, Running Object Table). Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)">
      <summary vsli:raw="Returns the registered object if the supplied object name is registered as running.">Restituisce l'oggetto registrato se il nome dell'oggetto fornito è registrato come oggetto in esecuzione.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Riferimento al moniker da cercare nella tabella ROT.</param>
      <param name="ppunkObject" vsli:raw="When this method returns, contains the requested running object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'oggetto in esecuzione richiesto. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Un <see langword="HRESULT" /> che indica l'esito positivo o negativo dell'operazione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Searches for this moniker in the Running Object Table (ROT) and reports the recorded time of change, if present.">Cerca questo moniker nella tabella ROT e riporta l'ora registrata della modifica, se presente.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Riferimento al moniker da cercare nella tabella ROT.</param>
      <param name="pfiletime" vsli:raw="When this object returns, contains the objects last change time. This parameter is passed uninitialized.">Quando termina, questo oggetto contiene l'ora dell'ultima modifica degli oggetti. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Un <see langword="HRESULT" /> che indica l'esito positivo o negativo dell'operazione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Determines whether the specified moniker is currently registered in the Running Object Table (ROT).">Determina se il moniker specificato è correntemente registrato nella tabella ROT.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Riferimento al moniker da cercare nella tabella ROT.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Un <see langword="HRESULT" /> che indica l'esito positivo o negativo dell'operazione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Notes the time that a particular object changed so &lt;see langword=&quot;IMoniker::GetTimeOfLastChange&quot; /&gt; can report an appropriate change time.">Annota l'ora di modifica di un determinato oggetto per consentire all'interfaccia <see langword="IMoniker::GetTimeOfLastChange" /> di riportare un'ora di modifica corretta.</summary>
      <param name="dwRegister" vsli:raw="The Running Object Table (ROT) entry of the changed object.">Voce della tabella ROT dell'oggetto modificato.</param>
      <param name="pfiletime" vsli:raw="A reference to the object's last change time.">Riferimento all'ora dell'ultima modifica dell'oggetto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Registers that the supplied object has entered the running state.">Registra l'ingresso dell'oggetto fornito nello stato di esecuzione.</summary>
      <param name="grfFlags" vsli:raw="Specifies whether the Running Object Table's (ROT) reference to &lt;paramref name=&quot;punkObject&quot; /&gt; is weak or strong, and controls access to the object through its entry in the ROT.">Specifica se il riferimento della tabella degli oggetti in esecuzione (ROT, Running Object Table) a <paramref name="punkObject" /> è debole o forte e controlla l'accesso all'oggetto tramite la corrispondente voce nella ROT.</param>
      <param name="punkObject" vsli:raw="A reference to the object being registered as running.">Riferimento all'oggetto da registrare come oggetto in esecuzione.</param>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker that identifies &lt;paramref name=&quot;punkObject&quot; /&gt;.">Riferimento al moniker che identifica <paramref name="punkObject" />.</param>
      <returns vsli:raw="A value that can be used to identify this ROT entry in subsequent calls to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)&quot; /&gt;.">Valore che può essere utilizzato per identificare questa voce della ROT in successive chiamate al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)">
      <summary vsli:raw="Unregisters the specified object from the Running Object Table (ROT).">Annulla la registrazione dell'oggetto specificato dalla tabella ROT.</summary>
      <param name="dwRegister" vsli:raw="The Running Object Table (ROT) entry to revoke.">Voce della tabella ROT da revocare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IStream">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IStream&quot; /&gt; interface, with &lt;see langword=&quot;ISequentialStream&quot; /&gt; functionality.">Fornisce la definizione gestita dell'interfaccia <see langword="IStream" /> con funzionalità <see langword="ISequentialStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
      <summary vsli:raw="Creates a new stream object with its own seek pointer that references the same bytes as the original stream.">Crea un nuovo oggetto flusso con il proprio puntatore di ricerca che fa riferimento agli stessi byte del flusso originale.</summary>
      <param name="ppstm" vsli:raw="When this method returns, contains the new stream object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nuovo oggetto flusso. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)">
      <summary vsli:raw="Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.">Assicura che eventuali modifiche apportate a un oggetto flusso aperto in modalità di transazione siano riflesse nell'archivio padre.</summary>
      <param name="grfCommitFlags" vsli:raw="A value that controls how the changes for the stream object are committed.">Valore che controlla la modalità di esecuzione del commit delle modifiche dell'oggetto flusso.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.">Copia un numero specificato di byte dal puntatore di ricerca corrente del flusso al puntatore di ricerca corrente in un altro flusso.</summary>
      <param name="pstm" vsli:raw="A reference to the destination stream.">Riferimento al flusso di destinazione.</param>
      <param name="cb" vsli:raw="The number of bytes to copy from the source stream.">Numero di byte da copiare dal flusso di origine.</param>
      <param name="pcbRead" vsli:raw="On successful return, contains the actual number of bytes read from the source.">In caso di esito positivo, contiene il numero effettivo di byte letti dall'origine.</param>
      <param name="pcbWritten" vsli:raw="On successful return, contains the actual number of bytes written to the destination.">In caso di esito positivo, contiene il numero effettivo di byte scritti nella destinazione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)">
      <summary vsli:raw="Restricts access to a specified range of bytes in the stream.">Limita l'accesso a un intervallo specificato di byte nel flusso.</summary>
      <param name="libOffset" vsli:raw="The byte offset for the beginning of the range.">Offset di byte per l'inizio dell'intervallo.</param>
      <param name="cb" vsli:raw="The length of the range, in bytes, to restrict.">Lunghezza in byte dell'intervallo da limitare.</param>
      <param name="dwLockType" vsli:raw="The requested restrictions on accessing the range.">Limitazioni richieste nell'accesso all'intervallo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)">
      <summary vsli:raw="Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.">Legge un numero specificato di byte dall'oggetto flusso nella memoria a partire dal puntatore di ricerca corrente.</summary>
      <param name="pv" vsli:raw="When this method returns, contains the data read from the stream. This parameter is passed uninitialized.">Quando termina, questo metodo contiene i dati letti dal flusso. Questo parametro viene passato non inizializzato.</param>
      <param name="cb" vsli:raw="The number of bytes to read from the stream object.">Numero di byte da leggere dall'oggetto flusso.</param>
      <param name="pcbRead" vsli:raw="A pointer to a &lt;see langword=&quot;ULONG&quot; /&gt; variable that receives the actual number of bytes read from the stream object.">Puntatore a una variabile <see langword="ULONG" /> che riceve il numero effettivo di byte letti dall'oggetto flusso.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Revert">
      <summary vsli:raw="Discards all changes that have been made to a transacted stream since the last &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)&quot; /&gt; call.">Elimina tutte le modifiche apportate a un flusso sottoposto a transazione dall'ultima chiamata a <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)">
      <summary vsli:raw="Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.">Modifica il puntatore di ricerca in una nuova posizione relativa all'inizio del flusso, alla fine del flusso o al puntatore di ricerca corrente.</summary>
      <param name="dlibMove" vsli:raw="The displacement to add to &lt;paramref name=&quot;dwOrigin&quot; /&gt;.">Spostamento da aggiungere a <paramref name="dwOrigin" />.</param>
      <param name="dwOrigin" vsli:raw="The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.">Origine della ricerca. L'origine può essere l'inizio del file, il puntatore di ricerca corrente o la fine del file.</param>
      <param name="plibNewPosition" vsli:raw="On successful return, contains the offset of the seek pointer from the beginning of the stream.">In caso di esito positivo, contiene l'offset del puntatore di ricerca dall'inizio del flusso.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)">
      <summary vsli:raw="Changes the size of the stream object.">Modifica la dimensione dell'oggetto flusso.</summary>
      <param name="libNewSize" vsli:raw="The new size of the stream as a number of bytes.">Nuova dimensione del flusso come numero di byte.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.STATSTG&quot; /&gt; structure for this stream.">Recupera la struttura <see cref="T:System.Runtime.InteropServices.STATSTG" /> per questo flusso.</summary>
      <param name="pstatstg" vsli:raw="When this method returns, contains a &lt;see langword=&quot;STATSTG&quot; /&gt; structure that describes this stream object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una struttura <see langword="STATSTG" /> che descrive l'oggetto flusso. Questo parametro viene passato non inizializzato.</param>
      <param name="grfStatFlag" vsli:raw="Members in the &lt;see langword=&quot;STATSTG&quot; /&gt; structure that this method does not return, thus saving some memory allocation operations.">Membri nella struttura <see langword="STATSTG" /> che non vengono restituiti da questo metodo, salvando in tal modo alcune operazioni di allocazione della memoria.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
      <summary vsli:raw="Removes the access restriction on a range of bytes previously restricted with the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)&quot; /&gt; method.">Rimuove le restrizioni di accesso in un intervallo di byte precedentemente limitato con il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" />.</summary>
      <param name="libOffset" vsli:raw="The byte offset for the beginning of the range.">Offset di byte per l'inizio dell'intervallo.</param>
      <param name="cb" vsli:raw="The length, in bytes, of the range to restrict.">Lunghezza in byte dell'intervallo da limitare.</param>
      <param name="dwLockType" vsli:raw="The access restrictions previously placed on the range.">Limitazioni di accesso precedentemente imposte all'intervallo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a specified number of bytes into the stream object starting at the current seek pointer.">Scrive un numero specificato di byte nell'oggetto flusso a partire dal puntatore di ricerca corrente.</summary>
      <param name="pv" vsli:raw="The buffer to write this stream to.">Buffer in cui scrivere questo flusso.</param>
      <param name="cb" vsli:raw="The number of bytes to write to the stream.">Numero di byte da scrivere nel flusso.</param>
      <param name="pcbWritten" vsli:raw="On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;, this method does not provide the actual number of bytes written.">In caso di esito positivo, contiene il numero effettivo di byte scritti nell'oggetto flusso. Se il chiamante imposta questo puntatore su <see cref="F:System.IntPtr.Zero" />, questo metodo non fornirà il numero effettivo di byte scritti.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeComp">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="ITypeComp" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
      <summary vsli:raw="Maps a name to a member of a type, or binds global variables and functions contained in a type library.">Esegue il mapping di un nome a un membro di un tipo o associa le variabili e le funzioni globali presenti in una libreria dei tipi.</summary>
      <param name="szName" vsli:raw="The name to bind.">Nome da associare.</param>
      <param name="lHashVal" vsli:raw="A hash value for &lt;paramref name=&quot;szName&quot; /&gt; computed by &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt;.">Valore hash per <paramref name="szName" /> calcolato da <see langword="LHashValOfNameSys" />.</param>
      <param name="wFlags" vsli:raw="A flags word containing one or more of the invoke flags defined in the &lt;see langword=&quot;INVOKEKIND&quot; /&gt; enumeration.">Parola flag contenente uno o più flag di chiamata definiti nell'enumerazione <see langword="INVOKEKIND" />.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains a reference to the type description that contains the item to which it is bound, if a &lt;see langword=&quot;FUNCDESC&quot; /&gt; or &lt;see langword=&quot;VARDESC&quot; /&gt; was returned. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla descrizione del tipo che contiene l'elemento a cui è associato, se è stato restituito <see langword="FUNCDESC" /> o <see langword="VARDESC" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pDescKind" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;DESCKIND&quot; /&gt; enumerator that indicates whether the name bound-to is a &lt;see langword=&quot;VARDESC&quot; /&gt;, &lt;see langword=&quot;FUNCDESC&quot; /&gt;, or &lt;see langword=&quot;TYPECOMP&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a un enumeratore <see langword="DESCKIND" /> che indica se il nome associato è <see langword="VARDESC" />, <see langword="FUNCDESC" /> o <see langword="TYPECOMP" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pBindPtr" vsli:raw="When this method returns, contains a reference to the bound-to &lt;see langword=&quot;VARDESC&quot; /&gt;, &lt;see langword=&quot;FUNCDESC&quot; /&gt;, or &lt;see langword=&quot;ITypeComp&quot; /&gt; interface. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'interfaccia <see langword="VARDESC" />, <see langword="FUNCDESC" /> o <see langword="ITypeComp" /> associata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Binds to the type descriptions contained within a type library.">Effettua l'associazione alle descrizioni di tipi contenute all'interno di una libreria dei tipi.</summary>
      <param name="szName" vsli:raw="The name to bind.">Nome da associare.</param>
      <param name="lHashVal" vsli:raw="A hash value for &lt;paramref name=&quot;szName&quot; /&gt; determined by &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt;.">Valore hash per <paramref name="szName" /> determinato da <see langword="LHashValOfNameSys" />.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains a reference to an &lt;see langword=&quot;ITypeInfo&quot; /&gt; of the type to which &lt;paramref name=&quot;szName&quot; /&gt; was bound. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a un <see langword="ITypeInfo" /> del tipo a cui è stato associato <paramref name="szName" />. Questo parametro viene passato non inizializzato.</param>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to an &lt;see langword=&quot;ITypeComp&quot; /&gt; variable. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a una variabile <see langword="ITypeComp" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo">
      <summary vsli:raw="Provides the managed definition of the Component Automation ITypeInfo interface.">Specifica la definizione gestita dell'interfaccia ITypeInfo di automazione dei componenti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary vsli:raw="Retrieves the addresses of static functions or variables, such as those defined in a DLL.">Recupera gli indirizzi delle funzioni o delle variabili statiche, come quelle definite in una DLL.</summary>
      <param name="memid" vsli:raw="The member ID of the &lt;see langword=&quot;static&quot; /&gt; member's address to retrieve.">ID membro dell'indirizzo del membro <see langword="static" /> da recuperare.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies whether the member is a property, and if so, what kind.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica se il membro è una proprietà e, in caso positivo, ne indica il tipo.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;static&quot; /&gt; member. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al membro <see langword="static" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary vsli:raw="Creates a new instance of a type that describes a component class (coclass).">Crea una nuova istanza di un tipo che descrive una classe di componenti (coclass).</summary>
      <param name="pUnkOuter" vsli:raw="The object that acts as the controlling &lt;see langword=&quot;IUnknown&quot; /&gt;.">Oggetto che funge da interfaccia <see langword="IUnknown" /> di controllo.</param>
      <param name="riid" vsli:raw="The IID of the interface that the caller uses to communicate with the resulting object.">IID dell'interfaccia utilizzata dal chiamante per comunicare con l'oggetto risultante.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the created object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'oggetto creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary vsli:raw="Retrieves the type library that contains this type description and its index within that type library.">Recupera la libreria dei tipi che contiene questa descrizione del tipo e il relativo indice all'interno della libreria.</summary>
      <param name="ppTLB" vsli:raw="When this method returns, contains a reference to the containing type library. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
      <param name="pIndex" vsli:raw="When this method returns, contains a reference to the index of the type description within the containing type library. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'indice della descrizione dei tipi all'interno della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Retrieves a description or specification of an entry point for a function in a DLL.">Recupera una descrizione o specifica di un punto di ingresso per una funzione in una DLL.</summary>
      <param name="memid" vsli:raw="The ID of the member function whose DLL entry description is to be returned.">ID della funzione membro di cui restituire la descrizione del punto di ingresso della DLL.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by &lt;paramref name=&quot;memid&quot; /&gt;.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica il tipo di membro identificato da <paramref name="memid" />.</param>
      <param name="pBstrDllName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;paramref name=&quot;pBstrDllName&quot; /&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the DLL.">Se non è <see langword="null" />, la funzione imposterà <paramref name="pBstrDllName" /> su un <see langword="BSTR" /> che contiene il nome della DLL.</param>
      <param name="pBstrName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;c&gt;lpbstrName&lt;/c&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the entry point.">Se non è <see langword="null" />, la funzione imposterà <c>lpbstrName</c> su un <see langword="BSTR" /> che contiene il nome del punto di ingresso.</param>
      <param name="pwOrdinal" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, and the function is defined by an ordinal, then &lt;c&gt;lpwOrdinal&lt;/c&gt; is set to point to the ordinal.">Se non è <see langword="null" /> e la funzione è definita da un numero ordinale, <c>lpwOrdinal</c> verrà impostato in modo da puntare all'ordinale.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.">Recupera la stringa di documentazione, il nome e il percorso completo del file della Guida e l'ID del contesto per l'argomento della Guida relativo a una descrizione del tipo specifica.</summary>
      <param name="index" vsli:raw="The ID of the member whose documentation is to be returned.">ID del membro di cui restituire la documentazione.</param>
      <param name="strName" vsli:raw="When this method returns, contains the name of the item method. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nome del metodo dell'elemento. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains a reference to the Help context associated with the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure that contains information about a specified function.">Recupera la struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> che contiene le informazioni relative a una funzione specificata.</summary>
      <param name="index" vsli:raw="The index of the function description to return.">Indice della descrizione della funzione da restituire.</param>
      <param name="ppFuncDesc" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure that describes the specified function. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a una struttura <see langword="FUNCDESC" /> che descrive la funzione specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary vsli:raw="Maps between member names and member IDs, and parameter names and parameter IDs.">Esegue il mapping tra i nomi e gli ID dei membri e tra i nomi e gli ID dei parametri.</summary>
      <param name="rgszNames" vsli:raw="An array of names to map.">Matrice di nomi di cui eseguire il mapping.</param>
      <param name="cNames" vsli:raw="The count of names to map.">Conteggio dei nomi di cui eseguire il mapping.</param>
      <param name="pMemId" vsli:raw="When this method returns, contains a reference to an array in which name mappings are placed. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a una matrice in cui si trovano i mapping dei nomi. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.IMPLTYPEFLAGS&quot; /&gt; value for one implemented interface or base interface in a type description.">Recupera il valore <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> per un'interfaccia implementata o un'interfaccia di base in una descrizione del tipo.</summary>
      <param name="index" vsli:raw="The index of the implemented interface or base interface.">Indice dell'interfaccia implementata o dell'interfaccia di base.</param>
      <param name="pImplTypeFlags" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;IMPLTYPEFLAGS&quot; /&gt; enumeration. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="IMPLTYPEFLAGS" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)">
      <summary vsli:raw="Retrieves marshaling information.">Recupera le informazioni di marshalling.</summary>
      <param name="memid" vsli:raw="The member ID that indicates which marshaling information is needed.">ID del membro che indica le informazioni di marshalling necessarie.</param>
      <param name="pBstrMops" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;opcode&quot; /&gt; string used in marshaling the fields of the structure described by the referenced type description, or returns &lt;see langword=&quot;null&quot; /&gt; if there is no information to return. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla stringa <see langword="opcode" /> utilizzata nel marshaling dei campi della struttura descritta dalla descrizione del tipo a cui viene fatto riferimento oppure restituisce <see langword="null" /> se non sono disponibili informazioni da restituire. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.">Recupera la variabile con l'ID del membro specificato (o il nome della proprietà o del metodo e i relativi parametri) che corrisponde all'ID di funzione specificato.</summary>
      <param name="memid" vsli:raw="The ID of the member whose name (or names) is to be returned.">ID del membro di cui restituire il cui nome o i nomi.</param>
      <param name="rgBstrNames" vsli:raw="When this method returns, contains the name (or names) associated with the member. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nome o i nomi associati al membro. Questo parametro viene passato non inizializzato.</param>
      <param name="cMaxNames" vsli:raw="The length of the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array.">Lunghezza della matrice <paramref name="rgBstrNames" />.</param>
      <param name="pcNames" vsli:raw="When this method returns, contains the number of names in the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il numero di nomi nella matrice <paramref name="rgBstrNames" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the referenced type descriptions if a type description references other type descriptions.">Recupera le descrizioni del tipo cui viene fatto riferimento, se una descrizione del tipo fa riferimento ad altre.</summary>
      <param name="hRef" vsli:raw="A handle to the referenced type description to return.">Handle alla descrizione del tipo cui viene fatto riferimento da restituire.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains the referenced type description. This parameter is passed uninitialized.">Quando termina, questo metodo contiene la descrizione del tipo cui viene fatto riferimento. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the type description of the implemented interface types if a type description describes a COM class.">Recupera la descrizione dei tipi di interfaccia implementati, se una descrizione del tipo descrive una classe COM.</summary>
      <param name="index" vsli:raw="The index of the implemented type whose handle is returned.">Indice del tipo implementato di cui viene restituito l'handle.</param>
      <param name="href" vsli:raw="When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a un handle per l'interfaccia implementata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure that contains the attributes of the type description.">Recupera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> che contiene gli attributi della descrizione del tipo.</summary>
      <param name="ppTypeAttr" vsli:raw="When this method returns, contains a reference to the structure that contains the attributes of this type description. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla struttura che contiene gli attributi della descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface for the type description, which enables a client compiler to bind to the type description's members.">Recupera l'interfaccia <see langword="ITypeComp" /> per la descrizione del tipo, che consente a un compilatore client di eseguire l'associazione ai membri della descrizione del tipo.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface of the containing type library. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'interfaccia <see langword="ITypeComp" /> della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable.">Recupera una struttura <see langword="VARDESC" /> che descrive la variabile specificata.</summary>
      <param name="index" vsli:raw="The index of the variable description to return.">Indice della descrizione della variabile da restituire.</param>
      <param name="ppVarDesc" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla struttura <see langword="VARDESC" /> che descrive la variabile specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary vsli:raw="Invokes a method, or accesses a property of an object, that implements the interface described by the type description.">Richiama un metodo o accede a una proprietà di un oggetto, che implementa l'interfaccia descritta dalla descrizione del tipo.</summary>
      <param name="pvInstance" vsli:raw="A reference to the interface described by this type description.">Riferimento all'interfaccia descritta da questa descrizione del tipo.</param>
      <param name="memid" vsli:raw="A value that identifies the interface member.">Valore che identifica il membro di interfaccia.</param>
      <param name="wFlags" vsli:raw="Flags that describe the context of the invoke call.">Flag che descrivono il contesto della chiamata Invoke.</param>
      <param name="pDispParams" vsli:raw="A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.">Riferimento a una struttura che contiene una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi in ogni matrice.</param>
      <param name="pVarResult" vsli:raw="A reference to the location at which the result is to be stored. If &lt;paramref name=&quot;wFlags&quot; /&gt; specifies &lt;see langword=&quot;DISPATCH_PROPERTYPUT&quot; /&gt; or &lt;see langword=&quot;DISPATCH_PROPERTYPUTREF&quot; /&gt;, &lt;paramref name=&quot;pVarResult&quot; /&gt; is ignored. Set to &lt;see langword=&quot;null&quot; /&gt; if no result is desired.">Riferimento al percorso in cui archiviare il risultato. Se <paramref name="wFlags" /> specifica <see langword="DISPATCH_PROPERTYPUT" /> o <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> verrà ignorato. Impostare su <see langword="null" /> se non si desidera alcun risultato.</param>
      <param name="pExcepInfo" vsli:raw="A pointer to an exception information structure, which is filled in only if &lt;see langword=&quot;DISP_E_EXCEPTION&quot; /&gt; is returned.">Puntatore a una struttura di informazioni sulle eccezioni, compilata solo se viene restituito <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr" vsli:raw="If &lt;see langword=&quot;Invoke&quot; /&gt; returns &lt;see langword=&quot;DISP_E_TYPEMISMATCH&quot; /&gt;, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates the index within &lt;c&gt;rgvarg&lt;/c&gt; of the argument with the incorrect type. If more than one argument returns an error, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates only the first argument with an error. This parameter is passed uninitialized.">Se <see langword="Invoke" /> restituisce <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indica l'indice all'interno di <c>rgvarg</c> dell'argomento con tipo non corretto. Se più argomenti restituiscono un errore, <paramref name="puArgErr" /> indicherà solo il primo argomento con l'errore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc" vsli:raw="A reference to the &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure to release.">Riferimento alla struttura <see langword="FUNCDESC" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)&quot; /&gt; method.">Libera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr" vsli:raw="A reference to the &lt;see langword=&quot;TYPEATTR&quot; /&gt; structure to release.">Riferimento alla struttura <see langword="TYPEATTR" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see langword=&quot;VARDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera una struttura <see langword="VARDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc" vsli:raw="A reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure to release.">Riferimento alla struttura <see langword="VARDESC" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo2">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeInfo2&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="ITypeInfo2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary vsli:raw="Retrieves the addresses of static functions or variables, such as those defined in a DLL.">Recupera gli indirizzi delle funzioni o delle variabili statiche, come quelle definite in una DLL.</summary>
      <param name="memid" vsli:raw="The member ID of the &lt;see langword=&quot;static&quot; /&gt; member's address to retrieve.">ID membro dell'indirizzo del membro <see langword="static" /> da recuperare.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies whether the member is a property, and if so, what kind.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica se il membro è una proprietà e, in caso positivo, ne indica il tipo.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;static&quot; /&gt; member. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al membro <see langword="static" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary vsli:raw="Creates a new instance of a type that describes a component class (coclass).">Crea una nuova istanza di un tipo che descrive una classe di componenti (coclass).</summary>
      <param name="pUnkOuter" vsli:raw="An object that acts as the controlling &lt;see langword=&quot;IUnknown&quot; /&gt;.">Oggetto che funge da interfaccia <see langword="IUnknown" /> di controllo.</param>
      <param name="riid" vsli:raw="The IID of the interface that the caller uses to communicate with the resulting object.">IID dell'interfaccia utilizzata dal chiamante per comunicare con l'oggetto risultante.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the created object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'oggetto creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllCustData(System.IntPtr)">
      <summary vsli:raw="Gets all custom data items for the library.">Ottiene tutti gli elementi dati personalizzati della libreria.</summary>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllFuncCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all custom data from the specified function.">Ottiene tutti i dati personalizzati dalla funzione specificata.</summary>
      <param name="index" vsli:raw="The index of the function to get the custom data for.">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllImplTypeCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all custom data for the specified implementation type.">Ottiene tutti i dati personalizzati per il tipo di implementazione specificato.</summary>
      <param name="index" vsli:raw="The index of the implementation type for the custom data.">Indice del tipo di implementazione per i dati personalizzati.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt; which holds all custom data items.">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all of the custom data for the specified function parameter.">Ottiene tutti i dati personalizzati per il parametro della funzione specificato.</summary>
      <param name="indexFunc" vsli:raw="The index of the function to get the custom data for.">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="indexParam" vsli:raw="The index of the parameter of this function to get the custom data for.">Indice del parametro della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllVarCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets the variable for the custom data.">Ottiene la variabile per i dati personalizzati.</summary>
      <param name="index" vsli:raw="The index of the variable to get the custom data for.">Indice della variabile per la quale ottenere i dati personalizzati.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary vsli:raw="Retrieves the type library that contains this type description and its index within that type library.">Recupera la libreria dei tipi che contiene questa descrizione del tipo e il relativo indice all'interno della libreria.</summary>
      <param name="ppTLB" vsli:raw="When this method returns, contains a reference to the containing type library. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
      <param name="pIndex" vsli:raw="When this method returns, contains a reference to the index of the type description within the containing type library. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'indice della descrizione dei tipi all'interno della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetCustData(System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data.">Ottiene i dati personalizzati.</summary>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID usato per identificare i dati.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Retrieves a description or specification of an entry point for a function in a DLL.">Recupera una descrizione o specifica di un punto di ingresso per una funzione in una DLL.</summary>
      <param name="memid" vsli:raw="The ID of the member function whose DLL entry description is to be returned.">ID della funzione membro di cui restituire la descrizione del punto di ingresso della DLL.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by &lt;paramref name=&quot;memid&quot; /&gt;.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica il tipo di membro identificato da <paramref name="memid" />.</param>
      <param name="pBstrDllName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;paramref name=&quot;pBstrDllName&quot; /&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the DLL.">Se non è <see langword="null" />, la funzione imposterà <paramref name="pBstrDllName" /> su un <see langword="BSTR" /> che contiene il nome della DLL.</param>
      <param name="pBstrName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;c&gt;lpbstrName&lt;/c&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the entry point.">Se non è <see langword="null" />, la funzione imposterà <c>lpbstrName</c> su un <see langword="BSTR" /> che contiene il nome del punto di ingresso.</param>
      <param name="pwOrdinal" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, and the function is defined by an ordinal, then &lt;c&gt;lpwOrdinal&lt;/c&gt; is set to point to the ordinal.">Se non è <see langword="null" /> e la funzione è definita da un numero ordinale, <c>lpwOrdinal</c> verrà impostato in modo da puntare all'ordinale.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.">Recupera la stringa di documentazione, il nome e il percorso completo del file della Guida e l'ID del contesto per l'argomento della Guida relativo a una descrizione del tipo specifica.</summary>
      <param name="index" vsli:raw="The ID of the member whose documentation is to be returned.">ID del membro di cui restituire la documentazione.</param>
      <param name="strName" vsli:raw="When this method returns, contains the name of the item method. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nome del metodo dell'elemento. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains a reference to the Help context associated with the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento al contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, the localization context to use, and the context ID for the library Help topic in the Help file.">Recupera la stringa di documentazione, il percorso e il nome completo del file della Guida, il contesto di localizzazione da usare e l'ID del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="memid" vsli:raw="The member identifier for the type description.">Identificatore del membro per la descrizione del tipo.</param>
      <param name="pbstrHelpString" vsli:raw="When this method returns, contains a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the specified item. If the caller does not need the item name, &lt;paramref name=&quot;pbstrHelpString&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="BSTR" /> che contiene il nome dell'elemento specificato. Se il chiamante non necessita del nome dell'elemento, <paramref name="pbstrHelpString" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pdwHelpStringContext" vsli:raw="When this method returns, contains the Help localization context. If the caller does not need the Help context, &lt;paramref name=&quot;pdwHelpStringContext&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene il contesto di localizzazione della Guida. Se il chiamante non necessita del contesto della Guida, <paramref name="pdwHelpStringContext" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pbstrHelpStringDll" vsli:raw="When this method returns, contains a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the fully qualified name of the file containing the DLL used for the Help file. If the caller does not need the file name, &lt;paramref name=&quot;pbstrHelpStringDll&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="BSTR" /> che contiene il nome completo del file contenente la DLL usata per il file della Guida. Se il chiamante non necessita del nome del file, <paramref name="pbstrHelpStringDll" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data from the specified function.">Ottiene i dati personalizzati dalla funzione specificata.</summary>
      <param name="index" vsli:raw="The index of the function to get the custom data for.">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID usato per identificare i dati.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specified where to put the data. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure that contains information about a specified function.">Recupera la struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> che contiene le informazioni relative a una funzione specificata.</summary>
      <param name="index" vsli:raw="The index of the function description to return.">Indice della descrizione della funzione da restituire.</param>
      <param name="ppFuncDesc" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure that describes the specified function. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a una struttura <see langword="FUNCDESC" /> che descrive la funzione specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)">
      <summary vsli:raw="Binds to a specific member based on a known DISPID, where the member name is not known (for example, when binding to a default member).">Si associa a un membro specifico basato su un DISPID noto, in cui il nome del membro è sconosciuto (ad esempio, quando si associa a un membro predefinito).</summary>
      <param name="memid" vsli:raw="The member identifier.">Identificatore del membro.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by memid.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica il tipo di membro identificato da memid.</param>
      <param name="pFuncIndex" vsli:raw="When this method returns, contains an index into the function. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un indice nella funzione. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary vsli:raw="Maps between member names and member IDs, and parameter names and parameter IDs.">Esegue il mapping tra i nomi e gli ID dei membri e tra i nomi e gli ID dei parametri.</summary>
      <param name="rgszNames" vsli:raw="An array of names to map.">Matrice di nomi di cui eseguire il mapping.</param>
      <param name="cNames" vsli:raw="The count of names to map.">Conteggio dei nomi di cui eseguire il mapping.</param>
      <param name="pMemId" vsli:raw="When this method returns, contains a reference to an array in which name mappings are placed. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a una matrice in cui si trovano i mapping dei nomi. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the implementation type of the custom data.">Ottiene il tipo di implementazione dei dati personalizzati.</summary>
      <param name="index" vsli:raw="The index of the implementation type for the custom data.">Indice del tipo di implementazione per i dati personalizzati.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID usato per identificare i dati.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.IMPLTYPEFLAGS&quot; /&gt; value for one implemented interface or base interface in a type description.">Recupera il valore <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> per un'interfaccia implementata o un'interfaccia di base in una descrizione del tipo.</summary>
      <param name="index" vsli:raw="The index of the implemented interface or base interface.">Indice dell'interfaccia implementata o dell'interfaccia di base.</param>
      <param name="pImplTypeFlags" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;IMPLTYPEFLAGS&quot; /&gt; enumeration. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="IMPLTYPEFLAGS" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetMops(System.Int32,System.String@)">
      <summary vsli:raw="Retrieves marshaling information.">Recupera le informazioni di marshalling.</summary>
      <param name="memid" vsli:raw="The member ID that indicates which marshaling information is needed.">ID del membro che indica le informazioni di marshalling necessarie.</param>
      <param name="pBstrMops" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;opcode&quot; /&gt; string used in marshaling the fields of the structure described by the referenced type description, or returns &lt;see langword=&quot;null&quot; /&gt; if there is no information to return. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla stringa <see langword="opcode" /> utilizzata nel marshaling dei campi della struttura descritta dalla descrizione del tipo a cui viene fatto riferimento oppure restituisce <see langword="null" /> se non sono disponibili informazioni da restituire. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.">Recupera la variabile con l'ID del membro specificato (o il nome della proprietà o del metodo e i relativi parametri) che corrisponde all'ID di funzione specificato.</summary>
      <param name="memid" vsli:raw="The ID of the member whose name (or names) is to be returned.">ID del membro di cui restituire il cui nome o i nomi.</param>
      <param name="rgBstrNames" vsli:raw="When this method returns, contains the name (or names) associated with the member. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il nome o i nomi associati al membro. Questo parametro viene passato non inizializzato.</param>
      <param name="cMaxNames" vsli:raw="The length of the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array.">Lunghezza della matrice <paramref name="rgBstrNames" />.</param>
      <param name="pcNames" vsli:raw="When this method returns, contains the number of names in the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il numero di nomi nella matrice <paramref name="rgBstrNames" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the specified custom data parameter.">Ottiene il parametro specificato per i dati personalizzati.</summary>
      <param name="indexFunc" vsli:raw="The index of the function to get the custom data for.">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="indexParam" vsli:raw="The index of the parameter of this function to get the custom data for.">Indice del parametro della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID usato per identificare i dati.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the referenced type descriptions, if a type description references other type descriptions.">Recupera le descrizioni di tipo cui viene fatto riferimento, se una descrizione del tipo fa riferimento ad altre.</summary>
      <param name="hRef" vsli:raw="A handle to the referenced type description to return.">Handle alla descrizione del tipo cui viene fatto riferimento da restituire.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains the referenced type description. This parameter is passed uninitialized.">Quando termina, questo metodo contiene la descrizione del tipo cui viene fatto riferimento. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the type description of the implemented interface types, if a type description describes a COM class.">Recupera la descrizione dei tipi di interfaccia implementati, se una descrizione del tipo descrive una classe COM.</summary>
      <param name="index" vsli:raw="The index of the implemented type whose handle is returned.">Indice del tipo implementato di cui viene restituito l'handle.</param>
      <param name="href" vsli:raw="When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento a un handle per l'interfaccia implementata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure that contains the attributes of the type description.">Recupera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> che contiene gli attributi della descrizione del tipo.</summary>
      <param name="ppTypeAttr" vsli:raw="When this method returns, contains a reference to the structure that contains the attributes of this type description. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla struttura che contiene gli attributi della descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface for the type description, which enables a client compiler to bind to the type description's members.">Recupera l'interfaccia <see langword="ITypeComp" /> per la descrizione del tipo, che consente a un compilatore client di eseguire l'associazione ai membri della descrizione del tipo.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;ITypeComp&quot; /&gt; of the containing type library. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'interfaccia <see langword="ITypeComp" /> della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeFlags(System.Int32@)">
      <summary vsli:raw="Returns the type flags without any allocations. This method returns a &lt;see langword=&quot;DWORD&quot; /&gt; type flag, which expands the type flags without growing the &lt;see langword=&quot;TYPEATTR&quot; /&gt; (type attribute).">Restituisce i flag di tipo senza allocazioni. Questo metodo restituisce un flag di tipo <see langword="DWORD" /> che espande i flag di tipo senza accrescere l'attributo di tipo <see langword="TYPEATTR" />.</summary>
      <param name="pTypeFlags" vsli:raw="When this method returns, contains a &lt;see langword=&quot;DWORD&quot; /&gt; reference to a &lt;see langword=&quot;TYPEFLAG&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un riferimento <see langword="DWORD" /> a <see langword="TYPEFLAG" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Returns the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration quickly, without doing any allocations.">Restituisce l'enumerazione <see langword="TYPEKIND" /> rapidamente, senza eseguire allocazioni.</summary>
      <param name="pTypeKind" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un riferimento a un'enumerazione <see langword="TYPEKIND" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the variable for the custom data.">Ottiene la variabile per i dati personalizzati.</summary>
      <param name="index" vsli:raw="The index of the variable to get the custom data for.">Indice della variabile per la quale ottenere i dati personalizzati.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID usato per identificare i dati.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable.">Recupera una struttura <see langword="VARDESC" /> che descrive la variabile specificata.</summary>
      <param name="index" vsli:raw="The index of the variable description to return.">Indice della descrizione della variabile da restituire.</param>
      <param name="ppVarDesc" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento alla struttura <see langword="VARDESC" /> che descrive la variabile specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarIndexOfMemId(System.Int32,System.Int32@)">
      <summary vsli:raw="Binds to a specific member based on a known &lt;see langword=&quot;DISPID&quot; /&gt;, where the member name is not known (for example, when binding to a default member).">Si associa a un membro specifico basato su un <see langword="DISPID" /> noto, in cui il nome del membro è sconosciuto (ad esempio, quando si associa a un membro predefinito).</summary>
      <param name="memid" vsli:raw="The member identifier.">Identificatore del membro.</param>
      <param name="pVarIndex" vsli:raw="When this method returns, contains an index of &lt;paramref name=&quot;memid&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un indice di <paramref name="memid" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary vsli:raw="Invokes a method, or accesses a property of an object, that implements the interface described by the type description.">Richiama un metodo o accede a una proprietà di un oggetto, che implementa l'interfaccia descritta dalla descrizione del tipo.</summary>
      <param name="pvInstance" vsli:raw="A reference to the interface described by this type description.">Riferimento all'interfaccia descritta da questa descrizione del tipo.</param>
      <param name="memid" vsli:raw="Identifier of the interface member.">Identificatore del membro di interfaccia.</param>
      <param name="wFlags" vsli:raw="Flags describing the context of the invoke call.">Flag che descrivono il contesto della chiamata Invoke.</param>
      <param name="pDispParams" vsli:raw="A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.">Riferimento a una struttura che contiene una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi in ogni matrice.</param>
      <param name="pVarResult" vsli:raw="A reference to the location at which the result is to be stored. If &lt;paramref name=&quot;wFlags&quot; /&gt; specifies &lt;see langword=&quot;DISPATCH_PROPERTYPUT&quot; /&gt; or &lt;see langword=&quot;DISPATCH_PROPERTYPUTREF&quot; /&gt;, &lt;paramref name=&quot;pVarResult&quot; /&gt; is ignored. Set to &lt;see langword=&quot;null&quot; /&gt; if no result is desired.">Riferimento al percorso in cui archiviare il risultato. Se <paramref name="wFlags" /> specifica <see langword="DISPATCH_PROPERTYPUT" /> o <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> verrà ignorato. Impostare su <see langword="null" /> se non si desidera alcun risultato.</param>
      <param name="pExcepInfo" vsli:raw="A pointer to an exception information structure, which is filled in only if &lt;see langword=&quot;DISP_E_EXCEPTION&quot; /&gt; is returned.">Puntatore a una struttura di informazioni sulle eccezioni, compilata solo se viene restituito <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr" vsli:raw="If &lt;see langword=&quot;Invoke&quot; /&gt; returns &lt;see langword=&quot;DISP_E_TYPEMISMATCH&quot; /&gt;, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates the index of the argument with incorrect type. If more than one argument returns an error, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates only the first argument with an error.">Se <see langword="Invoke" /> restituisce <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indica l'indice dell'argomento con il tipo non corretto. Se più argomenti restituiscono un errore, <paramref name="puArgErr" /> indicherà solo il primo argomento con l'errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseFuncDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc" vsli:raw="A reference to the &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure to release.">Riferimento alla struttura <see langword="FUNCDESC" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseTypeAttr(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)&quot; /&gt; method.">Libera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr" vsli:raw="A reference to the &lt;see langword=&quot;TYPEATTR&quot; /&gt; structure to release.">Riferimento alla struttura <see langword="TYPEATTR" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseVarDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see langword=&quot;VARDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera una struttura <see langword="VARDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc" vsli:raw="A reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure to release.">Riferimento alla struttura <see langword="VARDESC" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeLib&quot; /&gt; interface.">Fornisce la definizione gestita dell'interfaccia <see langword="ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary vsli:raw="Finds occurrences of a type description in a type library.">Individua le occorrenze di una descrizione dei tipi in una libreria dei tipi.</summary>
      <param name="szNameBuf" vsli:raw="The name to search for. This is an in/out parameter.">Nome da cercare. Parametro in/out.</param>
      <param name="lHashVal" vsli:raw="A hash value to speed up the search, computed by the &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt; function. If &lt;paramref name=&quot;lHashVal&quot; /&gt; is 0, a value is computed.">Valore hash per accelerare la ricerca, calcolato dalla funzione <see langword="LHashValOfNameSys" />. Se <paramref name="lHashVal" /> è 0, verrà calcolato un valore.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains an array of pointers to the type descriptions that contain the name specified in &lt;paramref name=&quot;szNameBuf&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo restituisce una matrice di puntatori alle descrizioni dei tipi che contengono il nome specificato in <paramref name="szNameBuf" />. Questo parametro viene passato non inizializzato.</param>
      <param name="rgMemId" vsli:raw="An array of the &lt;see langword=&quot;MEMBERID&quot; /&gt; 's of the found items; &lt;paramref name=&quot;rgMemId&quot; /&gt; [i] is the &lt;see langword=&quot;MEMBERID&quot; /&gt; that indexes into the type description specified by &lt;paramref name=&quot;ppTInfo&quot; /&gt; [i]. Cannot be &lt;see langword=&quot;null&quot; /&gt;.">Matrice dell'oggetto <see langword="MEMBERID" /> degli elementi individuati; <paramref name="rgMemId" />[i] è l'oggetto <see langword="MEMBERID" /> che crea indici nella descrizione dei tipi specificata da <paramref name="ppTInfo" />[i]. Non può essere <see langword="null" />.</param>
      <param name="pcFound" vsli:raw="On entry, indicates how many instances to look for. For example, &lt;paramref name=&quot;pcFound&quot; /&gt; = 1 can be called to find the first occurrence. The search stops when one instance is found.  &#xA;  &#xA; On exit, indicates the number of instances that were found. If the &lt;see langword=&quot;in&quot; /&gt; and &lt;see langword=&quot;out&quot; /&gt; values of &lt;paramref name=&quot;pcFound&quot; /&gt; are identical, there might be more type descriptions that contain the name.">In ingresso, indica il numero di istanze da ricercare. <paramref name="pcFound" /> = 1, ad esempio, può essere chiamato per cercare la prima occorrenza. La ricerca termina quando viene trovata un'istanza.  
In uscita, indica il numero delle istanze trovate. Se i valori <see langword="in" /> e <see langword="out" /> di <paramref name="pcFound" /> sono identici, è possibile che siano disponibili più descrizioni dei tipi che contengono il nome.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Recupera la stringa di documentazione della libreria, il nome e il percorso completo del file della Guida e l'identificatore del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index" vsli:raw="The index of the type description whose documentation is to be returned.">Indice della descrizione del tipo di cui restituire la documentazione.</param>
      <param name="strName" vsli:raw="When this method returns, contains a string that represents the name of the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una stringa che rappresenta il nome dell'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains a string that represents the documentation string for the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una stringa che rappresenta la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'identificatore di contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains a string that represents the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una stringa che rappresenta il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Recupera la struttura che contiene gli attributi della libreria.</summary>
      <param name="ppTLibAttr" vsli:raw="When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una struttura che contiene gli attributi della libreria. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Enables a client compiler to bind to a library's types, variables, constants, and global functions.">Consente a un compilatore client di effettuare l'associazione ai tipi, alle variabili, alle costanti e alle funzioni globali di una libreria.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains an instance of a &lt;see langword=&quot;ITypeComp&quot; /&gt; instance for this &lt;see langword=&quot;ITypeLib&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un'istanza di un'istanza di <see langword="ITypeComp" /> per <see langword="ITypeLib" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the specified type description in the library.">Recupera la descrizione del tipo specificata nella libreria.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface to return.">Indice dell'interfaccia <see langword="ITypeInfo" /> da restituire.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeInfo&quot; /&gt; describing the type referenced by &lt;paramref name=&quot;index&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un'interfaccia <see langword="ITypeInfo" /> che descrive il tipo a cui fa riferimento <paramref name="index" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Restituisce il numero delle descrizioni dei tipi nella libreria dei tipi.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Numero delle descrizioni dei tipi nella libreria dei tipi.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the type description that corresponds to the specified GUID.">Recupera la descrizione del tipo che corrisponde al GUID specificato.</summary>
      <param name="guid" vsli:raw="The IID of the interface or CLSID of the class whose type info is requested.">IID dell'interfaccia o CLSID della classe di cui vengono richieste le informazioni sul tipo.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains the requested &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'interfaccia <see langword="ITypeInfo" /> richiesta. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Recupera il tipo di una descrizione del tipo.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Indice della descrizione dei tipi all'interno della libreria dei tipi.</param>
      <param name="pTKind" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="TYPEKIND" /> per la descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indica se una stringa passata contiene il nome di un tipo o di un membro descritto nella libreria.</summary>
      <param name="szNameBuf" vsli:raw="The string to test. This is an in/out parameter.">Stringa da testare. Parametro in/out.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Valore hash di <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="szNameBuf" /> viene trovato nella libreria dei tipi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; structure originally obtained from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt; method.">Libera la struttura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originariamente ottenuta dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; structure to release.">Struttura <see langword="TLIBATTR" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib2">
      <summary vsli:raw="Provides a managed definition of the &lt;see langword=&quot;ITypeLib2&quot; /&gt; interface.">Fornisce una definizione gestita dell'interfaccia <see langword="ITypeLib2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary vsli:raw="Finds occurrences of a type description in a type library.">Individua le occorrenze di una descrizione dei tipi in una libreria dei tipi.</summary>
      <param name="szNameBuf" vsli:raw="The name to search for.">Nome da cercare.</param>
      <param name="lHashVal" vsli:raw="A hash value to speed up the search, computed by the &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt; function. If &lt;paramref name=&quot;lHashVal&quot; /&gt; is 0, a value is computed.">Valore hash per accelerare la ricerca, calcolato dalla funzione <see langword="LHashValOfNameSys" />. Se <paramref name="lHashVal" /> è 0, verrà calcolato un valore.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains an array of pointers to the type descriptions that contain the name specified in &lt;paramref name=&quot;szNameBuf&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo restituisce una matrice di puntatori alle descrizioni dei tipi che contengono il nome specificato in <paramref name="szNameBuf" />. Questo parametro viene passato non inizializzato.</param>
      <param name="rgMemId" vsli:raw="When this method returns, contains an array of the &lt;see langword=&quot;MEMBERID&quot; /&gt;s of the found items; &lt;paramref name=&quot;rgMemId&quot; /&gt; [i] is the &lt;see langword=&quot;MEMBERID&quot; /&gt; that indexes into the type description specified by &lt;paramref name=&quot;ppTInfo&quot; /&gt; [i]. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una matrice di <see langword="MEMBERID" /> degli elementi trovati; <paramref name="rgMemId" /> [i] è l'oggetto <see langword="MEMBERID" /> che indicizza nella descrizione dei tipi specificata da <paramref name="ppTInfo" /> [i]. Questo parametro non può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pcFound" vsli:raw="On entry, a value, passed by reference, that indicates how many instances to look for. For example, &lt;paramref name=&quot;pcFound&quot; /&gt; = 1 can be called to find the first occurrence. The search stops when one instance is found.  &#xA;  &#xA; On exit, indicates the number of instances that were found. If the &lt;see langword=&quot;in&quot; /&gt; and &lt;see langword=&quot;out&quot; /&gt; values of &lt;paramref name=&quot;pcFound&quot; /&gt; are identical, there might be more type descriptions that contain the name.">In ingresso, valore passato per riferimento che indica quante istanze cercare. <paramref name="pcFound" /> = 1, ad esempio, può essere chiamato per cercare la prima occorrenza. La ricerca termina quando viene trovata un'istanza.  
In uscita, indica il numero delle istanze trovate. Se i valori <see langword="in" /> e <see langword="out" /> di <paramref name="pcFound" /> sono identici, è possibile che siano disponibili più descrizioni dei tipi che contengono il nome.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetAllCustData(System.IntPtr)">
      <summary vsli:raw="Gets all custom data items for the library.">Ottiene tutti gli elementi dati personalizzati della libreria.</summary>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetCustData(System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data.">Ottiene i dati personalizzati.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; , passed by reference, that is used to identify the data.">Oggetto <see cref="T:System.Guid" />, passato per riferimento, che viene usato per identificare i dati.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an object that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Recupera la stringa di documentazione della libreria, il nome e il percorso completo del file della Guida e l'identificatore del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index" vsli:raw="An index of the type description whose documentation is to be returned.">Indice della descrizione del tipo di cui restituire la documentazione.</param>
      <param name="strName" vsli:raw="When this method returns, contains a string that specifies the name of the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una stringa che specifica il nome dell'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'identificatore di contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains a string that specifies the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una stringa che specifica il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, the localization context to use, and the context ID for the library Help topic in the Help file.">Recupera la stringa di documentazione della libreria, il percorso e il nome completo del file della Guida, il contesto di localizzazione da usare e l'ID del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index" vsli:raw="An index of the type description whose documentation is to be returned; if &lt;paramref name=&quot;index&quot; /&gt; is -1, the documentation for the library is returned.">Indice della descrizione del tipo la cui documentazione deve essere restituita. Se <paramref name="index" /> è -1, la documentazione relativa alla libreria viene restituita.</param>
      <param name="pbstrHelpString" vsli:raw="When this method returns, contains a BSTR that specifies the name of the specified item. If the caller does not need the item name, &lt;paramref name=&quot;pbstrHelpString&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto BSTR che indica il nome dell'elemento specificato. Se il chiamante non necessita del nome dell'elemento, <paramref name="pbstrHelpString" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pdwHelpStringContext" vsli:raw="When this method returns, contains the Help localization context. If the caller does not need the Help context, &lt;paramref name=&quot;pdwHelpStringContext&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene il contesto di localizzazione della Guida. Se il chiamante non necessita del contesto della Guida, <paramref name="pdwHelpStringContext" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pbstrHelpStringDll" vsli:raw="When this method returns, contains a BSTR that specifies the fully qualified name of the file containing the DLL used for Help file. If the caller does not need the file name, &lt;paramref name=&quot;pbstrHelpStringDll&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando restituisce il controllo, questo metodo contiene un oggetto BSTR che specifica il nome completo del file contenente la DLL usata per il file della Guida. Se il chiamante non necessita del nome del file, <paramref name="pbstrHelpStringDll" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Recupera la struttura che contiene gli attributi della libreria.</summary>
      <param name="ppTLibAttr" vsli:raw="When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.">Quando termina, questo metodo contiene una struttura che contiene gli attributi della libreria. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibStatistics(System.IntPtr,System.Int32@)">
      <summary vsli:raw="Returns statistics about a type library that are required for efficient sizing of hash tables.">Restituisce statistiche su una libreria dei tipi richieste per l'efficiente dimensionamento di tabelle hash.</summary>
      <param name="pcUniqueNames" vsli:raw="A pointer to a count of unique names. If the caller does not need this information, set to &lt;see langword=&quot;null&quot; /&gt;.">Puntatore a un conteggio di nomi univoci. Se il chiamante non necessita di queste informazioni, impostare su <see langword="null" />.</param>
      <param name="pcchUniqueNames" vsli:raw="When this method returns, contains a pointer to a change in the count of unique names. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un puntatore a una modifica nel conteggio di nomi univoci. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Enables a client compiler to bind to a library's types, variables, constants, and global functions.">Consente a un compilatore client di effettuare l'associazione ai tipi, alle variabili, alle costanti e alle funzioni globali di una libreria.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeComp&quot; /&gt; instance for this &lt;see langword=&quot;ITypeLib&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un'istanza di <see langword="ITypeComp" /> per questo <see langword="ITypeLib" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the specified type description in the library.">Recupera la descrizione del tipo specificata nella libreria.</summary>
      <param name="index" vsli:raw="An index of the &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface to return.">Indice dell'interfaccia <see langword="ITypeInfo" /> da restituire.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeInfo&quot; /&gt; describing the type referenced by &lt;paramref name=&quot;index&quot; /&gt;. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un'interfaccia <see langword="ITypeInfo" /> che descrive il tipo a cui fa riferimento <paramref name="index" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Restituisce il numero delle descrizioni dei tipi nella libreria dei tipi.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Numero delle descrizioni dei tipi nella libreria dei tipi.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the type description that corresponds to the specified GUID.">Recupera la descrizione del tipo che corrisponde al GUID specificato.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt;, passed by reference, that represents the IID of the &lt;see langword=&quot;CLSID&quot; /&gt; interface of the class whose type info is requested.">Oggetto <see cref="T:System.Guid" />, passato per riferimento, che rappresenta l'IID dell'interfaccia <see langword="CLSID" /> della classe di cui sono richieste informazioni sul tipo.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains the requested &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface. This parameter is passed uninitialized.">Quando termina, questo metodo contiene l'interfaccia <see langword="ITypeInfo" /> richiesta. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Recupera il tipo di una descrizione del tipo.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Indice della descrizione dei tipi all'interno della libreria dei tipi.</param>
      <param name="pTKind" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="TYPEKIND" /> per la descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indica se una stringa passata contiene il nome di un tipo o di un membro descritto nella libreria.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">Stringa da testare.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Valore hash di <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="szNameBuf" /> viene trovato nella libreria dei tipi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; structure originally obtained from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt; method.">Libera la struttura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originariamente ottenuta dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; structure to release.">Struttura <see langword="TLIBATTR" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.LIBFLAGS">
      <summary vsli:raw="Defines flags that apply to type libraries.">Definisce i flag applicabili alle librerie dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FCONTROL">
      <summary vsli:raw="The type library describes controls and should not be displayed in type browsers intended for nonvisual objects.">La libreria dei tipi descrive i controlli e non deve essere visualizzata nei visualizzatori dei tipi destinati agli oggetti non visibili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHASDISKIMAGE">
      <summary vsli:raw="The type library exists in a persisted form on disk.">La libreria dei tipi viene mantenuta in modo persistente sul disco.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHIDDEN">
      <summary vsli:raw="The type library should not be displayed to users, although its use is not restricted. The type library should be used by controls. Hosts should create a new type library that wraps the control with extended properties.">La libreria dei tipi non deve essere visibile agli utenti, anche se l'utilizzo non è limitato. La libreria dei tipi deve essere utilizzata da controlli. Gli host devono creare una nuova libreria dei tipi che esegua il wrapping del controllo con proprietà estese.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FRESTRICTED">
      <summary vsli:raw="The type library is restricted, and should not be displayed to users.">L'utilizzo della libreria dei tipi è limitato e questa non deve essere visibile agli utenti.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMDESC">
      <summary vsli:raw="Contains information about how to transfer a structure element, parameter, or function return value between processes.">Contiene le informazioni su come eseguire il trasferimento di un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.lpVarValue">
      <summary vsli:raw="Represents a pointer to a value that is being passed between processes.">Rappresenta un puntatore a un valore passato da un processo a un altro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.wParamFlags">
      <summary vsli:raw="Represents bitmask values that describe the structure element, parameter, or return value.">Rappresenta valori bitmask che descrivono l'elemento strutturale, il parametro o il valore restituito.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMFLAG">
      <summary vsli:raw="Describes how to transfer a structure element, parameter, or function return value between processes.">Descrive come trasferire un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASCUSTDATA">
      <summary vsli:raw="The parameter has custom data.">Il parametro contiene dati personalizzati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASDEFAULT">
      <summary vsli:raw="The parameter has default behaviors defined.">Il parametro contiene comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FIN">
      <summary vsli:raw="The parameter passes information from the caller to the callee.">Il parametro passa informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FLCID">
      <summary vsli:raw="The parameter is the local identifier of a client application.">Il parametro è l'identificatore locale di un'applicazione client.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOPT">
      <summary vsli:raw="The parameter is optional.">Il parametro è facoltativo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOUT">
      <summary vsli:raw="The parameter returns information from the callee to the caller.">Il parametro restituisce informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FRETVAL">
      <summary vsli:raw="The parameter is the return value of the member.">Il parametro è il valore restituito del membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_NONE">
      <summary vsli:raw="Does not specify whether the parameter passes or receives information.">Non specifica se il parametro passa o riceve informazioni.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;STATDATA&quot; /&gt; structure.">Fornisce la definizione gestita della struttura <see langword="STATDATA" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ADVF&quot; /&gt; enumeration value that determines when the advisory sink is notified of changes in the data.">Rappresenta il valore di enumerazione di <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> che determina in quale momento il sink consultivo riceve la notifica delle modifiche apportate ai dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IAdviseSink&quot; /&gt; interface that will receive change notifications.">Rappresenta l'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> che riceverà le notifiche delle modifiche.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary vsli:raw="Represents the token that uniquely identifies the advisory connection. This token is returned by the method that sets up the advisory connection.">Rappresenta il token che identifica in modo univoco la connessione consultiva. Questo token viene restituito dal metodo che imposta la connessione consultiva.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure for the data of interest to the advise sink. The advise sink receives notification of changes to the data specified by this &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure.">Rappresenta la struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> per i dati di interesse per il sink di notifica. Il sink di notifica riceve la notifica delle modifiche apportate ai dati specificati da questa struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATSTG">
      <summary vsli:raw="Contains statistical information about an open storage, stream, or byte-array object.">Contiene informazioni statistiche su un oggetto aperto di un'archiviazione, un flusso o una matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.atime">
      <summary vsli:raw="Specifies the last access time for this storage, stream, or byte array.">Specifica l'ora dell'ultimo accesso di questa archiviazione, flusso o matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.cbSize">
      <summary vsli:raw="Specifies the size, in bytes, of the stream or byte array.">Specifica la dimensione in byte del flusso o della matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.clsid">
      <summary vsli:raw="Indicates the class identifier for the storage object.">Indica l'identificatore di classe per l'oggetto di archiviazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.ctime">
      <summary vsli:raw="Indicates the creation time for this storage, stream, or byte array.">Indica l'ora di creazione di questo archivio, flusso o matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfLocksSupported">
      <summary vsli:raw="Indicates the types of region locking supported by the stream or byte array.">Indica i tipi di blocco di area supportati dal flusso o dalla matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfMode">
      <summary vsli:raw="Indicates the access mode that was specified when the object was opened.">Indica la modalità di accesso specificata quando l'oggetto è stato aperto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfStateBits">
      <summary vsli:raw="Indicates the current state bits of the storage object (the value most recently set by the &lt;see langword=&quot;IStorage::SetStateBits&quot; /&gt; method).">Indica i bit di stato correnti dell'oggetto di archiviazione (il valore impostato più di recente dal metodo <see langword="IStorage::SetStateBits" />).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.mtime">
      <summary vsli:raw="Indicates the last modification time for this storage, stream, or byte array.">Indica l'ora dell'ultima modifica di questo archivio, flusso o matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.pwcsName">
      <summary vsli:raw="Represents a pointer to a null-terminated string containing the name of the object described by this structure.">Rappresenta un puntatore a una stringa con terminazione null contenente il nome dell'oggetto descritto da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.reserved">
      <summary vsli:raw="Reserved for future use.">Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.type">
      <summary vsli:raw="Indicates the type of storage object, which is one of the values from the &lt;see langword=&quot;STGTY&quot; /&gt; enumeration.">Indica il tipo di oggetto di archiviazione che rappresenta uno dei valori dell'enumerazione di <see langword="STGTY" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;STGMEDIUM&quot; /&gt; structure.">Fornisce la definizione gestita della struttura <see langword="STGMEDIUM" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary vsli:raw="Represents a pointer to an interface instance that allows the sending process to control the way the storage is released when the receiving process calls the &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; function. If &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; uses default procedures to release the storage; otherwise, &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; uses the specified &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Rappresenta un puntatore a un'istanza di interfaccia che consente il controllo da parte del processo di invio della modalità di rilascio dell'archiviazione quando il processo ricevente chiama la funzione <see langword="ReleaseStgMedium" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, <see langword="ReleaseStgMedium" /> utilizza le routine predefinite per rilasciare l'archiviazione; in caso contrario <see langword="ReleaseStgMedium" /> utilizza l'interfaccia <see langword="IUnknown" /> specificata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary vsli:raw="Specifies the type of storage medium. The marshaling and unmarshaling routines use this value to determine which union member was used. This value must be one of the elements of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; enumeration.">Specifica il tipo di supporto di archiviazione. Nelle routine di marshaling e unmarshaling questo valore viene utilizzato per determinare quale membro di union è stato utilizzato. Questo valore deve essere uno degli elementi dell'enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary vsli:raw="Represents a handle, string, or interface pointer that the receiving process can use to access the data being transferred.">Rappresenta un handle, una stringa o un puntatore a interfaccia utilizzabile dal processo ricevente per accedere ai dati di cui è in corso il trasferimento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.SYSKIND">
      <summary vsli:raw="Identifies the target operating system platform.">Identifica la piattaforma del sistema operativo di destinazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_MAC">
      <summary vsli:raw="The target operating system for the type library is Apple Macintosh. By default, all data fields are aligned on even-byte boundaries.">Il sistema operativo di destinazione per la libreria dei tipi è Apple Macintosh. Per impostazione predefinita, tutti i campi dati sono allineati secondo limiti con byte pari.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN16">
      <summary vsli:raw="The target operating system for the type library is 16-bit Windows systems. By default, data fields are packed.">Il sistema operativo di destinazione per la libreria dei tipi è il sistema Windows a 16 bit. Per impostazione predefinita, i campi dati sono compressi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN32">
      <summary vsli:raw="The target operating system for the type library is 32-bit Windows systems. By default, data fields are naturally aligned (for example, 2-byte integers are aligned on even-byte boundaries; 4-byte integers are aligned on quad-word boundaries, and so on).">Il sistema operativo di destinazione per la libreria dei tipi è il sistema Windows a 32 bit. Per impostazione predefinita, i campi dati sono allineati naturalmente (gli interi a 2 byte, ad esempio, sono allineati secondo limiti a byte pari; gli interi a 4 byte sono allineati secondo limiti a quattro parole e così via).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN64">
      <summary vsli:raw="The target operating system for the type library is 64-bit Windows systems.">Il sistema operativo di destinazione per la libreria dei tipi è il sistema Windows a 64 bit.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;TYMED&quot; /&gt; structure.">Fornisce la definizione gestita della struttura <see langword="TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary vsli:raw="The storage medium is an enhanced metafile. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteEnhMetaFile&quot; /&gt; to delete the bitmap.">Il supporto di archiviazione è un enhanced metafile. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="DeleteEnhMetaFile" /> per eliminare la bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary vsli:raw="The storage medium is a disk file identified by a path. If the &lt;see langword=&quot;STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;OpenFile&quot; /&gt; to delete the file.">Il supporto di archiviazione è un file su disco identificato da un percorso. Se il membro <see langword="STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="OpenFile" /> per eliminare il file.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary vsli:raw="The storage medium is a Graphics Device Interface (GDI) component (HBITMAP). If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteObject&quot; /&gt; to delete the bitmap.">Il supporto di archiviazione è un componente GDI (Graphics Device Interface, HBITMAP). Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="DeleteObject" /> per eliminare la bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary vsli:raw="The storage medium is a global memory handle (HGLOBAL). Allocate the global handle with the GMEM_SHARE flag. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;GlobalFree&quot; /&gt; to release the memory.">Il supporto di archiviazione è un handle di memoria globale (HGLOBAL). Allocare il flag GMEM_SHARE all'handle globale. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="GlobalFree" /> per rilasciare la memoria.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary vsli:raw="The storage medium is a storage component identified by an &lt;see langword=&quot;IStorage&quot; /&gt; pointer. The data is in the streams and storages contained by this &lt;see langword=&quot;IStorage&quot; /&gt; instance. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is not &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;IStorage::Release&quot; /&gt; to release the storage component.">Il supporto di archiviazione è un componente di archiviazione identificato da un puntatore <see langword="IStorage" />. I dati si trovano nei flussi e negli archivi contenuti da questa istanza di <see langword="IStorage" />. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> non è <see langword="null" />, il processo di destinazione deve usare <see langword="IStorage::Release" /> per rilasciare il componente di archiviazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary vsli:raw="The storage medium is a stream object identified by an &lt;see langword=&quot;IStream&quot; /&gt; pointer. Use &lt;see langword=&quot;ISequentialStream::Read&quot; /&gt; to read the data. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is not &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;IStream::Release&quot; /&gt; to release the stream component.">Il supporto di archiviazione è un oggetto di flusso identificato da un puntatore <see langword="IStream" />. Utilizzare <see langword="ISequentialStream::Read" /> per leggere i dati. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> non è <see langword="null" />, il processo di destinazione deve usare <see langword="IStream::Release" /> per rilasciare il componente di flusso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary vsli:raw="The storage medium is a metafile (HMETAFILE). Use the Windows or WIN32 functions to access the metafile's data. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteMetaFile&quot; /&gt; to delete the bitmap.">Il supporto di archiviazione è un metafile (HMETAFILE). Utilizzare le funzioni Windows o WIN32 per accedere ai dati del metafile. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="DeleteMetaFile" /> per eliminare la bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary vsli:raw="No data is being passed.">Non vengono passati dati.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEATTR">
      <summary vsli:raw="Contains attributes of a &lt;see langword=&quot;UCOMITypeInfo&quot; /&gt;.">Contiene gli attributi di un <see langword="UCOMITypeInfo" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbAlignment">
      <summary vsli:raw="Specifies the byte alignment for an instance of this type.">Specifica l'allineamento dei byte per un'istanza di questo tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeInstance">
      <summary vsli:raw="The size of an instance of this type.">Dimensione di un'istanza di questo tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeVft">
      <summary vsli:raw="The size of this type's virtual method table (VTBL).">Dimensione della tabella del metodo virtual (VTBL) di questo tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cFuncs">
      <summary vsli:raw="Indicates the number of functions on the interface this structure describes.">Indica il numero delle funzioni sull'interfaccia descritta da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cImplTypes">
      <summary vsli:raw="Indicates the number of implemented interfaces on the interface this structure describes.">Indica il numero delle interfacce implementate sull'interfaccia descritta da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cVars">
      <summary vsli:raw="Indicates the number of variables and data fields on the interface described by this structure.">Indica il numero delle variabili e dei campi dati sull'interfaccia descritta da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.dwReserved">
      <summary vsli:raw="Reserved for future use.">Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.guid">
      <summary vsli:raw="The GUID of the type information.">GUID delle informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.idldescType">
      <summary vsli:raw="IDL attributes of the described type.">Attributi IDL del tipo descritto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lcid">
      <summary vsli:raw="Locale of member names and documentation strings.">Impostazioni locali dei nomi dei membri e delle stringhe della documentazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lpstrSchema">
      <summary vsli:raw="Reserved for future use.">Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.MEMBER_ID_NIL">
      <summary vsli:raw="A constant used with the &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.memidConstructor&quot; /&gt; and &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.memidDestructor&quot; /&gt; fields.">Costante utilizzata con i campi <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidConstructor" /> e <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidDestructor" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidConstructor">
      <summary vsli:raw="ID of constructor, or &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL&quot; /&gt; if none.">ID del costruttore oppure <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" /> se non ne esiste nessuno.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidDestructor">
      <summary vsli:raw="ID of destructor, or &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL&quot; /&gt; if none.">ID del distruttore oppure <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" /> se non ne esiste nessuno.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.tdescAlias">
      <summary vsli:raw="If &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.typekind&quot; /&gt; == &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS&quot; /&gt;, specifies the type for which this type is an alias.">Se <see cref="F:System.Runtime.InteropServices.TYPEATTR.typekind" /> == <see cref="F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS" />, specifica il tipo per il quale questo tipo è un alias.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.typekind">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEKIND&quot; /&gt; value describing the type this information describes.">Valore di <see cref="T:System.Runtime.InteropServices.TYPEKIND" /> che descrive il tipo descritto da queste informazioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMajorVerNum">
      <summary vsli:raw="Major version number.">Numero di versione principale.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMinorVerNum">
      <summary vsli:raw="Minor version number.">Numero di versione secondario.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wTypeFlags">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; value describing this information.">Valore di <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> che descrive queste informazioni.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEDESC">
      <summary vsli:raw="Describes the type of a variable, return type of a function, or the type of a function parameter.">Descrive il tipo di una variabile, il tipo restituito di una funzione o il tipo di un parametro di funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.lpValue">
      <summary vsli:raw="If the variable is &lt;see langword=&quot;VT_SAFEARRAY&quot; /&gt; or &lt;see langword=&quot;VT_PTR&quot; /&gt;, the &lt;see langword=&quot;lpValue&quot; /&gt; field contains a pointer to a &lt;see langword=&quot;TYPEDESC&quot; /&gt; that specifies the element type.">Se la variabile è <see langword="VT_SAFEARRAY" /> oppure <see langword="VT_PTR" />, il campo <see langword="lpValue" /> conterrà un puntatore a un oggetto <see langword="TYPEDESC" /> che specifica il tipo di elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.vt">
      <summary vsli:raw="Indicates the variant type for the item described by this &lt;see langword=&quot;TYPEDESC&quot; /&gt;.">Indica il tipo Variant per l'elemento descritto da questo <see langword="TYPEDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEFLAGS">
      <summary vsli:raw="Defines the properties and attributes of a type description.">Definisce le proprietà e gli attributi della descrizione di un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAGGREGATABLE">
      <summary vsli:raw="The class supports aggregation.">La classe supporta l'aggregazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAPPOBJECT">
      <summary vsli:raw="A type description that describes an &lt;see langword=&quot;Application&quot; /&gt; object.">Descrizione di tipo relativa a un oggetto <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCANCREATE">
      <summary vsli:raw="Instances of the type can be created by &lt;see langword=&quot;ITypeInfo::CreateInstance&quot; /&gt;.">Le istanze del tipo possono essere create da <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCONTROL">
      <summary vsli:raw="The type is a control from which other types will be derived and should not be displayed to users.">Il tipo è un controllo da cui saranno derivati altri tipi e non deve essere visibile agli utenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDISPATCHABLE">
      <summary vsli:raw="Indicates that the interface derives from &lt;see langword=&quot;IDispatch&quot; /&gt;, either directly or indirectly. This flag is computed; there is no Object Description Language for the flag.">Indica che l'interfaccia deriva da <see langword="IDispatch" />, direttamente o indirettamente. Il flag viene calcolato; pertanto non esiste alcun ODL (Object Description Language) per il flag.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDUAL">
      <summary vsli:raw="The interface supplies both &lt;see langword=&quot;IDispatch&quot; /&gt; and VTBL binding.">L'interfaccia fornisce l'associazione a <see langword="IDispatch" /> e a VTBL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FHIDDEN">
      <summary vsli:raw="The type should not be displayed to browsers.">Il tipo non deve essere visibile ai visualizzatori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FLICENSED">
      <summary vsli:raw="The type is licensed.">Il tipo è concesso in licenza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FNONEXTENSIBLE">
      <summary vsli:raw="The interface cannot add members at run time.">L'interfaccia non può aggiungere membri in fase di esecuzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FOLEAUTOMATION">
      <summary vsli:raw="The types used in the interface are fully compatible with Automation, including VTBL binding support. Setting dual on an interface sets both this flag and the  &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL&quot; /&gt;. This flag is not allowed on dispinterfaces.">I tipi utilizzati nell'interfaccia sono completamente compatibili con l'automazione, compreso il supporto per l'associazione VTBL. Se un'interfaccia viene impostata come duale, vengono impostati questo flag e <see cref="F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL" />. Questo flag non è consentito su interfacce dispatch.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPREDECLID">
      <summary vsli:raw="The type is predefined. The client application should automatically create a single instance of the object that has this attribute. The name of the variable that points to the object is the same as the class name of the object.">Tipo già definito. È necessario che nell'applicazione client venga creata automaticamente una singola istanza dell'oggetto che contiene questo attributo. Il nome della variabile che punta all'oggetto corrisponde a quello della classe dell'oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPROXY">
      <summary vsli:raw="Indicates that the interface will be using a proxy/stub dynamic link library. This flag specifies that the type library proxy should not be unregistered when the type library is unregistered.">Indica che l'interfaccia utilizzerà una libreria a collegamento dinamico proxy/stub. Il flag specifica che la registrazione del proxy della libreria dei tipi non deve essere annullata quando viene annullata la registrazione della libreria dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREPLACEABLE">
      <summary vsli:raw="The object supports &lt;see langword=&quot;IConnectionPointWithDefault&quot; /&gt;, and has default behaviors.">L'oggetto supporta <see langword="IConnectionPointWithDefault" /> e dispone di comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FRESTRICTED">
      <summary vsli:raw="Should not be accessible from macro languages. This flag is intended for system-level types or types that type browsers should not display.">Non deve essere accessibile dai linguaggi macro. Il flag viene utilizzato per i tipi a livello di sistema o che non devono essere visualizzati dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREVERSEBIND">
      <summary vsli:raw="Indicates base interfaces should be checked for name resolution before checking children, which is the reverse of the default behavior.">Indica che la risoluzione dei nomi delle interfacce di base deve essere verificata prima di verificare gli elementi figlio, ovvero il contrario del comportamento predefinito.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEKIND">
      <summary vsli:raw="Specifies various types of data and functions.">Specifica vari tipi di dati e funzioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ALIAS">
      <summary vsli:raw="A type that is an alias for another type.">Tipo che costituisce un alias per un altro tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_COCLASS">
      <summary vsli:raw="A set of implemented components interfaces.">Insieme di interfacce di componenti implementate.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_DISPATCH">
      <summary vsli:raw="A set of methods and properties that are accessible through &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;. By default, dual interfaces return &lt;see langword=&quot;TKIND_DISPATCH&quot; /&gt;.">Insieme di metodi e proprietà accessibili mediante <see langword="IDispatch::Invoke" />. Per impostazione predefinita, le interfacce duali restituiscono <see langword="TKIND_DISPATCH" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ENUM">
      <summary vsli:raw="A set of enumerators.">Insieme di enumeratori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_INTERFACE">
      <summary vsli:raw="A type that has virtual functions, all of which are pure.">Tipo con funzioni virtual, che sono tutte pure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MAX">
      <summary vsli:raw="End-of-enumeration marker.">Marcatore di fine numerazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MODULE">
      <summary vsli:raw="A module that can have only static functions and data (for example, a DLL).">Modulo che può avere solo dati e funzioni static (ad esempio, una DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_RECORD">
      <summary vsli:raw="A structure with no methods.">Struttura senza metodi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_UNION">
      <summary vsli:raw="A union of all members that have an offset of zero.">Unione di tutti i membri con offset zero.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPELIBATTR">
      <summary vsli:raw="Identifies a particular type library and provides localization support for member names.">Identifica una particolare libreria dei tipi e fornisce il supporto della localizzazione per i nomi dei membri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.guid">
      <summary vsli:raw="Represents a globally unique library ID of a type library.">Rappresenta un ID di libreria univoco globale per una libreria di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.lcid">
      <summary vsli:raw="Represents a locale ID of a type library.">Rappresenta un ID delle impostazioni locali di una libreria di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.syskind">
      <summary vsli:raw="Represents the target hardware platform of a type library.">Rappresenta la piattaforma hardware di destinazione di una libreria di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wLibFlags">
      <summary vsli:raw="Represents library flags.">Rappresenta flag di librerie.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMajorVerNum">
      <summary vsli:raw="Represents the major version number of a type library.">Rappresenta il numero di versione principale di una libreria dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMinorVerNum">
      <summary vsli:raw="Represents the minor version number of a type library.">Rappresenta il numero di versione secondario di una libreria dei tipi.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC">
      <summary vsli:raw="Describes a variable, constant, or data member.">Descrive una variabile, una costante o un membro dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.desc">
      <summary vsli:raw="Contains information about a variable.">Contiene le informazioni su una variabile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION">
      <summary vsli:raw="Contains information about a variable.">Contiene le informazioni su una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue">
      <summary vsli:raw="Describes a symbolic constant.">Descrive una costante simbolica.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst">
      <summary vsli:raw="Indicates the offset of this variable within the instance.">Indica l'offset della variabile all'interno dell'istanza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.elemdescVar">
      <summary vsli:raw="Contains the variable type.">Contiene il tipo della variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.lpstrSchema">
      <summary vsli:raw="This field is reserved for future use.">Questo campo è riservato per un utilizzo futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.memid">
      <summary vsli:raw="Indicates the member ID of a variable.">Indica l'ID del membro di una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.varkind">
      <summary vsli:raw="Defines how to marshal a variable.">Definisce la modalità di marshalling di una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.wVarFlags">
      <summary vsli:raw="Defines the properties of a variable.">Definisce le proprietà di una variabile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARFLAGS">
      <summary vsli:raw="Identifies the constants that define the properties of a variable.">Identifica le costanti che definiscono le proprietà di una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FBINDABLE">
      <summary vsli:raw="The variable supports data binding.">La variabile supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTBIND">
      <summary vsli:raw="The variable is the single property that best represents the object. Only one variable in type information can have this attribute.">La variabile è la singola proprietà che meglio rappresenta l'oggetto. Solo una variabile nelle informazioni sul tipo può disporre di questo attributo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type of &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.">Consente un'ottimizzazione nella quale il compilatore ricerca un membro denominato "xyz" sul tipo di "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione della funzione di accesso per un elemento dell'insieme predefinito, verrà generata una chiamata alla funzione di tale membro. È consentito sui membri nelle interfacce dispatch e nelle interfacce, ma non sui moduli.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDISPLAYBIND">
      <summary vsli:raw="The variable is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE&quot; /&gt; must also be set.">Variabile che viene visualizzata dall'utente come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FHIDDEN">
      <summary vsli:raw="The variable should not be displayed to the user in a browser, although it exists and is bindable.">La variabile non deve essere visualizzata all'utente in un visualizzatore, anche se esiste ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
      <summary vsli:raw="The variable is mapped as individual bindable properties.">La variabile viene mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FNONBROWSABLE">
      <summary vsli:raw="The variable appears in an object browser, but not in a properties browser.">La variabile viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREADONLY">
      <summary vsli:raw="Assignment to the variable should not be allowed.">L'assegnazione alla variabile non deve essere consentita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREPLACEABLE">
      <summary vsli:raw="Tags the interface as having default behaviors.">Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREQUESTEDIT">
      <summary vsli:raw="When set, any attempt to directly change the property results in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;. The implementation of &lt;see langword=&quot;OnRequestEdit&quot; /&gt; determines if the change is accepted.">Quando è impostata, qualunque tentativo di modifica diretta della proprietà genererà una chiamata a <see langword="IPropertyNotifySink::OnRequestEdit" />. L'accettazione della modifica dipende dall'implementazione di <see langword="OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FRESTRICTED">
      <summary vsli:raw="The variable should not be accessible from macro languages. This flag is intended for system-level variables or variables that you do not want type browsers to display.">La variabile non deve essere accessibile dai linguaggi macro. Il flag è destinato alle variabili a livello di sistema o alle variabili che non devono essere visualizzate dai visualizzatori di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FSOURCE">
      <summary vsli:raw="The variable returns an object that is a source of events.">La variabile restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FUIDEFAULT">
      <summary vsli:raw="The variable is the default display in the user interface.">La variabile è la visualizzazione predefinita nell'interfaccia utente.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARKIND">
      <summary vsli:raw="Defines the kind of variable.">Definisce il tipo di variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_CONST">
      <summary vsli:raw="The &lt;see langword=&quot;VARDESC&quot; /&gt; structure describes a symbolic constant. There is no memory associated with it.">La struttura <see langword="VARDESC" /> descrive una costante simbolica. Non vi è memoria associata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_DISPATCH">
      <summary vsli:raw="The variable can be accessed only through &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">La variabile è accessibile solo mediante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_PERINSTANCE">
      <summary vsli:raw="The variable is a field or member of the type. It exists at a fixed offset within each instance of the type.">La variabile è un campo o un membro del tipo. È presente in corrispondenza di un offset fisso all'interno di ciascuna istanza del tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_STATIC">
      <summary vsli:raw="There is only one instance of the variable.">Esiste una sola istanza della variabile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
      <summary vsli:raw="Specifies the method to call when you unregister an assembly for use from COM; this allows for the execution of user-written code during the unregistration process.">Specifica il metodo da chiamare quando si annulla la registrazione di un assembly per l'utilizzo in COM; questo metodo consente l'esecuzione di codice scritto dall'utente durante la procedura di annullamento della registrazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComUnregisterFunctionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CurrencyWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_CY&quot; /&gt;.">Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_CY" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CurrencyWrapper&quot; /&gt; class with the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" /> con il valore <see langword="Decimal" /> di cui eseguire il wrapping e da trasformare e sottoporre a marshalling come tipo <see langword="VT_CY" />.</summary>
      <param name="obj" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as &lt;see langword=&quot;VT_CY&quot; /&gt;.">Valore <see langword="Decimal" /> di cui eseguire il wrapping e da sottoporre a marshalling come <see langword="VT_CY" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CurrencyWrapper&quot; /&gt; class with the object containing the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" /> con l'oggetto contenente il valore <see langword="Decimal" /> di cui eseguire il wrapping e da sottoporre a marshalling come tipo <see langword="VT_CY" />.</summary>
      <param name="obj" vsli:raw="The object containing the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as &lt;see langword=&quot;VT_CY&quot; /&gt;.">Oggetto contenente il valore <see langword="Decimal" /> di cui eseguire il wrapping e da sottoporre a marshalling come <see langword="VT_CY" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; type.">Il parametro <paramref name="obj" /> non è di tipo <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject">
      <summary vsli:raw="Gets the wrapped object to be marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Ottiene l'oggetto di cui è stato eseguito il wrapping, da sottoporre a marshalling come tipo <see langword="VT_CY" />.</summary>
      <returns vsli:raw="The wrapped object to be marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Oggetto di cui è stato eseguito il wrapping, da sottoporre a marshalling come tipo <see langword="VT_CY" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceMode">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)&quot; /&gt; method's IUnknown::QueryInterface calls can use the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface.">Indica se le chiamate del metodo <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> di tipo IUnknown::QueryInterface possono usare l'interfaccia <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Allow">
      <summary vsli:raw="IUnknown::QueryInterface method calls can use the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface. When you use this value, the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)&quot; /&gt; method overload functions like the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)&quot; /&gt; overload.">Le chiamate del metodo IUnknown::QueryInterface possono usare l'interfaccia <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />. Quando si utilizza questo valore, le funzioni di overload del metodo <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> preferiscono l'overload <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Ignore">
      <summary vsli:raw="IUnknown::QueryInterface method calls should ignore the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface.">Le chiamate del metodo IUnknown::QueryInterface dovrebbero ignorare l'interfaccia <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceResult">
      <summary vsli:raw="Provides return values for the &lt;see cref=&quot;M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)&quot; /&gt; method.">Fornisce i valori restituiti dal metodo <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Failed">
      <summary vsli:raw="The interface for a specific interface ID is not available. In this case, the returned interface is &lt;see langword=&quot;null&quot; /&gt;. E_NOINTERFACE is returned to the caller of IUnknown::QueryInterface.">L'interfaccia per un ID di interfaccia specifico non è disponibile. In questo caso l'interfaccia restituita è <see langword="null" />. E_NOINTERFACE viene restituito al chiamante di IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled">
      <summary vsli:raw="The interface pointer that is returned from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)&quot; /&gt; method can be used as the result of IUnknown::QueryInterface.">Il puntatore a interfaccia restituito dal metodo <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" /> può essere usato come risultato di IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled">
      <summary vsli:raw="The custom &lt;see langword=&quot;QueryInterface&quot; /&gt; was not used. Instead, the default implementation of IUnknown::QueryInterface should be used.">La <see langword="QueryInterface" /> personalizzata non è stata utilizzata. Al contrario, deve essere usata l'implementazione predefinita di IUnknown::QueryInterface.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultCharSetAttribute">
      <summary vsli:raw="Specifies the value of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; enumeration. This class cannot be inherited.">Specifica il valore dell'enumerazione <see cref="T:System.Runtime.InteropServices.CharSet" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultCharSetAttribute.#ctor(System.Runtime.InteropServices.CharSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultCharSetAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; value.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DefaultCharSetAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.CharSet" /> specificato.</summary>
      <param name="charSet" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; values.">Uno dei valori di <see cref="T:System.Runtime.InteropServices.CharSet" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultCharSetAttribute.CharSet">
      <summary vsli:raw="Gets the default value of &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; for any call to &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt;.">Ottiene il valore predefinito <see cref="T:System.Runtime.InteropServices.CharSet" /> per qualsiasi chiamata a <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</summary>
      <returns vsli:raw="The default value of &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; for any call to &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt;.">Valore predefinito <see cref="T:System.Runtime.InteropServices.CharSet" /> per qualsiasi chiamata a <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
      <summary vsli:raw="Specifies the paths that are used to search for DLLs that provide functions for platform invokes.">Specifica i percorsi utilizzati per individuare le DLL che forniscono le funzioni per i platform invoke.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; class, specifying the paths to use when searching for the targets of platform invokes.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />, specificando i percorsi da utilizzare nella ricerca delle destinazioni di platform invoke.</summary>
      <param name="paths" vsli:raw="A bitwise combination of enumeration values that specify the paths that the &lt;c&gt;LoadLibraryEx&lt;/c&gt; function searches during platform invokes.">Combinazione bit per bit dei valori di enumerazione che specificano i percorsi in cui la funzione <c>LoadLibraryEx</c> effettua la ricerca nelle operazioni di platform invoke.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
      <summary vsli:raw="Gets a bitwise combination of enumeration values that specify the paths that the &lt;c&gt;LoadLibraryEx&lt;/c&gt; function searches during platform invokes.">Ottiene una combinazione bit per bit dei valori di enumerazione che specificano i percorsi in cui la funzione <c>LoadLibraryEx</c> effettua la ricerca nelle operazioni di platform invoke.</summary>
      <returns vsli:raw="A bitwise combination of enumeration values that specify search paths for platform invokes.">Combinazione bit per bit dei valori di enumerazione che specificano i pInvoke.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary vsli:raw="Sets the default value of a parameter when called from a language that supports default parameters. This class cannot be inherited.">Imposta il valore predefinito di un parametro quando viene chiamato da un linguaggio che supporta parametri predefiniti. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultParameterValueAttribute&quot; /&gt; class with the default value of a parameter.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> con il valore predefinito di un parametro.</summary>
      <param name="value" vsli:raw="An object that represents the default value of a parameter.">Oggetto che rappresenta il valore predefinito di un parametro.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary vsli:raw="Gets the default value of a parameter.">Ottiene il valore predefinito di un parametro.</summary>
      <returns vsli:raw="An object that represents the default value of a parameter.">Oggetto che rappresenta il valore predefinito di un parametro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispatchWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_DISPATCH&quot; /&gt;.">Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_DISPATCH" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispatchWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt; class with the object being wrapped.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DispatchWrapper" /> con l'oggetto di cui è stato eseguito il wrapping.</summary>
      <param name="obj" vsli:raw="The object to be wrapped and converted to &lt;see cref=&quot;F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH&quot; /&gt;.">L'oggetto di cui è stato eseguito il wrapping e convertire in <see cref="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a class or an array.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;obj&quot; /&gt; does not support &lt;see langword=&quot;IDispatch&quot; /&gt;.">
        <paramref name="obj" /> non è una classe né una matrice.  
-oppure- 
 <paramref name="obj" /> non supporta <see langword="IDispatch" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter was marked with a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComVisibleAttribute&quot; /&gt; attribute that was passed a value of &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;obj&quot; /&gt; parameter inherits from a type marked with a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComVisibleAttribute&quot; /&gt; attribute that was passed a value of &lt;see langword=&quot;false&quot; /&gt;.">Il parametro <paramref name="obj" /> è contrassegnato con un attributo <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" /> al quale è stato passato il valore <see langword="false" />.  
-oppure- 
Il parametro <paramref name="obj" /> eredita da un tipo contrassegnato con un attributo <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" /> al quale è stato passato il valore <see langword="false" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject">
      <summary vsli:raw="Gets the object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;.">Ottiene l'oggetto di cui è stato eseguito il wrapping da <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</summary>
      <returns vsli:raw="The object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;.">L'oggetto di cui è stato eseguito il wrapping da <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispIdAttribute">
      <summary vsli:raw="Specifies the COM dispatch identifier (DISPID) of a method, field, or property.">Specifica l'identificatore di invio (DISPID) COM di un metodo, un campo o una proprietà.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispIdAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DispIdAttribute&quot; /&gt; class with the specified DISPID.">Inizializza una nuova istanza della classe <see langword="DispIdAttribute" /> con il DISPID specificato.</summary>
      <param name="dispId" vsli:raw="The DISPID for the member.">DISPID del membro.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DispIdAttribute.Value">
      <summary vsli:raw="Gets the DISPID for the member.">Ottiene il DISPID del membro.</summary>
      <returns vsli:raw="The DISPID for the member.">DISPID del membro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportAttribute">
      <summary vsli:raw="Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.">Indica che il metodo con attributi viene esposto da una libreria a collegamento dinamico (DLL) non gestita come punto di ingresso statico.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt; class with the name of the DLL containing the method to import.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> con il nome della DLL che contiene il metodo da importare.</summary>
      <param name="dllName" vsli:raw="The name of the DLL that contains the unmanaged method. In .NET Framework, this can include an assembly display name, if the DLL is included in an assembly.">Nome della DLL che contiene il metodo non gestito. Può includere il nome visualizzato di un assembly, se la DLL è inclusa in un assembly.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping">
      <summary vsli:raw="Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.">Abilita o disabilita il comportamento di mapping più appropriato per la conversione di caratteri Unicode in caratteri ANSI.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention">
      <summary vsli:raw="Indicates the calling convention of an entry point.">Indica la convenzione di chiamata di un punto di ingresso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CharSet">
      <summary vsli:raw="Indicates how to marshal string parameters to the method and controls name mangling.">Indica come eseguire il marshalling dei parametri di stringa nel metodo e controlla l'alterazione dei nomi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint">
      <summary vsli:raw="Indicates the name or ordinal of the DLL entry point to be called.">Indica il nome o l'ordinale del punto di ingresso DLL da chiamare.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling">
      <summary vsli:raw="Controls whether the &lt;see cref=&quot;F:System.Runtime.InteropServices.DllImportAttribute.CharSet&quot; /&gt; field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.">Controlla se il campo <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> fa in modo che Common Language Runtime cerchi in una DLL non gestita i nomi dei punti di ingresso diversi da quello specificato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig">
      <summary vsli:raw="Indicates whether unmanaged methods that have &lt;see langword=&quot;HRESULT&quot; /&gt; return values are directly translated or whether &lt;see langword=&quot;HRESULT&quot; /&gt; return values are automatically converted to exceptions.">Indica se i metodi non gestiti con valore restituito <see langword="HRESULT" /> o <see langword="retval" /> vengono convertiti direttamente o se il valore restituito <see langword="HRESULT" /> o <see langword="retval" /> viene convertito automaticamente in eccezioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError">
      <summary vsli:raw="Indicates whether the callee sets an error (&lt;see langword=&quot;SetLastError&quot; /&gt; on Windows or &lt;see langword=&quot;errno&quot; /&gt; on other platforms) before returning from the attributed method.">Indica se il destinatario della chiamata chiama la funzione API Windows <see langword="SetLastError" /> prima della restituzione di un risultato dal metodo con attributi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.">Abilita o disabilita la generazione di un'eccezione su un carattere Unicode di cui non è possibile eseguire il mapping convertito in un carattere ANSI "?".</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.DllImportAttribute.Value">
      <summary vsli:raw="Gets the name of the DLL file that contains the entry point.">Ottiene il nome del file DLL che contiene il punto di ingresso.</summary>
      <returns vsli:raw="The name of the DLL file that contains the entry point.">Nome del file DLL che contiene il punto di ingresso.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportResolver">
      <summary vsli:raw="Provides a delegate used to resolve native libraries via callback.">Specifica un delegato usato per risolvere le librerie native tramite callback.</summary>
      <param name="libraryName" vsli:raw="The native library to resolve.">Libreria nativa da risolvere.</param>
      <param name="assembly" vsli:raw="The assembly requesting the resolution.">Assembly che richiede la risoluzione.</param>
      <param name="searchPath" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; on the PInvoke, if any. Otherwise, the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; on the assembly, if any. Otherwise &lt;see langword=&quot;null&quot; /&gt;.">Eventuale <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> nel PInvoke. In caso contrario, eventuale <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> nell'assembly. In caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="The handle for the loaded native library on success, or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; on failure.">Handle per la libreria nativa caricata in caso di esito positivo o <see cref="F:System.IntPtr.Zero" /> in caso di esito negativo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportSearchPath">
      <summary vsli:raw="Specifies the paths that are used to search for DLLs that provide functions for platform invokes.">Specifica i percorsi utilizzati per individuare le DLL che forniscono le funzioni per i platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory">
      <summary vsli:raw="Include the application directory in the DLL search path.">Includere la directory dell'applicazione nel percorso di ricerca della DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory">
      <summary vsli:raw="When searching for assembly dependencies, include the directory that contains the assembly itself, and search that directory first. When used in Native AOT and single-file deployment models, the application's installation directory is considered the &quot;assembly directory&quot; and is searched.">Una volta cercate le dipendenze dell'assembly, includere la directory contenente l'assembly stesso e cercare tale directory per prima. Questo valore viene usato da .NET Framework, prima che i percorsi vengano passati alla funzione Win32 LoadLibraryEx.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior">
      <summary vsli:raw="Search the application directory, and then call the Win32 LoadLibraryEx function with the &lt;c&gt;LOAD_WITH_ALTERED_SEARCH_PATH&lt;/c&gt; flag. This value is ignored if any other value is specified. Operating systems that do not support the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; attribute use this value, and ignore other values.">Effettuare la ricerca nella directory dell'applicazione e quindi chiamare la funzione Win32 LoadLibraryEx con il flag <c>LOAD_WITH_ALTERED_SEARCH_PATH</c>. Questo valore viene ignorato se viene specificato qualsiasi altro valore. I sistemi operativi che non supportano l'attributo <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> utilizzano questo valore e ignorano gli altri valori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories">
      <summary vsli:raw="Include the application directory, the &lt;see langword=&quot;%WinDir%\System32&quot; /&gt; directory, and user directories in the DLL search path.">Includere la directory dell'applicazione, la directory <see langword="%WinDir%\System32" />, e le directory utente nel percorso di ricerca della DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.System32">
      <summary vsli:raw="Include the &lt;see langword=&quot;%WinDir%\System32&quot; /&gt; directory in the DLL search path.">Includere la directory <see langword="%WinDir%\System32" /> nel percorso di ricerca della DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies">
      <summary vsli:raw="Search for the dependencies of a DLL in the folder where the DLL is located before searching other folders.">Cercare le dipendenze di una DLL nella cartella in cui si trova la DLL prima di cercare in altre cartelle.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UserDirectories">
      <summary vsli:raw="Include any path that was explicitly added to the process-wide search path by using the Win32 &lt;c&gt;AddDllDirectory&lt;/c&gt; function.">Includere qualsiasi percorso aggiunto in modo esplicito al percorso di ricerca a livello di processo usando la funzione Win32 <c>AddDllDirectory</c>.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ErrorWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_ERROR&quot; /&gt;.">Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_ERROR" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with the HRESULT that corresponds to the exception supplied.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> con il valore HRESULT che corrisponde all'eccezione fornita.</summary>
      <param name="e" vsli:raw="The exception to be converted to an error code.">L'eccezione da convertire in codice di errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with the HRESULT of the error.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> con il valore HRESULT dell'errore.</summary>
      <param name="errorCode" vsli:raw="The HRESULT of the error.">Valore HRESULT dell'errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with an object containing the HRESULT of the error.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> con un oggetto contenente il valore HRESULT dell'errore.</summary>
      <param name="errorCode" vsli:raw="The object containing the HRESULT of the error.">L'oggetto contenente il valore HRESULT dell'errore.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;errorCode&quot; /&gt; parameter is not an &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">Il parametro <paramref name="errorCode" /> non è un tipo <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode">
      <summary vsli:raw="Gets the error code of the wrapper.">Ottiene il codice di errore del wrapper.</summary>
      <returns vsli:raw="The HRESULT of the error.">Valore HRESULT dell'errore.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.GuidAttribute">
      <summary vsli:raw="Supplies an explicit &lt;see cref=&quot;T:System.Guid&quot; /&gt; when an automatic GUID is undesirable.">Fornisce un oggetto <see cref="T:System.Guid" /> esplicito quando un GUID automatico non è auspicabile.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.GuidAttribute&quot; /&gt; class with the specified GUID.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.GuidAttribute" /> con il GUID specificato.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; to be assigned.">Oggetto <see cref="T:System.Guid" /> da assegnare.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.GuidAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Guid&quot; /&gt; of the class.">Ottiene l'oggetto <see cref="T:System.Guid" /> della classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; of the class.">Oggetto <see cref="T:System.Guid" /> della classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary vsli:raw="Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.">Tiene traccia degli handle in attesa e forza una procedura di Garbage Collection quando viene raggiunta la soglia specificata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; class using a name and a threshold at which to begin handle collection.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleCollector" /> utilizzando un nome e una soglia dopo la quale avviare la procedura di Garbage Collection per gli handle.</summary>
      <param name="name" vsli:raw="A name for the collector. This parameter allows you to name collectors that track handle types separately.">Nome per lo strumento di raccolta. Questo parametro consente di denominare gli strumenti di raccolta che tengono traccia dei tipi di handle in modo separato.</param>
      <param name="initialThreshold" vsli:raw="A value that specifies the point at which collections should begin.">Valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter is less than 0.">Il parametro <paramref name="initialThreshold" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleCollector" /> utilizzando un nome, una soglia dopo la quale avviare la procedura di Garbage Collection per gli handle e una soglia dopo la quale la procedura deve essere eseguita.</summary>
      <param name="name" vsli:raw="A name for the collector.  This parameter allows you to name collectors that track handle types separately.">Nome per lo strumento di raccolta.  Questo parametro consente di denominare gli strumenti di raccolta che tengono traccia dei tipi di handle in modo separato.</param>
      <param name="initialThreshold" vsli:raw="A value that specifies the point at which collections should begin.">Valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</param>
      <param name="maximumThreshold" vsli:raw="A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.">Valore che specifica il punto in cui devono essere eseguite le procedure di Garbage Collection. Questo valore deve essere impostato sul numero massimo di handle disponibili.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maximumThreshold&quot; /&gt; parameter is less than 0.">Il parametro <paramref name="initialThreshold" /> è minore di 0.  
-oppure- 
Il parametro <paramref name="maximumThreshold" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;maximumThreshold&quot; /&gt; parameter is less than the &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter.">Il parametro <paramref name="maximumThreshold" /> è minore del parametro <paramref name="initialThreshold" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary vsli:raw="Increments the current handle count.">Incrementa il numero corrente di handle.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Count&quot; /&gt; property is less than 0.">Il valore della proprietà <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> è minore di 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary vsli:raw="Gets the number of handles collected.">Ottiene il numero di handle raccolti.</summary>
      <returns vsli:raw="The number of handles collected.">Numero di handle raccolti.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary vsli:raw="Gets a value that specifies the point at which collections should begin.">Ottiene un valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</summary>
      <returns vsli:raw="A value that specifies the point at which collections should begin.">Valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary vsli:raw="Gets a value that specifies the point at which collections must occur.">Ottiene un valore che specifica il punto in cui devono essere eseguite le procedure di Garbage Collection.</summary>
      <returns vsli:raw="A value that specifies the point at which collections must occur.">Valore che specifica il punto in cui devono essere eseguite le procedure di Garbage Collection.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary vsli:raw="Gets the name of a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; object.">Ottiene il nome di un oggetto <see cref="T:System.Runtime.InteropServices.HandleCollector" />.</summary>
      <returns vsli:raw="This &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Name&quot; /&gt; property allows you to name collectors that track handle types separately.">Questa proprietà <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> consente di denominare gli strumenti di raccolta che tengono traccia dei tipi di handle in modo separato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary vsli:raw="Decrements the current handle count.">Decrementa il numero corrente di handle.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Count&quot; /&gt; property is less than 0.">Il valore della proprietà <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> è minore di 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleRef">
      <summary vsli:raw="Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.">Esegue il wrapping di un oggetto gestito che contiene un handle a una risorsa passata a un codice non gestito attraverso il platform invoke.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; class with the object to wrap and a handle to the resource used by unmanaged code.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleRef" /> con l'oggetto di cui eseguire il wrapping e un handle alla risorsa utilizzata dal codice non gestito.</summary>
      <param name="wrapper" vsli:raw="A managed object that should not be finalized until the platform invoke call returns.">Oggetto gestito che non deve essere finalizzato fino alla restituzione di un risultato da parte di platform invoke.</param>
      <param name="handle" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that indicates a handle to a resource.">Oggetto <see cref="T:System.IntPtr" /> che indica un handle a una risorsa.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Handle">
      <summary vsli:raw="Gets the handle to a resource.">Ottiene l'handle a una risorsa.</summary>
      <returns vsli:raw="The handle to a resource.">Handle a una risorsa.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
      <summary vsli:raw="Returns the handle to a resource of the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Restituisce l'handle a una risorsa dell'oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> specificato.</summary>
      <param name="value" vsli:raw="The object that needs a handle.">Oggetto che necessita di un handle.</param>
      <returns vsli:raw="The handle to a resource of the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Handle a una risorsa dell'oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> specificato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
      <summary vsli:raw="Returns the internal integer representation of a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Restituisce la rappresentazione interna come valori interi di un oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object to retrieve an internal integer representation from.">Oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> da recuperare in una rappresentazione interna di valori interi.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; object that represents a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Oggetto <see cref="T:System.IntPtr" /> che rappresenta un oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Wrapper">
      <summary vsli:raw="Gets the object holding the handle to a resource.">Ottiene l'oggetto che contiene l'handle a una risorsa.</summary>
      <returns vsli:raw="The object holding the handle to a resource.">Oggetto che contiene l'handle a una risorsa.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomAdapter">
      <summary vsli:raw="Provides a way for clients to access the actual object, rather than the adapter object handed out by a custom marshaler.">Fornisce un sistema con cui i client possono accedere all'oggetto effettivo, anziché all'oggetto adapter fornito da un gestore di marshalling personalizzato.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomAdapter.GetUnderlyingObject">
      <summary vsli:raw="Provides access to the underlying object wrapped by a custom marshaler.">Fornisce accesso all'oggetto sottostante di cui un gestore di marshalling personalizzato ha eseguito il wrapping.</summary>
      <returns vsli:raw="The object contained by the adapter object.">Oggetto contenuto dall'oggetto adattatore.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomFactory">
      <summary vsli:raw="Enables users to write activation code for managed objects that extend &lt;see cref=&quot;T:System.MarshalByRefObject&quot; /&gt;.">Consente agli utenti di scrivere il codice di attivazione per gli oggetti gestiti che estendono <see cref="T:System.MarshalByRefObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified type.">Crea una nuova istanza del tipo specificato.</summary>
      <param name="serverType" vsli:raw="The type to activate.">Il tipo da attivare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.MarshalByRefObject&quot; /&gt; associated with the specified type.">
        <see cref="T:System.MarshalByRefObject" /> associato al tipo specificato.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomMarshaler">
      <summary vsli:raw="Provides custom wrappers for handling method calls.">Fornisce wrapper personalizzati per la gestione delle chiamate a metodi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
      <summary vsli:raw="Performs necessary cleanup of the managed data when it is no longer needed.">Esegue la necessaria eliminazione dei dati gestiti quando non sono più necessari.</summary>
      <param name="ManagedObj" vsli:raw="The managed object to be destroyed.">L'oggetto gestito da distruggere.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary vsli:raw="Performs necessary cleanup of the unmanaged data when it is no longer needed.">Esegue la necessaria eliminazione dei dati non gestiti quando non sono più necessari.</summary>
      <param name="pNativeData" vsli:raw="A pointer to the unmanaged data to be destroyed.">Puntatore ai dati non gestiti da distruggere.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
      <summary vsli:raw="Returns the size of the native data to be marshaled.">Restituisce le dimensioni dei dati nativi di cui eseguire il marshalling.</summary>
      <returns vsli:raw="The size, in bytes, of the native data.">Dimensioni dei dati nativi, in byte.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
      <summary vsli:raw="Converts the managed data to unmanaged data.">Converte i dati gestiti in dati non gestiti.</summary>
      <param name="ManagedObj" vsli:raw="The managed object to be converted.">L'oggetto gestito da convertire.</param>
      <returns vsli:raw="A pointer to the COM view of the managed object.">Puntatore alla visualizzazione COM dell'oggetto gestito.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary vsli:raw="Converts the unmanaged data to managed data.">Converte i dati non gestiti in dati gestiti.</summary>
      <param name="pNativeData" vsli:raw="A pointer to the unmanaged data to be wrapped.">Puntatore ai dati non gestiti da trasformare.</param>
      <returns vsli:raw="An object that represents the managed view of the COM data.">Oggetto che rappresenta la visualizzazione gestita dei dati COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomQueryInterface">
      <summary vsli:raw="Enables developers to provide a custom, managed implementation of the IUnknown::QueryInterface(REFIID riid, void **ppvObject) method.">Consente agli sviluppatori di fornire un'implementazione gestita e personalizzata del metodo IUnknown::QueryInterface(REFIID riid, void **ppvObject).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)">
      <summary vsli:raw="Returns an interface according to a specified interface ID.">Restituisce un'interfaccia in base a un ID di interfaccia specificato.</summary>
      <param name="iid" vsli:raw="The GUID of the requested interface.">GUID dell'interfaccia richiesta.</param>
      <param name="ppv" vsli:raw="A reference to the requested interface, when this method returns.">Riferimento all'interfaccia richiesta, al completamento del metodo.</param>
      <returns vsli:raw="One of the enumeration values that indicates whether a custom implementation of IUnknown::QueryInterface was used.">Uno dei valori di enumerazione che indica se è stata usata un'implementazione personalizzata di IUnknown::QueryInterface.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
      <summary vsli:raw="Indicates that the types defined within an assembly were originally defined in a type library.">Indica che i tipi definiti all'interno di un assembly sono stati definiti in origine in una libreria dei tipi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute&quot; /&gt; class with the name of the original type library file.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute" /> con il nome del file originale della libreria dei tipi.</summary>
      <param name="tlbFile" vsli:raw="The location of the original type library file.">La posizione del file originale della libreria dei tipi.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.Value">
      <summary vsli:raw="Gets the name of the original type library file.">Ottiene il nome del file originale della libreria dei tipi.</summary>
      <returns vsli:raw="The name of the original type library file.">Il nome del file originale della libreria dei tipi.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InterfaceTypeAttribute">
      <summary vsli:raw="Indicates whether a managed interface is dual, dispatch-only, or &lt;see langword=&quot;IUnknown&quot; /&gt; -only when exposed to COM.">Indica se un'interfaccia gestita è del tipo dual, dispatch-only o solo <see langword="IUnknown" /> durante l'esposizione a COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InterfaceTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; enumeration member.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> specificato.</summary>
      <param name="interfaceType" vsli:raw="Describes how the interface should be exposed to COM clients.">Descrive come esporre l'interfaccia ai client COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InterfaceTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; enumeration member.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> specificato.</summary>
      <param name="interfaceType" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; values that describes how the interface should be exposed to COM clients.">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> che descrive come esporre l'interfaccia a client COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.InterfaceTypeAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; value that describes how the interface should be exposed to COM.">Ottiene il valore <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> che descrive come esporre l'interfaccia a COM.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; value that describes how the interface should be exposed to COM.">Il valore <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> che descrive come esporre l'interfaccia a COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidComObjectException">
      <summary vsli:raw="The exception thrown when an invalid COM object is used.">Eccezione generata quando si usa un oggetto COM non valido.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;InvalidComObjectException&quot; /&gt; with default properties.">Inizializza un'istanza della classe <see langword="InvalidComObjectException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;COMException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see langword="COMException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;InvalidComObjectException&quot; /&gt; with a message.">Inizializza un'istanza della classe <see langword="InvalidComObjectException" /> con un messaggio.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InvalidComObjectException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InvalidComObjectException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
      <summary vsli:raw="The exception thrown by the marshaler when it encounters an argument of a variant type that can not be marshaled to managed code.">L'eccezione generata dal gestore di marshalling quando rileva un argomento di un tipo Variant del quale non è possibile eseguire il marshalling nel codice gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class with default values.">Inizializza una nuova istanza della classe <see langword="InvalidOleVariantTypeException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see langword="InvalidOleVariantTypeException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class with a specified message.">Inizializza una nuova istanza della classe <see langword="InvalidOleVariantTypeException" /> con un messaggio specificato.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InvalidOleVariantTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.LCIDConversionAttribute">
      <summary vsli:raw="Indicates that a method's unmanaged signature expects a locale identifier (LCID) parameter.">Indica che la firma non gestita di un metodo prevede un parametro di ID impostazioni locali (LCID).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.LCIDConversionAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;LCIDConversionAttribute&quot; /&gt; class with the position of the LCID in the unmanaged signature.">Inizializza una nuova istanza della classe <see langword="LCIDConversionAttribute" /> con la posizione del LCID nella firma non gestita.</summary>
      <param name="lcid" vsli:raw="Indicates the position of the LCID argument in the unmanaged signature, where 0 is the first argument.">Indica la posizione dell'argomento LCID nella firma non gestita, dove 0 è il primo argomento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.LCIDConversionAttribute.Value">
      <summary vsli:raw="Gets the position of the LCID argument in the unmanaged signature.">Ottiene la posizione dell'argomento LCID nella firma non gestita.</summary>
      <returns vsli:raw="The position of the LCID argument in the unmanaged signature, where 0 is the first argument.">Posizione dell'argomento LCID nella firma non gestita, dove 0 è il primo argomento.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
      <summary vsli:raw="Provides support for user customization of interop stubs in managed-to-COM interop scenarios.">Fornisce supporto per la personalizzazione dell'utente di stub di interoperabilità negli scenari di interoperabilità da gestito a COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute&quot; /&gt; class with the specified class type and method name.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> con il nome di metodo e il tipo di classe specificati.</summary>
      <param name="classType" vsli:raw="The class that contains the required stub method.">Classe che contiene il metodo stub richiesto.</param>
      <param name="methodName" vsli:raw="The name of the stub method.">Nome del metodo stub.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;methodName&quot; /&gt; cannot be found.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method is not static or non-generic.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method's parameter list does not match the expected parameter list for the stub.">Non è possibile trovare l'oggetto <paramref name="methodName" />.  
-oppure- 
Il metodo non è statico o non generico.  
In alternativa 
L'elenco di parametri del metodo non corrisponde all'elenco di parametri previsto per lo stub.</exception>
      <exception cref="T:System.MethodAccessException" vsli:raw="The interface that contains the managed interop method has no access to the stub method, because the stub method has private or protected accessibility, or because of a security issue.">L'interfaccia che contiene il metodo di interoperabilità gestito non dispone di accesso al metodo stub, perché tale metodo dispone dell'accessibilità privata o protetta, o a causa di un problema di sicurezza.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType">
      <summary vsli:raw="Gets the class that contains the required stub method.">Ottiene la classe che contiene il metodo stub richiesto.</summary>
      <returns vsli:raw="The class that contains the customized interop stub.">Classe che contiene lo stub di interoperabilità personalizzato.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName">
      <summary vsli:raw="Gets the name of the stub method.">Ottiene il nome del metodo stub.</summary>
      <returns vsli:raw="The name of a customized interop stub.">Nome di uno stub di interoperabilità personalizzato.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Marshal">
      <summary vsli:raw="Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.">Fornisce una raccolta di metodi per l'allocazione della memoria non gestita, la copia di blocchi di memoria non gestita e la conversione di tipi gestiti in tipi non gestiti, oltre ad altri metodi usati durante l'interazione con codice non gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
      <summary vsli:raw="Increments the reference count on the specified interface.">Incrementa il numero di riferimenti nell'interfaccia specificata.</summary>
      <param name="pUnk" vsli:raw="The interface reference count to increment.">Numero di riferimenti nell'interfaccia da incrementare.</param>
      <returns vsli:raw="The new value of the reference count on the &lt;paramref name=&quot;pUnk&quot; /&gt; parameter.">Nuovo valore del conteggio dei riferimenti sul parametro <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
      <summary vsli:raw="Allocates a block of memory of specified size from the COM task memory allocator.">Alloca un blocco di memoria delle dimensioni specificate dall'allocatore di memoria delle attività COM.</summary>
      <param name="cb" vsli:raw="The size of the block of memory to be allocated.">Dimensioni del blocco di memoria da allocare.</param>
      <returns vsli:raw="An integer representing the address of the block of memory allocated. This memory must be released with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)&quot; /&gt;.">Intero che rappresenta l'indirizzo del blocco di memoria allocato. Questa memoria deve essere liberata con <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
      <summary vsli:raw="Allocates memory from the unmanaged memory of the process by using the specified number of bytes.">Alloca memoria dalla memoria non gestita del processo tramite il numero specificato di byte.</summary>
      <param name="cb" vsli:raw="The required number of bytes in memory.">Numero di byte necessari nella memoria.</param>
      <returns vsli:raw="A pointer to the newly allocated memory. This memory must be released using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt; method.">Puntatore alla memoria appena allocata. Questa memoria deve essere liberata usando il metodo <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
      <summary vsli:raw="Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.">Alloca memoria dalla memoria non gestita del processo tramite il puntatore al numero specificato di byte.</summary>
      <param name="cb" vsli:raw="The required number of bytes in memory.">Numero di byte necessari nella memoria.</param>
      <returns vsli:raw="A pointer to the newly allocated memory. This memory must be released using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt; method.">Puntatore alla memoria appena allocata. Questa memoria deve essere liberata usando il metodo <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
      <summary vsli:raw="Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.">Indica se Runtime Callable Wrapper (RCW) provenienti da qualsiasi contesto sono disponibili per la pulizia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any RCWs available for cleanup; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se sono disponibili RCW per la pulizia. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
      <summary vsli:raw="Gets an interface pointer identified by the specified moniker.">Ottiene un puntatore a interfaccia identificato dal moniker specificato.</summary>
      <param name="monikerName" vsli:raw="The moniker corresponding to the desired interface pointer.">Moniker corrispondente al puntatore a interfaccia desiderato.</param>
      <returns vsli:raw="An object containing a reference to the interface pointer identified by the &lt;paramref name=&quot;monikerName&quot; /&gt; parameter. A moniker is a name, and in this case, the moniker is defined by an interface.">Oggetto contenente un riferimento al puntatore a interfaccia identificato dal parametro <paramref name="monikerName" />. Un moniker è rappresentato da un nome; in questo caso il moniker è definito da un'interfaccia.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="An unrecognized HRESULT was returned by the unmanaged &lt;see langword=&quot;BindToMoniker&quot; /&gt; method.">Un HRESULT non riconosciuto è stato restituito dal metodo <see langword="BindToMoniker" /> non gestito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
      <summary vsli:raw="Changes the strength of an object's COM Callable Wrapper (CCW) handle.">Modifica la forza dell'handle COM Callable Wrapper (CCW) di un oggetto.</summary>
      <param name="otp" vsli:raw="The object whose CCW holds a reference counted handle. The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.">Oggetto il cui CCW contiene un handle con conteggio dei riferimenti. L'handle è forte se il conteggio dei riferimenti su CCW è maggiore di zero; in caso contrario, è debole.</param>
      <param name="fIsWeak" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to change the strength of the handle on the &lt;paramref name=&quot;otp&quot; /&gt; parameter to weak, regardless of its reference count; &lt;see langword=&quot;false&quot; /&gt; to reset the handle strength on &lt;paramref name=&quot;otp&quot; /&gt; to be reference counted.">
        <see langword="true" /> per impostare come debole l'handle sul parametro <paramref name="otp" />, indipendentemente dal numero di riferimenti, <see langword="false" /> per reimpostare la forza dell'handle su <paramref name="otp" /> per ottenere il numero di riferimenti.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
      <summary vsli:raw="Notifies the runtime to clean up all Runtime Callable Wrappers (RCWs) allocated in the current context.">Notifica al runtime di eseguire la pulizia di tutti i Runtime Callable Wrapper (RCW) allocati nel contesto corrente.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.">Copia i dati da una matrice di interi senza segno a 8 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.">Copia i dati da una matrice di caratteri gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.">Copia i dati da una matrice di numeri a virgola mobile a precisione doppia gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.">Copia i dati da una matrice di interi con segno a 16 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.">Copia i dati da una matrice di interi con segno a 32 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.">Copia i dati da una matrice di interi con segno a 64 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.">Copia i dati da un puntatore di memoria non gestita a una matrice di interi senza segno a 8 bit gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed character array.">Copia i dati da un puntatore di memoria non gestita a una matrice di caratteri gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.">Copia i dati da un puntatore di memoria non gestita a una matrice di numeri a virgola mobile a precisione doppia gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.">Copia i dati da un puntatore di memoria non gestita a una matrice di interi con segno a 16 bit gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.">Copia i dati da un puntatore di memoria non gestita a una matrice di interi con segno a 32 bit gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.">Copia i dati da un puntatore di memoria non gestita a una matrice di interi con segno a 64 bit gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; array.">Copia i dati da un puntatore di memoria non gestita a una matrice <see cref="T:System.IntPtr" /> gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.">Copia i dati da un puntatore di memoria non gestita a una matrice di numeri a virgola mobile a precisione singola gestita.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Puntatore di memoria da cui copiare.</param>
      <param name="destination" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; array to an unmanaged memory pointer.">Copia i dati da una matrice <see cref="T:System.IntPtr" /> unidimensionale gestita a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.">Copia i dati da una matrice di numeri a virgola mobile a precisione singola gestita unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Puntatore di memoria in cui copiare.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
      <summary vsli:raw="Aggregates a managed object with the specified COM object.">Aggrega un oggetto gestito all'oggetto COM specificato.</summary>
      <param name="pOuter" vsli:raw="The outer &lt;see langword=&quot;IUnknown&quot; /&gt; pointer.">Puntatore <see langword="IUnknown" /> esterno.</param>
      <param name="o" vsli:raw="An object to aggregate.">Oggetto da aggregare.</param>
      <returns vsli:raw="The inner &lt;see langword=&quot;IUnknown&quot; /&gt; pointer of the managed object.">Puntatore <see langword="IUnknown" /> interno dell'oggetto gestito.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is a Windows Runtime object.">
        <paramref name="o" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Aggregates a managed object of the specified type with the specified COM object.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Aggrega un oggetto gestito del tipo specificato con l'oggetto COM specificato.</summary>
      <param name="pOuter" vsli:raw="The outer IUnknown pointer.">Puntatore IUnknown esterno.</param>
      <param name="o" vsli:raw="The managed object to aggregate.">Oggetto gestito da aggregare.</param>
      <typeparam name="T" vsli:raw="The type of the managed object to aggregate.">Tipo dell'oggetto gestito da aggregare.</typeparam>
      <returns vsli:raw="The inner IUnknown pointer of the managed object.">Puntatore IUnknown interno dell'oggetto gestito.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is a Windows Runtime object.">
        <paramref name="o" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
      <summary vsli:raw="Wraps the specified COM object in an object of the specified type.">Include l'oggetto COM specificato in un oggetto del tipo specificato.</summary>
      <param name="o" vsli:raw="The object to be wrapped.">Oggetto da includere.</param>
      <param name="t" vsli:raw="The type of wrapper to create.">Tipo di wrapper da creare.</param>
      <returns vsli:raw="The newly wrapped object that is an instance of the desired type.">L'oggetto appena incluso che è un'istanza del tipo desiderato.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; must derive from &lt;see langword=&quot;__ComObject&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;t&quot; /&gt; is a Windows Runtime type.">
        <paramref name="t" /> deve derivare da <see langword="__ComObject" />.  
-oppure- 
 <paramref name="t" /> è un tipo Windows Runtime.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; cannot be converted to the destination type because it does not support all required interfaces.">Non è possibile convertire <paramref name="o" /> nel tipo di destinazione perché non supporta tutte le interfacce richieste.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Wraps the specified COM object in an object of the specified type.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Include l'oggetto COM specificato in un oggetto del tipo specificato.</summary>
      <param name="o" vsli:raw="The object to be wrapped.">Oggetto da includere.</param>
      <typeparam name="T" vsli:raw="The type of object to wrap.">Tipo di oggetto di cui eseguire il wrapping.</typeparam>
      <typeparam name="TWrapper" vsli:raw="The type of object to return.">Tipo di oggetto da restituire.</typeparam>
      <returns vsli:raw="The newly wrapped object.">Oggetto appena incluso.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;T&quot; /&gt; must derive from &lt;see langword=&quot;__ComObject&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;typeparamref name=&quot;T&quot; /&gt; is a Windows Runtime type.">
        <typeparamref name="T" /> deve derivare da <see langword="__ComObject" />.  
-oppure- 
 <typeparamref name="T" /> è un tipo Windows Runtime.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; cannot be converted to the &lt;paramref name=&quot;TWrapper&quot; /&gt; because it does not support all required interfaces.">
        <paramref name="o" /> non può essere convertito in <paramref name="TWrapper" /> perché non supporta tutte le interfacce richieste.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
      <summary vsli:raw="Frees all substructures that the specified unmanaged memory block points to.">Libera tutte le sottostrutture a cui punta il blocco di memoria non gestita specificato.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structuretype" vsli:raw="Type of a formatted class. This provides the layout information necessary to delete the buffer in the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Tipo di una classe formattata. Fornisce le informazioni di layout necessarie per eliminare il buffer o i buffer nel parametro <paramref name="ptr" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structureType&quot; /&gt; has an automatic layout. Use sequential or explicit instead.">
        <paramref name="structureType" /> dispone di un layout automatico. Utilizzare invece il layout sequenziale o esplicito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Frees all substructures of a specified type that the specified unmanaged memory block points to.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Libera tutte le sottostrutture di un tipo specificato a cui punta il blocco di memoria non gestita specificato.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Puntatore a un blocco di memoria non gestita.</param>
      <typeparam name="T" vsli:raw="The type of the formatted structure. This provides the layout information necessary to delete the buffer in the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Tipo della struttura formattata. Fornisce le informazioni di layout necessarie per eliminare il buffer o i buffer nel parametro <paramref name="ptr" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;T&quot; /&gt; has an automatic layout. Use sequential or explicit instead.">
        <typeparamref name="T" /> dispone di un layout automatico. Utilizzare invece il layout sequenziale o esplicito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
      <summary vsli:raw="Releases all references to a Runtime Callable Wrapper (RCW) by setting its reference count to 0.">Rilascia tutti i riferimenti a un Runtime Callable Wrapper (RCW) impostando il conteggio dei riferimenti su 0.</summary>
      <param name="o" vsli:raw="The RCW to be released.">Wrapper RCW da rilasciare.</param>
      <returns vsli:raw="The new value of the reference count of the RCW associated with the &lt;paramref name=&quot;o&quot; /&gt; parameter, which is 0 (zero) if the release is successful.">Nuovo valore del conteggio dei riferimenti del wrapper RCW associato al parametro <paramref name="o" />, corrispondente a 0 (zero) se il rilascio è stato eseguito correttamente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is not a valid COM object.">
        <paramref name="o" /> non è un oggetto COM valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
      <summary vsli:raw="Frees a &lt;see langword=&quot;BSTR&quot; /&gt; using the COM SysFreeString function.">Libera un <see langword="BSTR" /> usando la funzione COM SysFreeString.</summary>
      <param name="ptr" vsli:raw="The address of the BSTR to be freed.">Indirizzo del BSTR da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
      <summary vsli:raw="Frees a block of memory allocated by the unmanaged COM task memory allocator.">Libera un blocco di memoria assegnato dall'allocatore di memoria non gestita delle attività COM.</summary>
      <param name="ptr" vsli:raw="The address of the memory to be freed.">Indirizzo della memoria da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
      <summary vsli:raw="Frees memory previously allocated from the unmanaged memory of the process.">Libera la memoria precedentemente allocata dalla memoria non gestita del processo.</summary>
      <param name="hglobal" vsli:raw="The handle returned by the original matching call to &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">L'handle restituito dalla chiamata di corrispondenza originale a <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
      <summary vsli:raw="Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).">Restituisce il GUID (Globally Unique Identifier) del tipo specificato o genera un GUID mediante l'algoritmo usato da Type Library Exporter (Tlbexp.exe).</summary>
      <param name="type" vsli:raw="The type to generate a GUID for.">Tipo per il quale generare un GUID.</param>
      <returns vsli:raw="An identifier for the specified type.">Identificatore per il tipo specificato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
      <summary vsli:raw="Returns a programmatic identifier (ProgID) for the specified type.">Restituisce un ProgID (Programmatic Identifier) per il tipo specificato.</summary>
      <param name="type" vsli:raw="The type to get a ProgID for.">Tipo per il quale ottenere un ProgID.</param>
      <returns vsli:raw="The ProgID of the specified type.">ProgID del tipo specificato.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is not a class that can be create by COM. The class must be public, have a public parameterless constructor, and be COM visible.">Il parametro <paramref name="type" /> non è una classe che può essere creata da COM. La classe deve essere pubblica, avere di un costruttore senza parametri pubblico e deve essere visibile a COM.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
      <summary vsli:raw="Returns a pointer to an IUnknown interface that represents the specified interface on the specified object. Custom query interface access is enabled by default.">Restituisce un puntatore a un'interfaccia IUnknown che rappresenta l'interfaccia specificata sull'oggetto specificato. L'accesso all'interfaccia di query è abilitato per impostazione predefinita.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">Oggetto che fornisce l'interfaccia.</param>
      <param name="T" vsli:raw="The type of interface that is requested.">Tipo di interfaccia richiesto.</param>
      <returns vsli:raw="The interface pointer that represents the specified interface for the object.">Puntatore a interfaccia che rappresenta l'interfaccia specificata per l'oggetto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is a generic type definition.">Il parametro <typeparamref name="T" /> non è un'interfaccia.  
-oppure- 
Il tipo non è visibile a COM.  
-oppure- 
Il parametro <typeparamref name="T" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter does not support the requested interface.">Il parametro <paramref name="o" /> non supporta l'interfaccia richiesta.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="o" /> è <see langword="null" />.  
-oppure- 
Il valore del parametro <typeparamref name="T" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
      <summary vsli:raw="Returns a pointer to an IUnknown interface that represents the specified interface on the specified object. Custom query interface access is controlled by the specified customization mode.">Restituisce un puntatore a un'interfaccia IUnknown che rappresenta l'interfaccia specificata sull'oggetto specificato. L'accesso all'interfaccia di query personalizzato viene controllato dalla modalità della personalizzazione specificata.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">Oggetto che fornisce l'interfaccia.</param>
      <param name="T" vsli:raw="The type of interface that is requested.">Tipo di interfaccia richiesto.</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to apply an &lt;see langword=&quot;IUnknown::QueryInterface&quot; /&gt; customization that is supplied by an &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt;.">Uno dei valori di enumerazione che indica se applicare una personalizzazione <see langword="IUnknown::QueryInterface" /> fornita da un oggetto <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</param>
      <returns vsli:raw="The interface pointer that represents the interface for the object.">Puntatore a interfaccia che rappresenta l'interfaccia per l'oggetto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is a generic type definition.">Il parametro <typeparamref name="T" /> non è un'interfaccia.  
In alternativa 
Il tipo non è visibile a COM.  
-oppure- 
Il parametro <typeparamref name="T" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object &lt;paramref name=&quot;o&quot; /&gt; does not support the requested interface.">Il parametro <paramref name="o" /> dell'oggetto non supporta l'interfaccia richiesta.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="o" /> è <see langword="null" />.  
-oppure- 
Il valore del parametro <typeparamref name="T" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns a pointer to an IUnknown interface that represents the specified interface on an object of the specified type. Custom query interface access is enabled by default.">[Supportato in .NET Framework 4.5.1 e versioni successive] 
Restituisce un puntatore a un'interfaccia IUnknown che rappresenta l'interfaccia specificata sull'oggetto del tipo specificato. L'accesso all'interfaccia di query è abilitato per impostazione predefinita.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">Oggetto che fornisce l'interfaccia.</param>
      <typeparam name="T" vsli:raw="The type of &lt;paramref name=&quot;o&quot; /&gt;.">Tipo di <paramref name="o" />.</typeparam>
      <typeparam name="TInterface" vsli:raw="The type of interface to return.">Tipo di interfaccia da restituire.</typeparam>
      <returns vsli:raw="The interface pointer that represents the &lt;paramref name=&quot;TInterface&quot; /&gt; interface.">Puntatore a interfaccia che rappresenta l'interfaccia <paramref name="TInterface" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;TInterface&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is an open generic type.">Il parametro <paramref name="TInterface" /> non è un'interfaccia.  
In alternativa 
Il tipo non è visibile a COM.  
In alternativa 
Il parametro <typeparamref name="T" /> è un tipo generico aperto.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter does not support the &lt;paramref name=&quot;TInterface&quot; /&gt; interface.">Il parametro <paramref name="o" /> non supporta l'interfaccia <paramref name="TInterface" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
      <summary vsli:raw="Retrieves data that is referenced by the specified key from the specified COM object.">Recupera i dati ai quali fa riferimento la chiave specificata dall'oggetto COM specificato.</summary>
      <param name="obj" vsli:raw="The COM object that contains the data that you want.">Oggetto COM che contiene i dati desiderati.</param>
      <param name="key" vsli:raw="The key in the internal hash table of &lt;paramref name=&quot;obj&quot; /&gt; to retrieve the data from.">Chiave nella tabella hash interna di <paramref name="obj" /> da cui recuperare i dati.</param>
      <returns vsli:raw="The data represented by the &lt;paramref name=&quot;key&quot; /&gt; parameter in the internal hash table of the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Dati rappresentati dal parametro <paramref name="key" /> nella tabella hash interna del parametro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> è <see langword="null" />.  
-oppure- 
 <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a COM object.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;obj&quot; /&gt; is a Windows Runtime object.">
        <paramref name="obj" /> non è un oggetto COM.  
-oppure- 
 <paramref name="obj" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
      <summary vsli:raw="Converts an unmanaged function pointer to a delegate.">Converte un puntatore a funzione non gestito in un delegato.</summary>
      <param name="ptr" vsli:raw="The unmanaged function pointer to be converted.">Puntatore alla funzione non gestita da convertire.</param>
      <param name="t" vsli:raw="The type of the delegate to be returned.">Tipo di delegato da restituire.</param>
      <returns vsli:raw="A delegate instance that can be cast to the appropriate delegate type.">Istanza di delegato di cui è possibile eseguire il cast al tipo di delegato appropriato.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is not a delegate or is generic.">Il parametro <paramref name="t" /> non è un delegato o è generico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ptr&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an unmanaged function pointer to a delegate of a specified type.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Converte un puntatore a funzione non gestito in un delegato di un tipo specificato.</summary>
      <param name="ptr" vsli:raw="The unmanaged function pointer to convert.">Puntatore alla funzione non gestita da convertire.</param>
      <typeparam name="TDelegate" vsli:raw="The type of the delegate to return.">Tipo del delegato da restituire.</typeparam>
      <returns vsli:raw="A instance of the specified delegate type.">Istanza del tipo di delegato specificato.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;TDelegate&quot; /&gt; generic parameter is not a delegate, or it is an open generic type.">Il parametro generico <paramref name="TDelegate" /> non è un delegato oppure è un tipo generico aperto.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ptr&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="ptr" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
      <summary vsli:raw="Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.">Recupera l'ultimo slot della tabella della funzione virtuale (V-Table o VTBL) di un tipo quando è esposto a COM.</summary>
      <param name="t" vsli:raw="A type that represents an interface or class.">Tipo che rappresenta un'interfaccia o classe.</param>
      <returns vsli:raw="The last VTBL slot of the interface when exposed to COM. If the &lt;paramref name=&quot;t&quot; /&gt; parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.">Ultimo slot VTBL dell'interfaccia quando è esposto a COM. Se il parametro <paramref name="t" /> è una classe, lo slot VTBL restituito è l'ultimo slot nell'interfaccia generata dalla classe.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
      <summary vsli:raw="Retrieves a code that identifies the type of the exception that occurred.">Recupera un codice che identifica il tipo dell'eccezione che si è verificata.</summary>
      <returns vsli:raw="The type of the exception.">Tipo dell'eccezione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
      <summary vsli:raw="Converts the specified HRESULT error code to a corresponding &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">Converte il codice errore HRESULT specificato in un oggetto <see cref="T:System.Exception" /> corrispondente.</summary>
      <param name="errorCode" vsli:raw="The HRESULT to be converted.">Codice errore HRESULT da convertire.</param>
      <returns vsli:raw="An object that represents the converted HRESULT, or &lt;see langword=&quot;null&quot; /&gt; if the HRESULT value doesn't represent an error code (for example, &lt;see langword=&quot;S_OK&quot; /&gt; or &lt;see langword=&quot;S_FALSE&quot; /&gt;).">Oggetto che rappresenta il valore HRESULT convertito oppure <see langword="null" /> se il valore HRESULT non rappresenta un codice errore (ad esempio, <see langword="S_OK" /> o <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
      <summary vsli:raw="Converts the specified HRESULT error code to a corresponding &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, with additional error information passed in an IErrorInfo interface for the exception object.">Converte il codice di errore HRESULT specificato in un oggetto <see cref="T:System.Exception" /> corrispondente, con ulteriori informazioni sull'errore passate in un'interfaccia IErrorInfo per l'oggetto eccezione.</summary>
      <param name="errorCode" vsli:raw="The HRESULT to be converted.">Codice errore HRESULT da convertire.</param>
      <param name="errorInfo" vsli:raw="A pointer to the &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface that provides more information about the error. You can specify &lt;c&gt;IntPtr(0)&lt;/c&gt; to use the current &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface, or &lt;c&gt;IntPtr(-1)&lt;/c&gt; to ignore the current &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface and construct the exception just from the error code.">Puntatore all'interfaccia <see langword="IErrorInfo" /> che fornisce informazioni aggiuntive sull'errore. È possibile specificare <c>IntPtr(0)</c> per usare l'interfaccia <see langword="IErrorInfo" /> corrente oppure <c>IntPtr(-1)</c> per ignorare l'interfaccia <see langword="IErrorInfo" /> corrente e costruire l'eccezione unicamente dal codice di errore.</param>
      <returns vsli:raw="An object that represents the converted HRESULT and information obtained from &lt;paramref name=&quot;errorInfo&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if an HRESULT value doesn't represent an error code (for example, &lt;see langword=&quot;S_OK&quot; /&gt; or &lt;see langword=&quot;S_FALSE&quot; /&gt;).">Oggetto che rappresenta il valore HRESULT convertito e le informazioni ottenute da <paramref name="errorInfo" /> oppure <see langword="null" /> se un valore HRESULT non rappresenta un codice errore (ad esempio, <see langword="S_OK" /> o <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
      <summary vsli:raw="Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.">Recupera la descrizione di un'eccezione indipendente dal computer e le informazioni sullo stato esistente per il thread nel momento in cui si è verificata l'eccezione.</summary>
      <returns vsli:raw="A pointer to an EXCEPTION_POINTERS structure.">Puntatore a una struttura EXCEPTION_POINTERS.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
      <summary vsli:raw="Converts a delegate into a function pointer that is callable from unmanaged code.">Converte un delegato in un puntatore a funzione disponibile per la chiamata dal codice non gestito.</summary>
      <param name="d" vsli:raw="The delegate to be passed to unmanaged code.">Delegato da passare al codice non gestito.</param>
      <returns vsli:raw="A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.">Valore che può essere passato al codice non gestito, che a sua volta può usarlo per chiamare il delegato gestito sottostante.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is a generic type definition.">Il parametro <paramref name="d" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Converte un delegato di un tipo specificato in un puntatore a funzione disponibile per la chiamata dal codice non gestito.</summary>
      <param name="d" vsli:raw="The delegate to be passed to unmanaged code.">Delegato da passare al codice non gestito.</param>
      <typeparam name="TDelegate" vsli:raw="The type of delegate to convert.">Tipo di delegato da convertire.</typeparam>
      <returns vsli:raw="A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.">Valore che può essere passato al codice non gestito, che a sua volta può usarlo per chiamare il delegato gestito sottostante.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is a generic type definition.">Il parametro <paramref name="d" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
      <summary vsli:raw="Returns the instance handle (HINSTANCE) for the specified module.">Restituisce l'handle di istanza (HINSTANCE) per il modulo specificato.</summary>
      <param name="m" vsli:raw="The module whose HINSTANCE is desired.">Modulo di cui si desidera l'HINSTANCE.</param>
      <returns vsli:raw="The HINSTANCE for &lt;paramref name=&quot;m&quot; /&gt;; or -1 if the module does not have an HINSTANCE.">HINSTANCE per <paramref name="m" />; o -1 se il modulo non contiene un HINSTANCE.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="m" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
      <summary vsli:raw="Converts the specified exception to an HRESULT.">Converte l'eccezione specificata in valore HRESULT.</summary>
      <param name="e" vsli:raw="The exception to convert to an HRESULT.">Eccezione da convertire in valore HRESULT.</param>
      <returns vsli:raw="The HRESULT mapped to the supplied exception.">Valore HRESULT mappato all'eccezione fornita.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
      <summary vsli:raw="Returns the HRESULT corresponding to the last error incurred by Win32 code executed using &lt;see cref=&quot;T:System.Runtime.InteropServices.Marshal&quot; /&gt;.">Restituisce il valore HRESULT corrispondente all'ultimo errore in cui è incorso il codice Win32 eseguito usando <see cref="T:System.Runtime.InteropServices.Marshal" />.</summary>
      <returns vsli:raw="The HRESULT corresponding to the last Win32 error code.">HRESULT corrispondente all'ultimo codice errore Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
      <summary vsli:raw="Returns an IDispatch interface from a managed object.">Restituisce un'interfaccia IDispatch da un oggetto gestito.</summary>
      <param name="o" vsli:raw="The object whose &lt;see langword=&quot;IDispatch&quot; /&gt; interface is requested.">Oggetto di cui è richiesta l'interfaccia <see langword="IDispatch" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IDispatch&quot; /&gt; pointer for the &lt;paramref name=&quot;o&quot; /&gt; parameter.">Puntatore <see langword="IDispatch" /> per il parametro <paramref name="o" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; does not support the requested interface.">
        <paramref name="o" /> non supporta l'interfaccia richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
      <summary vsli:raw="Returns an IUnknown interface from a managed object.">Restituisce un'interfaccia IUnknown da un oggetto gestito.</summary>
      <param name="o" vsli:raw="The object whose &lt;see langword=&quot;IUnknown&quot; /&gt; interface is requested.">Oggetto di cui è richiesta l'interfaccia <see langword="IUnknown" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IUnknown&quot; /&gt; pointer for the &lt;paramref name=&quot;o&quot; /&gt; parameter.">Puntatore <see langword="IUnknown" /> per il parametro <paramref name="o" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
      <summary vsli:raw="Returns the error code returned by the last unmanaged function that was called using platform invoke that has the &lt;see cref=&quot;F:System.Runtime.InteropServices.DllImportAttribute.SetLastError&quot; /&gt; flag set.">Restituisce il codice errore restituito dall'ultima funzione non gestita chiamata mediante una chiamata platform invoke con il flag <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> impostato.</summary>
      <returns vsli:raw="The last error code set by a call to the Win32 SetLastError function.">Ultimo codice di errore impostato da una chiamata alla funzione Win32 SetLastError.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
      <summary vsli:raw="Converts an object to a COM VARIANT.">Converte un oggetto nel tipo COM VARIANT.</summary>
      <param name="obj" vsli:raw="The object for which to get a COM VARIANT.">Oggetto per il quale ottenere un tipo COM VARIANT.</param>
      <param name="pDstNativeVariant" vsli:raw="A pointer to receive the VARIANT that corresponds to the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Puntatore per ricevere il VARIANT corrispondente al parametro <paramref name="obj" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is an instance of a generic type.">Il parametro <paramref name="obj" /> è un'istanza di un tipo generico.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an object of a specified type to a COM VARIANT.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Esegue la conversione da un oggetto di tipo specificato in un oggetto COM VARIANT.</summary>
      <param name="obj" vsli:raw="The object for which to get a COM VARIANT.">Oggetto per il quale ottenere un tipo COM VARIANT.</param>
      <param name="pDstNativeVariant" vsli:raw="A pointer to receive the VARIANT that corresponds to the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Puntatore per ricevere il VARIANT corrispondente al parametro <paramref name="obj" />.</param>
      <typeparam name="T" vsli:raw="The type of the object to convert.">Tipo dell'oggetto da convertire.</typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
      <summary vsli:raw="Returns an instance of a type that represents a COM object by a pointer to its IUnknown interface.">Restituisce un'istanza di un tipo che rappresenta un oggetto COM tramite un puntatore alla relativa interfaccia IUnknown.</summary>
      <param name="pUnk" vsli:raw="A pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Puntatore all'interfaccia <see langword="IUnknown" />.</param>
      <returns vsli:raw="An object that represents the specified unmanaged COM object.">Oggetto che rappresenta l'oggetto COM non gestito specificato.</returns>
      <exception cref="">
        <paramref name="pUnk" /> è <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
      <summary vsli:raw="Converts a COM VARIANT to an object.">Converte un tipo COM VARIANT in un oggetto.</summary>
      <param name="pSrcNativeVariant" vsli:raw="A pointer to a COM VARIANT.">Puntatore a un COM VARIANT.</param>
      <returns vsli:raw="An object that corresponds to the &lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; parameter.">Oggetto che corrisponde al parametro <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; is not a valid VARIANT type.">
        <paramref name="pSrcNativeVariant" /> non è un tipo VARIANT valido.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; has an unsupported type.">
        <paramref name="pSrcNativeVariant" /> presenta un tipo non supportato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts a COM VARIANT to an object of a specified type.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Esegue la conversione da un oggetto di tipo specificato a un oggetto COM VARIANT.</summary>
      <param name="pSrcNativeVariant" vsli:raw="A pointer to a COM VARIANT.">Puntatore a un COM VARIANT.</param>
      <typeparam name="T" vsli:raw="The type to which to convert the COM VARIANT.">Tipo in cui convertire COM VARIANT.</typeparam>
      <returns vsli:raw="An object of the specified type that corresponds to the &lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; parameter.">Oggetto del tipo specificato che corrisponde al parametro <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; is not a valid VARIANT type.">
        <paramref name="pSrcNativeVariant" /> non è un tipo VARIANT valido.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; has an unsupported type.">
        <paramref name="pSrcNativeVariant" /> presenta un tipo non supportato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
      <summary vsli:raw="Converts an array of COM VARIANTs to an array of objects.">Converte una matrice di tipi COM VARIANT in una matrice di oggetti.</summary>
      <param name="aSrcNativeVariant" vsli:raw="A pointer to the first element of an array of COM VARIANTs.">Puntatore al primo elemento di una matrice di COM VARIANT.</param>
      <param name="cVars" vsli:raw="The count of COM VARIANTs in &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Numero di tipi COM VARIANT in <paramref name="aSrcNativeVariant" />.</param>
      <returns vsli:raw="An object array that corresponds to &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Matrice di oggetti che corrisponde a <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;cVars&quot; /&gt; is a negative number.">
        <paramref name="cVars" /> è un numero negativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an array of COM VARIANTs to an array of a specified type.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Converte una matrice di tipi COM VARIANT in una matrice di un tipo specificato.</summary>
      <param name="aSrcNativeVariant" vsli:raw="A pointer to the first element of an array of COM VARIANTs.">Puntatore al primo elemento di una matrice di COM VARIANT.</param>
      <param name="cVars" vsli:raw="The count of COM VARIANTs in &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Numero di tipi COM VARIANT in <paramref name="aSrcNativeVariant" />.</param>
      <typeparam name="T" vsli:raw="The type of the array to return.">Tipo della matrice da restituire.</typeparam>
      <returns vsli:raw="An array of &lt;typeparamref name=&quot;T&quot; /&gt; objects that corresponds to &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Matrice di oggetti <typeparamref name="T" /> che corrisponde a <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;cVars&quot; /&gt; is a negative number.">
        <paramref name="cVars" /> è un numero negativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
      <summary vsli:raw="Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.">Ottiene il primo slot nella tabella di funzioni virtual (V-Table o VTBL) che contiene metodi definiti dall'utente.</summary>
      <param name="t" vsli:raw="A type that represents an interface or a class.">Tipo che rappresenta un'interfaccia o una classe.</param>
      <returns vsli:raw="The first VTBL slot that contains user-defined methods. The first slot is 3 if the interface is based on IUnknown, and 7 if the interface is based on IDispatch.">Primo slot VTBL che contiene metodi definiti dall'utente. Il primo slot è 3 se l'interfaccia è basata su IUnknown e 7 se l'interfaccia è basata su IDispatch.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; is not visible from COM.">
        <paramref name="t" /> non è visibile da COM.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
      <summary vsli:raw="Returns a managed object of a specified type that represents a COM object.">Restituisce un oggetto gestito di un tipo specificato che rappresenta un oggetto COM.</summary>
      <param name="pUnk" vsli:raw="A pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface of the unmanaged object.">Puntatore all'interfaccia <see langword="IUnknown" /> dell'oggetto non gestito.</param>
      <param name="t" vsli:raw="The type of the requested managed class.">Tipo della classe gestita richiesta.</param>
      <returns vsli:raw="An instance of the class corresponding to the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the requested unmanaged COM object.">Istanza della classe corrispondente all'oggetto <see cref="T:System.Type" /> che rappresenta l'oggetto COM non gestito richiesto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; is not attributed with &lt;see cref=&quot;T:System.Runtime.InteropServices.ComImportAttribute&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;t&quot; /&gt; is a Windows Runtime type.">A <paramref name="t" /> non è applicato l'attribuito <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.  
In alternativa 
 <paramref name="t" /> è un tipo Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
      <summary vsli:raw="Returns the type associated with the specified class identifier (CLSID).">Restituisce il tipo associato all'identificatore di classe specificato (CLSID).</summary>
      <param name="clsid" vsli:raw="The CLSID of the type to return.">CLSID del tipo da restituire.</param>
      <returns vsli:raw="&lt;see langword=&quot;System.__ComObject&quot; /&gt; regardless of whether the CLSID is valid.">
        <see langword="System.__ComObject" /> indipendentemente dalla validità del CLSID.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
      <summary vsli:raw="Retrieves the name of the type represented by an ITypeInfo object.">Recupera il nome del tipo rappresentato da un oggetto ITypeInfo.</summary>
      <param name="typeInfo" vsli:raw="An object that represents an &lt;see langword=&quot;ITypeInfo&quot; /&gt; pointer.">Oggetto che rappresenta un puntatore <see langword="ITypeInfo" />.</param>
      <returns vsli:raw="The name of the type that the &lt;paramref name=&quot;typeInfo&quot; /&gt; parameter points to.">Nome del tipo a cui punta il parametro <paramref name="typeInfo" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;typeInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="typeInfo" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
      <summary vsli:raw="Creates a unique Runtime Callable Wrapper (RCW) object for a given IUnknown interface.">Crea un oggetto Runtime Callable Wrapper (RCW) univoco per un'interfaccia IUnknown specificata.</summary>
      <param name="unknown" vsli:raw="A managed pointer to an &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Puntatore gestito a un'interfaccia <see langword="IUnknown" />.</param>
      <returns vsli:raw="A unique RCW for the specified &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">RCW univoco per l'interfaccia <see langword="IUnknown" /> specificata.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
      <summary vsli:raw="Indicates whether a specified object represents a COM object.">Indica se un oggetto specificato rappresenta un oggetto COM.</summary>
      <param name="o" vsli:raw="The object to check.">Oggetto da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;o&quot; /&gt; parameter is a COM type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il parametro <paramref name="o" /> è un tipo COM; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
      <summary vsli:raw="Indicates whether a type is visible to COM clients.">Indica se un tipo è visibile ai client COM.</summary>
      <param name="t" vsli:raw="The type to check for COM visibility.">Tipo di cui verificare la visibilità COM.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type is visible to COM; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo è visibile a COM. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
      <summary vsli:raw="Returns the field offset of the unmanaged form of the managed class.">Restituisce l'offset del campo della forma non gestita della classe gestita.</summary>
      <param name="t" vsli:raw="A value type or formatted reference type that specifies the managed class. You must apply the &lt;see cref=&quot;T:System.Runtime.InteropServices.StructLayoutAttribute&quot; /&gt; to the class.">Tipo di valore o tipo di riferimento formattato che specifica la classe gestita. È necessario applicare <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> alla classe.</param>
      <param name="fieldName" vsli:raw="The field within the &lt;paramref name=&quot;t&quot; /&gt; parameter.">Campo all'interno del parametro <paramref name="t" />.</param>
      <returns vsli:raw="The offset, in bytes, for the &lt;paramref name=&quot;fieldName&quot; /&gt; parameter within the specified class that is declared by platform invoke.">Offset, in byte, per il parametro <paramref name="fieldName" /> all'interno della classe specificata dichiarata tramite platform invoke.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The class cannot be exported as a structure or the field is nonpublic. Beginning with the .NET Framework version 2.0, the field may be private.">La classe non può essere esportata come struttura o il campo è non pubblico. A partire da .NET Framework versione 2.0, il campo può essere privato.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the field offset of the unmanaged form of a specified managed class.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Restituisce l'offset del campo della forma non gestita della classe gestita specificata.</summary>
      <param name="fieldName" vsli:raw="The name of the field in the &lt;paramref name=&quot;T&quot; /&gt; type.">Nome del campo nel tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A managed value type or formatted reference type. You must apply the &lt;see cref=&quot;T:System.Runtime.InteropServices.StructLayoutAttribute&quot; /&gt; attribute to the class.">Tipo di valore definito o tipo di riferimento formattato. È necessario applicare l'attributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> alla classe.</typeparam>
      <returns vsli:raw="The offset, in bytes, for the &lt;paramref name=&quot;fieldName&quot; /&gt; parameter within the specified class that is declared by platform invoke.">Offset, in byte, per il parametro <paramref name="fieldName" /> all'interno della classe specificata dichiarata tramite platform invoke.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
      <summary vsli:raw="Executes one-time method setup tasks without calling the method.">Esegue in un'unica operazione le attività di configurazione del metodo senza chiamarlo.</summary>
      <param name="m" vsli:raw="The method to be checked.">Metodo da controllare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="m" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object.">Il parametro <paramref name="m" /> non è un oggetto <see cref="T:System.Reflection.MethodInfo" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
      <summary vsli:raw="Performs a pre-link check for all methods on a class.">Esegue un controllo pre-collegamento per tutti i metodi di una classe.</summary>
      <param name="c" vsli:raw="The class whose methods are to be checked.">Classe di cui è necessario controllare metodi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;c&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="c" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
      <summary vsli:raw="Copies all characters up to the first null character from an unmanaged ANSI or UTF-8 string to a managed &lt;see cref=&quot;T:System.String&quot; /&gt;, and widens each character to UTF-16.">Copia tutti i caratteri fino al primo carattere Null da una stringa ANSI non gestita a un oggetto <see cref="T:System.String" /> gestito e trasforma ogni carattere ANSI in Unicode.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">L'indirizzo del primo carattere della stringa non gestita.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string. If &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns a null string.">Stringa gestita che contiene una copia della stringa ANSI non gestita. Se <paramref name="ptr" /> è <see langword="null" />, il metodo restituisce una stringa Null.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt;, copies a specified number of characters from an unmanaged ANSI or UTF-8 string into it, and widens each character to UTF-16.">Alloca un oggetto <see cref="T:System.String" /> gestito, vi copia un numero di caratteri specificato da una stringa ANSI non gestita e trasforma ciascun carattere ANSI nel formato Unicode.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">L'indirizzo del primo carattere della stringa non gestita.</param>
      <param name="len" vsli:raw="The byte count of the input string to copy.">Conteggio dei byte della stringa di input da copiare.</param>
      <returns vsli:raw="A managed string that holds a copy of the native string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Stringa gestita contenente una copia della stringa ANSI nativa se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, il metodo restituisce <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; is less than zero.">
        <paramref name="len" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies all characters up to the first null character from a string stored in unmanaged memory into it.">Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia tutti i caratteri fino al primo carattere null da una stringa archiviata nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="For Unicode platforms, the address of the first Unicode character.&#xA;&#xA; -or-&#xA;&#xA; For ANSI platforms, the address of the first ANSI character.">Per le piattaforme Unicode, l'indirizzo del primo carattere Unicode.  
 -oppure-  
 Per le piattaforme ANSI, l'indirizzo del primo carattere ANSI.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Stringa gestita che contiene una copia della stringa non gestita se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies the specified number of characters from a string stored in unmanaged memory into it.">Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia il numero di caratteri specificato da una stringa archiviata nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="For Unicode platforms, the address of the first Unicode character.&#xA;&#xA; -or-&#xA;&#xA; For ANSI platforms, the address of the first ANSI character.">Per le piattaforme Unicode, l'indirizzo del primo carattere Unicode.  
 -oppure-  
 Per le piattaforme ANSI, l'indirizzo del primo carattere ANSI.</param>
      <param name="len" vsli:raw="The number of characters to copy.">Numero di caratteri da copiare.</param>
      <returns vsli:raw="A managed string that holds a copy of the native string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Stringa gestita che contiene una copia della stringa nativa se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; is less than zero.">
        <paramref name="len" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies a binary string (BSTR) stored in unmanaged memory into it.">Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia una stringa binaria (BSTR) archiviata nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">L'indirizzo del primo carattere della stringa non gestita.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string.">Stringa gestita che contiene una copia della stringa non gestita.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; equals &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">
        <paramref name="ptr" /> è uguale a <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies all characters up to the first null character from an unmanaged Unicode string into it.">Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia tutti i caratteri fino al primo carattere Null da una stringa Unicode non gestita.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">L'indirizzo del primo carattere della stringa non gestita.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Stringa gestita che contiene una copia della stringa non gestita se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies a specified number of characters from an unmanaged Unicode string into it.">Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia un numero di caratteri specificato da una stringa Unicode non gestita.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">L'indirizzo del primo carattere della stringa non gestita.</param>
      <param name="len" vsli:raw="The number of Unicode characters to copy.">Numero di caratteri Unicode da copiare.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Stringa gestita che contiene una copia della stringa non gestita se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)">
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)">
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string." />
      <param name="byteLen" vsli:raw="The number of bytes to copy." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
      <summary vsli:raw="Marshals data from an unmanaged block of memory to a managed object.">Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structure" vsli:raw="The object to which the data is to be copied. This must be an instance of a formatted class.">Oggetto nel quale devono essere copiati i dati. Deve essere un'istanza di una classe formattata.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Structure layout is not sequential or explicit.&#xA;&#xA; -or-&#xA;&#xA; Structure is a boxed value type.">Il layout della struttura non è sequenziale o esplicito.  
 In alternativa  
 La struttura è un tipo valore boxed.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
      <summary vsli:raw="Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.">Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito appena allocato del tipo specificato.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structureType" vsli:raw="The type of object to be created. This object must represent a formatted class or a structure.">Tipo di oggetto da creare. Questo oggetto deve rappresentare una classe formattata o una struttura.</param>
      <returns vsli:raw="A managed object containing the data pointed to by the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Oggetto gestito contenente i dati a cui punta il parametro <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;structureType&quot; /&gt; parameter layout is not sequential or explicit.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;structureType&quot; /&gt; parameter is a generic type definition.">Il layout del parametro <paramref name="structureType" /> non è sequenziale o esplicito.  
-oppure- 
Il parametro <paramref name="structureType" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;structureType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="structureType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException" vsli:raw="The class specified by &lt;paramref name=&quot;structureType&quot; /&gt; does not have an accessible parameterless constructor.">La classe specificata da <paramref name="structureType" /> non ha un costruttore senza parametri accessibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito appena allocato del tipo specificato per un parametro del tipo generico.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Puntatore a un blocco di memoria non gestita.</param>
      <typeparam name="T" vsli:raw="The type of the object to which the data is to be copied. This must be a formatted class or a structure.">Tipo dell'oggetto nel quale devono essere copiati i dati. Questo deve rappresentare una classe formattata o una struttura.</typeparam>
      <returns vsli:raw="A managed object that contains the data that the &lt;paramref name=&quot;ptr&quot; /&gt; parameter points to.">Oggetto gestito che contiene i dati a cui punta il parametro <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The layout of &lt;typeparamref name=&quot;T&quot; /&gt; is not sequential or explicit.">Il layout di <typeparamref name="T" /> non è sequenziale o esplicito.</exception>
      <exception cref="T:System.MissingMethodException" vsli:raw="The class specified by &lt;typeparamref name=&quot;T&quot; /&gt; does not have an accessible parameterless constructor.">La classe specificata da <typeparamref name="T" /> non ha un costruttore senza parametri accessibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from an unmanaged block of memory to a managed object of the specified type.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito di un tipo specificato.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structure" vsli:raw="The object to which the data is to be copied.">Oggetto nel quale devono essere copiati i dati.</param>
      <typeparam name="T" vsli:raw="The type of &lt;paramref name=&quot;structure&quot; /&gt;. This must be a formatted class.">Tipo di <paramref name="structure" />. Deve essere una classe formattata.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="Structure layout is not sequential or explicit.">Il layout della struttura non è sequenziale o esplicito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
      <summary vsli:raw="Requests a pointer to a specified interface from a COM object.">Richiede un puntatore a un'interfaccia specificata da un oggetto COM.</summary>
      <param name="pUnk" vsli:raw="The interface to be queried.">Interfaccia su cui eseguire una query.</param>
      <param name="iid" vsli:raw="The interface identifier (IID) of the requested interface.">Identificatore di interfaccia (IID) dell'interfaccia richiesta.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the returned interface.">Quando questo metodo restituisce un risultato, contiene un riferimento all'interfaccia restituita.</param>
      <returns vsli:raw="An HRESULT that indicates the success or failure of the call.">HRESULT che indica l'esito positivo o negativo della chiamata.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
      <summary vsli:raw="Reads a single byte from unmanaged memory.">Legge un singolo byte da memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns vsli:raw="The byte read from unmanaged memory.">Byte letto da memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
-oppure- 
 <paramref name="ptr" /> è <see langword="null" />.  
In alternativa 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a single byte at a given offset (or index) from unmanaged memory.">Legge un singolo byte in base a un determinato offset (o indice) dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The byte read from unmanaged memory at the given offset.">Byte letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
      <summary vsli:raw="Reads a single byte at a given offset (or index) from unmanaged memory.">Legge un singolo byte in base a un determinato offset (o indice) dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The byte read from unmanaged memory at the given offset.">Byte letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
      <summary vsli:raw="Reads a 16-bit signed integer from unmanaged memory.">Legge un valore intero con segno a 16 bit dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory.">Intero con segno a 16 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
In alternativa 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 16-bit signed integer at a given offset from unmanaged memory.">Legge un intero con segno a 16 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory at the given offset.">Intero con segno a 16 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 16-bit signed integer at a given offset from unmanaged memory.">Legge un intero con segno a 16 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory at the given offset.">Intero con segno a 16 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
      <summary vsli:raw="Reads a 32-bit signed integer from unmanaged memory.">Legge un valore intero con segno a 32 bit dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory.">Intero con segno a 32 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
In alternativa 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 32-bit signed integer at a given offset from unmanaged memory.">Legge un Intero con segno a 32 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory.">Intero con segno a 32 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 32-bit signed integer at a given offset from unmanaged memory.">Legge un Intero con segno a 32 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory at the given offset.">Intero con segno a 32 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
      <summary vsli:raw="Reads a 64-bit signed integer from unmanaged memory.">Legge un valore intero con segno a 64 bit dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory.">Intero con segno a 64 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
In alternativa 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 64-bit signed integer at a given offset from unmanaged memory.">Legge un Intero con segno a 64 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory at the given offset.">Intero con segno a 64 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 64-bit signed integer at a given offset from unmanaged memory.">Legge un Intero con segno a 64 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory at the given offset.">Intero con segno a 64 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
      <summary vsli:raw="Reads a processor native-sized integer from unmanaged memory.">Legge un intero di dimensioni native del processore dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns vsli:raw="The integer read from unmanaged memory. A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.">Intero letto da memoria non gestita. In computer a 32 bit viene restituito un intero a 32 bit, mentre in computer a 64 bit viene restituito un intero a 64 bit.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
-oppure- 
 <paramref name="ptr" /> è <see langword="null" />.  
In alternativa 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a processor native sized integer at a given offset from unmanaged memory.">Legge un intero di dimensioni native del processore a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The integer read from unmanaged memory at the given offset.">Intero letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
      <summary vsli:raw="Reads a processor native sized integer from unmanaged memory.">Legge un valore intero della dimensione nativa del processore dalla memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns vsli:raw="The integer read from unmanaged memory at the given offset.">Intero letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
      <summary vsli:raw="Resizes a block of memory previously allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)&quot; /&gt;.">Ridimensiona un blocco di memoria allocato in precedenza con <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</summary>
      <param name="pv" vsli:raw="A pointer to memory allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)&quot; /&gt;.">Puntatore alla memoria allocata con <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</param>
      <param name="cb" vsli:raw="The new size of the allocated block.">Nuova dimensione del blocco allocato.</param>
      <returns vsli:raw="An integer representing the address of the reallocated block of memory. This memory must be released with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)&quot; /&gt;.">Intero che rappresenta l'indirizzo del blocco di memoria riallocato. Questa memoria deve essere liberata con <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Resizes a block of memory previously allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Ridimensiona un blocco di memoria allocato in precedenza con <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</summary>
      <param name="pv" vsli:raw="A pointer to memory allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Puntatore alla memoria allocata con <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
      <param name="cb" vsli:raw="The new size of the allocated block. This is not a pointer; it is the byte count you are requesting, cast to type &lt;see cref=&quot;T:System.IntPtr&quot; /&gt;. If you pass a pointer, it is treated as a size.">Nuova dimensione del blocco allocato. Non si tratta di un puntatore; corrisponde al conteggio dei byte richiesti, di cui è stato eseguito il cast al tipo <see cref="T:System.IntPtr" />. Se si passa un puntatore, viene trattato come una dimensione.</param>
      <returns vsli:raw="A pointer to the reallocated memory. This memory must be released using &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt;.">Puntatore alla memoria riallocata. Questa memoria deve essere liberata usando <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
      <summary vsli:raw="Decrements the reference count on the specified interface.">Riduce il numero di riferimenti nell'interfaccia specificata.</summary>
      <param name="pUnk" vsli:raw="The interface to release.">Interfaccia da liberare.</param>
      <returns vsli:raw="The new value of the reference count on the interface specified by the &lt;paramref name=&quot;pUnk&quot; /&gt; parameter.">Nuovo valore del numero di riferimenti nell'interfaccia specificata dal parametro <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
      <summary vsli:raw="Decrements the reference count of the Runtime Callable Wrapper (RCW) associated with the specified COM object.">Decrementa il conteggio dei riferimenti del Runtime Callable Wrapper (RCW) associato all'oggetto COM specificato.</summary>
      <param name="o" vsli:raw="The COM object to release.">Oggetto COM da rilasciare.</param>
      <returns vsli:raw="The new value of the reference count of the RCW associated with &lt;paramref name=&quot;o&quot; /&gt;. This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.">Nuovo valore del conteggio dei riferimenti dell'RCW associato a <paramref name="o" />. Questo valore in genere è zero poiché RCW conserva solo un riferimento all'oggetto COM incluso indipendentemente dal numero dei client gestiti che lo chiamano.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is not a valid COM object.">
        <paramref name="o" /> non è un oggetto COM valido.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
      <summary vsli:raw="Allocates an unmanaged binary string (BSTR) and copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into it.">Alloca una stringa binaria (BSTR) non gestita e vi copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita, effettuando contemporaneamente la conversione nel formato ANSI.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into unmanaged memory.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object whose length is 0.">Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" /> oppure 0 se <paramref name="s" /> è un oggetto <see cref="T:System.Security.SecureString" /> con lunghezza 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Sets data referenced by the specified key in the specified COM object.">Imposta i dati ai quali fa riferimento la chiave specificata nell'oggetto COM specificato.</summary>
      <param name="obj" vsli:raw="The COM object in which to store the data.">Oggetto COM in cui archiviare i dati.</param>
      <param name="key" vsli:raw="The key in the internal hash table of the COM object in which to store the data.">Chiave nella tabella hash interna dell'oggetto COM in cui archiviare i dati.</param>
      <param name="data" vsli:raw="The data to set.">Dati da impostare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data was set successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i dati sono stati impostati correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> è <see langword="null" />.  
-oppure- 
 <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a COM object.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;obj&quot; /&gt; is a Windows Runtime object.">
        <paramref name="obj" /> non è un oggetto COM.  
-oppure- 
 <paramref name="obj" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
      <summary vsli:raw="Returns the unmanaged size of an object in bytes.">Restituisce la dimensione non gestita di un oggetto, espressa in byte.</summary>
      <param name="structure" vsli:raw="The object whose size is to be returned.">Oggetto di cui verrà restituita la dimensione.</param>
      <returns vsli:raw="The size of the specified object in unmanaged code.">Dimensione dell'oggetto specificato nel codice non gestito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;structure&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="structure" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
      <summary vsli:raw="Returns the size of an unmanaged type in bytes.">Restituisce la dimensione di un tipo non gestito espressa in byte.</summary>
      <param name="t" vsli:raw="The type whose size is to be returned.">Tipo di cui verrà restituita la dimensione.</param>
      <returns vsli:raw="The size of the specified type in unmanaged code.">Dimensione del tipo specificato nel codice non gestito.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is a generic type definition.">Il parametro <paramref name="t" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the size of an unmanaged type in bytes.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Restituisce la dimensione di un tipo non gestito espressa in byte.</summary>
      <typeparam name="T" vsli:raw="The type whose size is to be returned.">Tipo di cui verrà restituita la dimensione.</typeparam>
      <returns vsli:raw="The size, in bytes, of the type that is specified by the &lt;typeparamref name=&quot;T&quot; /&gt; generic type parameter.">Dimensione, in byte, del tipo specificato dal parametro di tipo generico <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the unmanaged size of an object of a specified type in bytes.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Restituisce la dimensione non gestita di un oggetto di un tipo specifico in byte.</summary>
      <param name="structure" vsli:raw="The object whose size is to be returned.">Oggetto di cui verrà restituita la dimensione.</param>
      <typeparam name="T" vsli:raw="The type of the &lt;paramref name=&quot;structure&quot; /&gt; parameter.">Tipo del parametro <paramref name="structure" />.</typeparam>
      <returns vsli:raw="The size, in bytes, of the specified object in unmanaged code.">Dimensione, in byte, dell'oggetto specificato nel codice non gestito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;structure&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="structure" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
      <summary vsli:raw="Allocates a BSTR and copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into it.">Alloca un elemento BSTR e vi copia il contenuto di un oggetto <see cref="T:System.String" /> gestito.</summary>
      <param name="s" vsli:raw="The managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="An unmanaged pointer to the &lt;see langword=&quot;BSTR&quot; /&gt;, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is null.">Puntatore non gestito a <see langword="BSTR" /> o 0 se <paramref name="s" /> è Null.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length for &lt;paramref name=&quot;s&quot; /&gt; is out of range.">La lunghezza per <paramref name="s" /> non è compresa nell'intervallo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="An integer representing a pointer to the block of memory allocated for the string, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Intero che rappresenta un puntatore al blocco di memoria allocato per la stringa oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="The allocated memory block, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Blocco di memoria allocato o 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length for &lt;paramref name=&quot;s&quot; /&gt; is out of range.">La lunghezza per <paramref name="s" /> non è compresa nell'intervallo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="An integer representing a pointer to the block of memory allocated for the string, or 0 if s is &lt;see langword=&quot;null&quot; /&gt;.">Intero che rappresenta un puntatore al blocco di memoria allocato per la stringa oppure 0 se s è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)">
      <param name="s" vsli:raw="A managed string to be copied." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito nella memoria non gestita, effettuando contemporaneamente la conversione nel formato ANSI.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" />, oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory, converting into ANSI format if required.">Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito nella memoria non gestita, effettuando, se necessario, la conversione nel formato ANSI.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the string was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Indirizzo, nella memoria non gestita, in cui è stata copiata la stringa, oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory.">Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito nella memoria non gestita.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Stringa gestita da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" />, oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="The method could not allocate enough native heap memory.">Il metodo non è riuscito ad allocare memoria dell'heap nativo sufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
      <summary vsli:raw="Marshals data from a managed object to an unmanaged block of memory.">Effettua il marshalling di dati da un oggetto gestito a un blocco di memoria non gestito.</summary>
      <param name="structure" vsli:raw="A managed object that holds the data to be marshaled. This object must be a structure or an instance of a formatted class.">Oggetto gestito che contiene i dati di cui effettuare il marshalling. L'oggetto deve essere una struttura o un'istanza di una classe formattata.</param>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory, which must be allocated before this method is called.">Puntatore a un blocco di memoria non gestito che deve essere allocato prima della chiamata al metodo.</param>
      <param name="fDeleteOld" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)&quot; /&gt; method on the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before this method copies the data. The block must contain valid data. Note that passing &lt;see langword=&quot;false&quot; /&gt; when the memory block already contains data can lead to a memory leak.">
        <see langword="true" /> per chiamare il metodo <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> sul parametro <paramref name="ptr" /> prima che il metodo esegua la copia dei dati. Il blocco deve contenere dati validi. Si noti che passare il valore <see langword="false" /> quando il blocco di memoria contiene già dei dati può causare una perdita di memoria.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structure&quot; /&gt; is a reference type that is not a formatted class.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;structure&quot; /&gt; is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).">
        <paramref name="structure" /> è un tipo di riferimento che non corrisponde a una classe formattata.  
-oppure- 
 <paramref name="structure" /> è un'istanza di un tipo generico (in .NET Framework 4.5 e versioni precedenti).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from a managed object of a specified type to an unmanaged block of memory.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Effettua il marshalling di dati da un oggetto gestito di un tipo specificato a un blocco di memoria non gestita.</summary>
      <param name="structure" vsli:raw="A managed object that holds the data to be marshaled. The object must be a structure or an instance of a formatted class.">Oggetto gestito che contiene i dati di cui effettuare il marshalling. L'oggetto deve essere una struttura o un'istanza di una classe formattata.</param>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory, which must be allocated before this method is called.">Puntatore a un blocco di memoria non gestito che deve essere allocato prima della chiamata al metodo.</param>
      <param name="fDeleteOld" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)&quot; /&gt; method on the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before this method copies the data. The block must contain valid data. Note that passing &lt;see langword=&quot;false&quot; /&gt; when the memory block already contains data can lead to a memory leak.">
        <see langword="true" /> per chiamare il metodo <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> sul parametro <paramref name="ptr" /> prima che il metodo esegua la copia dei dati. Il blocco deve contenere dati validi. Si noti che passare il valore <see langword="false" /> quando il blocco di memoria contiene già dei dati può causare una perdita di memoria.</param>
      <typeparam name="T" vsli:raw="The type of the managed object.">Tipo dell'oggetto gestito.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structure&quot; /&gt; is a reference type that is not a formatted class.">
        <paramref name="structure" /> è un tipo di riferimento che non corrisponde a una classe formattata.</exception>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
      <summary vsli:raw="Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems. This field is read-only.">Rappresenta la dimensione predefinita del carattere nel sistema. Il valore predefinito è 2 per i sistemi Unicode e 1 per i sistemi ANSI. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
      <summary vsli:raw="Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system. This field is read-only.">Rappresenta la dimensione massima di un set di caratteri a doppio byte (DBCS, double-byte character set), in byte, per il sistema operativo corrente. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
      <summary vsli:raw="Throws an exception with a specific failure HRESULT value.">Genera un'eccezione con un valore HRESULT di un errore specifico.</summary>
      <param name="errorCode" vsli:raw="The HRESULT corresponding to the desired exception.">Valore HRESULT corrispondente all'eccezione desiderata.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
      <summary vsli:raw="Throws an exception with a specific failure HRESULT, based on the specified IErrorInfo interface.">Genera un'eccezione con un valore HRESULT di errore specifico, basato sull'interfaccia IErrorInfo.aspx specificata.</summary>
      <param name="errorCode" vsli:raw="The HRESULT corresponding to the desired exception.">Valore HRESULT corrispondente all'eccezione desiderata.</param>
      <param name="errorInfo" vsli:raw="A pointer to the IErrorInfo interface that provides more information about the error. You can specify &lt;c&gt;IntPtr(0)&lt;/c&gt; to use the current IErrorInfo interface, or &lt;c&gt;IntPtr(-1)&lt;/c&gt; to ignore the current IErrorInfo interface and construct the exception just from the error code.">Puntatore all'interfaccia IErrorInfo che fornisce informazioni aggiuntive sull'errore. È possibile specificare <c>IntPtr(0)</c> per usare l'interfaccia IErrorInfo corrente oppure <c>IntPtr(-1)</c> per ignorare l'interfaccia IErrorInfo corrente e costruire l'eccezione unicamente dal codice di errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
      <summary vsli:raw="Gets the address of the element at the specified index inside the specified array.">Ottiene l'indirizzo dell'elemento in corrispondenza dell'indice specificato all'interno della matrice specificata.</summary>
      <param name="arr" vsli:raw="The array that contains the desired element.">Matrice che contiene l'elemento desiderato.</param>
      <param name="index" vsli:raw="The index in the &lt;paramref name=&quot;arr&quot; /&gt; parameter of the desired element.">Indice nel parametro <paramref name="arr" /> dell'elemento desiderato.</param>
      <returns vsli:raw="The address of &lt;paramref name=&quot;index&quot; /&gt; inside &lt;paramref name=&quot;arr&quot; /&gt;.">Indirizzo di <paramref name="index" /> all'interno di <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Gets the address of the element at the specified index in an array of a specified type.">[Supportato in .NET Framework 4.5.1 e versioni successive]  
 Ottiene l'indirizzo dell'elemento in corrispondenza dell'indice specificato in una matrice del tipo specificato.</summary>
      <param name="arr" vsli:raw="The array that contains the desired element.">Matrice che contiene l'elemento desiderato.</param>
      <param name="index" vsli:raw="The index of the desired element in the &lt;paramref name=&quot;arr&quot; /&gt; array.">Indice dell'elemento desiderato nella matrice <paramref name="arr" />.</param>
      <typeparam name="T" vsli:raw="The type of the array.">Tipo della matrice</typeparam>
      <returns vsli:raw="The address of &lt;paramref name=&quot;index&quot; /&gt; in &lt;paramref name=&quot;arr&quot; /&gt;.">Indirizzo di <paramref name="index" /> all'interno di <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory.">Scrive un valore a singolo byte nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
In alternativa 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory at a specified offset.">Scrive un valore a singolo byte nella memoria non gestita a un offset specifico.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory at a specified offset.">Scrive un valore a singolo byte nella memoria non gestita a un offset specifico.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
      <summary vsli:raw="Writes a character as a 16-bit integer value to unmanaged memory.">Scrive un carattere sotto forma di intero a 16 bit nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
-oppure- 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
      <summary vsli:raw="Writes a 16-bit integer value to unmanaged memory.">Scrive un valore intero a 16 bit nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
In alternativa 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in the native heap to write to.">L'indirizzo di base nell'heap nativo su cui scrivere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
      <summary vsli:raw="Writes a 16-bit signed integer value into unmanaged memory at a specified offset.">Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value to unmanaged memory.">Scrive un valore intero con segno a 32 bit nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
-oppure- 
 <paramref name="ptr" /> è <see langword="null" />.  
In alternativa 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value into unmanaged memory at a specified offset.">Scrive un Intero con segno a 32 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value to unmanaged memory at a specified offset.">Scrive un Intero con segno a 32 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory at a specified offset.">Scrive un Intero con segno a 64 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write.">Indirizzo di base nella memoria non gestita da scrivere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory.">Scrive un valore intero con segno a 64 bit nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
-oppure- 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory at a specified offset.">Scrive un Intero con segno a 64 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a processor native-sized integer value to unmanaged memory at a specified offset.">Scrive un intero di dimensioni native del processore nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Writes a processor native sized integer value into unmanaged memory.">Scrive un valore intero della dimensione nativa del processore nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> non è un formato riconosciuto.  
In alternativa 
 <paramref name="ptr" /> è <see langword="null" />.  
-oppure- 
 <paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a processor native sized integer value to unmanaged memory.">Scrive un valore intero della dimensione nativa del processore nella memoria non gestita.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
      <summary vsli:raw="Frees a BSTR pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)&quot; /&gt; method.">Libera un puntatore BSTR allocato usando il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the &lt;see langword=&quot;BSTR&quot; /&gt; to free.">Indirizzo dell'elemento <see langword="BSTR" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)&quot; /&gt; method.">Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)&quot; /&gt; method.">Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)">
      <param name="s" vsli:raw="The address of the unmanaged string to free." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)&quot; /&gt; method.">Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)&quot; /&gt; method.">Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalAsAttribute">
      <summary vsli:raw="Indicates how to marshal the data between managed and unmanaged code.">Indica come eseguire il marshalling dei dati tra codice gestito e non gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> specificato.</summary>
      <param name="unmanagedType" vsli:raw="The value the data is to be marshaled as.">Valore in base al quale viene eseguito il marshalling dei dati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; enumeration member.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> specificato.</summary>
      <param name="unmanagedType" vsli:raw="The value the data is to be marshaled as.">Valore in base al quale viene eseguito il marshalling dei dati.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
      <summary vsli:raw="Specifies the element type of the unmanaged &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.LPArray&quot; /&gt; or &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.ByValArray&quot; /&gt;.">Specifica il tipo di elemento dell'oggetto <see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /> o <see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /> non gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
      <summary vsli:raw="Specifies the parameter index of the unmanaged &lt;see langword=&quot;iid_is&quot; /&gt; attribute used by COM.">Specifica l'indice di parametro dell'attributo <see langword="iid_is" /> non gestito utilizzato da COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
      <summary vsli:raw="Provides additional information to a custom marshaler.">Fornisce informazioni aggiuntive a un gestore di marshalling personalizzato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
      <summary vsli:raw="Specifies the fully qualified name of a custom marshaler.">Specifica il nome completo di un gestore di marshalling personalizzato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
      <summary vsli:raw="Implements &lt;see cref=&quot;F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&quot; /&gt; as a type.">Implementa <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> come tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
      <summary vsli:raw="Indicates the element type of the &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Indica il tipo di elemento di <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
      <summary vsli:raw="Indicates the user-defined element type of the &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Indica il tipo di elemento di <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /> definito dall'utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
      <summary vsli:raw="Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.">Indica il numero di elementi nella matrice a lunghezza fissa o il numero di caratteri (non byte) in una stringa da importare.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
      <summary vsli:raw="Indicates the zero-based parameter that contains the count of array elements, similar to &lt;see langword=&quot;size_is&quot; /&gt; in COM.">Indica il parametro in base zero che contiene il numero di elementi della matrice, come <see langword="size_is" /> in COM.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value the data is to be marshaled as.">Ottiene il valore <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> in base al quale viene eseguito il marshalling dei dati.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value the data is to be marshaled as.">Valore <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> in base al quale viene eseguito il marshalling dei dati.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalDirectiveException">
      <summary vsli:raw="The exception that is thrown by the marshaler when it encounters a &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; it does not support.">Eccezione generata dal gestore di marshalling quando rileva un oggetto <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> non supportato.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class with default properties.">Inizializza una nuova istanza della classe <see langword="MarshalDirectiveException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see langword="MarshalDirectiveException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class with a specified error message.">Inizializza una nuova istanza della classe <see langword="MarshalDirectiveException" /> con un messaggio di errore specificato.</summary>
      <param name="message" vsli:raw="The error message that specifies the reason for the exception.">Messaggio di errore che specifica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalDirectiveException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.MarshalDirectiveException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.NativeLibrary">
      <summary vsli:raw="Provides APIs for managing native libraries.">Offre API per la gestione delle librerie native.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)">
      <summary vsli:raw="Frees a loaded library with the specified OS handle, or takes no action if the input handle is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">Libera un handle specifico della libreria caricata oppure non esegue azioni se l'handle di input è <see cref="F:System.IntPtr.Zero" />.</summary>
      <param name="handle" vsli:raw="The native library OS handle to be freed.">Handle della libreria nativa da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)">
      <summary vsli:raw="Gets the address of an exported symbol.">Ottiene l'indirizzo di un simbolo esportato.</summary>
      <param name="handle" vsli:raw="The native library OS handle.">Handle per la libreria nativa.</param>
      <param name="name" vsli:raw="The name of the exported symbol.">Nome del simbolo esportato.</param>
      <returns vsli:raw="The address of the symbol.">Indirizzo del simbolo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> o <paramref name="name" /> è <see langword="null" />.</exception>
      <exception cref="T:System.EntryPointNotFoundException" vsli:raw="The symbol is not found.">Il simbolo non viene trovato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)">
      <summary vsli:raw="Provides a simple API for loading a native library that wraps the OS loader and uses default flags.">Offre una semplice API per il caricamento di una libreria nativa che esegue il wrapping del caricatore del sistema operativo e usa i flag predefiniti.</summary>
      <param name="libraryPath" vsli:raw="The name of the native library to be loaded.">Nome della libreria nativa da caricare.</param>
      <returns vsli:raw="The OS handle for the loaded native library.">Handle per la libreria nativa caricata.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryPath" /> è <see langword="null" />.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">La libreria non è stata trovata.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">La libreria non è valida.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
      <summary vsli:raw="Provides a high-level API for loading a native library.">Offre un'API avanzata per il caricamento di una libreria nativa.</summary>
      <param name="libraryName" vsli:raw="The name of the native library to be loaded.">Nome della libreria nativa da caricare.</param>
      <param name="assembly" vsli:raw="The assembly loading the native library.">Assembly che carica la libreria nativa.</param>
      <param name="searchPath" vsli:raw="The search path.">Percorso di ricerca.</param>
      <returns vsli:raw="The OS handle for the loaded library.">Handle per la libreria caricata.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryName&quot; /&gt; or &lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryName" /> o <paramref name="assembly" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a &lt;see langword=&quot;RuntimeAssembly&quot; /&gt;.">
        <paramref name="assembly" /> non è un oggetto <see langword="RuntimeAssembly" />.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">La libreria non è stata trovata.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">La libreria non è valida.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)">
      <summary vsli:raw="Sets a callback for resolving native library imports from an assembly.">Imposta un callback per la risoluzione di importazioni di librerie native da un assembly.</summary>
      <param name="assembly" vsli:raw="The assembly for which the resolver is registered.">Assembly per cui viene registrato il resolver.</param>
      <param name="resolver" vsli:raw="The resolver callback to register.">Callback del resolver da registrare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; or &lt;paramref name=&quot;resolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> o paramref name="resolver" /&gt; è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A resolver is already set for this assembly.">Un resolver è già impostato per questo assembly.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)">
      <summary vsli:raw="Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.">Ottiene l'indirizzo di un simbolo esportato e restituisce un valore che indica se la chiamata al metodo ha avuto esito positivo.</summary>
      <param name="handle" vsli:raw="The native library OS handle.">Handle per la libreria nativa.</param>
      <param name="name" vsli:raw="The name of the exported symbol.">Nome del simbolo esportato.</param>
      <param name="address" vsli:raw="When the method returns, contains the symbol address, if it exists.">Quando il metodo viene restituito, contiene l'indirizzo del simbolo se esiste.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the address of the exported symbol was found successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo viene restituito con esito positivo; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> o <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)">
      <summary vsli:raw="Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.">Offre una semplice API per il caricamento di una libreria nativa e restituisce un valore che indica se l'operazione ha avuto esito positivo.</summary>
      <param name="libraryPath" vsli:raw="The name of the native library to be loaded.">Nome della libreria nativa da caricare.</param>
      <param name="handle" vsli:raw="When the method returns, the OS handle of the loaded native library.">Quando il metodo viene restituito, contiene l'handle per la libreria nativa caricata.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the native library was loaded successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la libreria nativa è stata caricata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryPath" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)">
      <summary vsli:raw="Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.">Offre un'API avanzata per il caricamento di una libreria nativa e restituisce un valore che indica se l'operazione ha avuto esito positivo.</summary>
      <param name="libraryName" vsli:raw="The name of the native library to be loaded.">Nome della libreria nativa da caricare.</param>
      <param name="assembly" vsli:raw="The assembly loading the native library.">Assembly che carica la libreria nativa.</param>
      <param name="searchPath" vsli:raw="The search path.">Percorso di ricerca.</param>
      <param name="handle" vsli:raw="When the method returns, the OS handle of the loaded native library.">Quando il metodo viene restituito, contiene l'handle per la libreria nativa caricata.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the native library was loaded successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'operazione è stata completata; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; or &lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryPath" /> o <paramref name="assembly" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a &lt;see langword=&quot;RuntimeAssembly&quot; /&gt;.">
        <paramref name="assembly" /> non è un oggetto <see langword="RuntimeAssembly" />.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.OptionalAttribute">
      <summary vsli:raw="Indicates that a parameter is optional.">Indica che un parametro è facoltativo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OptionalAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;OptionalAttribute&quot; /&gt; class with default values.">Inizializza una nuova istanza della classe <see langword="OptionalAttribute" /> con i valori predefiniti.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PreserveSigAttribute">
      <summary vsli:raw="Indicates that the HRESULT signature transformation that takes place during COM interop calls should be suppressed.">Indica che la trasformazione della firma del valore HRESULT o <see langword="retval" /> eseguita durante le chiamate di interoperabilità COM, deve essere evitata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.PreserveSigAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
      <summary vsli:raw="Indicates that the attributed assembly is a primary interop assembly.">Indica che l'assembly con attributi è un assembly di interoperabilità primario.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute&quot; /&gt; class with the major and minor version numbers of the type library for which this assembly is the primary interop assembly.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute" /> con i numeri di versione principale e secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</summary>
      <param name="major" vsli:raw="The major version of the type library for which this assembly is the primary interop assembly.">Versione principale della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</param>
      <param name="minor" vsli:raw="The minor version of the type library for which this assembly is the primary interop assembly.">Versione secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the type library for which this assembly is the primary interop assembly.">Ottiene il numero della versione principale della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</summary>
      <returns vsli:raw="The major version number of the type library for which this assembly is the primary interop assembly.">Numero della versione principale della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the type library for which this assembly is the primary interop assembly.">Ottiene il numero della versione secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</summary>
      <returns vsli:raw="The minor version number of the type library for which this assembly is the primary interop assembly.">Numero della versione secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ProgIdAttribute">
      <summary vsli:raw="Allows the user to specify the ProgID of a class.">Consente all'utente di specificare il ProgID di una classe.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ProgIdAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ProgIdAttribute&quot; /&gt; with the specified ProgID.">Inizializza una nuova istanza di <see langword="ProgIdAttribute" /> con il ProgID specificato.</summary>
      <param name="progId" vsli:raw="The ProgID to be assigned to the class.">ProgID da assegnare alla classe.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ProgIdAttribute.Value">
      <summary vsli:raw="Gets the ProgID of the class.">Ottiene il ProgID della classe.</summary>
      <returns vsli:raw="The ProgID of the class.">ProgID della classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.RuntimeEnvironment">
      <summary vsli:raw="Provides a collection of &lt;see langword=&quot;static&quot; /&gt; methods that return information about the common language runtime environment.">Fornisce un insieme di metodi <see langword="static" /> che restituiscono informazioni sull'ambiente Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.FromGlobalAccessCache(System.Reflection.Assembly)">
      <summary vsli:raw="Tests whether the specified assembly is loaded in the global assembly cache.">Verifica se l'assembly specificato è caricato nella Global Assembly Cache.</summary>
      <param name="a" vsli:raw="The assembly to test.">Assembly di cui effettuare il test.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the assembly is loaded in the global assembly cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'assembly è caricato nella Global Assembly Cache; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeDirectory">
      <summary vsli:raw="Returns the directory where the common language runtime is installed.">Restituisce la directory in cui è installato Common Language Runtime.</summary>
      <returns vsli:raw="A string that contains the path to the directory where the common language runtime is installed.">Stringa contenente il percorso della directory in cui è installato Common Language Runtime.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(System.Guid,System.Guid)">
      <summary vsli:raw="Returns the specified interface on the specified class.">Restituisce l'interfaccia specificata nella classe specificata.</summary>
      <param name="clsid" vsli:raw="The identifier for the desired class.">Identificatore per la classe desiderata.</param>
      <param name="riid" vsli:raw="The identifier for the desired interface.">Identificatore per l'interfaccia desiderata.</param>
      <returns vsli:raw="An unmanaged pointer to the requested interface.">Puntatore non gestito all'interfaccia richiesta.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="IUnknown::QueryInterface failure.">Errore IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsObject(System.Guid,System.Guid)">
      <summary vsli:raw="Returns an instance of a type that represents a COM object by a pointer to its &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Restituisce un'istanza di un tipo che rappresenta un oggetto COM tramite un puntatore alla relativa interfaccia <see langword="IUnknown" />.</summary>
      <param name="clsid" vsli:raw="The identifier for the desired class.">Identificatore per la classe desiderata.</param>
      <param name="riid" vsli:raw="The identifier for the desired interface.">Identificatore per l'interfaccia desiderata.</param>
      <returns vsli:raw="An object that represents the specified unmanaged COM object.">Oggetto che rappresenta l'oggetto COM non gestito specificato.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="IUnknown::QueryInterface failure.">Errore IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetSystemVersion">
      <summary vsli:raw="Gets the version number of the common language runtime that's running the current process.">Ottiene il numero della versione di Common Language Runtime che esegue il processo corrente.</summary>
      <returns vsli:raw="A string containing the version number of the common language runtime.">Stringa contenente il numero di versione di Common Language Runtime.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeEnvironment.SystemConfigurationFile">
      <summary vsli:raw="Gets the path to the system configuration file.">Ottiene il percorso del file di configurazione del sistema.</summary>
      <returns vsli:raw="The path to the system configuration file.">Percorso del file di configurazione del sistema.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayRankMismatchException">
      <summary vsli:raw="The exception thrown when the rank of an incoming &lt;see langword=&quot;SAFEARRAY&quot; /&gt; does not match the rank specified in the managed signature.">Eccezione generata quando il numero di dimensioni di un <see langword="SAFEARRAY" /> in entrata non corrisponde al numero di dimensioni specificato nella firma gestita.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with default values.">Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayRankMismatchException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see langword="SafeArrayRankMismatchException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SafeArrayRankMismatchException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SafeArrayRankMismatchException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException">
      <summary vsli:raw="The exception thrown when the type of the incoming &lt;see langword=&quot;SAFEARRAY&quot; /&gt; does not match the type specified in the managed signature.">Eccezione generata quando il tipo di <see langword="SAFEARRAY" /> in entrata non corrisponde al tipo specificato nella firma gestita.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with default values.">Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SafeArrayTypeMismatchException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeBuffer">
      <summary>Fornisce un buffer di memoria controllato che può essere usato per la lettura e la scrittura. I tentativi di accedere alla memoria al di fuori del buffer controllato (sottocarichi e sovraccarichi) generano eccezioni.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SafeBuffer" />, specificando se l'handle del buffer deve essere rilasciato in modo affidabile.</summary>
      <param name="ownsHandle">
        <see langword="true" /> per rilasciare in modo affidabile l'handle durante la fase di finalizzazione; <see langword="false" /> per impedire il rilascio affidabile (opzione non consigliata).</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
      <summary>Ottiene un puntatore da un oggetto <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> per un blocco di memoria.</summary>
      <param name="pointer">Puntatore di byte, passato per riferimento, per ricevere il puntatore dall'interno dell'oggetto <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. È necessario impostare questo puntatore a <see langword="null" /> prima di chiamare questo metodo.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
      <summary>Ottiene la dimensione, in byte, del buffer.</summary>
      <returns>Numero di byte nel buffer di memoria.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
      <summary>Specifica la dimensione di allocazione del buffer di memoria tramite il numero specificato di elementi e la dimensione dell'elemento. Questo metodo deve essere chiamato prima di utilizzare l'istanza <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Numero di elementi contenuti nel buffer.</param>
      <param name="sizeOfEachElement">Dimensioni di ogni elemento nel buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numElements" /> è minore di zero.  
-oppure- 
 <paramref name="sizeOfEachElement" /> è minore di zero.  
-oppure- 
 <paramref name="numElements" /> moltiplicato per <paramref name="sizeOfEachElement" /> è maggiore dello spazio degli indirizzi disponibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
      <summary>Definisce la dimensione di allocazione, in byte, dell'area di memoria. Questo metodo deve essere chiamato prima di utilizzare l'istanza <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numBytes">Numero di byte nel buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numBytes" /> è minore di zero.  
-oppure- 
 <paramref name="numBytes" /> è maggiore dello spazio degli indirizzi disponibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
      <summary>Definisce la dimensione di allocazione dell'area della memoria specificando il numero di tipi di valore. Questo metodo deve essere chiamato prima di utilizzare l'istanza <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Numero di elementi del tipo di valore per il quale allocare memoria.</param>
      <typeparam name="T">Tipo di valore per il quale allocare memoria.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numElements" /> è minore di zero.  
-oppure- 
 <paramref name="numElements" /> moltiplicato per le dimensioni di ogni elemento è maggiore dello spazio degli indirizzi disponibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
      <summary>Legge un tipo di valore dalla memoria all'offset specificato.</summary>
      <param name="byteOffset">Posizione da cui leggere il tipo di valore. È possibile che sia necessario considerare problemi di allineamento.</param>
      <typeparam name="T">Tipo di valore da leggere.</typeparam>
      <returns>Il tipo di valore che è stato letto dalla memoria.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Legge il numero specificato di tipi di valore dal buffer di memoria partendo dall'offset e li scrive in una matrice iniziando all'indice.</summary>
      <param name="byteOffset">Posizione dalla quale iniziare a leggere.</param>
      <param name="array">Matrice di output in cui scrivere.</param>
      <param name="index">Posizione all'interno della matrice di output da cui iniziare a scrivere.</param>
      <param name="count">Numero di tipi di valore da leggere dalla matrice di input e scrivere nella matrice di output.</param>
      <typeparam name="T">Tipo di valore da leggere.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza della matrice meno l'indice è inferiore a <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
      <summary>Rilascia un puntatore ottenuto dal metodo <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
      <summary>Scrive un tipo di valore in memoria in una posizione specificata.</summary>
      <param name="byteOffset">Posizione dalla quale iniziare a scrivere. È possibile che sia necessario considerare problemi di allineamento.</param>
      <param name="value">Valore da scrivere.</param>
      <typeparam name="T">Tipo di valore da scrivere.</typeparam>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Scrive il numero specificato di tipi di valore in una posizione di memoria leggendo i byte a partire dalla posizione specificata nella matrice di input.</summary>
      <param name="byteOffset">Posizione nella memoria sulla quale scrivere.</param>
      <param name="array">Matrice di input.</param>
      <param name="index">Offset nella matrice da cui cominciare a leggere.</param>
      <param name="count">Numero di tipi di valore da scrivere.</param>
      <typeparam name="T">Tipo di valore da scrivere.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza della matrice di input meno <paramref name="index" /> è inferiore a <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.SEHException">
      <summary vsli:raw="Represents structured exception handling (SEH) errors.">Rappresenta errori SEH (Structured Exception Handling).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class from serialization data.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" /> da dati di serializzazione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class with a specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" /> con un messaggio specificato.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.CanResume">
      <summary vsli:raw="Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.">Indica se l'eccezione può essere recuperata e se è possibile continuare l'esecuzione del codice dal punto in cui è stata generata l'eccezione.</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;, because resumable exceptions are not implemented.">Sempre <see langword="false" />, perché non sono implementate eccezioni recuperabili.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary vsli:raw="Replaces the standard common language runtime (CLR) free-threaded marshaler with the standard OLE STA marshaler.">Sostituisce il gestore del marshalling con modello di threading Free CLR (Common Language Runtime) con il gestore del marshalling OLE STA.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.StandardOleMarshalObject&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
      <summary vsli:raw="Provides support for type equivalence.">Fornisce supporto per l'equivalenza del tipo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeIdentifierAttribute&quot; /&gt; class.">Crea una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeIdentifierAttribute&quot; /&gt; class with the specified scope and identifier.">Crea una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> con ambito e identificatore specificati.</summary>
      <param name="scope" vsli:raw="The first type equivalence string.">Prima stringa di equivalenza di tipo.</param>
      <param name="identifier" vsli:raw="The second type equivalence string.">Seconda stringa di equivalenza di tipo.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
      <summary vsli:raw="Gets the value of the &lt;paramref name=&quot;identifier&quot; /&gt; parameter that was passed to the &lt;see cref=&quot;M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)&quot; /&gt; constructor.">Ottiene il valore del parametro <paramref name="identifier" /> passato al costruttore <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns vsli:raw="The value of the constructor's &lt;paramref name=&quot;identifier&quot; /&gt; parameter.">Valore del parametro <paramref name="identifier" /> del costruttore.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
      <summary vsli:raw="Gets the value of the &lt;paramref name=&quot;scope&quot; /&gt; parameter that was passed to the &lt;see cref=&quot;M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)&quot; /&gt; constructor.">Ottiene il valore del parametro <paramref name="scope" /> passato al costruttore <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns vsli:raw="The value of the constructor's &lt;paramref name=&quot;scope&quot; /&gt; parameter.">Valore del parametro <paramref name="scope" /> del costruttore.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCFLAGS&quot; /&gt; that were originally imported for this method from the COM type library.">Contiene l'oggetto <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> originariamente importato per questo metodo dalla libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibFuncAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value.">Inizializza una nuova istanza della classe <see langword="TypeLibFuncAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> specificato.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for the attributed method as found in the type library it was imported from.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per il metodo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Runtime.InteropServices.TypeLibFuncFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibFuncAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value.">Inizializza una nuova istanza della classe <see langword="TypeLibFuncAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> specificato.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for the attributed method as found in the type library it was imported from.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per il metodo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibFuncAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for this method.">Ottiene il valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per questo metodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for this method.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per questo metodo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see langword=&quot;FUNCFLAGS&quot; /&gt; in the COM type library from where this method was imported.">Descrive le impostazioni originali dell'oggetto <see langword="FUNCFLAGS" /> nella libreria dei tipi COM dalla quale questo metodo è stato importato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable">
      <summary vsli:raw="The function that supports data binding.">Funzione che supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultBind">
      <summary vsli:raw="The function that best represents the object. Only one function in a type information can have this attribute.">Funzione che meglio rappresenta l'oggetto. L'attributo può essere applicato solo a una delle funzioni nelle informazioni su un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultCollelem">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function.">Consente un'ottimizzazione in cui il compilatore cerca un membro denominato "xyz" nel tipo "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione della funzione di accesso per un elemento dell'insieme predefinito, verrà generata una chiamata alla funzione di tale membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDisplayBind">
      <summary vsli:raw="The function that is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable&quot; /&gt; must also be set.">Funzione che viene visualizzata dall'utente come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FHidden">
      <summary vsli:raw="The function should not be displayed to the user, although it exists and is bindable.">La funzione non deve essere visualizzata all'utente, anche se è disponibile ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FImmediateBind">
      <summary vsli:raw="The function is mapped as individual bindable properties.">La funzione viene mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FNonBrowsable">
      <summary vsli:raw="The property appears in an object browser, but not in a properties browser.">La proprietà viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FReplaceable">
      <summary vsli:raw="Tags the interface as having default behaviors.">Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRequestEdit">
      <summary vsli:raw="When set, any call to a method that sets the property results first in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;.">Quando è impostato, qualsiasi chiamata a un metodo che imposta la proprietà determina anzitutto una chiamata a <see langword="IPropertyNotifySink::OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level functions or functions that type browsers should not display.">Il flag è destinato alle funzioni a livello di sistema o alle funzioni che non devono essere visualizzate dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FSource">
      <summary vsli:raw="The function returns an object that is a source of events.">La funzione restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUiDefault">
      <summary vsli:raw="The type information member is the default member for display in the user interface.">Il membro delle informazioni sul tipo è il membro predefinito per la visualizzazione nell'interfaccia utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUsesGetLastError">
      <summary vsli:raw="The function supports &lt;see langword=&quot;GetLastError&quot; /&gt;.">La funzione supporta <see langword="GetLastError" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibImportClassAttribute">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Type&quot; /&gt; exclusively uses an interface. This class cannot be inherited.">Specifica quale oggetto <see cref="T:System.Type" /> utilizza in modo esclusivo un'interfaccia. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibImportClassAttribute&quot; /&gt; class specifying the &lt;see cref=&quot;T:System.Type&quot; /&gt; that exclusively uses an interface.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibImportClassAttribute" /> specificando la classe <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</summary>
      <param name="importClass" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Oggetto <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibImportClassAttribute.Value">
      <summary vsli:raw="Gets the name of a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Ottiene il nome di un oggetto <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</summary>
      <returns vsli:raw="The name of a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Nome di un oggetto <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; that were originally imported for this type from the COM type library.">Contiene l'oggetto <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> originariamente importato per questo tipo dalla libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value.">Inizializza una nuova istanza della classe <see langword="TypeLibTypeAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> specificato.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for the attributed type as found in the type library it was imported from.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per il tipo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Runtime.InteropServices.TypeLibTypeFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value.">Inizializza una nuova istanza della classe <see langword="TypeLibTypeAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> specificato.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for the attributed type as found in the type library it was imported from.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per il tipo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibTypeAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for this type.">Ottiene il valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per questo tipo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for this type.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per questo tipo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; in the COM type library from which the type was imported.">Descrive le impostazioni originali dell'oggetto <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> nella libreria dei tipi COM dalla quale il tipo è stato importato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAggregatable">
      <summary vsli:raw="The class supports aggregation.">La classe supporta l'aggregazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAppObject">
      <summary vsli:raw="A type description that describes an &lt;see langword=&quot;Application&quot; /&gt; object.">Descrizione di tipo relativa a un oggetto <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate">
      <summary vsli:raw="Instances of the type can be created by &lt;see langword=&quot;ITypeInfo::CreateInstance&quot; /&gt;.">Le istanze del tipo possono essere create da <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FControl">
      <summary vsli:raw="The type is a control from which other types will be derived, and should not be displayed to users.">Il tipo è un controllo da cui saranno derivati altri tipi e non deve essere visibile agli utenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable">
      <summary vsli:raw="Indicates that the interface derives from &lt;see langword=&quot;IDispatch&quot; /&gt;, either directly or indirectly.">Indica che l'interfaccia deriva da <see langword="IDispatch" />, direttamente o indirettamente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDual">
      <summary vsli:raw="The interface supplies both &lt;see langword=&quot;IDispatch&quot; /&gt; and V-table binding.">L'interfaccia fornisce l'associazione a <see langword="IDispatch" /> e a V-table.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FHidden">
      <summary vsli:raw="The type should not be displayed to browsers.">Il tipo non deve essere visibile ai visualizzatori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FLicensed">
      <summary vsli:raw="The type is licensed.">Il tipo è concesso in licenza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FNonExtensible">
      <summary vsli:raw="The interface cannot add members at run time.">L'interfaccia non può aggiungere membri in fase di esecuzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FOleAutomation">
      <summary vsli:raw="The types used in the interface are fully compatible with Automation, including vtable binding support.">I tipi utilizzati nell'interfaccia sono completamente compatibili con l'automazione, compreso il supporto per l'associazione vtable.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FPreDeclId">
      <summary vsli:raw="The type is predefined. The client application should automatically create a single instance of the object that has this attribute. The name of the variable that points to the object is the same as the class name of the object.">Tipo già definito. È necessario che nell'applicazione client venga creata automaticamente una singola istanza dell'oggetto che contiene questo attributo. Il nome della variabile che punta all'oggetto corrisponde a quello della classe dell'oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReplaceable">
      <summary vsli:raw="The object supports &lt;see langword=&quot;IConnectionPointWithDefault&quot; /&gt;, and has default behaviors.">L'oggetto supporta <see langword="IConnectionPointWithDefault" /> e dispone di comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level types or types that type browsers should not display.">Il flag viene utilizzato per i tipi a livello di sistema o che non devono essere visualizzati dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReverseBind">
      <summary vsli:raw="Indicates base interfaces should be checked for name resolution before checking child interfaces. This is the reverse of the default behavior.">Indica che la risoluzione dei nomi delle interfacce di base deve essere verificata prima di verificare gli elementi figlio. È il contrario del comportamento predefinito.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.VARFLAGS&quot; /&gt; that were originally imported for this field from the COM type library.">Contiene l'oggetto <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> originariamente importato per questo campo dalla libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> specificato.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for the attributed field as found in the type library it was imported from.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per il campo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Runtime.InteropServices.TypeLibVarFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> specificato.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for the attributed field as found in the type library it was imported from.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per il campo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVarAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for this field.">Ottiene il valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per questo campo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for this field.">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per questo campo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see cref=&quot;T:System.Runtime.InteropServices.VARFLAGS&quot; /&gt; in the COM type library from which the variable was imported.">Descrive le impostazioni originali dell'oggetto <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> nella libreria dei tipi COM dalla quale la variabile è stata importata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable">
      <summary vsli:raw="The variable supports data binding.">La variabile supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultBind">
      <summary vsli:raw="The variable is the single property that best represents the object. Only one variable in a type info can have this value.">La variabile è la singola proprietà che meglio rappresenta l'oggetto. Solo una variabile nelle informazioni su un tipo può avere questo valore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultCollelem">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function.">Consente un'ottimizzazione in cui il compilatore cerca un membro denominato "xyz" nel tipo "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione della funzione di accesso per un elemento dell'insieme predefinito, verrà generata una chiamata alla funzione di tale membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDisplayBind">
      <summary vsli:raw="The variable is displayed as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable&quot; /&gt; must also be set.">La variabile viene visualizzata come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FHidden">
      <summary vsli:raw="The variable should not be displayed in a browser, though it exists and is bindable.">La variabile non deve essere visualizzata in un visualizzatore, anche se è presente ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FImmediateBind">
      <summary vsli:raw="The variable is mapped as individual bindable properties.">La variabile viene mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FNonBrowsable">
      <summary vsli:raw="The variable appears in an object browser, but not in a properties browser.">La variabile viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReadOnly">
      <summary vsli:raw="Assignment to the variable should not be allowed.">L'assegnazione alla variabile non deve essere consentita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReplaceable">
      <summary vsli:raw="Tags the interface as having default behaviors.">Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRequestEdit">
      <summary vsli:raw="Indicates that the property supports the COM &lt;see langword=&quot;OnRequestEdit&quot; /&gt; notification.">Indica che la proprietà supporta la notifica <see langword="OnRequestEdit" /> di COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level functions or functions that type browsers should not display.">Il flag è destinato alle funzioni a livello di sistema o alle funzioni che non devono essere visualizzate dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FSource">
      <summary vsli:raw="The variable returns an object that is a source of events.">La variabile restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FUiDefault">
      <summary vsli:raw="The default display in the user interface.">Visualizzazione predefinita nell'interfaccia utente.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVersionAttribute">
      <summary vsli:raw="Specifies the version number of an exported type library.">Specifica il numero della versione di una libreria dei tipi esportata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVersionAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVersionAttribute&quot; /&gt; class with the major and minor version numbers of the type library.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" /> con i numeri di versione principali e secondari della libreria dei tipi.</summary>
      <param name="major" vsli:raw="The major version number of the type library.">Numero della versione principale della libreria dei tipi.</param>
      <param name="minor" vsli:raw="The minor version number of the type library.">Numero della versione secondaria della libreria dei tipi.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the type library.">Ottiene il numero della versione principale della libreria dei tipi.</summary>
      <returns vsli:raw="The major version number of the type library.">Numero della versione principale della libreria dei tipi.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the type library.">Ottiene il numero della versione secondaria della libreria dei tipi.</summary>
      <returns vsli:raw="The minor version number of the type library.">Numero della versione secondaria della libreria dei tipi.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnknownWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_UNKNOWN&quot; /&gt;.">Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_UNKNOWN" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnknownWrapper&quot; /&gt; class with the object to be wrapped.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.UnknownWrapper" /> con l'oggetto di cui eseguire il wrapping.</summary>
      <param name="obj" vsli:raw="The object being wrapped.">Oggetto di cui eseguire il wrapping.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject">
      <summary vsli:raw="Gets the object contained by this wrapper.">Ottiene l'oggetto contenuto da questo wrapper.</summary>
      <returns vsli:raw="The wrapped object.">Oggetto di cui è stato eseguito il wrapping.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
      <summary vsli:raw="Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.">Controlla il comportamento di marshalling di una firma di delegato passata come un puntatore a una funzione non gestita o da codice non gestito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute&quot; /&gt; class with the specified calling convention.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute" /> con la convenzione di chiamata specificata.</summary>
      <param name="callingConvention" vsli:raw="The specified calling convention.">Convenzione di chiamata specificata.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping">
      <summary vsli:raw="Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.">Abilita o disabilita il comportamento di mapping più appropriato per la conversione di caratteri Unicode in caratteri ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention">
      <summary vsli:raw="Gets the value of the calling convention.">Ottiene il valore della convenzione di chiamata.</summary>
      <returns vsli:raw="The value of the calling convention specified by the &lt;see cref=&quot;M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)&quot; /&gt; constructor.">Valore della convenzione di chiamata specificato dal costruttore <see cref="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet">
      <summary vsli:raw="Indicates how to marshal string parameters to the method, and controls name mangling.">Indica come eseguire il marshalling dei parametri di stringa nel metodo e controlla l'alterazione dei nomi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError">
      <summary vsli:raw="Indicates whether the callee calls the &lt;see langword=&quot;SetLastError&quot; /&gt; Windows API function before returning from the attributed method.">Indica se il destinatario della chiamata chiama la funzione API Windows <see langword="SetLastError" /> prima della restituzione di un risultato dal metodo con attributi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.">Abilita o disabilita la generazione di un'eccezione su un carattere Unicode di cui non è possibile eseguire il mapping convertito in un carattere ANSI "?".</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedType">
      <summary>Identifica come eseguire il marshalling di parametri o campi nel codice gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
      <summary>Stringa di caratteri ANSI costituita da un singolo byte con prefisso di lunghezza. È possibile usare questo membro nel tipo di dati <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
      <summary>Tipo dinamico che determina il tipo di un oggetto in fase di esecuzione ed effettua il marshalling dell'oggetto come quel tipo. Questo membro è valido solo per metodi di platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Bool">
      <summary>Valore booleano a 4 byte (<see langword="true" /> != 0, <see langword="false" /> = 0). Si tratta del tipo BOOL Win32.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.BStr">
      <summary>Stringa di caratteri Unicode costituita da un byte doppio con prefisso di lunghezza. È possibile usare questo membro, ovvero la stringa predefinita in COM, nel tipo di dati <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
      <summary>Quando la proprietà <see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /> è impostata su <see langword="ByValArray" />, il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> deve essere impostato per indicare il numero di elementi nella matrice. Il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /> può contenere facoltativamente l'oggetto <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> degli elementi della matrice quando è necessario distinguere tra più tipi di stringa. È possibile usare solo questo oggetto <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> in una matrice i cui elementi vengono visualizzati come campi in una struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
      <summary>Usato per matrici di caratteri di lunghezza fissa inline visualizzate all'interno di una struttura. I tipi <see langword="ByValTStr" /> si comportano come stringhe a dimensione fissa in stile C all'interno di una struttura (ad esempio, <c>char s[5]</c>). Il tipo di carattere usato con <see langword="ByValTStr" /> è determinato dall'argomento <see cref="T:System.Runtime.InteropServices.CharSet" /> dell'attributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> applicato alla struttura che lo contiene. Usare sempre il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> per indicare le dimensioni della matrice.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Currency">
      <summary>Tipo di valuta. Usato su un oggetto <see cref="T:System.Decimal" /> per effettuare il marshalling del valore decimale come tipo di valuta COM anziché come <see langword="Decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
      <summary>Specifica la classe del gestore di marshalling personalizzato quando è usato con il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> o <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" />. È possibile usare il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /> per passare informazioni aggiuntive al gestore di marshalling personalizzato. È possibile usare questo membro su qualsiasi tipo di riferimento. Questo membro è valido solo per i parametri e i valori restituiti. Non può essere usato nei campi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Error">
      <summary>Tipo nativo associato a <see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /> o a <see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" /> e che determina l'esportazione del parametro come HRESULT nella libreria dei tipi esportata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
      <summary>Intero che può essere usato come puntatore a funzione di tipo C. È possibile usare questo membro in un tipo di dati <see cref="T:System.Delegate" /> o in un tipo che eredita da <see cref="T:System.Delegate" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.HString">
      <summary>Stringa Windows Runtime. È possibile usare questo membro nel tipo di dati <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I1">
      <summary>Intero con segno a 1 byte. È possibile usare questo membro per trasformare un valore booleano in un valore <see langword="bool" /> a 1 byte di tipo C (<see langword="true" /> = 1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I2">
      <summary>Intero con segno a 2 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I4">
      <summary>Intero con segno a 4 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I8">
      <summary>Intero con segno a 8 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IDispatch">
      <summary>Puntatore a <see langword="IDispatch" /> COM (<see langword="Object" /> in Microsoft Visual Basic 6.0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
      <summary>Puntatore a interfaccia Windows Runtime. È possibile usare questo membro nel tipo di dati <see cref="T:System.Object" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Interface">
      <summary>Puntatore a interfaccia COM. L'oggetto <see cref="T:System.Guid" /> dell'interfaccia è ottenuto dai metadati della classe. Usare questo membro per specificare il tipo di interfaccia esatto o il tipo di interfaccia predefinito se lo si applica a una classe. Questo membro produce lo stesso comportamento di <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> quando lo si applica al tipo di dati <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
      <summary>Puntatore a <see langword="IUnknown" /> COM. È possibile usare questo membro nel tipo di dati <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
      <summary>Puntatore al primo elemento di una matrice di tipo C. Quando si effettua il marshalling da codice gestito a non gestito, la lunghezza della matrice dipende dalla lunghezza della matrice gestita. Quando si effettua il marshalling da codice non gestito a gestito, la lunghezza della matrice dipende dai campi <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> e <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" />, facoltativamente seguiti dal tipo non gestito degli elementi all'interno della matrice quando è necessario distinguere tra più tipi di stringa.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
      <summary>Stringa di caratteri ANSI a un byte a terminazione Null. È possibile usare questo membro nei tipi di dati <see cref="T:System.String" /> e <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
      <summary>Puntatore a una struttura di tipo C usata per effettuare il marshalling di classi formattate gestite. Questo membro è valido solo per metodi di platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
      <summary>Stringa di caratteri dipendente dalla piattaforma: ANSI in Windows 98 e Unicode in Windows NT e Windows XP. Questo valore è supportato solo per platform invoke, non per l'interoperabilità COM, perché l'esportazione di una stringa di tipo <see langword="LPTStr" /> non è supportata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPUTF8Str">
      <summary>Puntatore a una stringa con codifica UTF-8.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
      <summary>Stringa di caratteri Unicode a 2 byte a terminazione Null. Non è possibile usare il valore <see langword="LPWStr" /> con una stringa non gestita, a meno che la stringa non sia stata creata tramite la funzione <see langword="CoTaskMemAlloc" /> non gestita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R4">
      <summary>Numero a virgola mobile a 4 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R8">
      <summary>Numero a virgola mobile a 8 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
      <summary>
        <see langword="SafeArray" /> è una matrice autodescrittiva che contiene il tipo, la dimensione e i limiti dei dati della matrice associati. È possibile usare questo membro con il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" /> per eseguire l'override del tipo di elemento predefinito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Struct">
      <summary>VARIANT usato per effettuare il marshalling di tipi valore e classi formattate gestite.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysInt">
      <summary>Intero con segno dipendente dalla piattaforma: 4 byte in Windows a 32 bit, 8 byte in Windows a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">
      <summary>Intero senza segno dipendente dalla piattaforma: 4 byte in Windows a 32 bit, 8 byte in Windows a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
      <summary>Stringa <see langword="char" /> dipendente dalla piattaforma con prefisso della lunghezza: ANSI in Windows 98, Unicode in Windows NT. Questo membro simile a BSTR viene usato raramente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U1">
      <summary>Intero senza segno a 1 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U2">
      <summary>Intero senza segno a 2 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U4">
      <summary>Intero senza segno a 4 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U8">
      <summary>Intero senza segno a 8 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VariantBool">
      <summary>Tipo VARIANT_BOOL definito da OLE a 2 byte (<see langword="true" /> = -1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
      <summary>Valore che consente a Visual Basic di modificare una stringa in codice non gestito e riflettere i risultati in codice gestito. Questo valore è supportato solo per platform invoke.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VarEnum">
      <summary vsli:raw="Indicates how to marshal the array elements when an array is marshaled from managed to unmanaged code as a &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Indica le modalità di esecuzione del marshalling degli elementi della matrice quando viene effettuato il marshalling di una matrice da codice gestito a codice non gestito come <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ARRAY">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;SAFEARRAY&quot; /&gt; pointer.">Indica un puntatore a <see langword="SAFEARRAY" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB">
      <summary vsli:raw="Indicates length prefixed bytes.">Indica i byte per il prefisso di lunghezza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB_OBJECT">
      <summary vsli:raw="Indicates that a blob contains an object.">Indica che un blob contiene un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BOOL">
      <summary vsli:raw="Indicates a Boolean value.">Indica un valore Boolean.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BSTR">
      <summary vsli:raw="Indicates a BSTR string.">Indica una stringa BSTR.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BYREF">
      <summary vsli:raw="Indicates that a value is a reference.">Indica che un valore è un riferimento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CARRAY">
      <summary vsli:raw="Indicates a C style array.">Indica una matrice di tipo C.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CF">
      <summary vsli:raw="Indicates the clipboard format.">Indica il formato degli Appunti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CLSID">
      <summary vsli:raw="Indicates a class ID.">Indica un ID di classe.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CY">
      <summary vsli:raw="Indicates a currency value.">Indica un valore di valuta.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DATE">
      <summary vsli:raw="Indicates a DATE value.">Indica un valore DATE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DECIMAL">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;decimal&quot; /&gt; value.">Indica un valore <see langword="decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;IDispatch&quot; /&gt; pointer.">Indica un puntatore a <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_EMPTY">
      <summary vsli:raw="Indicates that a value was not specified.">Indica che un valore non è stato specificato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ERROR">
      <summary vsli:raw="Indicates an SCODE.">Indica un SCODE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_FILETIME">
      <summary vsli:raw="Indicates a FILETIME value.">Indica un valore FILETIME.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_HRESULT">
      <summary vsli:raw="Indicates an HRESULT.">Indica un HRESULT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I1">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;char&quot; /&gt; value.">Indica un valore <see langword="char" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I2">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;short&quot; /&gt; integer.">Indica un intero <see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I4">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;long&quot; /&gt; integer.">Indica un intero <see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I8">
      <summary vsli:raw="Indicates a 64-bit integer.">Indica un intero a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_INT">
      <summary vsli:raw="Indicates an integer value.">Indica un intero.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPSTR">
      <summary vsli:raw="Indicates a null-terminated string.">Indica una stringa con terminazione di tipo Null.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPWSTR">
      <summary vsli:raw="Indicates a wide string terminated by &lt;see langword=&quot;null&quot; /&gt;.">Indica una stringa di caratteri estesi con terminazione <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_NULL">
      <summary vsli:raw="Indicates a null value, similar to a null value in SQL.">Indica un valore null, simile a un valore null in SQL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_PTR">
      <summary vsli:raw="Indicates a pointer type.">Indica un tipo puntatore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R4">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;float&quot; /&gt; value.">Indica un valore <see langword="float" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R8">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;double&quot; /&gt; value.">Indica un valore <see langword="double" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_RECORD">
      <summary vsli:raw="Indicates a user defined type.">Indica un tipo definito dall'utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_SAFEARRAY">
      <summary vsli:raw="Indicates a SAFEARRAY. Not valid in a VARIANT.">Indica un SAFEARRAY. Non valido in un VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORAGE">
      <summary vsli:raw="Indicates that the name of a storage follows.">Indica che segue il nome di un archivio.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORED_OBJECT">
      <summary vsli:raw="Indicates that a storage contains an object.">Indica che un archivio contiene un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAM">
      <summary vsli:raw="Indicates that the name of a stream follows.">Indica che segue il nome di un flusso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAMED_OBJECT">
      <summary vsli:raw="Indicates that a stream contains an object.">Indica che un flusso contiene un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI1">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;byte&quot; /&gt;.">Indica un valore <see langword="byte" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI2">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt;&lt;see langword=&quot;short&quot; /&gt;.">Indica un valore <see langword="unsigned" /><see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI4">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt;.">Indica un valore <see langword="unsigned" /><see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI8">
      <summary vsli:raw="Indicates an 64-bit unsigned integer.">Rappresenta un intero senza segno a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UINT">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt; integer value.">Indica un intero <see langword="unsigned" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;IUnknown&quot; /&gt; pointer.">Indica un puntatore a <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_USERDEFINED">
      <summary vsli:raw="Indicates a user defined type.">Indica un tipo definito dall'utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VARIANT">
      <summary vsli:raw="Indicates a VARIANT &lt;see langword=&quot;far&quot; /&gt; pointer.">Indica un puntatore <see langword="far" /> VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VECTOR">
      <summary vsli:raw="Indicates a simple, counted array.">Indica una matrice a conteggio semplice.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VOID">
      <summary vsli:raw="Indicates a C style &lt;see langword=&quot;void&quot; /&gt;.">Indica un <see langword="void" /> di tipo C.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VariantWrapper">
      <summary vsli:raw="Marshals data of type &lt;see langword=&quot;VT_VARIANT | VT_BYREF&quot; /&gt; from managed to unmanaged code. This class cannot be inherited.">Esegue il marshalling dei dati di tipo <see langword="VT_VARIANT | VT_BYREF" /> dal codice gestito al codice non gestito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.VariantWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> per il parametro <see cref="T:System.Object" /> specificato.</summary>
      <param name="obj" vsli:raw="The object to marshal.">Oggetto di cui eseguire il marshalling.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.VariantWrapper.WrappedObject">
      <summary vsli:raw="Gets the object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; object.">Ottiene l'oggetto incluso dall'oggetto <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</summary>
      <returns vsli:raw="The object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; object.">Oggetto incluso dall'oggetto <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</returns>
    </member>
    <member name="T:System.Security.SecureString">
      <summary vsli:raw="Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed. This class cannot be inherited.">Rappresenta il testo che deve rimanere riservato, ad esempio eliminandolo dalla memoria del computer quando non è più necessario. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.SecureString.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Security.SecureString" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this instance.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa istanza.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This operation is not supported on this platform.">Questa operazione non è supportata su questa piattaforma.</exception>
    </member>
    <member name="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class from a subarray of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects.  &#xA;  &#xA; This constructor is not CLS-compliant. The CLS-compliant alternative is &lt;see cref=&quot;M:System.Security.SecureString.#ctor&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.SecureString" /> da una sottomatrice di oggetti <see cref="T:System.Char" />.  
Questo costruttore non è conforme a CLS. L'alternativa conforme a CLS è <see cref="M:System.Security.SecureString.#ctor" />.</summary>
      <param name="value" vsli:raw="A pointer to an array of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects.">Puntatore a una matrice di oggetti <see cref="T:System.Char" />.</param>
      <param name="length" vsli:raw="The number of elements of &lt;paramref name=&quot;value&quot; /&gt; to include in the new instance.">Numero di elementi di <paramref name="value" /> da includere nella nuova istanza.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than 65,536.">
        <paramref name="length" /> è minore di zero o maggiore di 65.536.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This operation is not supported on this platform.">Questa operazione non è supportata su questa piattaforma.</exception>
    </member>
    <member name="M:System.Security.SecureString.AppendChar(System.Char)">
      <summary vsli:raw="Appends a character to the end of the current secure string.">Aggiunge un carattere alla fine della stringa protetta corrente.</summary>
      <param name="c" vsli:raw="A character to append to this secure string.">Carattere da aggiungere a questa stringa protetta.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Performing this operation would make the length of this secure string greater than 65,536 characters.">Con questa operazione la lunghezza della stringa protetta sarà superiore a 65.536 caratteri.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.Clear">
      <summary vsli:raw="Deletes the value of the current secure string.">Elimina il valore della stringa protetta corrente.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Questa stringa protetta è di sola lettura.</exception>
    </member>
    <member name="M:System.Security.SecureString.Copy">
      <summary vsli:raw="Creates a copy of the current secure string.">Crea una copia della stringa protetta corrente.</summary>
      <returns vsli:raw="A duplicate of this secure string.">Duplicato di questa stringa protetta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.Dispose">
      <summary vsli:raw="Releases all resources used by the current &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object.">Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Security.SecureString" /> corrente.</summary>
    </member>
    <member name="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
      <summary vsli:raw="Inserts a character in this secure string at the specified index position.">Inserisce un carattere in questa stringa protetta nella posizione di indice specificata.</summary>
      <param name="index" vsli:raw="The index position where parameter &lt;paramref name=&quot;c&quot; /&gt; is inserted.">Posizione di indice in cui viene inserito il parametro <paramref name="c" />.</param>
      <param name="c" vsli:raw="The character to insert.">Carattere da inserire.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than the length of this secure string.  &#xA;  &#xA; -or-  &#xA;  &#xA; Performing this operation would make the length of this secure string greater than 65,536 characters.">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza della stringa protetta.  
-oppure- 
Con questa operazione la lunghezza della stringa protetta sarà superiore a 65.536 caratteri.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.IsReadOnly">
      <summary vsli:raw="Indicates whether this secure string is marked read-only.">Indica se questa stringa protetta è contrassegnata come di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this secure string is marked read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questa stringa protetta è contrassegnata come di sola lettura; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
    </member>
    <member name="P:System.Security.SecureString.Length">
      <summary vsli:raw="Gets the number of characters in the current secure string.">Ottiene il numero di caratteri nella stringa protetta corrente.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects in this secure string.">Numero di oggetti <see cref="T:System.Char" /> in questa stringa protetta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
    </member>
    <member name="M:System.Security.SecureString.MakeReadOnly">
      <summary vsli:raw="Makes the text value of this secure string read-only.">Rende il valore di testo di questa stringa protetta di sola lettura.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
    </member>
    <member name="M:System.Security.SecureString.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the character at the specified index position from this secure string.">Rimuove il carattere nella posizione di indice specificata da questa stringa protetta.</summary>
      <param name="index" vsli:raw="The index position of a character in this secure string.">Posizione di indice di un carattere in questa stringa protetta.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than or equal to the length of this secure string.">
        <paramref name="index" /> è minore di zero oppure maggiore o uguale alla lunghezza di questa stringa protetta.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
      <summary vsli:raw="Replaces the existing character at the specified index position with another character.">Sostituisce il carattere esistente nella posizione di indice specificata con un altro carattere.</summary>
      <param name="index" vsli:raw="The index position of an existing character in this secure string.">Posizione di indice di un carattere esistente in questa stringa protetta.</param>
      <param name="c" vsli:raw="A character that replaces the existing character.">Carattere che sostituisce il carattere esistente.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than or equal to the length of this secure string.">
        <paramref name="index" /> è minore di zero oppure maggiore o uguale alla lunghezza di questa stringa protetta.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="T:System.Security.SecureStringMarshal">
      <summary vsli:raw="Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.">Rende disponibile una raccolta di metodi per l'allocazione di memoria non gestita e per la copia di blocchi di memoria non gestita.</summary>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita, effettuando contemporaneamente la conversione nel formato ANSI.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied, or 0 if a null object was supplied.">Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into unmanaged memory.">Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Oggetto gestito da copiare.</param>
      <returns vsli:raw="The address, in unmanaged memory, where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object whose length is 0.">Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" /> oppure 0 se <paramref name="s" /> è un oggetto <see cref="T:System.Security.SecureString" /> con lunghezza 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">La memoria disponibile è insufficiente.</exception>
    </member>
  </members>
</doc>