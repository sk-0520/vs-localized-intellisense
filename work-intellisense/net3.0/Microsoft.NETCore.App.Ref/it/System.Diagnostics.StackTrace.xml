<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary vsli:raw="Provides information about a &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt;, which represents a function call on the call stack for the current thread.">Fornisce informazioni su un oggetto <see cref="T:System.Diagnostics.StackFrame" /> che rappresenta una chiamata a una funzione sullo stack di chiamate per il thread corrente.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" />.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class, optionally capturing source information.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> acquisendo eventualmente informazioni sull'origine.</summary>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire il nome file, il numero della riga e il numero della colonna dello stack frame; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that corresponds to a frame above the current stack frame.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che corrisponde a un frame sopra lo stack frame corrente.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack to skip.">Numero di frame fino allo stack da ignorare.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that corresponds to a frame above the current stack frame, optionally capturing source information.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che corrisponde a un frame sopra lo stack frame corrente, acquisendo facoltativamente informazioni sull'origine.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack to skip.">Numero di frame fino allo stack da ignorare.</param>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire il nome file, il numero della riga e il numero della colonna dello stack frame; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that contains only the given file name and line number.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che contiene solo il nome file e il numero di riga indicati.</summary>
      <param name="fileName" vsli:raw="The file name.">Nome file.</param>
      <param name="lineNumber" vsli:raw="The line number in the specified file.">Numero della riga nel file specificato.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that contains only the given file name, line number, and column number.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che contiene solo il nome file, il numero di riga e il numero di colonna indicati.</summary>
      <param name="fileName" vsli:raw="The file name.">Nome file.</param>
      <param name="lineNumber" vsli:raw="The line number in the specified file.">Numero della riga nel file specificato.</param>
      <param name="colNumber" vsli:raw="The column number in the specified file.">Numero della colonna nel file specificato.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary vsli:raw="Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Ottiene il numero della colonna nel file che contiene il codice in esecuzione. Le informazioni vengono generalmente estratte dai simboli di debug relativi al file eseguibile.</summary>
      <returns vsli:raw="The file column number, or 0 (zero) if the file column number cannot be determined.">Numero di colonna del file oppure 0 (zero) se non è possibile determinare il numero di colonna del file.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary vsli:raw="Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Ottiene il numero della riga nel file che contiene il codice in esecuzione. Le informazioni vengono generalmente estratte dai simboli di debug relativi al file eseguibile.</summary>
      <returns vsli:raw="The file line number, or 0 (zero) if the file line number cannot be determined.">Numero di riga del file oppure 0 (zero) se non è possibile determinare il numero di riga del file.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary vsli:raw="Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Ottiene il nome del file che contiene il codice in esecuzione. Le informazioni vengono generalmente estratte dai simboli di debug relativi al file eseguibile.</summary>
      <returns vsli:raw="The file name, or &lt;see langword=&quot;null&quot; /&gt; if the file name cannot be determined.">Nome del file oppure <see langword="null" /> se non è possibile determinare il nome del file.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary vsli:raw="Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the &lt;see cref=&quot;T:System.Diagnostics.DebuggableAttribute&quot; /&gt;.">Ottiene l'offset dall'inizio del codice MSIL (Microsoft Intermediate Language) per il metodo in esecuzione. Tale offset può essere approssimativo, in base al fatto che il compilatore JIT stia generando o meno un codice di debug. La generazione di queste informazioni di debug è controllata dall'elemento <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns vsli:raw="The offset from the start of the MSIL code for the method that is executing.">Offset dall'inizio del codice MSIL per il metodo in esecuzione.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary vsli:raw="Gets the method in which the frame is executing.">Ottiene il metodo in cui è in esecuzione il frame.</summary>
      <returns vsli:raw="The method in which the frame is executing.">Metodo in cui è in esecuzione il frame.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <summary vsli:raw="Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed. The generation of this debugging information is controlled by the &lt;see cref=&quot;T:System.Diagnostics.DebuggableAttribute&quot; /&gt; class.">Ottiene l'offset dall'inizio del codice nativo compilato in modalità JIT (&amp;gt;Just-in-Time) per il metodo che è in esecuzione. La generazione di queste informazioni di debug è controllata dalla classe <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns vsli:raw="The offset from the start of the JIT-compiled code for the method that is being executed.">Offset dall'inizio del codice compilato in modalità JIT (Just-in-Time) per il metodo che è in esecuzione.</returns>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary vsli:raw="Defines the value that is returned from the &lt;see cref=&quot;M:System.Diagnostics.StackFrame.GetNativeOffset&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.StackFrame.GetILOffset&quot; /&gt; method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.">Definisce il valore restituito dal metodo <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /> o dal metodo <see cref="M:System.Diagnostics.StackFrame.GetILOffset" /> quando l'offset nativo o MSIL (Microsoft Intermediate Language) è sconosciuto. Questo campo è costante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary vsli:raw="Builds a readable representation of the stack trace.">Compila una rappresentazione leggibile dell'analisi dello stack.</summary>
      <returns vsli:raw="A readable representation of the stack trace.">Rappresentazione leggibile dell'analisi dello stack.</returns>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions">
      <summary vsli:raw="Provides extension methods for the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class, which represents a function call on the call stack for the current thread.">Offre metodi di estensione per la classe <see cref="T:System.Diagnostics.StackFrame" /> che rappresenta una chiamata a una funzione sullo stack di chiamate per il thread corrente.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Returns a pointer to the base address of the native image that this stack frame is executing.">Restituisce un puntatore all'indirizzo di base dell'immagine nativa in esecuzione in questo stack frame.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Uno stack frame.</param>
      <returns vsli:raw="A pointer to the base address of the native image or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; if you're targeting the .NET Framework.">Un puntatore all'indirizzo di base dell'immagine nativa o <see cref="F:System.IntPtr.Zero" /> se la destinazione scelta è .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Gets an interface pointer to the start of the native code for the method that is being executed.">Ottiene un puntatore di interfaccia per l'inizio del codice nativo per il metodo in esecuzione.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Uno stack frame.</param>
      <returns vsli:raw="An interface pointer to the start of the native code for the method that is being executed or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; if you're targeting the .NET Framework.">Un puntatore di interfaccia per l'inizio del codice nativo per il metodo in esecuzione o <see cref="F:System.IntPtr.Zero" /> se la destinazione scelta è .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether an offset from the start of the IL code for the method that is executing is available.">Indica se è disponibile un offset dall'inizio del codice IL per il metodo in esecuzione.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Uno stack frame.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the offset is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'offset è disponibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether information about the method in which the specified frame is executing is available.">Indica se sono disponibili informazioni sul metodo in cui è in esecuzione il frame specificato.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Uno stack frame.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the method in which the current frame is executing is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se sono disponibili informazioni sul metodo in cui è in esecuzione il frame corrente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether the native image is available for the specified stack frame.">Indica se l'immagine nativa è disponibile per lo stack frame specificato.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Uno stack frame.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a native image is available for this stack frame; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un'immagine nativa è disponibile per lo stack frame; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether the file that contains the code that the specified stack frame is executing is available.">Indica se il file che contiene il codice che è in esecuzione nello stack frame specificato è disponibile.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Uno stack frame.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code that the specified stack frame is executing is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il codice che è in esecuzione nello stack frame specificato è disponibile. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary vsli:raw="Represents a stack trace, which is an ordered collection of one or more stack frames.">Rappresenta un'analisi dello stack, vale a dire una raccolta ordinata di uno o più stack frame.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, optionally capturing source information.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante, acquisendo facoltativamente informazioni sull'origine.</summary>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class that contains a single frame.">Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> che contiene un solo frame.</summary>
      <param name="frame" vsli:raw="The frame that the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; object should contain.">Frame che l'oggetto <see cref="T:System.Diagnostics.StackTrace" /> deve contenere.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> utilizzando l'oggetto eccezione fornito.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class, using the provided exception object and optionally capturing source information.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" />, utilizzando l'oggetto eccezione fornito e facoltativamente acquisendo informazioni sull'origine.</summary>
      <param name="exception">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <param name="needFileInfo">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object and skipping the specified number of frames.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> utilizzando l'oggetto eccezione fornito e ignorando il numero di frame specificato.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Numero di frame dello stack da cui iniziare la traccia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object, skipping the specified number of frames and optionally capturing source information.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> utilizzando l'oggetto eccezione fornito, ignorando il numero di frame specificato ed eventualmente acquisendo le informazioni sull'origine.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Numero di frame dello stack da cui iniziare la traccia.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, skipping the specified number of frames.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante, ignorando il numero di frame specificato.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Numero di frame dello stack da cui iniziare la traccia.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, skipping the specified number of frames and optionally capturing source information.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante, ignorando il numero di frame specificato ed eventualmente acquisendo le informazioni sull'origine.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Numero di frame dello stack da cui iniziare la traccia.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="P:System.Diagnostics.StackTrace.FrameCount">
      <summary vsli:raw="Gets the number of frames in the stack trace.">Ottiene il numero di frame nell'analisi dello stack.</summary>
      <returns vsli:raw="The number of frames in the stack trace.">Numero di frame nell'analisi dello stack.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <summary vsli:raw="Gets the specified stack frame.">Ottiene lo stack frame specificato.</summary>
      <param name="index" vsli:raw="The index of the stack frame requested.">Indice dello stack frame richiesto.</param>
      <returns vsli:raw="The specified stack frame.">Stack frame specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary vsli:raw="Returns a copy of all stack frames in the current stack trace.">Restituisce una copia di tutti gli stack frame nella traccia corrente dello stack.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; representing the function calls in the stack trace.">Matrice di tipo <see cref="T:System.Diagnostics.StackFrame" /> che rappresenta le chiamate di funzioni nella traccia dello stack.</returns>
    </member>
    <member name="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <summary vsli:raw="Defines the default for the number of methods to omit from the stack trace. This field is constant.">Definisce l'impostazione predefinita per il numero di metodi da omettere dall'analisi dello stack. Questo campo è costante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary vsli:raw="Builds a readable representation of the stack trace.">Compila una rappresentazione leggibile dell'analisi dello stack.</summary>
      <returns vsli:raw="A readable representation of the stack trace.">Rappresentazione leggibile dell'analisi dello stack.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder">
      <summary vsli:raw="Represents a symbol binder for managed code.">Rappresenta un raccoglitore di simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)">
      <summary vsli:raw="Gets the interface of the symbol reader for the current file.">Recupera l'interfaccia del visualizzatore dei simboli per il file corrente.</summary>
      <param name="importer" vsli:raw="The metadata import interface.">Interfaccia di importazione dei metadati.</param>
      <param name="filename" vsli:raw="The name of the file for which the reader interface is required.">Nome del file per cui è richiesta l'interfaccia del visualizzatore.</param>
      <param name="searchPath" vsli:raw="The search path used to locate the symbol file.">Percorso di ricerca utilizzato per rilevare il file di simboli.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolReader&quot; /&gt; interface that reads the debugging symbols.">Interfaccia <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> in cui è possibile leggere i simboli di debug.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder1">
      <summary vsli:raw="Represents a symbol binder for managed code.">Rappresenta un raccoglitore di simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)">
      <summary vsli:raw="Gets the interface of the symbol reader for the current file.">Recupera l'interfaccia del visualizzatore dei simboli per il file corrente.</summary>
      <param name="importer" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that refers to the metadata import interface.">Struttura <see cref="T:System.IntPtr" /> che fa riferimento all'interfaccia di importazione dei metadati.</param>
      <param name="filename" vsli:raw="The name of the file for which the reader interface is required.">Nome del file per cui è richiesta l'interfaccia del visualizzatore.</param>
      <param name="searchPath" vsli:raw="The search path used to locate the symbol file.">Percorso di ricerca utilizzato per rilevare il file di simboli.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolReader&quot; /&gt; interface that reads the debugging symbols.">Interfaccia <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> in cui è possibile leggere i simboli di debug.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocument">
      <summary vsli:raw="Represents a document referenced by a symbol store.">Rappresenta un documento al quale fa riferimento un archivio di simboli.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.CheckSumAlgorithmId">
      <summary vsli:raw="Gets the checksum algorithm identifier.">Recupera l'identificatore dell'algoritmo di checksum.</summary>
      <returns vsli:raw="A GUID identifying the checksum algorithm. The value is all zeros, if there is no checksum.">GUID identificativo dell'algoritmo di checksum. Saranno tutti valori zero, se non sono presenti checksum.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.DocumentType">
      <summary vsli:raw="Gets the type of the current document.">Recupera il tipo del documento corrente.</summary>
      <returns vsli:raw="The type of the current document.">Tipo di documento corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.FindClosestLine(System.Int32)">
      <summary vsli:raw="Returns the closest line that is a sequence point, given a line in the current document that might or might not be a sequence point.">Restituisce la riga più vicina che rappresenta un punto di sequenza, data una riga del documento corrente che può o essere o meno un punto di sequenza.</summary>
      <param name="line" vsli:raw="The specified line in the document.">Riga specificata nel documento.</param>
      <returns vsli:raw="The closest line that is a sequence point.">Riga più vicina che rappresenta un punto di sequenza.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetCheckSum">
      <summary vsli:raw="Gets the checksum.">Ottiene il checksum.</summary>
      <returns vsli:raw="The checksum.">Checksum.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Gets the embedded document source for the specified range.">Recupera l'origine del documento incorporato per l'intervallo specificato.</summary>
      <param name="startLine" vsli:raw="The starting line in the current document.">Riga iniziale del documento corrente.</param>
      <param name="startColumn" vsli:raw="The starting column in the current document.">Colonna iniziale del documento corrente.</param>
      <param name="endLine" vsli:raw="The ending line in the current document.">Riga finale del documento corrente.</param>
      <param name="endColumn" vsli:raw="The ending column in the current document.">Colonna finale del documento corrente.</param>
      <returns vsli:raw="The document source for the specified range.">Origine del documento relativa all'intervallo specificato.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.HasEmbeddedSource">
      <summary vsli:raw="Checks whether the current document is stored in the symbol store.">Verifica se il documento corrente è memorizzato nell'archivio simboli.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current document is stored in the symbol store; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il documento corrente è memorizzato nell'archivio di simboli, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.Language">
      <summary vsli:raw="Gets the language of the current document.">Recupera il linguaggio del documento corrente.</summary>
      <returns vsli:raw="The language of the current document.">Linguaggio del documento corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.LanguageVendor">
      <summary vsli:raw="Gets the language vendor of the current document.">Recupera il fornitore di linguaggio del documento corrente.</summary>
      <returns vsli:raw="The language vendor of the current document.">Fornitore di linguaggio del documento corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.SourceLength">
      <summary vsli:raw="Gets the length, in bytes, of the embedded source.">Recupera la lunghezza, in byte, dell'origine incorporata.</summary>
      <returns vsli:raw="The source length of the current document.">Lunghezza di origine del documento corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.URL">
      <summary vsli:raw="Gets the URL of the current document.">Ottiene l'URL del documento corrente.</summary>
      <returns vsli:raw="The URL of the current document.">URL del documento corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <summary vsli:raw="Represents a document referenced by a symbol store.">Rappresenta un documento al quale fa riferimento un archivio di simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary vsli:raw="Sets checksum information.">Imposta le informazioni di checksum.</summary>
      <param name="algorithmId" vsli:raw="The GUID representing the algorithm ID.">GUID che rappresenta l'ID dell'algoritmo.</param>
      <param name="checkSum" vsli:raw="The checksum.">Checksum.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])">
      <summary vsli:raw="Stores the raw source for a document in the symbol store.">Archivia l'origine non elaborata di un documento nell'archivio dei simboli.</summary>
      <param name="source" vsli:raw="The document source represented as unsigned bytes.">Origine del documento rappresentata come byte senza segno.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolMethod">
      <summary vsli:raw="Represents a method within a symbol store.">Rappresenta un metodo all'interno di un archivio simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace">
      <summary vsli:raw="Gets the namespace that the current method is defined within.">Recupera lo spazio dei nomi in cui è definito il metodo corrente.</summary>
      <returns vsli:raw="The namespace that the current method is defined within.">Spazio dei nomi in cui è definito il metodo corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.">Recupera l'offset MSIL (Microsoft Intermediate Language) all'interno del metodo che corrisponde alla posizione specificata.</summary>
      <param name="document" vsli:raw="The document for which the offset is requested.">Documento per cui è richiesto l'offset.</param>
      <param name="line" vsli:raw="The document line corresponding to the offset.">Riga del documento corrispondente all'offset.</param>
      <param name="column" vsli:raw="The document column corresponding to the offset.">Colonna del documento corrispondente all'offset.</param>
      <returns vsli:raw="The offset within the specified document.">Offset interno al documento specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters">
      <summary vsli:raw="Gets the parameters for the current method.">Recupera i parametri per il metodo corrente.</summary>
      <returns vsli:raw="The array of parameters for the current method.">Matrice di parametri per il metodo corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.">Recupera una matrice di coppie di offset di inizio e di fine corrispondente agli intervalli MSIL (Microsoft Intermediate Language) relativi a una data posizione all'interno del metodo.</summary>
      <param name="document" vsli:raw="The document for which the offset is requested.">Documento per cui è richiesto l'offset.</param>
      <param name="line" vsli:raw="The document line corresponding to the ranges.">Riga del documento corrispondente agli intervalli.</param>
      <param name="column" vsli:raw="The document column corresponding to the ranges.">Colonna del documento corrispondente agli intervalli.</param>
      <returns vsli:raw="An array of start and end offset pairs.">Matrice delle coppie di offset di inizio e di fine.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)">
      <summary vsli:raw="Returns the most enclosing lexical scope when given an offset within a method.">Restituisce l'ambito lessicale di maggiore inclusione quando viene specificato un offset all'interno di un metodo.</summary>
      <param name="offset" vsli:raw="The byte offset within the method of the lexical scope.">Offset di byte all'interno del metodo dell'ambito lessicale.</param>
      <returns vsli:raw="The most enclosing lexical scope for the given byte offset within the method.">Ambito lessicale di maggiore inclusione per l'offset di byte specificato all'interno del metodo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Gets the sequence points for the current method.">Recupera i punti di sequenza per il metodo corrente.</summary>
      <param name="offsets" vsli:raw="The array of byte offsets from the beginning of the method for the sequence points.">Matrice degli offset di byte a partire dall'inizio del metodo per i punti di sequenza.</param>
      <param name="documents" vsli:raw="The array of documents in which the sequence points are located.">Matrice di documenti in cui sono posizionati i punti di sequenza.</param>
      <param name="lines" vsli:raw="The array of lines in the documents at which the sequence points are located.">Matrice di righe dei documenti in cui sono posizionati i punti di sequenza.</param>
      <param name="columns" vsli:raw="The array of columns in the documents at which the sequence points are located.">Matrice di colonne dei documenti in cui sono posizionati i punti di sequenza.</param>
      <param name="endLines" vsli:raw="The array of lines in the documents at which the sequence points end.">Matrice di righe dei documenti in cui terminano i punti di sequenza.</param>
      <param name="endColumns" vsli:raw="The array of columns in the documents at which the sequence points end.">Matrice di colonne dei documenti in cui terminano i punti di sequenza.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Gets the start and end positions for the source of the current method.">Recupera la posizione iniziale e finale dell'origine del metodo corrente.</summary>
      <param name="docs" vsli:raw="The starting and ending source documents.">Documenti di origine iniziali e finali.</param>
      <param name="lines" vsli:raw="The starting and ending lines in the corresponding source documents.">Righe iniziali e finali dei documenti di origine corrispondenti.</param>
      <param name="columns" vsli:raw="The starting and ending columns in the corresponding source documents.">Colonne iniziali e finali dei documenti di origine corrispondenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the positions were defined; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le posizioni sono definite, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope">
      <summary vsli:raw="Gets the root lexical scope for the current method. This scope encloses the entire method.">Recupera l'ambito lessicale di primo livello per il metodo corrente. Questo ambito racchiude l'intero metodo.</summary>
      <returns vsli:raw="The root lexical scope that encloses the entire method.">Ambito lessicale di primo livello che racchiude l'intero metodo.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount">
      <summary vsli:raw="Gets a count of the sequence points in the method.">Recupera il conteggio dei punti di sequenza nel metodo.</summary>
      <returns vsli:raw="The count of the sequence points in the method.">Conteggio dei punti di sequenza nel metodo.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.Token">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; containing the metadata for the current method.">Recupera la proprietà <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> contenente i metadati per il metodo corrente.</summary>
      <returns vsli:raw="The metadata token for the current method.">Token di metadati per il metodo corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolNamespace">
      <summary vsli:raw="Represents a namespace within a symbol store.">Rappresenta uno spazio dei nomi all'interno di un archivio simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetNamespaces">
      <summary vsli:raw="Gets the child members of the current namespace.">Recupera i membri figlio dello spazio dei nomi corrente.</summary>
      <returns vsli:raw="The child members of the current namespace.">Membri figlio dello spazio dei nomi corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetVariables">
      <summary vsli:raw="Gets all the variables defined at global scope within the current namespace.">Ottiene tutte le variabili definite in ambito globale all'interno dello spazio dei nomi corrente.</summary>
      <returns vsli:raw="The variables defined at global scope within the current namespace.">Variabili definite in ambito globale all'interno dello spazio dei nomi corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolNamespace.Name">
      <summary vsli:raw="Gets the current namespace.">Ottiene lo spazio dei nomi corrente.</summary>
      <returns vsli:raw="The current namespace.">Spazio dei nomi corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolReader">
      <summary vsli:raw="Represents a symbol reader for managed code.">Rappresenta un visualizzatore dei simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary vsli:raw="Gets a document specified by the language, vendor, and type.">Ottiene un documento specificato in base al linguaggio, al fornitore e al tipo.</summary>
      <param name="url" vsli:raw="The URL that identifies the document.">URL identificativo del documento.</param>
      <param name="language" vsli:raw="The document language. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Linguaggio del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor" vsli:raw="The identity of the vendor for the document language. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Identità del fornitore del linguaggio del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType" vsli:raw="The type of the document. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Tipo del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="The specified document.">Documento specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments">
      <summary vsli:raw="Gets an array of all documents defined in the symbol store.">Recupera una matrice di tutti i documenti definiti nell'archivio simboli.</summary>
      <returns vsli:raw="An array of all documents defined in the symbol store.">Matrice di tutti i documenti definiti nell'archivio simboli.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables">
      <summary vsli:raw="Gets all global variables in the module.">Ottiene tutte le variabili globali del modulo.</summary>
      <returns vsli:raw="An array of all variables in the module.">Matrice di tutte le variabili del modulo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Gets a symbol reader method object when given the identifier of a method.">Recupera un oggetto del metodo del lettore di simboli, quando viene specificato l'identificatore di un metodo.</summary>
      <param name="method" vsli:raw="The metadata token of the method.">Token di metadati del metodo.</param>
      <returns vsli:raw="The symbol reader method object for the specified method identifier.">Oggetto del metodo del lettore di simboli dell'identificatore del metodo specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary vsli:raw="Gets a symbol reader method object when given the identifier of a method and its edit and continue version.">Recupera un oggetto del metodo del lettore di simboli, quando viene specificato l'identificatore di un metodo e la versione continua e di modifica.</summary>
      <param name="method" vsli:raw="The metadata token of the method.">Token di metadati del metodo.</param>
      <param name="version" vsli:raw="The edit and continue version of the method.">Versione continua e di modifica del metodo.</param>
      <returns vsli:raw="The symbol reader method object for the specified method identifier.">Oggetto del metodo del lettore di simboli dell'identificatore del metodo specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets a symbol reader method object that contains a specified position in a document.">Recupera un oggetto del metodo del lettore di simboli che contiene una posizione specificata in un documento.</summary>
      <param name="document" vsli:raw="The document in which the method is located.">Documento in cui è contenuto il metodo.</param>
      <param name="line" vsli:raw="The position of the line within the document. The lines are numbered, beginning with 1.">Posizione della riga all'interno del documento. Le righe sono numerate, partendo da 1.</param>
      <param name="column" vsli:raw="The position of column within the document. The columns are numbered, beginning with 1.">Posizione della colonna all'interno del documento. Le colonne sono numerate, partendo da 1.</param>
      <returns vsli:raw="The reader method object for the specified position in the document.">Oggetto del metodo del lettore relativo alla posizione specificata nel documento.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces">
      <summary vsli:raw="Gets the namespaces that are defined in the global scope within the current symbol store.">Recupera gli spazi dei nomi definiti nell'ambito globale all'interno dell'archivio simboli corrente.</summary>
      <returns vsli:raw="The namespaces defined in the global scope within the current symbol store.">Spazi dei nomi definiti nell'ambito globale all'interno dell'archivio simboli corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary vsli:raw="Gets an attribute value when given the attribute name.">Recupera un valore di attributo quando viene specificato il nome dell'attributo.</summary>
      <param name="parent" vsli:raw="The metadata token for the object for which the attribute is requested.">Token di metadati dell'oggetto per cui è richiesto l'attributo.</param>
      <param name="name" vsli:raw="The attribute name.">Nome dell'attributo.</param>
      <returns vsli:raw="The value of the attribute.">Valore dell'attributo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Gets the variables that are not local when given the parent.">Recupera le variabili che non sono locali, quando viene specificato l'elemento padre.</summary>
      <param name="parent" vsli:raw="The metadata token for the type for which the variables are requested.">Token di metadati relativo al tipo per cui sono richieste le variabili.</param>
      <returns vsli:raw="An array of variables for the parent.">Matrice di variabili relative all'elemento padre.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint">
      <summary vsli:raw="Gets the metadata token for the method that was specified as the user entry point for the module, if any.">Recupera il token di metadati per il metodo specificato come punto di ingresso utente per il modulo, se presente.</summary>
      <returns vsli:raw="The metadata token for the method that is the user entry point for the module.">Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente per il modulo.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolScope">
      <summary vsli:raw="Represents a lexical scope within &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolMethod&quot; /&gt;, providing access to the start and end offsets of the scope, as well as its child and parent scopes.">Rappresenta un ambito lessicale in <see cref="T:System.Diagnostics.SymbolStore.ISymbolMethod" /> che consente di accedere agli offset iniziali e finali dell'ambito, nonché ai relativi ambiti padre e figlio.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset">
      <summary vsli:raw="Gets the end offset of the current lexical scope.">Recupera l'offset finale dell'ambito lessicale corrente.</summary>
      <returns vsli:raw="The end offset of the current lexical scope.">Offset finale dell'ambito lessicale corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren">
      <summary vsli:raw="Gets the child lexical scopes of the current lexical scope.">Recupera gli ambiti lessicali figlio dell'ambito corrente.</summary>
      <returns vsli:raw="The child lexical scopes that of the current lexical scope.">Ambiti lessicali figlio dell'ambito lessicale corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals">
      <summary vsli:raw="Gets the local variables within the current lexical scope.">Recupera le variabili locali all'interno dell'ambito lessicale corrente.</summary>
      <returns vsli:raw="The local variables within the current lexical scope.">Variabili locali dell'ambito lessicale corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces">
      <summary vsli:raw="Gets the namespaces that are used within the current scope.">Recupera gli spazi dei nomi utilizzati nell'ambito corrente.</summary>
      <returns vsli:raw="The namespaces that are used within the current scope.">Spazi dei nomi utilizzati nell'ambito corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Method">
      <summary vsli:raw="Gets the method that contains the current lexical scope.">Recupera il metodo che contiene l'ambito lessicale corrente.</summary>
      <returns vsli:raw="The method that contains the current lexical scope.">Metodo contenente l'ambito lessicale corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Parent">
      <summary vsli:raw="Gets the parent lexical scope of the current scope.">Recupera l'ambito lessicale padre dell'ambito corrente.</summary>
      <returns vsli:raw="The parent lexical scope of the current scope.">Ambito lessicale padre dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset">
      <summary vsli:raw="Gets the start offset of the current lexical scope.">Recupera l'offset iniziale dell'ambito lessicale corrente.</summary>
      <returns vsli:raw="The start offset of the current lexical scope.">Offset iniziale dell'ambito lessicale corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolVariable">
      <summary vsli:raw="Represents a variable within a symbol store.">Rappresenta una variabile all'interno di un archivio simboli.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1">
      <summary vsli:raw="Gets the first address of a variable.">Recupera il primo indirizzo della variabile.</summary>
      <returns vsli:raw="The first address of the variable.">Primo indirizzo della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2">
      <summary vsli:raw="Gets the second address of a variable.">Recupera il secondo indirizzo della variabile.</summary>
      <returns vsli:raw="The second address of the variable.">Secondo indirizzo della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3">
      <summary vsli:raw="Gets the third address of a variable.">Recupera il terzo indirizzo della variabile.</summary>
      <returns vsli:raw="The third address of the variable.">Terzo indirizzo della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymAddressKind&quot; /&gt; value describing the type of the address.">Recupera il valore <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> descrittivo del tipo dell'indirizzo.</summary>
      <returns vsli:raw="The type of the address. One of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymAddressKind&quot; /&gt; values.">Tipo dell'indirizzo. Uno dei valori di <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Attributes">
      <summary vsli:raw="Gets the attributes of the variable.">Ottiene gli attributi della variabile.</summary>
      <returns vsli:raw="The variable attributes.">Attributi di variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset">
      <summary vsli:raw="Gets the end offset of a variable within the scope of the variable.">Recupera l'offset finale della variabile all'interno dell'ambito della variabile.</summary>
      <returns vsli:raw="The end offset of the variable.">Offset finale della variabile.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature">
      <summary vsli:raw="Gets the variable signature.">Ottiene la firma di variabile.</summary>
      <returns vsli:raw="The variable signature as an opaque blob.">Firma di variabile come blob opaco.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Name">
      <summary vsli:raw="Gets the name of the variable.">Ottiene il nome della variabile.</summary>
      <returns vsli:raw="The name of the variable.">Nome della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset">
      <summary vsli:raw="Gets the start offset of the variable within the scope of the variable.">Recupera l'offset iniziale della variabile all'interno dell'ambito della variabile.</summary>
      <returns vsli:raw="The start offset of the variable.">Offset iniziale della variabile.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolWriter">
      <summary vsli:raw="Represents a symbol writer for managed code.">Rappresenta un writer di simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
      <summary vsli:raw="Closes &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; and commits the symbols to the symbol store.">Chiude <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> e inserisce i simboli nel relativo archivio.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
      <summary vsli:raw="Closes the current method.">Chiude il metodo corrente.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
      <summary vsli:raw="Closes the most recent namespace.">Chiude l'ultimo spazio dei nomi aperto.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
      <summary vsli:raw="Closes the current lexical scope.">Chiude l'ambito lessicale corrente.</summary>
      <param name="endOffset" vsli:raw="The points past the last instruction in the scope.">Punti successivi all'ultima istruzione nell'ambito.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary vsli:raw="Defines a source document.">Definisce un documento di origine.</summary>
      <param name="url" vsli:raw="The URL that identifies the document.">URL identificativo del documento.</param>
      <param name="language" vsli:raw="The document language. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Linguaggio del documento. Questo parametro può essere <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor" vsli:raw="The identity of the vendor for the document language. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Identità del fornitore del linguaggio del documento. Questo parametro può essere <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType" vsli:raw="The type of the document. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Tipo del documento. Questo parametro può essere <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="The object that represents the document.">Oggetto che rappresenta il documento.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a field in a type or a global field.">Definisce un campo in un tipo o in un campo globale.</summary>
      <param name="parent" vsli:raw="The metadata type or method token.">Tipo di metadati o token di metodo.</param>
      <param name="name" vsli:raw="The field name.">Nome del campo.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the field attributes.">Combinazione bit per bit degli attributi del campo.</param>
      <param name="signature" vsli:raw="The field signature.">Firma di campo.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt; and &lt;paramref name=&quot;addr2&quot; /&gt;.">Tipi di indirizzo per <paramref name="addr1" /> e <paramref name="addr2" />.</param>
      <param name="addr1" vsli:raw="The first address for the field specification.">Primo indirizzo relativo al campo specificato.</param>
      <param name="addr2" vsli:raw="The second address for the field specification.">Secondo indirizzo relativo al campo specificato.</param>
      <param name="addr3" vsli:raw="The third address for the field specification.">Terzo indirizzo relativo al campo specificato.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single global variable.">Definisce una variabile globale singola.</summary>
      <param name="name" vsli:raw="The global variable name.">Nome della variabile globale.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the global variable attributes.">Una combinazione bit per bit degli attributi della variabile globale.</param>
      <param name="signature" vsli:raw="The global variable signature.">Firma della variabile globale.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Tipi di indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the global variable specification.">Primo indirizzo relativo alla variabile globale specificata.</param>
      <param name="addr2" vsli:raw="The second address for the global variable specification.">Secondo indirizzo relativo alla variabile globale specificata.</param>
      <param name="addr3" vsli:raw="The third address for the global variable specification.">Terzo indirizzo relativo alla variabile globale specificata.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single variable in the current lexical scope.">Definisce una singola variabile nell'ambito lessicale corrente.</summary>
      <param name="name" vsli:raw="The local variable name.">Nome della variabile locale.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the local variable attributes.">Una combinazione bit per bit degli attributi della variabile locale.</param>
      <param name="signature" vsli:raw="The local variable signature.">Firma della variabile locale.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Tipi di indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the local variable specification.">Primo indirizzo relativo alla variabile locale specificata.</param>
      <param name="addr2" vsli:raw="The second address for the local variable specification.">Secondo indirizzo relativo alla variabile locale specificata.</param>
      <param name="addr3" vsli:raw="The third address for the local variable specification.">Terzo indirizzo relativo alla variabile locale specificata.</param>
      <param name="startOffset" vsli:raw="The start offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.">Offset iniziale della variabile. Se questo parametro è uguale a zero, viene ignorato e la variabile viene definita nell'intero ambito. Se il parametro è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</param>
      <param name="endOffset" vsli:raw="The end offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.">Offset finale della variabile. Se questo parametro è uguale a zero, viene ignorato e la variabile viene definita nell'intero ambito. Se il parametro è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single parameter in the current method. The type of each parameter is taken from its position within the signature of the method.">Definisce un singolo parametro nel metodo corrente. Il tipo di ciascun parametro viene individuato in base alla posizione occupata all'interno della firma del metodo.</summary>
      <param name="name" vsli:raw="The parameter name.">Nome del parametro.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the parameter attributes.">Combinazione bit per bit degli attributi del parametro.</param>
      <param name="sequence" vsli:raw="The parameter signature.">Firma del parametro.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Tipi di indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the parameter specification.">Primo indirizzo relativo al parametro specificato.</param>
      <param name="addr2" vsli:raw="The second address for the parameter specification.">Secondo indirizzo relativo al parametro specificato.</param>
      <param name="addr3" vsli:raw="The third address for the parameter specification.">Terzo indirizzo relativo al parametro specificato.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Defines a group of sequence points within the current method.">Definisce un gruppo di punti di sequenza nel metodo corrente.</summary>
      <param name="document" vsli:raw="The document object for which the sequence points are being defined.">Oggetto del documento per il quale definire i punti di sequenza.</param>
      <param name="offsets" vsli:raw="The sequence point offsets measured from the beginning of methods.">Offset del punto di sequenza misurati dall'inizio dei metodi.</param>
      <param name="lines" vsli:raw="The document lines for the sequence points.">Righe del documento per i punti di sequenza.</param>
      <param name="columns" vsli:raw="The document positions for the sequence points.">Posizioni del documento per i punti di sequenza.</param>
      <param name="endLines" vsli:raw="The document end lines for the sequence points.">Righe finali del documento per i punti di sequenza.</param>
      <param name="endColumns" vsli:raw="The document end positions for the sequence points.">Posizioni finali del documento per i punti di sequenza.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary vsli:raw="Sets the metadata emitter interface to associate with a writer.">Imposta l'interfaccia di emissione dei metadati da associare a un writer.</summary>
      <param name="emitter" vsli:raw="The metadata emitter interface.">Interfaccia di emissione dei metadati.</param>
      <param name="filename" vsli:raw="The file name for which the debugging symbols are written. Some writers require a file name, and others do not. If a file name is specified for a writer that does not use file names, this parameter is ignored.">Nome del file per il quale vengono scritti i simboli di debug. Per alcuni writer è richiesto un nome file, per altri questo parametro non è necessario. Se specificato per un writer che non usa i nomi file, il parametro sarà ignorato.</param>
      <param name="fFullBuild" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that this is a full rebuild; &lt;see langword=&quot;false&quot; /&gt; indicates that this is an incremental compilation.">
        <see langword="true" /> indica una ricompilazione completa, <see langword="false" /> indica che si tratta di una compilazione incrementale.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Opens a method to place symbol information into.">Apre un metodo in cui immettere informazioni sui simboli.</summary>
      <param name="method" vsli:raw="The metadata token for the method to be opened.">Token di metadati per il metodo da aprire.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
      <summary vsli:raw="Opens a new namespace.">Apre un nuovo spazio dei nomi.</summary>
      <param name="name" vsli:raw="The name of the new namespace.">Nome del nuovo spazio dei nomi.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
      <summary vsli:raw="Opens a new lexical scope in the current method.">Apre un nuovo ambito lessicale nel metodo corrente.</summary>
      <param name="startOffset" vsli:raw="The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.">Offset, in byte, dall'inizio del metodo alla prima istruzione dell'ambito lessicale.</param>
      <returns vsli:raw="An opaque scope identifier that can be used with &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)&quot; /&gt; to define the start and end offsets of a scope at a later time. In this case, the offsets passed to &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)&quot; /&gt; and &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)&quot; /&gt; are ignored. A scope identifier is valid only in the current method.">Identificatore di ambito opaco che può essere utilizzato con il metodo <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> per definire gli offset iniziali e finali di un ambito successivamente. In questo caso, gli offset passati a <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> e <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /> saranno ignorati. Un identificatore di ambito è valido solo nel metodo corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary vsli:raw="Specifies the true start and end of a method within a source file. Use &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)&quot; /&gt; to specify the extent of a method, independent of the sequence points that exist within the method.">Specifica l'inizio e la fine effettivi di un metodo in un file di origine. Utilizzare <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> per specificare l'estensione di un metodo, indipendente dai punti di sequenza del metodo.</summary>
      <param name="startDoc" vsli:raw="The document that contains the starting position.">Documento che contiene la posizione iniziale.</param>
      <param name="startLine" vsli:raw="The starting line number.">Numero della riga iniziale.</param>
      <param name="startColumn" vsli:raw="The starting column.">Colonna iniziale.</param>
      <param name="endDoc" vsli:raw="The document that contains the ending position.">Documento che contiene la posizione finale.</param>
      <param name="endLine" vsli:raw="The ending line number.">Numero della riga finale.</param>
      <param name="endColumn" vsli:raw="The ending column number.">Numero della colonna finale.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines the offset range for the specified lexical scope.">Definisce l'intervallo di offset per l'ambito lessicale specificato.</summary>
      <param name="scopeID" vsli:raw="The identifier of the lexical scope.">Identificatore dell'ambito lessicale.</param>
      <param name="startOffset" vsli:raw="The byte offset of the beginning of the lexical scope.">Offset di byte dell'inizio dell'ambito lessicale.</param>
      <param name="endOffset" vsli:raw="The byte offset of the end of the lexical scope.">Offset di byte della fine dell'ambito lessicale.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary vsli:raw="Defines an attribute when given the attribute name and the attribute value.">Definisce un attributo, quando vengono specificati il nome e il valore dell'attributo.</summary>
      <param name="parent" vsli:raw="The metadata token for which the attribute is being defined.">Token di metadati per il quale definire l'attributo.</param>
      <param name="name" vsli:raw="The attribute name.">Nome dell'attributo.</param>
      <param name="data" vsli:raw="The attribute value.">Valore dell'attributo.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary vsli:raw="Sets the underlying &lt;see langword=&quot;ISymUnmanagedWriter&quot; /&gt; (the corresponding unmanaged interface) that a managed &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; uses to emit symbols.">Imposta l'oggetto <see langword="ISymUnmanagedWriter" /> sottostante (la corrispondente interfaccia non gestita) utilizzata dall'oggetto <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> gestito per emettere i simboli.</summary>
      <param name="underlyingWriter" vsli:raw="A pointer to code that represents the underlying writer.">Puntatore al codice che rappresenta il writer sottostante.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Identifies the user-defined method as the entry point for the current module.">Identifica il metodo definito dall'utente come punto di ingresso per il modulo corrente.</summary>
      <param name="entryMethod" vsli:raw="The metadata token for the method that is the user entry point.">Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
      <summary vsli:raw="Specifies that the given, fully qualified namespace name is used within the open lexical scope.">Specifica che il nome dello spazio dei nomi completo viene utilizzato all'interno dell'ambito lessicale aperto.</summary>
      <param name="fullName" vsli:raw="The fully qualified name of the namespace.">Nome completo dello spazio dei nomi.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymAddressKind">
      <summary vsli:raw="Specifies address types for local variables, parameters, and fields in the methods &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)&quot; /&gt;, &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)&quot; /&gt;, and &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)&quot; /&gt; of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; interface.">Specifica i tipi di indirizzo per le variabili locali, i parametri e i campi nei metodi <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> e <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> dell'interfaccia <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.BitField">
      <summary vsli:raw="A bit field. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the position where the field starts, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the field length.">Campo di bit. Il parametro <paramref name="addr1" /> è il punto in cui inizia il campo, mentre il parametro <paramref name="addr2" /> è la lunghezza del campo.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset">
      <summary vsli:raw="A Microsoft intermediate language (MSIL) offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the MSIL local variable or parameter index.">Offset MSIL (Microsoft Intermediate Language). Il parametro <paramref name="addr1" /> è la variabile locale MSIL o l'indice di parametro.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset">
      <summary vsli:raw="A native offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the offset from the start of the parent.">Offset nativo. Il parametro <paramref name="addr1" /> è l'offset all'inizio dell'elemento padre.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister">
      <summary vsli:raw="A native register address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the register in which the variable is stored.">Indirizzo di registro nativo. Il parametro <paramref name="addr1" /> è il registro in cui è memorizzata la variabile.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the low-order register, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the high-order register.">Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è il registro di basso livello, mentre il parametro <paramref name="addr2" /> è il registro di alto livello.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the register, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset.">Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è il registro e il parametro <paramref name="addr2" /> è l'offset.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the low-order register, the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the stack register, and the &lt;paramref name=&quot;addr3&quot; /&gt; parameter is the offset from the stack pointer to the high-order part of the value.">Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è il registro di basso livello, il parametro <paramref name="addr2" /> è lo stack di registri e il parametro <paramref name="addr3" /> è l'offset dal puntatore dello stack alla parte più significativa del valore.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA">
      <summary vsli:raw="A native Relevant Virtual Address (RVA). The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the RVA in the module.">RVA (Relevant Virtual Address) nativo. Il parametro <paramref name="addr1" /> è l'RVA del modulo.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset">
      <summary vsli:raw="A native section offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the section, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset.">Offset di sezione nativo. Il parametro <paramref name="addr1" /> è la sezione, mentre il parametro <paramref name="addr2" /> è l'offset.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the stack register, the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset from the stack pointer to the low-order part of the value, and the &lt;paramref name=&quot;addr3&quot; /&gt; parameter is the high-order register.">Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è lo stack di registri, il parametro <paramref name="addr2" /> è l'offset dal puntatore dello stack alla parte meno significativa del valore e il parametro <paramref name="addr3" /> è il registro di alto livello.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymbolToken">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure is an object representation of a token that represents symbolic information.">La struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> è una rappresentazione in forma di oggetto di un token che indica informazioni sui simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure when given a value.">Inizializza una nuova istanza della struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> per un valore specificato.</summary>
      <param name="val" vsli:raw="The value to be used for the token.">Valore utilizzato per il token.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Determines whether &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance.">Determina se l'oggetto <paramref name="obj" /> è uguale all'istanza.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; to check.">Oggetto <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> è uguale all'istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)">
      <summary vsli:raw="Determines whether &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; and is equal to this instance.">Determina se <paramref name="obj" /> è un'istanza di <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> e se è uguale all'istanza.</summary>
      <param name="obj" vsli:raw="The object to check.">Oggetto da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; and is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> è un'istanza di <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> e se è uguale all'istanza, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetHashCode">
      <summary vsli:raw="Generates the hash code for the current token.">Genera il codice hash per il token corrente.</summary>
      <returns vsli:raw="The hash code for the current token.">Codice hash per il token corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetToken">
      <summary vsli:raw="Gets the value of the current token.">Ottiene il valore del token corrente.</summary>
      <returns vsli:raw="The value of the current token.">Valore del token corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; objects are equal.">Restituisce un valore che indica se due oggetti <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> sono equivalenti.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="a" /> e <paramref name="b" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; objects are not equal.">Restituisce un valore che indica se due oggetti <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> non sono equivalenti.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="a" /> e <paramref name="b" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentType">
      <summary vsli:raw="Holds the public GUIDs for document types to be used with the symbol store.">Contiene i GUID pubblici per i tipi di documento da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymDocumentType&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymDocumentType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymDocumentType.Text">
      <summary vsli:raw="Specifies the GUID of the document type to be used with the symbol store.">Specifica il GUID del tipo di documento da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageType">
      <summary vsli:raw="Holds the public GUIDs for language types to be used with the symbol store.">Contiene i GUID pubblici per i tipi di linguaggio da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymLanguageType&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymLanguageType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Basic">
      <summary vsli:raw="Specifies the GUID of the Basic language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio Basic da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.C">
      <summary vsli:raw="Specifies the GUID of the C language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio C da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Cobol">
      <summary vsli:raw="Specifies the GUID of the Cobol language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio Cobol da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CPlusPlus">
      <summary vsli:raw="Specifies the GUID of the C++ language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio C++ da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CSharp">
      <summary vsli:raw="Specifies the GUID of the C# language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio C# da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.ILAssembly">
      <summary vsli:raw="Specifies the GUID of the ILAssembly language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio ILAssembly da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Java">
      <summary vsli:raw="Specifies the GUID of the Java language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio Java da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.JScript">
      <summary vsli:raw="Specifies the GUID of the JScript language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio JScript da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.MCPlusPlus">
      <summary vsli:raw="Specifies the GUID of the C++ language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio C++ da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Pascal">
      <summary vsli:raw="Specifies the GUID of the Pascal language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio Pascal da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.SMC">
      <summary vsli:raw="Specifies the GUID of the SMC language type to be used with the symbol store.">Specifica il GUID del tipo di linguaggio SMC da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageVendor">
      <summary vsli:raw="Holds the public GUIDs for language vendors to be used with the symbol store.">Contiene i GUID pubblici per i fornitori di linguaggio da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageVendor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymLanguageVendor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymLanguageVendor" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageVendor.Microsoft">
      <summary vsli:raw="Specifies the GUID of the Microsoft language vendor.">Specifica il GUID del fornitore di linguaggio Microsoft.</summary>
    </member>
  </members>
</doc>